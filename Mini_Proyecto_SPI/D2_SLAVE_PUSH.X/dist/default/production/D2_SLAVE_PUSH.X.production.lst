

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 19 23:38:18 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214  0000                     	;# 
   215  0001                     	;# 
   216  0002                     	;# 
   217  0003                     	;# 
   218  0004                     	;# 
   219  0005                     	;# 
   220  0006                     	;# 
   221  0007                     	;# 
   222  0008                     	;# 
   223  0009                     	;# 
   224  000A                     	;# 
   225  000B                     	;# 
   226  000C                     	;# 
   227  000D                     	;# 
   228  000E                     	;# 
   229  000E                     	;# 
   230  000F                     	;# 
   231  0010                     	;# 
   232  0011                     	;# 
   233  0012                     	;# 
   234  0013                     	;# 
   235  0014                     	;# 
   236  0015                     	;# 
   237  0015                     	;# 
   238  0016                     	;# 
   239  0017                     	;# 
   240  0018                     	;# 
   241  0019                     	;# 
   242  001A                     	;# 
   243  001B                     	;# 
   244  001B                     	;# 
   245  001C                     	;# 
   246  001D                     	;# 
   247  001E                     	;# 
   248  001F                     	;# 
   249  0081                     	;# 
   250  0085                     	;# 
   251  0086                     	;# 
   252  0087                     	;# 
   253  0088                     	;# 
   254  0089                     	;# 
   255  008C                     	;# 
   256  008D                     	;# 
   257  008E                     	;# 
   258  008F                     	;# 
   259  0090                     	;# 
   260  0091                     	;# 
   261  0092                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0094                     	;# 
   266  0095                     	;# 
   267  0096                     	;# 
   268  0097                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009A                     	;# 
   272  009B                     	;# 
   273  009C                     	;# 
   274  009D                     	;# 
   275  009E                     	;# 
   276  009F                     	;# 
   277  0105                     	;# 
   278  0107                     	;# 
   279  0108                     	;# 
   280  0109                     	;# 
   281  010C                     	;# 
   282  010C                     	;# 
   283  010D                     	;# 
   284  010E                     	;# 
   285  010F                     	;# 
   286  0185                     	;# 
   287  0187                     	;# 
   288  0188                     	;# 
   289  0189                     	;# 
   290  018C                     	;# 
   291  018D                     	;# 
   292  0013                     _SSPBUF	set	19
   293  0014                     _SSPCONbits	set	20
   294  0009                     _PORTE	set	9
   295  0007                     _PORTC	set	7
   296  0006                     _PORTBbits	set	6
   297  0005                     _PORTAbits	set	5
   298  0005                     _PORTA	set	5
   299  0008                     _PORTD	set	8
   300  0006                     _PORTB	set	6
   301  000B                     _INTCONbits	set	11
   302  0063                     _SSPIF	set	99
   303  0094                     _SSPSTATbits	set	148
   304  008F                     _OSCCONbits	set	143
   305  0096                     _IOCB	set	150
   306  0089                     _TRISE	set	137
   307  0088                     _TRISD	set	136
   308  0087                     _TRISCbits	set	135
   309  0087                     _TRISC	set	135
   310  0086                     _TRISBbits	set	134
   311  0086                     _TRISB	set	134
   312  0085                     _TRISAbits	set	133
   313  0085                     _TRISA	set	133
   314  0189                     _ANSELH	set	393
   315  0188                     _ANSELbits	set	392
   316  0188                     _ANSEL	set	392
   317                           
   318                           	psect	cinit
   319  0013                     start_initialization:	
   320                           ; #config settings
   321                           
   322  0013                     __initialization:
   323                           
   324                           ; Clear objects allocated to COMMON
   325  0013  01F7               	clrf	__pbssCOMMON& (0+127)
   326  0014  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   327  0015  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   328  0016  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   329  0017  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
   330  0018  01FC               	clrf	(__pbssCOMMON+5)& (0+127)
   331                           
   332                           ; Clear objects allocated to BANK0
   333  0019  1283               	bcf	3,5	;RP0=0, select bank0
   334  001A  1303               	bcf	3,6	;RP1=0, select bank0
   335  001B  01A0               	clrf	__pbssBANK0& (0+127)
   336  001C  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   337  001D  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   338  001E  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   339  001F  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   340  0020  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   341  0021  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   342  0022  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   343  0023  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   344  0024  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   345  0025  01AA               	clrf	(__pbssBANK0+10)& (0+127)
   346  0026                     end_of_initialization:	
   347                           ;End of C runtime variable initialization code
   348                           
   349  0026                     __end_of__initialization:
   350  0026  0183               	clrf	3
   351  0027  120A  118A  29B6   	ljmp	_main	;jump to C main() function
   352                           
   353                           	psect	bssCOMMON
   354  0077                     __pbssCOMMON:
   355  0077                     _pressed_ok2:
   356  0077                     	ds	2
   357  0079                     _released_ok:
   358  0079                     	ds	2
   359  007B                     _pressed_ok:
   360  007B                     	ds	2
   361                           
   362                           	psect	bssBANK0
   363  0020                     __pbssBANK0:
   364  0020                     _presionado2:
   365  0020                     	ds	2
   366  0022                     _released_ok2:
   367  0022                     	ds	2
   368  0024                     _contador2:
   369  0024                     	ds	2
   370  0026                     _presionado:
   371  0026                     	ds	2
   372  0028                     _contador:
   373  0028                     	ds	2
   374  002A                     _dato_maestro:
   375  002A                     	ds	1
   376                           
   377                           	psect	cstackCOMMON
   378  0070                     __pcstackCOMMON:
   379  0070                     ?_incrementar:
   380  0070                     ??_incrementar:	
   381                           ; 1 bytes @ 0x0
   382                           
   383  0070                     ?_decrementar:	
   384                           ; 1 bytes @ 0x0
   385                           
   386  0070                     ??_decrementar:	
   387                           ; 1 bytes @ 0x0
   388                           
   389  0070                     ?_setup:	
   390                           ; 1 bytes @ 0x0
   391                           
   392  0070                     ?_osc_config:	
   393                           ; 1 bytes @ 0x0
   394                           
   395  0070                     ?_interrup_config:	
   396                           ; 1 bytes @ 0x0
   397                           
   398  0070                     ?_SPI_config:	
   399                           ; 1 bytes @ 0x0
   400                           
   401  0070                     ?_SPI_Recibir:	
   402                           ; 1 bytes @ 0x0
   403                           
   404  0070                     ?_SPI_Enviar:	
   405                           ; 1 bytes @ 0x0
   406                           
   407  0070                     ?_ISR:	
   408                           ; 1 bytes @ 0x0
   409                           
   410  0070                     ?_main:	
   411                           ; 1 bytes @ 0x0
   412                           
   413  0070                     incrementar@e:	
   414                           ; 1 bytes @ 0x0
   415                           
   416  0070                     decrementar@e:	
   417                           ; 2 bytes @ 0x0
   418                           
   419                           
   420                           ; 2 bytes @ 0x0
   421  0070                     	ds	2
   422  0072                     incrementar@e_350:
   423  0072                     decrementar@e_353:	
   424                           ; 2 bytes @ 0x2
   425                           
   426                           
   427                           ; 2 bytes @ 0x2
   428  0072                     	ds	2
   429  0074                     ??_ISR:
   430                           
   431                           ; 1 bytes @ 0x4
   432  0074                     	ds	3
   433                           
   434                           	psect	cstackBANK0
   435  002B                     __pcstackBANK0:
   436  002B                     ??_setup:
   437  002B                     ??_osc_config:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  002B                     ??_interrup_config:	
   441                           ; 1 bytes @ 0x0
   442                           
   443  002B                     ??_SPI_Recibir:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  002B                     ??_SPI_Enviar:	
   447                           ; 1 bytes @ 0x0
   448                           
   449  002B                     ?_SPI_Esclavo_Init:	
   450                           ; 1 bytes @ 0x0
   451                           
   452  002B                     SPI_Esclavo_Init@SCK:	
   453                           ; 1 bytes @ 0x0
   454                           
   455  002B                     SPI_Enviar@valor:	
   456                           ; 1 bytes @ 0x0
   457                           
   458                           
   459                           ; 1 bytes @ 0x0
   460  002B                     	ds	1
   461  002C                     ??_SPI_Esclavo_Init:
   462                           
   463                           ; 1 bytes @ 0x1
   464  002C                     	ds	2
   465  002E                     SPI_Esclavo_Init@port_mode:
   466                           
   467                           ; 1 bytes @ 0x3
   468  002E                     	ds	1
   469  002F                     ??_SPI_config:
   470                           
   471                           ; 1 bytes @ 0x4
   472  002F                     	ds	1
   473  0030                     ??_main:
   474                           
   475                           ; 1 bytes @ 0x5
   476  0030                     	ds	1
   477                           
   478                           	psect	maintext
   479  01B6                     __pmaintext:	
   480 ;;
   481 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   482 ;;
   483 ;; *************** function _main *****************
   484 ;; Defined at:
   485 ;;		line 87 in file "SLAVE_PUSH_SPI.c"
   486 ;; Parameters:    Size  Location     Type
   487 ;;		None
   488 ;; Auto vars:     Size  Location     Type
   489 ;;		None
   490 ;; Return value:  Size  Location     Type
   491 ;;                  1    wreg      void 
   492 ;; Registers used:
   493 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   494 ;; Tracked objects:
   495 ;;		On entry : B00/0
   496 ;;		On exit  : 0/0
   497 ;;		Unchanged: 0/0
   498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   499 ;;      Params:         0       0       0       0       0
   500 ;;      Locals:         0       0       0       0       0
   501 ;;      Temps:          0       1       0       0       0
   502 ;;      Totals:         0       1       0       0       0
   503 ;;Total ram usage:        1 bytes
   504 ;; Hardware stack levels required when called:    4
   505 ;; This function calls:
   506 ;;		_SPI_Enviar
   507 ;;		_SPI_Recibir
   508 ;;		_SPI_config
   509 ;;		_interrup_config
   510 ;;		_osc_config
   511 ;;		_setup
   512 ;; This function is called by:
   513 ;;		Startup code after reset
   514 ;; This function uses a non-reentrant model
   515 ;;
   516                           
   517                           
   518                           ;psect for function _main
   519  01B6                     _main:
   520  01B6                     l1157:	
   521                           ;incstack = 0
   522                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   523                           
   524                           
   525                           ;SLAVE_PUSH_SPI.c: 89:     PORTC = 0;
   526  01B6  120A  118A  2181  120A  118A  	fcall	_setup
   527                           
   528                           ;SLAVE_PUSH_SPI.c: 90:     TRISCbits.TRISC3 = 1;
   529  01BB  120A  118A  221C  120A  118A  	fcall	_osc_config
   530  01C0                     l1159:
   531                           
   532                           ;SLAVE_PUSH_SPI.c: 91:     TRISCbits.TRISC4 = 1;
   533  01C0  120A  118A  2202  120A  118A  	fcall	_interrup_config
   534  01C5                     l1161:
   535                           
   536                           ;SLAVE_PUSH_SPI.c: 92:     TRISCbits.TRISC5 = 0;
   537  01C5  120A  118A  220F  120A  118A  	fcall	_SPI_config
   538  01CA                     l1163:
   539                           
   540                           ;SLAVE_PUSH_SPI.c: 94:     PORTD = 0;;SLAVE_PUSH_SPI.c: 95:     TRISE = 0;
   541  01CA  1283               	bcf	3,5	;RP0=0, select bank0
   542  01CB  1303               	bcf	3,6	;RP1=0, select bank0
   543  01CC  1D8C               	btfss	12,3	;volatile
   544  01CD  29CF               	goto	u281
   545  01CE  29D0               	goto	u280
   546  01CF                     u281:
   547  01CF  29CA               	goto	l1163
   548  01D0                     u280:
   549  01D0                     l1165:
   550                           
   551                           ;SLAVE_PUSH_SPI.c: 96:     PORTE = 0;;SLAVE_PUSH_SPI.c: 97: }
   552  01D0  120A  118A  222C  120A  118A  	fcall	_SPI_Recibir
   553  01D5  1283               	bcf	3,5	;RP0=0, select bank0
   554  01D6  1303               	bcf	3,6	;RP1=0, select bank0
   555  01D7  00B0               	movwf	??_main
   556  01D8  0830               	movf	??_main,w
   557  01D9  00AA               	movwf	_dato_maestro
   558  01DA                     l1167:
   559                           
   560                           ;SLAVE_PUSH_SPI.c: 98: 
   561  01DA  0808               	movf	8,w	;volatile
   562  01DB  120A  118A  2226  120A  118A  	fcall	_SPI_Enviar
   563  01E0                     l1169:
   564                           
   565                           ;SLAVE_PUSH_SPI.c: 99: void interrup_config (void)
   566  01E0  1283               	bcf	3,5	;RP0=0, select bank0
   567  01E1  1303               	bcf	3,6	;RP1=0, select bank0
   568  01E2  118C               	bcf	12,3	;volatile
   569  01E3  29CA               	goto	l1163
   570  01E4  120A  118A  2810   	ljmp	start
   571  01E7                     __end_of_main:
   572                           
   573                           	psect	text1
   574  0181                     __ptext1:	
   575 ;; *************** function _setup *****************
   576 ;; Defined at:
   577 ;;		line 108 in file "SLAVE_PUSH_SPI.c"
   578 ;; Parameters:    Size  Location     Type
   579 ;;		None
   580 ;; Auto vars:     Size  Location     Type
   581 ;;		None
   582 ;; Return value:  Size  Location     Type
   583 ;;                  1    wreg      void 
   584 ;; Registers used:
   585 ;;		status,2
   586 ;; Tracked objects:
   587 ;;		On entry : 0/0
   588 ;;		On exit  : 0/0
   589 ;;		Unchanged: 0/0
   590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   591 ;;      Params:         0       0       0       0       0
   592 ;;      Locals:         0       0       0       0       0
   593 ;;      Temps:          0       0       0       0       0
   594 ;;      Totals:         0       0       0       0       0
   595 ;;Total ram usage:        0 bytes
   596 ;; Hardware stack levels used:    1
   597 ;; Hardware stack levels required when called:    2
   598 ;; This function calls:
   599 ;;		Nothing
   600 ;; This function is called by:
   601 ;;		_main
   602 ;; This function uses a non-reentrant model
   603 ;;
   604                           
   605                           
   606                           ;psect for function _setup
   607  0181                     _setup:
   608  0181                     l1111:	
   609                           ;incstack = 0
   610                           ; Regs used in _setup: [status,2]
   611                           
   612                           
   613                           ;SLAVE_PUSH_SPI.c: 110: }
   614  0181  1683               	bsf	3,5	;RP0=1, select bank3
   615  0182  1703               	bsf	3,6	;RP1=1, select bank3
   616  0183  0188               	clrf	8	;volatile
   617                           
   618                           ;SLAVE_PUSH_SPI.c: 111: 
   619  0184  1683               	bsf	3,5	;RP0=1, select bank1
   620  0185  1303               	bcf	3,6	;RP1=0, select bank1
   621  0186  0185               	clrf	5	;volatile
   622                           
   623                           ;SLAVE_PUSH_SPI.c: 112: void osc_config (void)
   624  0187  1283               	bcf	3,5	;RP0=0, select bank0
   625  0188  1303               	bcf	3,6	;RP1=0, select bank0
   626  0189  0185               	clrf	5	;volatile
   627  018A                     l1113:
   628                           
   629                           ;SLAVE_PUSH_SPI.c: 113: {
   630  018A  1683               	bsf	3,5	;RP0=1, select bank1
   631  018B  1303               	bcf	3,6	;RP1=0, select bank1
   632  018C  1685               	bsf	5,5	;volatile
   633  018D                     l1115:
   634                           
   635                           ;SLAVE_PUSH_SPI.c: 114:     OSCCONbits.IRCF2 = 1;
   636  018D  1683               	bsf	3,5	;RP0=1, select bank3
   637  018E  1703               	bsf	3,6	;RP1=1, select bank3
   638  018F  1288               	bcf	8,5	;volatile
   639  0190                     l1117:
   640                           
   641                           ;SLAVE_PUSH_SPI.c: 115:     OSCCONbits.IRCF1 = 1;
   642  0190  1283               	bcf	3,5	;RP0=0, select bank0
   643  0191  1303               	bcf	3,6	;RP1=0, select bank0
   644  0192  1685               	bsf	5,5	;volatile
   645                           
   646                           ;SLAVE_PUSH_SPI.c: 117:     OSCCONbits.OSTS = 0;
   647  0193  1683               	bsf	3,5	;RP0=1, select bank3
   648  0194  1703               	bsf	3,6	;RP1=1, select bank3
   649  0195  0189               	clrf	9	;volatile
   650                           
   651                           ;SLAVE_PUSH_SPI.c: 118:     OSCCONbits.HTS = 0;
   652  0196  1683               	bsf	3,5	;RP0=1, select bank1
   653  0197  1303               	bcf	3,6	;RP1=0, select bank1
   654  0198  0186               	clrf	6	;volatile
   655  0199                     l1119:
   656                           
   657                           ;SLAVE_PUSH_SPI.c: 119:     OSCCONbits.LTS = 1;
   658  0199  1506               	bsf	6,2	;volatile
   659  019A                     l1121:
   660                           
   661                           ;SLAVE_PUSH_SPI.c: 120:     OSCCONbits.SCS = 0;
   662  019A  1586               	bsf	6,3	;volatile
   663                           
   664                           ;SLAVE_PUSH_SPI.c: 121: }
   665  019B  1283               	bcf	3,5	;RP0=0, select bank0
   666  019C  1303               	bcf	3,6	;RP1=0, select bank0
   667  019D  0186               	clrf	6	;volatile
   668  019E                     l1123:
   669                           
   670                           ;SLAVE_PUSH_SPI.c: 122: 
   671  019E  1106               	bcf	6,2	;volatile
   672  019F                     l1125:
   673                           
   674                           ;SLAVE_PUSH_SPI.c: 123: 
   675  019F  1186               	bcf	6,3	;volatile
   676                           
   677                           ;SLAVE_PUSH_SPI.c: 125: 
   678  01A0  1683               	bsf	3,5	;RP0=1, select bank1
   679  01A1  1303               	bcf	3,6	;RP1=0, select bank1
   680  01A2  0187               	clrf	7	;volatile
   681                           
   682                           ;SLAVE_PUSH_SPI.c: 126: 
   683  01A3  1283               	bcf	3,5	;RP0=0, select bank0
   684  01A4  1303               	bcf	3,6	;RP1=0, select bank0
   685  01A5  0187               	clrf	7	;volatile
   686  01A6                     l1127:
   687                           
   688                           ;SLAVE_PUSH_SPI.c: 127: void SPI_config (void)
   689  01A6  1683               	bsf	3,5	;RP0=1, select bank1
   690  01A7  1303               	bcf	3,6	;RP1=0, select bank1
   691  01A8  1587               	bsf	7,3	;volatile
   692  01A9                     l1129:
   693                           
   694                           ;SLAVE_PUSH_SPI.c: 128: {
   695  01A9  1607               	bsf	7,4	;volatile
   696  01AA                     l1131:
   697                           
   698                           ;SLAVE_PUSH_SPI.c: 129:     SPI_Esclavo_Init (4, 2);
   699  01AA  1287               	bcf	7,5	;volatile
   700                           
   701                           ;SLAVE_PUSH_SPI.c: 130: }
   702  01AB  0188               	clrf	8	;volatile
   703                           
   704                           ;SLAVE_PUSH_SPI.c: 131: 
   705  01AC  1283               	bcf	3,5	;RP0=0, select bank0
   706  01AD  1303               	bcf	3,6	;RP1=0, select bank0
   707  01AE  0188               	clrf	8	;volatile
   708                           
   709                           ;SLAVE_PUSH_SPI.c: 132: 
   710  01AF  1683               	bsf	3,5	;RP0=1, select bank1
   711  01B0  1303               	bcf	3,6	;RP1=0, select bank1
   712  01B1  0189               	clrf	9	;volatile
   713                           
   714                           ;SLAVE_PUSH_SPI.c: 133: 
   715  01B2  1283               	bcf	3,5	;RP0=0, select bank0
   716  01B3  1303               	bcf	3,6	;RP1=0, select bank0
   717  01B4  0189               	clrf	9	;volatile
   718  01B5                     l98:
   719  01B5  0008               	return
   720  01B6                     __end_of_setup:
   721                           
   722                           	psect	text2
   723  021C                     __ptext2:	
   724 ;; *************** function _osc_config *****************
   725 ;; Defined at:
   726 ;;		line 149 in file "SLAVE_PUSH_SPI.c"
   727 ;; Parameters:    Size  Location     Type
   728 ;;		None
   729 ;; Auto vars:     Size  Location     Type
   730 ;;		None
   731 ;; Return value:  Size  Location     Type
   732 ;;                  1    wreg      void 
   733 ;; Registers used:
   734 ;;		None
   735 ;; Tracked objects:
   736 ;;		On entry : 0/0
   737 ;;		On exit  : 0/0
   738 ;;		Unchanged: 0/0
   739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   740 ;;      Params:         0       0       0       0       0
   741 ;;      Locals:         0       0       0       0       0
   742 ;;      Temps:          0       0       0       0       0
   743 ;;      Totals:         0       0       0       0       0
   744 ;;Total ram usage:        0 bytes
   745 ;; Hardware stack levels used:    1
   746 ;; Hardware stack levels required when called:    2
   747 ;; This function calls:
   748 ;;		Nothing
   749 ;; This function is called by:
   750 ;;		_main
   751 ;; This function uses a non-reentrant model
   752 ;;
   753                           
   754                           
   755                           ;psect for function _osc_config
   756  021C                     _osc_config:
   757  021C                     l1133:	
   758                           ;incstack = 0
   759                           ; Regs used in _osc_config: []
   760                           
   761                           
   762                           ;SLAVE_PUSH_SPI.c: 151:         pressed_ok = 0;
   763  021C  1683               	bsf	3,5	;RP0=1, select bank1
   764  021D  1303               	bcf	3,6	;RP1=0, select bank1
   765  021E  170F               	bsf	15,6	;volatile
   766                           
   767                           ;SLAVE_PUSH_SPI.c: 152:         }
   768  021F  168F               	bsf	15,5	;volatile
   769                           
   770                           ;SLAVE_PUSH_SPI.c: 153:     else
   771  0220  120F               	bcf	15,4	;volatile
   772                           
   773                           ;SLAVE_PUSH_SPI.c: 154:     {
   774  0221  118F               	bcf	15,3	;volatile
   775                           
   776                           ;SLAVE_PUSH_SPI.c: 155:         for (int e = 0; e < 6; e++){
   777  0222  110F               	bcf	15,2	;volatile
   778                           
   779                           ;SLAVE_PUSH_SPI.c: 156:         released_ok = released_ok + 1;}
   780  0223  148F               	bsf	15,1	;volatile
   781                           
   782                           ;SLAVE_PUSH_SPI.c: 157:         pressed_ok = 0;
   783  0224  100F               	bcf	15,0	;volatile
   784  0225                     l104:
   785  0225  0008               	return
   786  0226                     __end_of_osc_config:
   787                           
   788                           	psect	text3
   789  0202                     __ptext3:	
   790 ;; *************** function _interrup_config *****************
   791 ;; Defined at:
   792 ;;		line 136 in file "SLAVE_PUSH_SPI.c"
   793 ;; Parameters:    Size  Location     Type
   794 ;;		None
   795 ;; Auto vars:     Size  Location     Type
   796 ;;		None
   797 ;; Return value:  Size  Location     Type
   798 ;;                  1    wreg      void 
   799 ;; Registers used:
   800 ;;		wreg
   801 ;; Tracked objects:
   802 ;;		On entry : 0/0
   803 ;;		On exit  : 0/0
   804 ;;		Unchanged: 0/0
   805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   806 ;;      Params:         0       0       0       0       0
   807 ;;      Locals:         0       0       0       0       0
   808 ;;      Temps:          0       0       0       0       0
   809 ;;      Totals:         0       0       0       0       0
   810 ;;Total ram usage:        0 bytes
   811 ;; Hardware stack levels used:    1
   812 ;; Hardware stack levels required when called:    2
   813 ;; This function calls:
   814 ;;		Nothing
   815 ;; This function is called by:
   816 ;;		_main
   817 ;; This function uses a non-reentrant model
   818 ;;
   819                           
   820                           
   821                           ;psect for function _interrup_config
   822  0202                     _interrup_config:
   823  0202                     l1135:	
   824                           ;incstack = 0
   825                           ; Regs used in _interrup_config: [wreg]
   826                           
   827                           
   828                           ;SLAVE_PUSH_SPI.c: 138:     if (PORTBbits.RB2 == 1)
   829  0202  178B               	bsf	11,7	;volatile
   830                           
   831                           ;SLAVE_PUSH_SPI.c: 139:     {
   832  0203  170B               	bsf	11,6	;volatile
   833                           
   834                           ;SLAVE_PUSH_SPI.c: 140:         for (int e = 0; e < 6; e++){
   835  0204  128B               	bcf	11,5	;volatile
   836                           
   837                           ;SLAVE_PUSH_SPI.c: 141:         pressed_ok = pressed_ok + 1; }
   838  0205  120B               	bcf	11,4	;volatile
   839                           
   840                           ;SLAVE_PUSH_SPI.c: 142:         released_ok = 0;
   841  0206  158B               	bsf	11,3	;volatile
   842                           
   843                           ;SLAVE_PUSH_SPI.c: 143:         if (pressed_ok > 5)
   844  0207  110B               	bcf	11,2	;volatile
   845                           
   846                           ;SLAVE_PUSH_SPI.c: 144:         {
   847  0208  108B               	bcf	11,1	;volatile
   848                           
   849                           ;SLAVE_PUSH_SPI.c: 145:             if (presionado == 0)
   850  0209  100B               	bcf	11,0	;volatile
   851  020A                     l1137:
   852                           
   853                           ;SLAVE_PUSH_SPI.c: 146:             {
   854  020A  30FC               	movlw	252
   855  020B  1683               	bsf	3,5	;RP0=1, select bank1
   856  020C  1303               	bcf	3,6	;RP1=0, select bank1
   857  020D  0096               	movwf	22	;volatile
   858  020E                     l101:
   859  020E  0008               	return
   860  020F                     __end_of_interrup_config:
   861                           
   862                           	psect	text4
   863  020F                     __ptext4:	
   864 ;; *************** function _SPI_config *****************
   865 ;; Defined at:
   866 ;;		line 164 in file "SLAVE_PUSH_SPI.c"
   867 ;; Parameters:    Size  Location     Type
   868 ;;		None
   869 ;; Auto vars:     Size  Location     Type
   870 ;;		None
   871 ;; Return value:  Size  Location     Type
   872 ;;                  1    wreg      void 
   873 ;; Registers used:
   874 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   875 ;; Tracked objects:
   876 ;;		On entry : 0/0
   877 ;;		On exit  : 0/0
   878 ;;		Unchanged: 0/0
   879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   880 ;;      Params:         0       0       0       0       0
   881 ;;      Locals:         0       0       0       0       0
   882 ;;      Temps:          0       1       0       0       0
   883 ;;      Totals:         0       1       0       0       0
   884 ;;Total ram usage:        1 bytes
   885 ;; Hardware stack levels used:    1
   886 ;; Hardware stack levels required when called:    3
   887 ;; This function calls:
   888 ;;		_SPI_Esclavo_Init
   889 ;; This function is called by:
   890 ;;		_main
   891 ;; This function uses a non-reentrant model
   892 ;;
   893                           
   894                           
   895                           ;psect for function _SPI_config
   896  020F                     _SPI_config:
   897  020F                     l1139:	
   898                           ;incstack = 0
   899                           ; Regs used in _SPI_config: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   900                           
   901                           
   902                           ;SLAVE_PUSH_SPI.c: 166: 
   903  020F  3002               	movlw	2
   904  0210  1283               	bcf	3,5	;RP0=0, select bank0
   905  0211  1303               	bcf	3,6	;RP1=0, select bank0
   906  0212  00AF               	movwf	??_SPI_config
   907  0213  082F               	movf	??_SPI_config,w
   908  0214  00AB               	movwf	SPI_Esclavo_Init@SCK
   909  0215  3004               	movlw	4
   910  0216  120A  118A  202A  120A  118A  	fcall	_SPI_Esclavo_Init
   911  021B                     l107:
   912  021B  0008               	return
   913  021C                     __end_of_SPI_config:
   914                           
   915                           	psect	text5
   916  002A                     __ptext5:	
   917 ;; *************** function _SPI_Esclavo_Init *****************
   918 ;; Defined at:
   919 ;;		line 98 in file "SPI_SPI.c"
   920 ;; Parameters:    Size  Location     Type
   921 ;;  port_mode       1    wreg     unsigned char 
   922 ;;  SCK             1    0[BANK0 ] unsigned char 
   923 ;; Auto vars:     Size  Location     Type
   924 ;;  port_mode       1    3[BANK0 ] unsigned char 
   925 ;; Return value:  Size  Location     Type
   926 ;;                  1    wreg      void 
   927 ;; Registers used:
   928 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   929 ;; Tracked objects:
   930 ;;		On entry : 0/0
   931 ;;		On exit  : 0/0
   932 ;;		Unchanged: 0/0
   933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   934 ;;      Params:         0       1       0       0       0
   935 ;;      Locals:         0       1       0       0       0
   936 ;;      Temps:          0       2       0       0       0
   937 ;;      Totals:         0       4       0       0       0
   938 ;;Total ram usage:        4 bytes
   939 ;; Hardware stack levels used:    1
   940 ;; Hardware stack levels required when called:    2
   941 ;; This function calls:
   942 ;;		Nothing
   943 ;; This function is called by:
   944 ;;		_SPI_config
   945 ;; This function uses a non-reentrant model
   946 ;;
   947                           
   948                           
   949                           ;psect for function _SPI_Esclavo_Init
   950  002A                     _SPI_Esclavo_Init:
   951                           
   952                           ;incstack = 0
   953                           ; Regs used in _SPI_Esclavo_Init: [wreg-fsr0h+status,2+status,0]
   954                           ;SPI_Esclavo_Init@port_mode stored from wreg
   955  002A  1283               	bcf	3,5	;RP0=0, select bank0
   956  002B  1303               	bcf	3,6	;RP1=0, select bank0
   957  002C  00AE               	movwf	SPI_Esclavo_Init@port_mode
   958  002D                     l1001:
   959                           
   960                           ;SPI_SPI.c: 98: void SPI_Esclavo_Init (char port_mode, char SCK);SPI_SPI.c: 99: {;SPI_SP
      +                          I.c: 100:     TRISAbits.TRISA5 = 1;
   961  002D  1683               	bsf	3,5	;RP0=1, select bank1
   962  002E  1303               	bcf	3,6	;RP1=0, select bank1
   963  002F  1685               	bsf	5,5	;volatile
   964                           
   965                           ;SPI_SPI.c: 101:     TRISCbits.TRISC5 = 0;
   966  0030  1287               	bcf	7,5	;volatile
   967                           
   968                           ;SPI_SPI.c: 102:     TRISCbits.TRISC4 = 1;
   969  0031  1607               	bsf	7,4	;volatile
   970                           
   971                           ;SPI_SPI.c: 103:     TRISCbits.TRISC3 = 1;
   972  0032  1587               	bsf	7,3	;volatile
   973                           
   974                           ;SPI_SPI.c: 105:     switch (port_mode)
   975  0033  2852               	goto	l1005
   976  0034                     l162:	
   977                           ;SPI_SPI.c: 106:     {;SPI_SPI.c: 107:         case 0:
   978                           
   979                           
   980                           ;SPI_SPI.c: 108:             SSPCONbits.SSPM3 = 0;
   981  0034  1194               	bcf	20,3	;volatile
   982                           
   983                           ;SPI_SPI.c: 109:             SSPCONbits.SSPM2 = 0;
   984  0035  1114               	bcf	20,2	;volatile
   985                           
   986                           ;SPI_SPI.c: 110:             SSPCONbits.SSPM1 = 0;
   987  0036  1094               	bcf	20,1	;volatile
   988                           
   989                           ;SPI_SPI.c: 111:             SSPCONbits.SSPM0 = 0;
   990  0037  1014               	bcf	20,0	;volatile
   991                           
   992                           ;SPI_SPI.c: 113:             break;
   993  0038  2884               	goto	l1009
   994  0039                     l164:	
   995                           ;SPI_SPI.c: 114:          case 1:
   996                           
   997                           
   998                           ;SPI_SPI.c: 115:             SSPCONbits.SSPM3 = 0;
   999  0039  1194               	bcf	20,3	;volatile
  1000                           
  1001                           ;SPI_SPI.c: 116:             SSPCONbits.SSPM2 = 0;
  1002  003A  1114               	bcf	20,2	;volatile
  1003                           
  1004                           ;SPI_SPI.c: 117:             SSPCONbits.SSPM1 = 0;
  1005  003B  1094               	bcf	20,1	;volatile
  1006                           
  1007                           ;SPI_SPI.c: 118:             SSPCONbits.SSPM0 = 1;
  1008  003C  1414               	bsf	20,0	;volatile
  1009                           
  1010                           ;SPI_SPI.c: 120:             break;
  1011  003D  2884               	goto	l1009
  1012  003E                     l165:	
  1013                           ;SPI_SPI.c: 121:          case 2:
  1014                           
  1015                           
  1016                           ;SPI_SPI.c: 122:             SSPCONbits.SSPM3 = 0;
  1017  003E  1194               	bcf	20,3	;volatile
  1018                           
  1019                           ;SPI_SPI.c: 123:             SSPCONbits.SSPM2 = 0;
  1020  003F  1114               	bcf	20,2	;volatile
  1021                           
  1022                           ;SPI_SPI.c: 124:             SSPCONbits.SSPM1 = 1;
  1023  0040  1494               	bsf	20,1	;volatile
  1024                           
  1025                           ;SPI_SPI.c: 125:             SSPCONbits.SSPM0 = 0;
  1026  0041  1014               	bcf	20,0	;volatile
  1027                           
  1028                           ;SPI_SPI.c: 127:             break;
  1029  0042  2884               	goto	l1009
  1030  0043                     l166:	
  1031                           ;SPI_SPI.c: 128:          case 3:
  1032                           
  1033                           
  1034                           ;SPI_SPI.c: 129:             SSPCONbits.SSPM3 = 0;
  1035  0043  1194               	bcf	20,3	;volatile
  1036                           
  1037                           ;SPI_SPI.c: 130:             SSPCONbits.SSPM2 = 0;
  1038  0044  1114               	bcf	20,2	;volatile
  1039                           
  1040                           ;SPI_SPI.c: 131:             SSPCONbits.SSPM1 = 1;
  1041  0045  1494               	bsf	20,1	;volatile
  1042                           
  1043                           ;SPI_SPI.c: 132:             SSPCONbits.SSPM0 = 1;
  1044  0046  1414               	bsf	20,0	;volatile
  1045                           
  1046                           ;SPI_SPI.c: 133:             break;
  1047  0047  2884               	goto	l1009
  1048  0048                     l167:	
  1049                           ;SPI_SPI.c: 134:          case 4:
  1050                           
  1051                           
  1052                           ;SPI_SPI.c: 135:             SSPCONbits.SSPM3 = 0;
  1053  0048  1194               	bcf	20,3	;volatile
  1054                           
  1055                           ;SPI_SPI.c: 136:             SSPCONbits.SSPM2 = 1;
  1056  0049  1514               	bsf	20,2	;volatile
  1057                           
  1058                           ;SPI_SPI.c: 137:             SSPCONbits.SSPM1 = 0;
  1059  004A  1094               	bcf	20,1	;volatile
  1060                           
  1061                           ;SPI_SPI.c: 138:             SSPCONbits.SSPM0 = 0;
  1062  004B  1014               	bcf	20,0	;volatile
  1063                           
  1064                           ;SPI_SPI.c: 140:             break;
  1065  004C  2884               	goto	l1009
  1066  004D                     l168:	
  1067                           ;SPI_SPI.c: 141:          case 5:
  1068                           
  1069                           
  1070                           ;SPI_SPI.c: 142:             SSPCONbits.SSPM3 = 0;
  1071  004D  1194               	bcf	20,3	;volatile
  1072                           
  1073                           ;SPI_SPI.c: 143:             SSPCONbits.SSPM2 = 1;
  1074  004E  1514               	bsf	20,2	;volatile
  1075                           
  1076                           ;SPI_SPI.c: 144:             SSPCONbits.SSPM1 = 0;
  1077  004F  1094               	bcf	20,1	;volatile
  1078                           
  1079                           ;SPI_SPI.c: 145:             SSPCONbits.SSPM0 = 1;
  1080  0050  1414               	bsf	20,0	;volatile
  1081                           
  1082                           ;SPI_SPI.c: 146:             break;
  1083  0051  2884               	goto	l1009
  1084  0052                     l1005:
  1085  0052  1283               	bcf	3,5	;RP0=0, select bank0
  1086  0053  1303               	bcf	3,6	;RP1=0, select bank0
  1087  0054  082E               	movf	SPI_Esclavo_Init@port_mode,w
  1088  0055  00AC               	movwf	??_SPI_Esclavo_Init
  1089  0056  01AD               	clrf	??_SPI_Esclavo_Init+1
  1090                           
  1091                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1092                           ; Switch size 1, requested type "simple"
  1093                           ; Number of cases is 1, Range of values is 0 to 0
  1094                           ; switch strategies available:
  1095                           ; Name         Instructions Cycles
  1096                           ; simple_byte            4     3 (average)
  1097                           ; direct_byte           11     8 (fixed)
  1098                           ; jumptable            260     6 (fixed)
  1099                           ;	Chosen strategy is simple_byte
  1100  0057  082D               	movf	??_SPI_Esclavo_Init+1,w
  1101  0058  3A00               	xorlw	0	; case 0
  1102  0059  1903               	skipnz
  1103  005A  285C               	goto	l1211
  1104  005B  2884               	goto	l1009
  1105  005C                     l1211:
  1106                           
  1107                           ; Switch size 1, requested type "simple"
  1108                           ; Number of cases is 6, Range of values is 0 to 5
  1109                           ; switch strategies available:
  1110                           ; Name         Instructions Cycles
  1111                           ; simple_byte           19    10 (average)
  1112                           ; direct_byte           26     8 (fixed)
  1113                           ; jumptable            260     6 (fixed)
  1114                           ;	Chosen strategy is simple_byte
  1115  005C  082C               	movf	??_SPI_Esclavo_Init,w
  1116  005D  3A00               	xorlw	0	; case 0
  1117  005E  1903               	skipnz
  1118  005F  2834               	goto	l162
  1119  0060  3A01               	xorlw	1	; case 1
  1120  0061  1903               	skipnz
  1121  0062  2839               	goto	l164
  1122  0063  3A03               	xorlw	3	; case 2
  1123  0064  1903               	skipnz
  1124  0065  283E               	goto	l165
  1125  0066  3A01               	xorlw	1	; case 3
  1126  0067  1903               	skipnz
  1127  0068  2843               	goto	l166
  1128  0069  3A07               	xorlw	7	; case 4
  1129  006A  1903               	skipnz
  1130  006B  2848               	goto	l167
  1131  006C  3A01               	xorlw	1	; case 5
  1132  006D  1903               	skipnz
  1133  006E  284D               	goto	l168
  1134  006F  2884               	goto	l1009
  1135  0070                     l170:	
  1136                           ;SPI_SPI.c: 150:     {;SPI_SPI.c: 151:         case 0:
  1137                           
  1138                           
  1139                           ;SPI_SPI.c: 152:             SSPCONbits.CKP = 0;
  1140  0070  1214               	bcf	20,4	;volatile
  1141                           
  1142                           ;SPI_SPI.c: 153:             SSPSTATbits.CKE = 0;
  1143  0071  1683               	bsf	3,5	;RP0=1, select bank1
  1144  0072  1303               	bcf	3,6	;RP1=0, select bank1
  1145  0073  1314               	bcf	20,6	;volatile
  1146                           
  1147                           ;SPI_SPI.c: 155:             break;
  1148  0074  289A               	goto	l171
  1149  0075                     l172:	
  1150                           ;SPI_SPI.c: 156:          case 1:
  1151                           
  1152                           
  1153                           ;SPI_SPI.c: 157:             SSPCONbits.CKP = 1;
  1154  0075  1614               	bsf	20,4	;volatile
  1155                           
  1156                           ;SPI_SPI.c: 158:             SSPSTATbits.CKE = 0;
  1157  0076  1683               	bsf	3,5	;RP0=1, select bank1
  1158  0077  1303               	bcf	3,6	;RP1=0, select bank1
  1159  0078  1314               	bcf	20,6	;volatile
  1160                           
  1161                           ;SPI_SPI.c: 160:             break;
  1162  0079  289A               	goto	l171
  1163  007A                     l173:	
  1164                           ;SPI_SPI.c: 161:          case 2:
  1165                           
  1166                           
  1167                           ;SPI_SPI.c: 162:             SSPCONbits.CKP = 0;
  1168  007A  1214               	bcf	20,4	;volatile
  1169                           
  1170                           ;SPI_SPI.c: 163:             SSPSTATbits.CKE = 1;
  1171  007B  1683               	bsf	3,5	;RP0=1, select bank1
  1172  007C  1303               	bcf	3,6	;RP1=0, select bank1
  1173  007D  1714               	bsf	20,6	;volatile
  1174                           
  1175                           ;SPI_SPI.c: 165:             break;
  1176  007E  289A               	goto	l171
  1177  007F                     l174:	
  1178                           ;SPI_SPI.c: 166:          case 3:
  1179                           
  1180                           
  1181                           ;SPI_SPI.c: 167:             SSPCONbits.CKP = 1;
  1182  007F  1614               	bsf	20,4	;volatile
  1183                           
  1184                           ;SPI_SPI.c: 168:             SSPSTATbits.CKE = 1;
  1185  0080  1683               	bsf	3,5	;RP0=1, select bank1
  1186  0081  1303               	bcf	3,6	;RP1=0, select bank1
  1187  0082  1714               	bsf	20,6	;volatile
  1188                           
  1189                           ;SPI_SPI.c: 169:             break;
  1190  0083  289A               	goto	l171
  1191  0084                     l1009:
  1192  0084  082B               	movf	SPI_Esclavo_Init@SCK,w
  1193  0085  00AC               	movwf	??_SPI_Esclavo_Init
  1194  0086  01AD               	clrf	??_SPI_Esclavo_Init+1
  1195                           
  1196                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1197                           ; Switch size 1, requested type "simple"
  1198                           ; Number of cases is 1, Range of values is 0 to 0
  1199                           ; switch strategies available:
  1200                           ; Name         Instructions Cycles
  1201                           ; simple_byte            4     3 (average)
  1202                           ; direct_byte           11     8 (fixed)
  1203                           ; jumptable            260     6 (fixed)
  1204                           ;	Chosen strategy is simple_byte
  1205  0087  082D               	movf	??_SPI_Esclavo_Init+1,w
  1206  0088  3A00               	xorlw	0	; case 0
  1207  0089  1903               	skipnz
  1208  008A  288C               	goto	l1213
  1209  008B  289A               	goto	l171
  1210  008C                     l1213:
  1211                           
  1212                           ; Switch size 1, requested type "simple"
  1213                           ; Number of cases is 4, Range of values is 0 to 3
  1214                           ; switch strategies available:
  1215                           ; Name         Instructions Cycles
  1216                           ; simple_byte           13     7 (average)
  1217                           ; direct_byte           20     8 (fixed)
  1218                           ; jumptable            260     6 (fixed)
  1219                           ;	Chosen strategy is simple_byte
  1220  008C  082C               	movf	??_SPI_Esclavo_Init,w
  1221  008D  3A00               	xorlw	0	; case 0
  1222  008E  1903               	skipnz
  1223  008F  2870               	goto	l170
  1224  0090  3A01               	xorlw	1	; case 1
  1225  0091  1903               	skipnz
  1226  0092  2875               	goto	l172
  1227  0093  3A03               	xorlw	3	; case 2
  1228  0094  1903               	skipnz
  1229  0095  287A               	goto	l173
  1230  0096  3A01               	xorlw	1	; case 3
  1231  0097  1903               	skipnz
  1232  0098  287F               	goto	l174
  1233  0099  289A               	goto	l171
  1234  009A                     l171:
  1235                           
  1236                           ;SPI_SPI.c: 171:     SSPSTATbits.SMP = 0;
  1237  009A  1683               	bsf	3,5	;RP0=1, select bank1
  1238  009B  1303               	bcf	3,6	;RP1=0, select bank1
  1239  009C  1394               	bcf	20,7	;volatile
  1240                           
  1241                           ;SPI_SPI.c: 172:     SSPCONbits.SSPEN = 1;
  1242  009D  1283               	bcf	3,5	;RP0=0, select bank0
  1243  009E  1303               	bcf	3,6	;RP1=0, select bank0
  1244  009F  1694               	bsf	20,5	;volatile
  1245  00A0                     l175:
  1246  00A0  0008               	return
  1247  00A1                     __end_of_SPI_Esclavo_Init:
  1248                           
  1249                           	psect	text6
  1250  022C                     __ptext6:	
  1251 ;; *************** function _SPI_Recibir *****************
  1252 ;; Defined at:
  1253 ;;		line 181 in file "SPI_SPI.c"
  1254 ;; Parameters:    Size  Location     Type
  1255 ;;		None
  1256 ;; Auto vars:     Size  Location     Type
  1257 ;;		None
  1258 ;; Return value:  Size  Location     Type
  1259 ;;                  1    wreg      unsigned char 
  1260 ;; Registers used:
  1261 ;;		wreg
  1262 ;; Tracked objects:
  1263 ;;		On entry : 0/0
  1264 ;;		On exit  : 0/0
  1265 ;;		Unchanged: 0/0
  1266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1267 ;;      Params:         0       0       0       0       0
  1268 ;;      Locals:         0       0       0       0       0
  1269 ;;      Temps:          0       0       0       0       0
  1270 ;;      Totals:         0       0       0       0       0
  1271 ;;Total ram usage:        0 bytes
  1272 ;; Hardware stack levels used:    1
  1273 ;; Hardware stack levels required when called:    2
  1274 ;; This function calls:
  1275 ;;		Nothing
  1276 ;; This function is called by:
  1277 ;;		_main
  1278 ;; This function uses a non-reentrant model
  1279 ;;
  1280                           
  1281                           
  1282                           ;psect for function _SPI_Recibir
  1283  022C                     _SPI_Recibir:
  1284  022C                     l1141:	
  1285                           ;incstack = 0
  1286                           ; Regs used in _SPI_Recibir: [wreg]
  1287                           
  1288                           
  1289                           ;SPI_SPI.c: 183:     return SSPBUF;
  1290  022C  1283               	bcf	3,5	;RP0=0, select bank0
  1291  022D  1303               	bcf	3,6	;RP1=0, select bank0
  1292  022E  0813               	movf	19,w	;volatile
  1293  022F                     l181:
  1294  022F  0008               	return
  1295  0230                     __end_of_SPI_Recibir:
  1296                           
  1297                           	psect	text7
  1298  0226                     __ptext7:	
  1299 ;; *************** function _SPI_Enviar *****************
  1300 ;; Defined at:
  1301 ;;		line 175 in file "SPI_SPI.c"
  1302 ;; Parameters:    Size  Location     Type
  1303 ;;  valor           1    wreg     unsigned char 
  1304 ;; Auto vars:     Size  Location     Type
  1305 ;;  valor           1    0[BANK0 ] unsigned char 
  1306 ;; Return value:  Size  Location     Type
  1307 ;;                  1    wreg      void 
  1308 ;; Registers used:
  1309 ;;		wreg
  1310 ;; Tracked objects:
  1311 ;;		On entry : 0/0
  1312 ;;		On exit  : 0/0
  1313 ;;		Unchanged: 0/0
  1314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1315 ;;      Params:         0       0       0       0       0
  1316 ;;      Locals:         0       1       0       0       0
  1317 ;;      Temps:          0       0       0       0       0
  1318 ;;      Totals:         0       1       0       0       0
  1319 ;;Total ram usage:        1 bytes
  1320 ;; Hardware stack levels used:    1
  1321 ;; Hardware stack levels required when called:    2
  1322 ;; This function calls:
  1323 ;;		Nothing
  1324 ;; This function is called by:
  1325 ;;		_main
  1326 ;; This function uses a non-reentrant model
  1327 ;;
  1328                           
  1329                           
  1330                           ;psect for function _SPI_Enviar
  1331  0226                     _SPI_Enviar:
  1332                           
  1333                           ;incstack = 0
  1334                           ; Regs used in _SPI_Enviar: [wreg]
  1335                           ;SPI_Enviar@valor stored from wreg
  1336  0226  1283               	bcf	3,5	;RP0=0, select bank0
  1337  0227  1303               	bcf	3,6	;RP1=0, select bank0
  1338  0228  00AB               	movwf	SPI_Enviar@valor
  1339  0229                     l1145:
  1340                           
  1341                           ;SPI_SPI.c: 175: void SPI_Enviar (char valor);SPI_SPI.c: 176: {;SPI_SPI.c: 177:     SSPB
      +                          UF = valor;
  1342  0229  082B               	movf	SPI_Enviar@valor,w
  1343  022A  0093               	movwf	19	;volatile
  1344  022B                     l178:
  1345  022B  0008               	return
  1346  022C                     __end_of_SPI_Enviar:
  1347                           
  1348                           	psect	text8
  1349  01E7                     __ptext8:	
  1350 ;; *************** function _ISR *****************
  1351 ;; Defined at:
  1352 ;;		line 71 in file "SLAVE_PUSH_SPI.c"
  1353 ;; Parameters:    Size  Location     Type
  1354 ;;		None
  1355 ;; Auto vars:     Size  Location     Type
  1356 ;;  a               1    0        unsigned char 
  1357 ;; Return value:  Size  Location     Type
  1358 ;;                  1    wreg      void 
  1359 ;; Registers used:
  1360 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1361 ;; Tracked objects:
  1362 ;;		On entry : 0/0
  1363 ;;		On exit  : 0/0
  1364 ;;		Unchanged: 0/0
  1365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1366 ;;      Params:         0       0       0       0       0
  1367 ;;      Locals:         1       0       0       0       0
  1368 ;;      Temps:          3       0       0       0       0
  1369 ;;      Totals:         4       0       0       0       0
  1370 ;;Total ram usage:        4 bytes
  1371 ;; Hardware stack levels used:    1
  1372 ;; Hardware stack levels required when called:    1
  1373 ;; This function calls:
  1374 ;;		_decrementar
  1375 ;;		_incrementar
  1376 ;; This function is called by:
  1377 ;;		Interrupt level 1
  1378 ;; This function uses a non-reentrant model
  1379 ;;
  1380                           
  1381                           
  1382                           ;psect for function _ISR
  1383  01E7                     _ISR:
  1384  01E7                     i1l1147:
  1385                           
  1386                           ;SLAVE_PUSH_SPI.c: 73:     ANSEL = 0;
  1387  01E7  1C0B               	btfss	11,0	;volatile
  1388  01E8  29EA               	goto	u27_21
  1389  01E9  29EB               	goto	u27_20
  1390  01EA                     u27_21:
  1391  01EA  29F7               	goto	i1l86
  1392  01EB                     u27_20:
  1393  01EB                     i1l1149:
  1394  01EB  0806               	movf	6,w	;volatile
  1395  01EC                     i1l1151:
  1396                           
  1397                           ;SLAVE_PUSH_SPI.c: 77:     ANSELbits.ANS5 = 0;
  1398  01EC  120A  118A  2112  120A  118A  	fcall	_incrementar
  1399  01F1                     i1l1153:
  1400                           
  1401                           ;SLAVE_PUSH_SPI.c: 78:     PORTAbits.RA5 = 1;
  1402  01F1  120A  118A  20A1  120A  118A  	fcall	_decrementar
  1403  01F6                     i1l1155:
  1404                           
  1405                           ;SLAVE_PUSH_SPI.c: 79: 
  1406  01F6  100B               	bcf	11,0	;volatile
  1407  01F7                     i1l86:
  1408  01F7  0876               	movf	??_ISR+2,w
  1409  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  1410  01F9  1303               	bcf	3,6	;RP1=0, select bank0
  1411  01FA  00FF               	movwf	btemp+1
  1412  01FB  0875               	movf	??_ISR+1,w
  1413  01FC  008A               	movwf	10
  1414  01FD  0E74               	swapf	??_ISR,w
  1415  01FE  0083               	movwf	3
  1416  01FF  0EFE               	swapf	btemp,f
  1417  0200  0E7E               	swapf	btemp,w
  1418  0201  0009               	retfie
  1419  0202                     __end_of_ISR:
  1420                           
  1421                           	psect	intentry
  1422  0004                     __pintentry:	
  1423                           ;incstack = 0
  1424                           ; Regs used in _ISR: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1425                           
  1426  0004                     interrupt_function:
  1427  007E                     saved_w	set	btemp
  1428  0004  00FE               	movwf	btemp
  1429  0005  0E03               	swapf	3,w
  1430  0006  00F4               	movwf	??_ISR
  1431  0007  080A               	movf	10,w
  1432  0008  00F5               	movwf	??_ISR+1
  1433  0009  1283               	bcf	3,5	;RP0=0, select bank0
  1434  000A  1303               	bcf	3,6	;RP1=0, select bank0
  1435  000B  087F               	movf	btemp+1,w
  1436  000C  00F6               	movwf	??_ISR+2
  1437  000D  120A  118A  29E7   	ljmp	_ISR
  1438                           
  1439                           	psect	text9
  1440  0112                     __ptext9:	
  1441 ;; *************** function _incrementar *****************
  1442 ;; Defined at:
  1443 ;;		line 173 in file "SLAVE_PUSH_SPI.c"
  1444 ;; Parameters:    Size  Location     Type
  1445 ;;		None
  1446 ;; Auto vars:     Size  Location     Type
  1447 ;;  e               2    2[COMMON] int 
  1448 ;;  e               2    0[COMMON] int 
  1449 ;; Return value:  Size  Location     Type
  1450 ;;                  1    wreg      void 
  1451 ;; Registers used:
  1452 ;;		wreg, status,2, status,0, btemp+1
  1453 ;; Tracked objects:
  1454 ;;		On entry : 0/0
  1455 ;;		On exit  : 0/0
  1456 ;;		Unchanged: 0/0
  1457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1458 ;;      Params:         0       0       0       0       0
  1459 ;;      Locals:         4       0       0       0       0
  1460 ;;      Temps:          0       0       0       0       0
  1461 ;;      Totals:         4       0       0       0       0
  1462 ;;Total ram usage:        4 bytes
  1463 ;; Hardware stack levels used:    1
  1464 ;; This function calls:
  1465 ;;		Nothing
  1466 ;; This function is called by:
  1467 ;;		_ISR
  1468 ;; This function uses a non-reentrant model
  1469 ;;
  1470                           
  1471                           
  1472                           ;psect for function _incrementar
  1473  0112                     _incrementar:
  1474  0112                     i1l1019:	
  1475                           ;incstack = 0
  1476                           ; Regs used in _incrementar: [wreg+status,2+status,0+btemp+1]
  1477                           
  1478                           
  1479                           ;SLAVE_PUSH_SPI.c: 175:         {
  1480  0112  1283               	bcf	3,5	;RP0=0, select bank0
  1481  0113  1303               	bcf	3,6	;RP1=0, select bank0
  1482  0114  1D06               	btfss	6,2	;volatile
  1483  0115  2917               	goto	u15_21
  1484  0116  2918               	goto	u15_20
  1485  0117                     u15_21:
  1486  0117  2952               	goto	i1l1045
  1487  0118                     u15_20:
  1488  0118                     i1l1021:
  1489                           
  1490                           ;SLAVE_PUSH_SPI.c: 176:             if (presionado2 == 0);SLAVE_PUSH_SPI.c: 177:        
      +                               {
  1491  0118  01F0               	clrf	incrementar@e
  1492  0119  01F1               	clrf	incrementar@e+1
  1493  011A                     i1l1027:
  1494                           
  1495                           ;SLAVE_PUSH_SPI.c: 178:                 PORTD = PORTD - 1;
  1496  011A  087B               	movf	_pressed_ok,w
  1497  011B  3E01               	addlw	1
  1498  011C  00FB               	movwf	_pressed_ok
  1499  011D  087C               	movf	_pressed_ok+1,w
  1500  011E  1803               	skipnc
  1501  011F  3E01               	addlw	1
  1502  0120  3E00               	addlw	0
  1503  0121  00FC               	movwf	_pressed_ok+1
  1504  0122                     i1l1029:
  1505  0122  3001               	movlw	1
  1506  0123  07F0               	addwf	incrementar@e,f
  1507  0124  1803               	skipnc
  1508  0125  0AF1               	incf	incrementar@e+1,f
  1509  0126  3000               	movlw	0
  1510  0127  07F1               	addwf	incrementar@e+1,f
  1511  0128                     i1l1031:
  1512  0128  0871               	movf	incrementar@e+1,w
  1513  0129  3A80               	xorlw	128
  1514  012A  00FF               	movwf	btemp+1
  1515  012B  3080               	movlw	128
  1516  012C  027F               	subwf	btemp+1,w
  1517  012D  1D03               	skipz
  1518  012E  2931               	goto	u16_25
  1519  012F  3006               	movlw	6
  1520  0130  0270               	subwf	incrementar@e,w
  1521  0131                     u16_25:
  1522  0131  1C03               	skipc
  1523  0132  2934               	goto	u16_21
  1524  0133  2935               	goto	u16_20
  1525  0134                     u16_21:
  1526  0134  291A               	goto	i1l1027
  1527  0135                     u16_20:
  1528  0135                     i1l1033:
  1529                           
  1530                           ;SLAVE_PUSH_SPI.c: 179:                 presionado2 = 1;
  1531  0135  01F9               	clrf	_released_ok
  1532  0136  01FA               	clrf	_released_ok+1
  1533  0137                     i1l1035:
  1534                           
  1535                           ;SLAVE_PUSH_SPI.c: 180:             }
  1536  0137  3000               	movlw	0
  1537  0138  027C               	subwf	_pressed_ok+1,w
  1538  0139  3006               	movlw	6
  1539  013A  1903               	skipnz
  1540  013B  027B               	subwf	_pressed_ok,w
  1541  013C  1C03               	skipc
  1542  013D  293F               	goto	u17_21
  1543  013E  2940               	goto	u17_20
  1544  013F                     u17_21:
  1545  013F  294F               	goto	i1l1043
  1546  0140                     u17_20:
  1547  0140                     i1l1037:
  1548                           
  1549                           ;SLAVE_PUSH_SPI.c: 181:         };SLAVE_PUSH_SPI.c: 182:         pressed_ok2 = 0;
  1550  0140  1283               	bcf	3,5	;RP0=0, select bank0
  1551  0141  1303               	bcf	3,6	;RP1=0, select bank0
  1552  0142  0826               	movf	_presionado,w
  1553  0143  0427               	iorwf	_presionado+1,w
  1554  0144  1D03               	btfss	3,2
  1555  0145  2947               	goto	u18_21
  1556  0146  2948               	goto	u18_20
  1557  0147                     u18_21:
  1558  0147  294F               	goto	i1l1043
  1559  0148                     u18_20:
  1560  0148                     i1l1039:
  1561                           
  1562                           ;SLAVE_PUSH_SPI.c: 183:         };SLAVE_PUSH_SPI.c: 184:     else
  1563  0148  0808               	movf	8,w	;volatile
  1564  0149  3E01               	addlw	1
  1565  014A  0088               	movwf	8	;volatile
  1566  014B                     i1l1041:
  1567                           
  1568                           ;SLAVE_PUSH_SPI.c: 185:     {
  1569  014B  3001               	movlw	1
  1570  014C  00A6               	movwf	_presionado
  1571  014D  3000               	movlw	0
  1572  014E  00A7               	movwf	_presionado+1
  1573  014F                     i1l1043:
  1574                           
  1575                           ;SLAVE_PUSH_SPI.c: 188:         pressed_ok2 = 0;
  1576  014F  01FB               	clrf	_pressed_ok
  1577  0150  01FC               	clrf	_pressed_ok+1
  1578                           
  1579                           ;SLAVE_PUSH_SPI.c: 189:         if (released_ok2 > 5)
  1580  0151  2980               	goto	i1l119
  1581  0152                     i1l1045:
  1582                           
  1583                           ;SLAVE_PUSH_SPI.c: 191:             presionado2 = 0;;SLAVE_PUSH_SPI.c: 192:             
      +                          released_ok = 0;
  1584  0152  01F2               	clrf	incrementar@e_350
  1585  0153  01F3               	clrf	incrementar@e_350+1
  1586  0154                     i1l1051:
  1587                           
  1588                           ;SLAVE_PUSH_SPI.c: 193:         }
  1589  0154  0879               	movf	_released_ok,w
  1590  0155  3E01               	addlw	1
  1591  0156  00F9               	movwf	_released_ok
  1592  0157  087A               	movf	_released_ok+1,w
  1593  0158  1803               	skipnc
  1594  0159  3E01               	addlw	1
  1595  015A  3E00               	addlw	0
  1596  015B  00FA               	movwf	_released_ok+1
  1597  015C                     i1l1053:
  1598  015C  3001               	movlw	1
  1599  015D  07F2               	addwf	incrementar@e_350,f
  1600  015E  1803               	skipnc
  1601  015F  0AF3               	incf	incrementar@e_350+1,f
  1602  0160  3000               	movlw	0
  1603  0161  07F3               	addwf	incrementar@e_350+1,f
  1604  0162                     i1l1055:
  1605  0162  0873               	movf	incrementar@e_350+1,w
  1606  0163  3A80               	xorlw	128
  1607  0164  00FF               	movwf	btemp+1
  1608  0165  3080               	movlw	128
  1609  0166  027F               	subwf	btemp+1,w
  1610  0167  1D03               	skipz
  1611  0168  296B               	goto	u19_25
  1612  0169  3006               	movlw	6
  1613  016A  0272               	subwf	incrementar@e_350,w
  1614  016B                     u19_25:
  1615  016B  1C03               	skipc
  1616  016C  296E               	goto	u19_21
  1617  016D  296F               	goto	u19_20
  1618  016E                     u19_21:
  1619  016E  2954               	goto	i1l1051
  1620  016F                     u19_20:
  1621  016F                     i1l1057:
  1622                           
  1623                           ;SLAVE_PUSH_SPI.c: 194:     }
  1624  016F  01FB               	clrf	_pressed_ok
  1625  0170  01FC               	clrf	_pressed_ok+1
  1626  0171                     i1l1059:
  1627                           
  1628                           ;SLAVE_PUSH_SPI.c: 195:     return;
  1629  0171  3000               	movlw	0
  1630  0172  027A               	subwf	_released_ok+1,w
  1631  0173  3006               	movlw	6
  1632  0174  1903               	skipnz
  1633  0175  0279               	subwf	_released_ok,w
  1634  0176  1C03               	skipc
  1635  0177  2979               	goto	u20_21
  1636  0178  297A               	goto	u20_20
  1637  0179                     u20_21:
  1638  0179  2980               	goto	i1l119
  1639  017A                     u20_20:
  1640  017A                     i1l1061:
  1641                           
  1642                           ;SLAVE_PUSH_SPI.c: 196: }
  1643  017A  1283               	bcf	3,5	;RP0=0, select bank0
  1644  017B  1303               	bcf	3,6	;RP1=0, select bank0
  1645  017C  01A6               	clrf	_presionado
  1646  017D  01A7               	clrf	_presionado+1
  1647  017E  01F9               	clrf	_released_ok
  1648  017F  01FA               	clrf	_released_ok+1
  1649  0180                     i1l119:
  1650  0180  0008               	return
  1651  0181                     __end_of_incrementar:
  1652                           
  1653                           	psect	text10
  1654  00A1                     __ptext10:	
  1655 ;; *************** function _decrementar *****************
  1656 ;; Defined at:
  1657 ;;		line 204 in file "SLAVE_PUSH_SPI.c"
  1658 ;; Parameters:    Size  Location     Type
  1659 ;;		None
  1660 ;; Auto vars:     Size  Location     Type
  1661 ;;  e               2    2[COMMON] int 
  1662 ;;  e               2    0[COMMON] int 
  1663 ;; Return value:  Size  Location     Type
  1664 ;;                  1    wreg      void 
  1665 ;; Registers used:
  1666 ;;		wreg, status,2, status,0, btemp+1
  1667 ;; Tracked objects:
  1668 ;;		On entry : 0/0
  1669 ;;		On exit  : 0/0
  1670 ;;		Unchanged: 0/0
  1671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1672 ;;      Params:         0       0       0       0       0
  1673 ;;      Locals:         4       0       0       0       0
  1674 ;;      Temps:          0       0       0       0       0
  1675 ;;      Totals:         4       0       0       0       0
  1676 ;;Total ram usage:        4 bytes
  1677 ;; Hardware stack levels used:    1
  1678 ;; This function calls:
  1679 ;;		Nothing
  1680 ;; This function is called by:
  1681 ;;		_ISR
  1682 ;; This function uses a non-reentrant model
  1683 ;;
  1684                           
  1685                           
  1686                           ;psect for function _decrementar
  1687  00A1                     _decrementar:
  1688  00A1                     i1l1065:	
  1689                           ;incstack = 0
  1690                           ; Regs used in _decrementar: [wreg+status,2+status,0+btemp+1]
  1691                           
  1692  00A1  1283               	bcf	3,5	;RP0=0, select bank0
  1693  00A2  1303               	bcf	3,6	;RP1=0, select bank0
  1694  00A3  1D86               	btfss	6,3	;volatile
  1695  00A4  28A6               	goto	u21_21
  1696  00A5  28A7               	goto	u21_20
  1697  00A6                     u21_21:
  1698  00A6  28E1               	goto	i1l1091
  1699  00A7                     u21_20:
  1700  00A7                     i1l1067:
  1701  00A7  01F0               	clrf	decrementar@e
  1702  00A8  01F1               	clrf	decrementar@e+1
  1703  00A9                     i1l1073:
  1704  00A9  0877               	movf	_pressed_ok2,w
  1705  00AA  3E01               	addlw	1
  1706  00AB  00F7               	movwf	_pressed_ok2
  1707  00AC  0878               	movf	_pressed_ok2+1,w
  1708  00AD  1803               	skipnc
  1709  00AE  3E01               	addlw	1
  1710  00AF  3E00               	addlw	0
  1711  00B0  00F8               	movwf	_pressed_ok2+1
  1712  00B1                     i1l1075:
  1713  00B1  3001               	movlw	1
  1714  00B2  07F0               	addwf	decrementar@e,f
  1715  00B3  1803               	skipnc
  1716  00B4  0AF1               	incf	decrementar@e+1,f
  1717  00B5  3000               	movlw	0
  1718  00B6  07F1               	addwf	decrementar@e+1,f
  1719  00B7                     i1l1077:
  1720  00B7  0871               	movf	decrementar@e+1,w
  1721  00B8  3A80               	xorlw	128
  1722  00B9  00FF               	movwf	btemp+1
  1723  00BA  3080               	movlw	128
  1724  00BB  027F               	subwf	btemp+1,w
  1725  00BC  1D03               	skipz
  1726  00BD  28C0               	goto	u22_25
  1727  00BE  3006               	movlw	6
  1728  00BF  0270               	subwf	decrementar@e,w
  1729  00C0                     u22_25:
  1730  00C0  1C03               	skipc
  1731  00C1  28C3               	goto	u22_21
  1732  00C2  28C4               	goto	u22_20
  1733  00C3                     u22_21:
  1734  00C3  28A9               	goto	i1l1073
  1735  00C4                     u22_20:
  1736  00C4                     i1l1079:
  1737  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  1738  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  1739  00C6  01A2               	clrf	_released_ok2
  1740  00C7  01A3               	clrf	_released_ok2+1
  1741  00C8                     i1l1081:
  1742  00C8  3000               	movlw	0
  1743  00C9  0278               	subwf	_pressed_ok2+1,w
  1744  00CA  3006               	movlw	6
  1745  00CB  1903               	skipnz
  1746  00CC  0277               	subwf	_pressed_ok2,w
  1747  00CD  1C03               	skipc
  1748  00CE  28D0               	goto	u23_21
  1749  00CF  28D1               	goto	u23_20
  1750  00D0                     u23_21:
  1751  00D0  28DE               	goto	i1l1089
  1752  00D1                     u23_20:
  1753  00D1                     i1l1083:
  1754  00D1  0820               	movf	_presionado2,w
  1755  00D2  0421               	iorwf	_presionado2+1,w
  1756  00D3  1D03               	btfss	3,2
  1757  00D4  28D6               	goto	u24_21
  1758  00D5  28D7               	goto	u24_20
  1759  00D6                     u24_21:
  1760  00D6  28DE               	goto	i1l1089
  1761  00D7                     u24_20:
  1762  00D7                     i1l1085:
  1763  00D7  0808               	movf	8,w	;volatile
  1764  00D8  3EFF               	addlw	255
  1765  00D9  0088               	movwf	8	;volatile
  1766  00DA                     i1l1087:
  1767  00DA  3001               	movlw	1
  1768  00DB  00A0               	movwf	_presionado2
  1769  00DC  3000               	movlw	0
  1770  00DD  00A1               	movwf	_presionado2+1
  1771  00DE                     i1l1089:
  1772  00DE  01F7               	clrf	_pressed_ok2
  1773  00DF  01F8               	clrf	_pressed_ok2+1
  1774  00E0  2911               	goto	i1l131
  1775  00E1                     i1l1091:
  1776  00E1  01F2               	clrf	decrementar@e_353
  1777  00E2  01F3               	clrf	decrementar@e_353+1
  1778  00E3                     i1l1097:
  1779  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  1780  00E4  1303               	bcf	3,6	;RP1=0, select bank0
  1781  00E5  0822               	movf	_released_ok2,w
  1782  00E6  3E01               	addlw	1
  1783  00E7  00A2               	movwf	_released_ok2
  1784  00E8  0823               	movf	_released_ok2+1,w
  1785  00E9  1803               	skipnc
  1786  00EA  3E01               	addlw	1
  1787  00EB  3E00               	addlw	0
  1788  00EC  00A3               	movwf	_released_ok2+1
  1789  00ED                     i1l1099:
  1790  00ED  3001               	movlw	1
  1791  00EE  07F2               	addwf	decrementar@e_353,f
  1792  00EF  1803               	skipnc
  1793  00F0  0AF3               	incf	decrementar@e_353+1,f
  1794  00F1  3000               	movlw	0
  1795  00F2  07F3               	addwf	decrementar@e_353+1,f
  1796  00F3                     i1l1101:
  1797  00F3  0873               	movf	decrementar@e_353+1,w
  1798  00F4  3A80               	xorlw	128
  1799  00F5  00FF               	movwf	btemp+1
  1800  00F6  3080               	movlw	128
  1801  00F7  027F               	subwf	btemp+1,w
  1802  00F8  1D03               	skipz
  1803  00F9  28FC               	goto	u25_25
  1804  00FA  3006               	movlw	6
  1805  00FB  0272               	subwf	decrementar@e_353,w
  1806  00FC                     u25_25:
  1807  00FC  1C03               	skipc
  1808  00FD  28FF               	goto	u25_21
  1809  00FE  2900               	goto	u25_20
  1810  00FF                     u25_21:
  1811  00FF  28E3               	goto	i1l1097
  1812  0100                     u25_20:
  1813  0100                     i1l1103:
  1814  0100  01F7               	clrf	_pressed_ok2
  1815  0101  01F8               	clrf	_pressed_ok2+1
  1816  0102                     i1l1105:
  1817  0102  3000               	movlw	0
  1818  0103  1283               	bcf	3,5	;RP0=0, select bank0
  1819  0104  1303               	bcf	3,6	;RP1=0, select bank0
  1820  0105  0223               	subwf	_released_ok2+1,w
  1821  0106  3006               	movlw	6
  1822  0107  1903               	skipnz
  1823  0108  0222               	subwf	_released_ok2,w
  1824  0109  1C03               	skipc
  1825  010A  290C               	goto	u26_21
  1826  010B  290D               	goto	u26_20
  1827  010C                     u26_21:
  1828  010C  2911               	goto	i1l131
  1829  010D                     u26_20:
  1830  010D                     i1l1107:
  1831  010D  01A0               	clrf	_presionado2
  1832  010E  01A1               	clrf	_presionado2+1
  1833  010F  01F9               	clrf	_released_ok
  1834  0110  01FA               	clrf	_released_ok+1
  1835  0111                     i1l131:
  1836  0111  0008               	return
  1837  0112                     __end_of_decrementar:
  1838  007E                     btemp	set	126	;btemp
  1839  007E                     wtemp0	set	126
  1840                           
  1841                           	psect	config
  1842                           
  1843                           ;Config register CONFIG1 @ 0x2007
  1844                           ;	Oscillator Selection bits
  1845                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1846                           ;	Watchdog Timer Enable bit
  1847                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1848                           ;	Power-up Timer Enable bit
  1849                           ;	PWRTE = OFF, PWRT disabled
  1850                           ;	RE3/MCLR pin function select bit
  1851                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1852                           ;	Code Protection bit
  1853                           ;	CP = OFF, Program memory code protection is disabled
  1854                           ;	Data Code Protection bit
  1855                           ;	CPD = OFF, Data memory code protection is disabled
  1856                           ;	Brown Out Reset Selection bits
  1857                           ;	BOREN = OFF, BOR disabled
  1858                           ;	Internal External Switchover bit
  1859                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1860                           ;	Fail-Safe Clock Monitor Enabled bit
  1861                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1862                           ;	Low Voltage Programming Enable bit
  1863                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1864                           ;	In-Circuit Debugger Mode bit
  1865                           ;	DEBUG = 0x1, unprogrammed default
  1866  2007                     	org	8199
  1867  2007  20D4               	dw	8404
  1868                           
  1869                           ;Config register CONFIG2 @ 0x2008
  1870                           ;	Brown-out Reset Selection bit
  1871                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1872                           ;	Flash Program Memory Self Write Enable bits
  1873                           ;	WRT = OFF, Write protection off
  1874  2008                     	org	8200
  1875  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80      6      17
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_decrementar
    _ISR->_incrementar

Critical Paths under _main in BANK0

    _main->_SPI_config
    _SPI_config->_SPI_Esclavo_Init

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     142
                                              5 BANK0      1     1      0
                         _SPI_Enviar
                        _SPI_Recibir
                         _SPI_config
                    _interrup_config
                         _osc_config
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _osc_config                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _interrup_config                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_config                                           1     1      0     120
                                              4 BANK0      1     1      0
                   _SPI_Esclavo_Init
 ---------------------------------------------------------------------------------
 (2) _SPI_Esclavo_Init                                     4     3      1     120
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _SPI_Recibir                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Enviar                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0     185
                                              4 COMMON     4     4      0
                        _decrementar
                        _incrementar
 ---------------------------------------------------------------------------------
 (4) _incrementar                                          4     4      0      92
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (4) _decrementar                                          4     4      0      92
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_Enviar
   _SPI_Recibir
   _SPI_config
     _SPI_Esclavo_Init
   _interrup_config
   _osc_config
   _setup

 _ISR (ROOT)
   _decrementar
   _incrementar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      6      11       5       21.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1F      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 19 23:38:18 2021

              _SPI_Recibir 022C            SPI_Enviar@valor 002B                _SSPSTATbits 0094  
                       l98 01B5                 _SPI_config 020F                        l101 020E  
                      l104 0225                        l107 021B                        l170 0070  
                      l162 0034                        l171 009A                        l172 0075  
                      l164 0039                        l181 022F                        l173 007A  
                      l165 003E                        l174 007F                        l166 0043  
                      l175 00A0                        l167 0048                        l168 004D  
                      l178 022B    __end_of_interrup_config 020F                        u280 01D0  
                      u281 01CF                        _ISR 01E7                       ?_ISR 0070  
                     l1001 002D                       l1005 0052                       l1111 0181  
                     l1009 0084                       l1121 019A                       l1113 018A  
                     l1211 005C                       l1131 01AA                       l1123 019E  
                     l1115 018D                       l1141 022C                       l1213 008C  
                     l1133 021C                       l1125 019F                       l1117 0190  
                     l1135 0202                       l1127 01A6                       l1119 0199  
                     l1145 0229                       l1137 020A                       l1129 01A9  
                     l1161 01C5                       l1139 020F                       l1163 01CA  
                     l1165 01D0                       l1157 01B6                       l1167 01DA  
                     l1159 01C0                       l1169 01E0                       _IOCB 0096  
                     i1l86 01F7                       _main 01B6                       btemp 007E  
                     start 0010               ?_incrementar 0070                      ??_ISR 0074  
                    ?_main 0070                      _ANSEL 0188                      i1l131 0111  
                    i1l119 0180                      u20_20 017A                      u20_21 0179  
                    u21_20 00A7                      u21_21 00A6                      u22_20 00C4  
                    u22_21 00C3                      u22_25 00C0                      u23_20 00D1  
                    u15_20 0118                      u23_21 00D0                      u15_21 0117  
                    u24_20 00D7                      u16_20 0135                      u24_21 00D6  
                    u16_21 0134                      u16_25 0131                      u25_20 0100  
                    u17_20 0140                      u25_21 00FF                      u17_21 013F  
                    u25_25 00FC                      u26_20 010D                      u18_20 0148  
                    u26_21 010C                      u18_21 0147                      u19_20 016F  
                    u27_20 01EB                      u19_21 016E                      u27_21 01EA  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      u19_25 016B                      _PORTE 0009  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _TRISE 0089                      _SSPIF 0063  
                    _setup 0181  SPI_Esclavo_Init@port_mode 002E                      pclath 000A  
 __end_of_SPI_Esclavo_Init 00A1                      status 0003       __size_of_decrementar 0071  
                    wtemp0 007E                ?_SPI_Enviar 0070            __initialization 0013  
             __end_of_main 01E7                ?_SPI_config 0070                     ??_main 0030  
         ?_interrup_config 0070                     ?_setup 0070                     _ANSELH 0189  
                   i1l1101 00F3                     i1l1021 0118                     i1l1103 0100  
                   i1l1031 0128                     i1l1105 0102                     i1l1041 014B  
                   i1l1033 0135                     i1l1107 010D                     i1l1051 0154  
                   i1l1043 014F                     i1l1035 0137                     i1l1027 011A  
                   i1l1019 0112                     i1l1061 017A                     i1l1053 015C  
                   i1l1037 0140                     i1l1029 0122                     i1l1045 0152  
                   i1l1055 0162                     i1l1039 0148                     i1l1151 01EC  
                   i1l1081 00C8                     i1l1073 00A9                     i1l1065 00A1  
                   i1l1057 016F                     i1l1153 01F1                     i1l1083 00D1  
                   i1l1075 00B1                     i1l1067 00A7                     i1l1091 00E1  
                   i1l1059 0171                     i1l1155 01F6                     i1l1147 01E7  
                   i1l1085 00D7                     i1l1077 00B7                     i1l1149 01EB  
                   i1l1087 00DA                     i1l1079 00C4                     i1l1097 00E3  
                   i1l1089 00DE                     i1l1099 00ED                     _SSPBUF 0013  
                   saved_w 007E        __size_of_SPI_Enviar 0006    __end_of__initialization 0026  
      __size_of_SPI_config 000D               ?_SPI_Recibir 0070             __pcstackCOMMON 0070  
            __end_of_setup 01B6       __size_of_incrementar 006F                    ??_setup 002B  
               __pbssBANK0 0020                 __pmaintext 01B6               _dato_maestro 002A  
               __pintentry 0004               incrementar@e 0070        SPI_Esclavo_Init@SCK 002B  
         decrementar@e_353 0072          ?_SPI_Esclavo_Init 002B         ??_SPI_Esclavo_Init 002C  
             ??_SPI_Enviar 002B               ??_SPI_config 002F                  _ANSELbits 0188  
                  __ptext1 0181                    __ptext2 021C                    __ptext3 0202  
                  __ptext4 020F                    __ptext5 002A                    __ptext6 022C  
                  __ptext7 0226                    __ptext8 01E7                    __ptext9 0112  
             __size_of_ISR 001B         __end_of_SPI_Enviar 022C              ??_decrementar 0070  
     end_of_initialization 0026                 _osc_config 021C         __end_of_SPI_config 021C  
     __size_of_SPI_Recibir 0004                  _PORTAbits 0005                  _PORTBbits 0006  
               _presionado 0026                 _pressed_ok 007B                  _TRISAbits 0085  
                _TRISBbits 0086                  _TRISCbits 0087   __size_of_interrup_config 000D  
      __end_of_decrementar 0112        start_initialization 0013                __end_of_ISR 0202  
              ?_osc_config 0070              ??_incrementar 0070                __pbssCOMMON 0077  
                ___latbits 0002              __pcstackBANK0 002B                _decrementar 00A1  
         incrementar@e_350 0072          ??_interrup_config 002B  __size_of_SPI_Esclavo_Init 0077  
      __end_of_incrementar 0181                  _contador2 0024        __size_of_osc_config 000A  
           __size_of_setup 0035               decrementar@e 0070          interrupt_function 0004  
             _released_ok2 0022              ??_SPI_Recibir 002B                _incrementar 0112  
                 __ptext10 00A1                   _contador 0028               ??_osc_config 002B  
            __size_of_main 0031           _SPI_Esclavo_Init 002A        __end_of_SPI_Recibir 0230  
              _released_ok 0079                 _INTCONbits 000B         __end_of_osc_config 0226  
          _interrup_config 0202               ?_decrementar 0070                   intlevel1 0000  
               _OSCCONbits 008F                _presionado2 0020                _pressed_ok2 0077  
               _SSPCONbits 0014                 _SPI_Enviar 0226  
