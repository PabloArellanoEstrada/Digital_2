

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Feb 13 23:15:59 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0009                     _PORTEbits	set	9
   210  000B                     _INTCONbits	set	11
   211  0009                     _PORTE	set	9
   212  0008                     _PORTD	set	8
   213  0007                     _PORTC	set	7
   214  0006                     _PORTB	set	6
   215  0005                     _PORTA	set	5
   216  000C                     _PIR1bits	set	12
   217  008F                     _OSCCONbits	set	143
   218  0089                     _TRISEbits	set	137
   219  0088                     _TRISD	set	136
   220  0087                     _TRISC	set	135
   221  0086                     _TRISB	set	134
   222  0085                     _TRISA	set	133
   223  0189                     _ANSELH	set	393
   224                           
   225                           	psect	cinit
   226  000F                     start_initialization:	
   227                           ; #config settings
   228                           
   229  000F                     __initialization:
   230                           
   231                           ; Clear objects allocated to COMMON
   232  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   233  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   234  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   235  0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   236  0013  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   237  0014  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   238  0015  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   239  0016  01F7               	clrf	(__pbssCOMMON+7)& (0+127)
   240                           
   241                           ; Clear objects allocated to BANK0
   242  0017  1283               	bcf	3,5	;RP0=0, select bank0
   243  0018  1303               	bcf	3,6	;RP1=0, select bank0
   244  0019  01A0               	clrf	__pbssBANK0& (0+127)
   245  001A  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   246  001B  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   247  001C  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   248  001D  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   249  001E  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   250  001F  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   251  0020  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   252  0021                     end_of_initialization:	
   253                           ;End of C runtime variable initialization code
   254                           
   255  0021                     __end_of__initialization:
   256  0021  0183               	clrf	3
   257  0022  120A  118A  292F   	ljmp	_main	;jump to C main() function
   258                           
   259                           	psect	bssCOMMON
   260  0070                     __pbssCOMMON:
   261  0070                     _released_ok2:
   262  0070                     	ds	2
   263  0072                     _pressed_ok2:
   264  0072                     	ds	2
   265  0074                     _released_ok:
   266  0074                     	ds	2
   267  0076                     _pressed_ok:
   268  0076                     	ds	2
   269                           
   270                           	psect	bssBANK0
   271  0020                     __pbssBANK0:
   272  0020                     _presionado2:
   273  0020                     	ds	2
   274  0022                     _contador2:
   275  0022                     	ds	2
   276  0024                     _presionado:
   277  0024                     	ds	2
   278  0026                     _contador:
   279  0026                     	ds	2
   280                           
   281                           	psect	cstackCOMMON
   282  0078                     __pcstackCOMMON:
   283  0078                     ?_setup:
   284  0078                     ?_osc_config:	
   285                           ; 1 bytes @ 0x0
   286                           
   287  0078                     ?_incrementar:	
   288                           ; 1 bytes @ 0x0
   289                           
   290  0078                     ?_decrementar:	
   291                           ; 1 bytes @ 0x0
   292                           
   293  0078                     ?_ISR:	
   294                           ; 1 bytes @ 0x0
   295                           
   296  0078                     ??_ISR:	
   297                           ; 1 bytes @ 0x0
   298                           
   299  0078                     ?_main:	
   300                           ; 1 bytes @ 0x0
   301                           
   302                           
   303                           ; 1 bytes @ 0x0
   304  0078                     	ds	2
   305  007A                     ??_setup:
   306  007A                     ??_osc_config:	
   307                           ; 1 bytes @ 0x2
   308                           
   309  007A                     ??_incrementar:	
   310                           ; 1 bytes @ 0x2
   311                           
   312  007A                     ??_decrementar:	
   313                           ; 1 bytes @ 0x2
   314                           
   315  007A                     ??_main:	
   316                           ; 1 bytes @ 0x2
   317                           
   318                           
   319                           	psect	cstackBANK0
   320  0028                     __pcstackBANK0:	
   321                           ; 1 bytes @ 0x2
   322                           
   323  0028                     incrementar@e:
   324  0028                     decrementar@e:	
   325                           ; 2 bytes @ 0x0
   326                           
   327                           
   328                           ; 2 bytes @ 0x0
   329  0028                     	ds	2
   330  002A                     incrementar@e_206:
   331  002A                     decrementar@e_209:	
   332                           ; 2 bytes @ 0x2
   333                           
   334                           
   335                           ; 2 bytes @ 0x2
   336  002A                     	ds	2
   337                           
   338                           	psect	maintext
   339  012F                     __pmaintext:	
   340 ;;
   341 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   342 ;;
   343 ;; *************** function _main *****************
   344 ;; Defined at:
   345 ;;		line 77 in file "SLAVE_PUSH_SPI.c"
   346 ;; Parameters:    Size  Location     Type
   347 ;;		None
   348 ;; Auto vars:     Size  Location     Type
   349 ;;		None
   350 ;; Return value:  Size  Location     Type
   351 ;;                  1    wreg      void 
   352 ;; Registers used:
   353 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   354 ;; Tracked objects:
   355 ;;		On entry : B00/0
   356 ;;		On exit  : 0/0
   357 ;;		Unchanged: 0/0
   358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   359 ;;      Params:         0       0       0       0       0
   360 ;;      Locals:         0       0       0       0       0
   361 ;;      Temps:          0       0       0       0       0
   362 ;;      Totals:         0       0       0       0       0
   363 ;;Total ram usage:        0 bytes
   364 ;; Hardware stack levels required when called:    2
   365 ;; This function calls:
   366 ;;		_decrementar
   367 ;;		_incrementar
   368 ;;		_osc_config
   369 ;;		_setup
   370 ;; This function is called by:
   371 ;;		Startup code after reset
   372 ;; This function uses a non-reentrant model
   373 ;;
   374                           
   375                           
   376                           ;psect for function _main
   377  012F                     _main:
   378  012F                     l1017:	
   379                           ;incstack = 0
   380                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   381                           
   382                           
   383                           ;SLAVE_PUSH_SPI.c: 79:     INTCONbits.INTE = 0;
   384  012F  120A  118A  210B  120A  118A  	fcall	_setup
   385  0134                     l1019:
   386                           
   387                           ;SLAVE_PUSH_SPI.c: 80:     INTCONbits.RBIE = 0;
   388  0134  120A  118A  2155  120A  118A  	fcall	_osc_config
   389  0139                     l1021:
   390                           
   391                           ;SLAVE_PUSH_SPI.c: 83:     INTCONbits.RBIF = 0;;SLAVE_PUSH_SPI.c: 84: 
   392  0139  120A  118A  2025  120A  118A  	fcall	_incrementar
   393  013E                     l1023:
   394                           
   395                           ;SLAVE_PUSH_SPI.c: 85: }
   396  013E  120A  118A  2098  120A  118A  	fcall	_decrementar
   397  0143  2939               	goto	l1021
   398  0144  120A  118A  280C   	ljmp	start
   399  0147                     __end_of_main:
   400                           
   401                           	psect	text1
   402  010B                     __ptext1:	
   403 ;; *************** function _setup *****************
   404 ;; Defined at:
   405 ;;		line 93 in file "SLAVE_PUSH_SPI.c"
   406 ;; Parameters:    Size  Location     Type
   407 ;;		None
   408 ;; Auto vars:     Size  Location     Type
   409 ;;		None
   410 ;; Return value:  Size  Location     Type
   411 ;;                  1    wreg      void 
   412 ;; Registers used:
   413 ;;		wreg, status,2
   414 ;; Tracked objects:
   415 ;;		On entry : 0/0
   416 ;;		On exit  : 0/0
   417 ;;		Unchanged: 0/0
   418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   419 ;;      Params:         0       0       0       0       0
   420 ;;      Locals:         0       0       0       0       0
   421 ;;      Temps:          0       0       0       0       0
   422 ;;      Totals:         0       0       0       0       0
   423 ;;Total ram usage:        0 bytes
   424 ;; Hardware stack levels used:    1
   425 ;; Hardware stack levels required when called:    1
   426 ;; This function calls:
   427 ;;		Nothing
   428 ;; This function is called by:
   429 ;;		_main
   430 ;; This function uses a non-reentrant model
   431 ;;
   432                           
   433                           
   434                           ;psect for function _setup
   435  010B                     _setup:
   436  010B                     l693:	
   437                           ;incstack = 0
   438                           ; Regs used in _setup: [wreg+status,2]
   439                           
   440                           
   441                           ;SLAVE_PUSH_SPI.c: 95:     OSCCONbits.SCS = 0;
   442  010B  3001               	movlw	1
   443  010C  1683               	bsf	3,5	;RP0=1, select bank1
   444  010D  1303               	bcf	3,6	;RP1=0, select bank1
   445  010E  0085               	movwf	5	;volatile
   446  010F                     l695:
   447                           
   448                           ;SLAVE_PUSH_SPI.c: 96: }
   449  010F  1283               	bcf	3,5	;RP0=0, select bank0
   450  0110  1303               	bcf	3,6	;RP1=0, select bank0
   451  0111  0185               	clrf	5	;volatile
   452  0112                     l697:
   453  0112  1683               	bsf	3,5	;RP0=1, select bank3
   454  0113  1703               	bsf	3,6	;RP1=1, select bank3
   455  0114  0189               	clrf	9	;volatile
   456  0115                     l699:
   457  0115  1683               	bsf	3,5	;RP0=1, select bank1
   458  0116  1303               	bcf	3,6	;RP1=0, select bank1
   459  0117  0186               	clrf	6	;volatile
   460  0118                     l701:
   461  0118  1283               	bcf	3,5	;RP0=0, select bank0
   462  0119  1303               	bcf	3,6	;RP1=0, select bank0
   463  011A  0186               	clrf	6	;volatile
   464  011B                     l703:
   465  011B  1683               	bsf	3,5	;RP0=1, select bank1
   466  011C  1303               	bcf	3,6	;RP1=0, select bank1
   467  011D  0187               	clrf	7	;volatile
   468  011E                     l705:
   469  011E  1283               	bcf	3,5	;RP0=0, select bank0
   470  011F  1303               	bcf	3,6	;RP1=0, select bank0
   471  0120  0187               	clrf	7	;volatile
   472  0121                     l707:
   473  0121  1683               	bsf	3,5	;RP0=1, select bank1
   474  0122  1303               	bcf	3,6	;RP1=0, select bank1
   475  0123  0188               	clrf	8	;volatile
   476  0124                     l709:
   477  0124  1283               	bcf	3,5	;RP0=0, select bank0
   478  0125  1303               	bcf	3,6	;RP1=0, select bank0
   479  0126  0188               	clrf	8	;volatile
   480  0127                     l711:
   481  0127  1683               	bsf	3,5	;RP0=1, select bank1
   482  0128  1303               	bcf	3,6	;RP1=0, select bank1
   483  0129  1409               	bsf	9,0	;volatile
   484  012A                     l713:
   485  012A  1489               	bsf	9,1	;volatile
   486  012B                     l715:
   487  012B  1283               	bcf	3,5	;RP0=0, select bank0
   488  012C  1303               	bcf	3,6	;RP1=0, select bank0
   489  012D  0189               	clrf	9	;volatile
   490  012E                     l71:
   491  012E  0008               	return
   492  012F                     __end_of_setup:
   493                           
   494                           	psect	text2
   495  0155                     __ptext2:	
   496 ;; *************** function _osc_config *****************
   497 ;; Defined at:
   498 ;;		line 122 in file "SLAVE_PUSH_SPI.c"
   499 ;; Parameters:    Size  Location     Type
   500 ;;		None
   501 ;; Auto vars:     Size  Location     Type
   502 ;;		None
   503 ;; Return value:  Size  Location     Type
   504 ;;                  1    wreg      void 
   505 ;; Registers used:
   506 ;;		None
   507 ;; Tracked objects:
   508 ;;		On entry : 0/0
   509 ;;		On exit  : 0/0
   510 ;;		Unchanged: 0/0
   511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   512 ;;      Params:         0       0       0       0       0
   513 ;;      Locals:         0       0       0       0       0
   514 ;;      Temps:          0       0       0       0       0
   515 ;;      Totals:         0       0       0       0       0
   516 ;;Total ram usage:        0 bytes
   517 ;; Hardware stack levels used:    1
   518 ;; Hardware stack levels required when called:    1
   519 ;; This function calls:
   520 ;;		Nothing
   521 ;; This function is called by:
   522 ;;		_main
   523 ;; This function uses a non-reentrant model
   524 ;;
   525                           
   526                           
   527                           ;psect for function _osc_config
   528  0155                     _osc_config:
   529  0155                     l717:	
   530                           ;incstack = 0
   531                           ; Regs used in _osc_config: []
   532                           
   533  0155  1683               	bsf	3,5	;RP0=1, select bank1
   534  0156  1303               	bcf	3,6	;RP1=0, select bank1
   535  0157  170F               	bsf	15,6	;volatile
   536  0158  168F               	bsf	15,5	;volatile
   537  0159  120F               	bcf	15,4	;volatile
   538  015A  118F               	bcf	15,3	;volatile
   539  015B  110F               	bcf	15,2	;volatile
   540  015C  148F               	bsf	15,1	;volatile
   541  015D  100F               	bcf	15,0	;volatile
   542  015E                     l77:
   543  015E  0008               	return
   544  015F                     __end_of_osc_config:
   545                           
   546                           	psect	text3
   547  0025                     __ptext3:	
   548 ;; *************** function _incrementar *****************
   549 ;; Defined at:
   550 ;;		line 143 in file "SLAVE_PUSH_SPI.c"
   551 ;; Parameters:    Size  Location     Type
   552 ;;		None
   553 ;; Auto vars:     Size  Location     Type
   554 ;;  e               2    2[BANK0 ] int 
   555 ;;  e               2    0[BANK0 ] int 
   556 ;; Return value:  Size  Location     Type
   557 ;;                  1    wreg      void 
   558 ;; Registers used:
   559 ;;		wreg, status,2, status,0, btemp+1
   560 ;; Tracked objects:
   561 ;;		On entry : 0/0
   562 ;;		On exit  : 0/0
   563 ;;		Unchanged: 0/0
   564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   565 ;;      Params:         0       0       0       0       0
   566 ;;      Locals:         0       4       0       0       0
   567 ;;      Temps:          0       0       0       0       0
   568 ;;      Totals:         0       4       0       0       0
   569 ;;Total ram usage:        4 bytes
   570 ;; Hardware stack levels used:    1
   571 ;; Hardware stack levels required when called:    1
   572 ;; This function calls:
   573 ;;		Nothing
   574 ;; This function is called by:
   575 ;;		_main
   576 ;; This function uses a non-reentrant model
   577 ;;
   578                           
   579                           
   580                           ;psect for function _incrementar
   581  0025                     _incrementar:
   582  0025                     l925:	
   583                           ;incstack = 0
   584                           ; Regs used in _incrementar: [wreg+status,2+status,0+btemp+1]
   585                           
   586                           
   587                           ;SLAVE_PUSH_SPI.c: 145:     if (PORTEbits.RE0 == 1)
   588  0025  1283               	bcf	3,5	;RP0=0, select bank0
   589  0026  1303               	bcf	3,6	;RP1=0, select bank0
   590  0027  1C09               	btfss	9,0	;volatile
   591  0028  282A               	goto	u261
   592  0029  282B               	goto	u260
   593  002A                     u261:
   594  002A  2867               	goto	l951
   595  002B                     u260:
   596  002B                     l927:
   597                           
   598                           ;SLAVE_PUSH_SPI.c: 146:     {;SLAVE_PUSH_SPI.c: 147:         for (int e = 0; e < 11; e++
      +                          ){
   599  002B  01A8               	clrf	incrementar@e
   600  002C  01A9               	clrf	incrementar@e+1
   601  002D                     l933:
   602                           
   603                           ;SLAVE_PUSH_SPI.c: 148:         pressed_ok = pressed_ok + 1; }
   604  002D  0876               	movf	_pressed_ok,w
   605  002E  3E01               	addlw	1
   606  002F  00F6               	movwf	_pressed_ok
   607  0030  0877               	movf	_pressed_ok+1,w
   608  0031  1803               	skipnc
   609  0032  3E01               	addlw	1
   610  0033  3E00               	addlw	0
   611  0034  00F7               	movwf	_pressed_ok+1
   612  0035                     l935:
   613  0035  3001               	movlw	1
   614  0036  1283               	bcf	3,5	;RP0=0, select bank0
   615  0037  1303               	bcf	3,6	;RP1=0, select bank0
   616  0038  07A8               	addwf	incrementar@e,f
   617  0039  1803               	skipnc
   618  003A  0AA9               	incf	incrementar@e+1,f
   619  003B  3000               	movlw	0
   620  003C  07A9               	addwf	incrementar@e+1,f
   621  003D                     l937:
   622  003D  0829               	movf	incrementar@e+1,w
   623  003E  3A80               	xorlw	128
   624  003F  00FF               	movwf	btemp+1
   625  0040  3080               	movlw	128
   626  0041  027F               	subwf	btemp+1,w
   627  0042  1D03               	skipz
   628  0043  2846               	goto	u275
   629  0044  300B               	movlw	11
   630  0045  0228               	subwf	incrementar@e,w
   631  0046                     u275:
   632  0046  1C03               	skipc
   633  0047  2849               	goto	u271
   634  0048  284A               	goto	u270
   635  0049                     u271:
   636  0049  282D               	goto	l933
   637  004A                     u270:
   638  004A                     l939:
   639                           
   640                           ;SLAVE_PUSH_SPI.c: 149:         released_ok = 0;
   641  004A  01F4               	clrf	_released_ok
   642  004B  01F5               	clrf	_released_ok+1
   643  004C                     l941:
   644                           
   645                           ;SLAVE_PUSH_SPI.c: 150:         if (pressed_ok > 10)
   646  004C  3000               	movlw	0
   647  004D  0277               	subwf	_pressed_ok+1,w
   648  004E  300B               	movlw	11
   649  004F  1903               	skipnz
   650  0050  0276               	subwf	_pressed_ok,w
   651  0051  1C03               	skipc
   652  0052  2854               	goto	u281
   653  0053  2855               	goto	u280
   654  0054                     u281:
   655  0054  2864               	goto	l949
   656  0055                     u280:
   657  0055                     l943:
   658                           
   659                           ;SLAVE_PUSH_SPI.c: 151:         {;SLAVE_PUSH_SPI.c: 152:             if (presionado == 0
      +                          )
   660  0055  1283               	bcf	3,5	;RP0=0, select bank0
   661  0056  1303               	bcf	3,6	;RP1=0, select bank0
   662  0057  0824               	movf	_presionado,w
   663  0058  0425               	iorwf	_presionado+1,w
   664  0059  1D03               	btfss	3,2
   665  005A  285C               	goto	u291
   666  005B  285D               	goto	u290
   667  005C                     u291:
   668  005C  2864               	goto	l949
   669  005D                     u290:
   670  005D                     l945:
   671                           
   672                           ;SLAVE_PUSH_SPI.c: 153:             {;SLAVE_PUSH_SPI.c: 154:                 PORTB = POR
      +                          TB + 1;
   673  005D  0806               	movf	6,w	;volatile
   674  005E  3E01               	addlw	1
   675  005F  0086               	movwf	6	;volatile
   676  0060                     l947:
   677                           
   678                           ;SLAVE_PUSH_SPI.c: 155:                 presionado = 1;
   679  0060  3001               	movlw	1
   680  0061  00A4               	movwf	_presionado
   681  0062  3000               	movlw	0
   682  0063  00A5               	movwf	_presionado+1
   683  0064                     l949:
   684                           
   685                           ;SLAVE_PUSH_SPI.c: 158:         pressed_ok = 0;
   686  0064  01F6               	clrf	_pressed_ok
   687  0065  01F7               	clrf	_pressed_ok+1
   688                           
   689                           ;SLAVE_PUSH_SPI.c: 159:         }
   690  0066  2897               	goto	l89
   691  0067                     l951:
   692                           
   693                           ;SLAVE_PUSH_SPI.c: 161:     {;SLAVE_PUSH_SPI.c: 162:         for (int e = 0; e < 11; e++
      +                          ){
   694  0067  01AA               	clrf	incrementar@e_206
   695  0068  01AB               	clrf	incrementar@e_206+1
   696  0069                     l957:
   697                           
   698                           ;SLAVE_PUSH_SPI.c: 163:         released_ok = released_ok + 1;}
   699  0069  0874               	movf	_released_ok,w
   700  006A  3E01               	addlw	1
   701  006B  00F4               	movwf	_released_ok
   702  006C  0875               	movf	_released_ok+1,w
   703  006D  1803               	skipnc
   704  006E  3E01               	addlw	1
   705  006F  3E00               	addlw	0
   706  0070  00F5               	movwf	_released_ok+1
   707  0071                     l959:
   708  0071  3001               	movlw	1
   709  0072  1283               	bcf	3,5	;RP0=0, select bank0
   710  0073  1303               	bcf	3,6	;RP1=0, select bank0
   711  0074  07AA               	addwf	incrementar@e_206,f
   712  0075  1803               	skipnc
   713  0076  0AAB               	incf	incrementar@e_206+1,f
   714  0077  3000               	movlw	0
   715  0078  07AB               	addwf	incrementar@e_206+1,f
   716  0079                     l961:
   717  0079  082B               	movf	incrementar@e_206+1,w
   718  007A  3A80               	xorlw	128
   719  007B  00FF               	movwf	btemp+1
   720  007C  3080               	movlw	128
   721  007D  027F               	subwf	btemp+1,w
   722  007E  1D03               	skipz
   723  007F  2882               	goto	u305
   724  0080  300B               	movlw	11
   725  0081  022A               	subwf	incrementar@e_206,w
   726  0082                     u305:
   727  0082  1C03               	skipc
   728  0083  2885               	goto	u301
   729  0084  2886               	goto	u300
   730  0085                     u301:
   731  0085  2869               	goto	l957
   732  0086                     u300:
   733  0086                     l963:
   734                           
   735                           ;SLAVE_PUSH_SPI.c: 164:         pressed_ok = 0;
   736  0086  01F6               	clrf	_pressed_ok
   737  0087  01F7               	clrf	_pressed_ok+1
   738  0088                     l965:
   739                           
   740                           ;SLAVE_PUSH_SPI.c: 165:         if (released_ok > 10)
   741  0088  3000               	movlw	0
   742  0089  0275               	subwf	_released_ok+1,w
   743  008A  300B               	movlw	11
   744  008B  1903               	skipnz
   745  008C  0274               	subwf	_released_ok,w
   746  008D  1C03               	skipc
   747  008E  2890               	goto	u311
   748  008F  2891               	goto	u310
   749  0090                     u311:
   750  0090  2897               	goto	l89
   751  0091                     u310:
   752  0091                     l967:
   753                           
   754                           ;SLAVE_PUSH_SPI.c: 166:         {;SLAVE_PUSH_SPI.c: 167:             presionado = 0;
   755  0091  1283               	bcf	3,5	;RP0=0, select bank0
   756  0092  1303               	bcf	3,6	;RP1=0, select bank0
   757  0093  01A4               	clrf	_presionado
   758  0094  01A5               	clrf	_presionado+1
   759                           
   760                           ;SLAVE_PUSH_SPI.c: 168:             released_ok = 0;
   761  0095  01F4               	clrf	_released_ok
   762  0096  01F5               	clrf	_released_ok+1
   763  0097                     l89:
   764  0097  0008               	return
   765  0098                     __end_of_incrementar:
   766                           
   767                           	psect	text4
   768  0098                     __ptext4:	
   769 ;; *************** function _decrementar *****************
   770 ;; Defined at:
   771 ;;		line 174 in file "SLAVE_PUSH_SPI.c"
   772 ;; Parameters:    Size  Location     Type
   773 ;;		None
   774 ;; Auto vars:     Size  Location     Type
   775 ;;  e               2    2[BANK0 ] int 
   776 ;;  e               2    0[BANK0 ] int 
   777 ;; Return value:  Size  Location     Type
   778 ;;                  1    wreg      void 
   779 ;; Registers used:
   780 ;;		wreg, status,2, status,0, btemp+1
   781 ;; Tracked objects:
   782 ;;		On entry : 0/0
   783 ;;		On exit  : 0/0
   784 ;;		Unchanged: 0/0
   785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   786 ;;      Params:         0       0       0       0       0
   787 ;;      Locals:         0       4       0       0       0
   788 ;;      Temps:          0       0       0       0       0
   789 ;;      Totals:         0       4       0       0       0
   790 ;;Total ram usage:        4 bytes
   791 ;; Hardware stack levels used:    1
   792 ;; Hardware stack levels required when called:    1
   793 ;; This function calls:
   794 ;;		Nothing
   795 ;; This function is called by:
   796 ;;		_main
   797 ;; This function uses a non-reentrant model
   798 ;;
   799                           
   800                           
   801                           ;psect for function _decrementar
   802  0098                     _decrementar:
   803  0098                     l971:	
   804                           ;incstack = 0
   805                           ; Regs used in _decrementar: [wreg+status,2+status,0+btemp+1]
   806                           
   807                           
   808                           ;SLAVE_PUSH_SPI.c: 176:     if (PORTEbits.RE1 == 1)
   809  0098  1283               	bcf	3,5	;RP0=0, select bank0
   810  0099  1303               	bcf	3,6	;RP1=0, select bank0
   811  009A  1C89               	btfss	9,1	;volatile
   812  009B  289D               	goto	u321
   813  009C  289E               	goto	u320
   814  009D                     u321:
   815  009D  28DA               	goto	l997
   816  009E                     u320:
   817  009E                     l973:
   818                           
   819                           ;SLAVE_PUSH_SPI.c: 177:     {;SLAVE_PUSH_SPI.c: 178:         for (int e = 0; e < 11; e++
      +                          ){
   820  009E  01A8               	clrf	decrementar@e
   821  009F  01A9               	clrf	decrementar@e+1
   822  00A0                     l979:
   823                           
   824                           ;SLAVE_PUSH_SPI.c: 179:         pressed_ok2 = pressed_ok2 + 1; }
   825  00A0  0872               	movf	_pressed_ok2,w
   826  00A1  3E01               	addlw	1
   827  00A2  00F2               	movwf	_pressed_ok2
   828  00A3  0873               	movf	_pressed_ok2+1,w
   829  00A4  1803               	skipnc
   830  00A5  3E01               	addlw	1
   831  00A6  3E00               	addlw	0
   832  00A7  00F3               	movwf	_pressed_ok2+1
   833  00A8                     l981:
   834  00A8  3001               	movlw	1
   835  00A9  1283               	bcf	3,5	;RP0=0, select bank0
   836  00AA  1303               	bcf	3,6	;RP1=0, select bank0
   837  00AB  07A8               	addwf	decrementar@e,f
   838  00AC  1803               	skipnc
   839  00AD  0AA9               	incf	decrementar@e+1,f
   840  00AE  3000               	movlw	0
   841  00AF  07A9               	addwf	decrementar@e+1,f
   842  00B0                     l983:
   843  00B0  0829               	movf	decrementar@e+1,w
   844  00B1  3A80               	xorlw	128
   845  00B2  00FF               	movwf	btemp+1
   846  00B3  3080               	movlw	128
   847  00B4  027F               	subwf	btemp+1,w
   848  00B5  1D03               	skipz
   849  00B6  28B9               	goto	u335
   850  00B7  300B               	movlw	11
   851  00B8  0228               	subwf	decrementar@e,w
   852  00B9                     u335:
   853  00B9  1C03               	skipc
   854  00BA  28BC               	goto	u331
   855  00BB  28BD               	goto	u330
   856  00BC                     u331:
   857  00BC  28A0               	goto	l979
   858  00BD                     u330:
   859  00BD                     l985:
   860                           
   861                           ;SLAVE_PUSH_SPI.c: 180:         released_ok2 = 0;
   862  00BD  01F0               	clrf	_released_ok2
   863  00BE  01F1               	clrf	_released_ok2+1
   864  00BF                     l987:
   865                           
   866                           ;SLAVE_PUSH_SPI.c: 181:         if (pressed_ok2 > 10)
   867  00BF  3000               	movlw	0
   868  00C0  0273               	subwf	_pressed_ok2+1,w
   869  00C1  300B               	movlw	11
   870  00C2  1903               	skipnz
   871  00C3  0272               	subwf	_pressed_ok2,w
   872  00C4  1C03               	skipc
   873  00C5  28C7               	goto	u341
   874  00C6  28C8               	goto	u340
   875  00C7                     u341:
   876  00C7  28D7               	goto	l995
   877  00C8                     u340:
   878  00C8                     l989:
   879                           
   880                           ;SLAVE_PUSH_SPI.c: 182:         {;SLAVE_PUSH_SPI.c: 183:             if (presionado2 == 
      +                          0)
   881  00C8  1283               	bcf	3,5	;RP0=0, select bank0
   882  00C9  1303               	bcf	3,6	;RP1=0, select bank0
   883  00CA  0820               	movf	_presionado2,w
   884  00CB  0421               	iorwf	_presionado2+1,w
   885  00CC  1D03               	btfss	3,2
   886  00CD  28CF               	goto	u351
   887  00CE  28D0               	goto	u350
   888  00CF                     u351:
   889  00CF  28D7               	goto	l995
   890  00D0                     u350:
   891  00D0                     l991:
   892                           
   893                           ;SLAVE_PUSH_SPI.c: 184:             {;SLAVE_PUSH_SPI.c: 185:                 PORTB = POR
      +                          TB - 1;
   894  00D0  0806               	movf	6,w	;volatile
   895  00D1  3EFF               	addlw	255
   896  00D2  0086               	movwf	6	;volatile
   897  00D3                     l993:
   898                           
   899                           ;SLAVE_PUSH_SPI.c: 186:                 presionado2 = 1;
   900  00D3  3001               	movlw	1
   901  00D4  00A0               	movwf	_presionado2
   902  00D5  3000               	movlw	0
   903  00D6  00A1               	movwf	_presionado2+1
   904  00D7                     l995:
   905                           
   906                           ;SLAVE_PUSH_SPI.c: 189:         pressed_ok2 = 0;
   907  00D7  01F2               	clrf	_pressed_ok2
   908  00D8  01F3               	clrf	_pressed_ok2+1
   909                           
   910                           ;SLAVE_PUSH_SPI.c: 190:         }
   911  00D9  290A               	goto	l101
   912  00DA                     l997:
   913                           
   914                           ;SLAVE_PUSH_SPI.c: 192:     {;SLAVE_PUSH_SPI.c: 193:         for (int e = 0; e < 11; e++
      +                          ){
   915  00DA  01AA               	clrf	decrementar@e_209
   916  00DB  01AB               	clrf	decrementar@e_209+1
   917  00DC                     l1003:
   918                           
   919                           ;SLAVE_PUSH_SPI.c: 194:         released_ok2 = released_ok2 + 1;}
   920  00DC  0870               	movf	_released_ok2,w
   921  00DD  3E01               	addlw	1
   922  00DE  00F0               	movwf	_released_ok2
   923  00DF  0871               	movf	_released_ok2+1,w
   924  00E0  1803               	skipnc
   925  00E1  3E01               	addlw	1
   926  00E2  3E00               	addlw	0
   927  00E3  00F1               	movwf	_released_ok2+1
   928  00E4                     l1005:
   929  00E4  3001               	movlw	1
   930  00E5  1283               	bcf	3,5	;RP0=0, select bank0
   931  00E6  1303               	bcf	3,6	;RP1=0, select bank0
   932  00E7  07AA               	addwf	decrementar@e_209,f
   933  00E8  1803               	skipnc
   934  00E9  0AAB               	incf	decrementar@e_209+1,f
   935  00EA  3000               	movlw	0
   936  00EB  07AB               	addwf	decrementar@e_209+1,f
   937  00EC                     l1007:
   938  00EC  082B               	movf	decrementar@e_209+1,w
   939  00ED  3A80               	xorlw	128
   940  00EE  00FF               	movwf	btemp+1
   941  00EF  3080               	movlw	128
   942  00F0  027F               	subwf	btemp+1,w
   943  00F1  1D03               	skipz
   944  00F2  28F5               	goto	u365
   945  00F3  300B               	movlw	11
   946  00F4  022A               	subwf	decrementar@e_209,w
   947  00F5                     u365:
   948  00F5  1C03               	skipc
   949  00F6  28F8               	goto	u361
   950  00F7  28F9               	goto	u360
   951  00F8                     u361:
   952  00F8  28DC               	goto	l1003
   953  00F9                     u360:
   954  00F9                     l1009:
   955                           
   956                           ;SLAVE_PUSH_SPI.c: 195:         pressed_ok2 = 0;
   957  00F9  01F2               	clrf	_pressed_ok2
   958  00FA  01F3               	clrf	_pressed_ok2+1
   959  00FB                     l1011:
   960                           
   961                           ;SLAVE_PUSH_SPI.c: 196:         if (released_ok2 > 10)
   962  00FB  3000               	movlw	0
   963  00FC  0271               	subwf	_released_ok2+1,w
   964  00FD  300B               	movlw	11
   965  00FE  1903               	skipnz
   966  00FF  0270               	subwf	_released_ok2,w
   967  0100  1C03               	skipc
   968  0101  2903               	goto	u371
   969  0102  2904               	goto	u370
   970  0103                     u371:
   971  0103  290A               	goto	l101
   972  0104                     u370:
   973  0104                     l1013:
   974                           
   975                           ;SLAVE_PUSH_SPI.c: 197:         {;SLAVE_PUSH_SPI.c: 198:             presionado2 = 0;
   976  0104  1283               	bcf	3,5	;RP0=0, select bank0
   977  0105  1303               	bcf	3,6	;RP1=0, select bank0
   978  0106  01A0               	clrf	_presionado2
   979  0107  01A1               	clrf	_presionado2+1
   980                           
   981                           ;SLAVE_PUSH_SPI.c: 199:             released_ok = 0;
   982  0108  01F4               	clrf	_released_ok
   983  0109  01F5               	clrf	_released_ok+1
   984  010A                     l101:
   985  010A  0008               	return
   986  010B                     __end_of_decrementar:
   987                           
   988                           	psect	text5
   989  0147                     __ptext5:	
   990 ;; *************** function _ISR *****************
   991 ;; Defined at:
   992 ;;		line 65 in file "SLAVE_PUSH_SPI.c"
   993 ;; Parameters:    Size  Location     Type
   994 ;;		None
   995 ;; Auto vars:     Size  Location     Type
   996 ;;		None
   997 ;; Return value:  Size  Location     Type
   998 ;;                  1    wreg      void 
   999 ;; Registers used:
  1000 ;;		None
  1001 ;; Tracked objects:
  1002 ;;		On entry : 0/0
  1003 ;;		On exit  : 0/0
  1004 ;;		Unchanged: 0/0
  1005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1006 ;;      Params:         0       0       0       0       0
  1007 ;;      Locals:         0       0       0       0       0
  1008 ;;      Temps:          2       0       0       0       0
  1009 ;;      Totals:         2       0       0       0       0
  1010 ;;Total ram usage:        2 bytes
  1011 ;; Hardware stack levels used:    1
  1012 ;; This function calls:
  1013 ;;		Nothing
  1014 ;; This function is called by:
  1015 ;;		Interrupt level 1
  1016 ;; This function uses a non-reentrant model
  1017 ;;
  1018                           
  1019                           
  1020                           ;psect for function _ISR
  1021  0147                     _ISR:
  1022  0147                     i1l811:
  1023                           
  1024                           ;SLAVE_PUSH_SPI.c: 67:     TRISD = 0;
  1025  0147  1283               	bcf	3,5	;RP0=0, select bank0
  1026  0148  1303               	bcf	3,6	;RP1=0, select bank0
  1027  0149  1E8C               	btfss	12,5	;volatile
  1028  014A  294C               	goto	u13_21
  1029  014B  294D               	goto	u13_20
  1030  014C                     u13_21:
  1031  014C  294E               	goto	i1l60
  1032  014D                     u13_20:
  1033  014D                     i1l813:
  1034                           
  1035                           ;SLAVE_PUSH_SPI.c: 68:     PORTD = 0;;SLAVE_PUSH_SPI.c: 69:     TRISEbits.TRISE0 = 1;
  1036  014D  128C               	bcf	12,5	;volatile
  1037  014E                     i1l60:
  1038  014E  0879               	movf	??_ISR+1,w
  1039  014F  008A               	movwf	10
  1040  0150  0E78               	swapf	??_ISR,w
  1041  0151  0083               	movwf	3
  1042  0152  0EFE               	swapf	btemp,f
  1043  0153  0E7E               	swapf	btemp,w
  1044  0154  0009               	retfie
  1045  0155                     __end_of_ISR:
  1046  007E                     btemp	set	126	;btemp
  1047  007E                     wtemp0	set	126
  1048                           
  1049                           	psect	intentry
  1050  0004                     __pintentry:	
  1051                           ;incstack = 0
  1052                           ; Regs used in _ISR: []
  1053                           
  1054  0004                     interrupt_function:
  1055  007E                     saved_w	set	btemp
  1056  0004  00FE               	movwf	btemp
  1057  0005  0E03               	swapf	3,w
  1058  0006  00F8               	movwf	??_ISR
  1059  0007  080A               	movf	10,w
  1060  0008  00F9               	movwf	??_ISR+1
  1061  0009  120A  118A  2947   	ljmp	_ISR
  1062                           
  1063                           	psect	config
  1064                           
  1065                           ;Config register CONFIG1 @ 0x2007
  1066                           ;	Oscillator Selection bits
  1067                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1068                           ;	Watchdog Timer Enable bit
  1069                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1070                           ;	Power-up Timer Enable bit
  1071                           ;	PWRTE = OFF, PWRT disabled
  1072                           ;	RE3/MCLR pin function select bit
  1073                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1074                           ;	Code Protection bit
  1075                           ;	CP = OFF, Program memory code protection is disabled
  1076                           ;	Data Code Protection bit
  1077                           ;	CPD = OFF, Data memory code protection is disabled
  1078                           ;	Brown Out Reset Selection bits
  1079                           ;	BOREN = OFF, BOR disabled
  1080                           ;	Internal External Switchover bit
  1081                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1082                           ;	Fail-Safe Clock Monitor Enabled bit
  1083                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1084                           ;	Low Voltage Programming Enable bit
  1085                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1086                           ;	In-Circuit Debugger Mode bit
  1087                           ;	DEBUG = 0x1, unprogrammed default
  1088  2007                     	org	8199
  1089  2007  20D4               	dw	8404
  1090                           
  1091                           ;Config register CONFIG2 @ 0x2008
  1092                           ;	Brown-out Reset Selection bit
  1093                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1094                           ;	Flash Program Memory Self Write Enable bits
  1095                           ;	WRT = OFF, Write protection off
  1096  2008                     	org	8200
  1097  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2      10
    BANK0            80      4      12
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_decrementar
    _main->_incrementar

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     272
                        _decrementar
                        _incrementar
                         _osc_config
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _osc_config                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _incrementar                                          4     4      0     136
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _decrementar                                          4     4      0     136
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _decrementar
   _incrementar
   _osc_config
   _setup

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      16       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       C       5       15.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      16      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Feb 13 23:15:59 2021

                     l71 012E                       l77 015E                       l89 0097  
                    l101 010A                      l701 0118                      l711 0127  
                    l703 011B                      l713 012A                      l705 011E  
                    l715 012B                      l707 0121                      l717 0155  
                    l709 0124                      l941 004C                      l933 002D  
                    l925 0025                      l693 010B                      l943 0055  
                    l935 0035                      l927 002B                      l951 0067  
                    l695 010F                      l961 0079                      l945 005D  
                    l937 003D                      l697 0112                      l971 0098  
                    l963 0086                      l947 0060                      l939 004A  
                    l699 0115                      l981 00A8                      l973 009E  
                    l965 0088                      l957 0069                      l949 0064  
                    l991 00D0                      l983 00B0                      l967 0091  
                    l959 0071                      l993 00D3                      l985 00BD  
                    l995 00D7                      l987 00BF                      l979 00A0  
                    l989 00C8                      l997 00DA                      u300 0086  
                    u301 0085                      u310 0091                      u311 0090  
                    u320 009E                      u321 009D                      u305 0082  
                    u330 00BD                      u331 00BC                      u340 00C8  
                    u260 002B                      u341 00C7                      u261 002A  
                    u350 00D0                      u270 004A                      u351 00CF  
                    u335 00B9                      u271 0049                      u360 00F9  
                    u280 0055                      u361 00F8                      u281 0054  
                    u370 0104                      u290 005D                      u371 0103  
                    u291 005C                      u275 0046                      _ISR 0147  
                    u365 00F5                     ?_ISR 0078                     l1011 00FB  
                   l1003 00DC                     l1013 0104                     l1005 00E4  
                   l1021 0139                     l1007 00EC                     l1023 013E  
                   l1009 00F9                     l1017 012F                     l1019 0134  
                   i1l60 014E                     _main 012F                     btemp 007E  
                   start 000C             ?_incrementar 0078                    ??_ISR 0078  
                  ?_main 0078                    i1l811 0147                    i1l813 014D  
                  u13_20 014D                    u13_21 014C                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _setup 010B  
                  pclath 000A                    status 0003     __size_of_decrementar 0073  
                  wtemp0 007E          __initialization 000F             __end_of_main 0147  
                 ??_main 007A                   ?_setup 0078                   _ANSELH 0189  
                 saved_w 007E  __end_of__initialization 0021           __pcstackCOMMON 0078  
          __end_of_setup 012F     __size_of_incrementar 0073                  ??_setup 007A  
             __pbssBANK0 0020               __pmaintext 012F               __pintentry 0004  
           incrementar@e 0028         decrementar@e_209 002A                  __ptext1 010B  
                __ptext2 0155                  __ptext3 0025                  __ptext4 0098  
                __ptext5 0147             __size_of_ISR 000E            ??_decrementar 007A  
   end_of_initialization 0021               _osc_config 0155                _PORTEbits 0009  
             _presionado 0024               _pressed_ok 0076                _TRISEbits 0089  
    __end_of_decrementar 010B      start_initialization 000F              __end_of_ISR 0155  
            ?_osc_config 0078            ??_incrementar 007A              __pbssCOMMON 0070  
              ___latbits 0002            __pcstackBANK0 0028              _decrementar 0098  
       incrementar@e_206 002A      __end_of_incrementar 0098                _contador2 0022  
    __size_of_osc_config 000A           __size_of_setup 0024             decrementar@e 0028  
      interrupt_function 0004                 _PIR1bits 000C             _released_ok2 0070  
            _incrementar 0025                 _contador 0026             ??_osc_config 007A  
          __size_of_main 0018              _released_ok 0074               _INTCONbits 000B  
     __end_of_osc_config 015F             ?_decrementar 0078                 intlevel1 0000  
             _OSCCONbits 008F              _presionado2 0020              _pressed_ok2 0072  
