

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 16 23:49:42 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    43                           	dabs	1,0x7E,2
    44  0000                     
    45                           ; Version 2.20
    46                           ; Generated 12/02/2020 GMT
    47                           ; 
    48                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC16F887 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     	;# 
    80  0001                     	;# 
    81  0002                     	;# 
    82  0003                     	;# 
    83  0004                     	;# 
    84  0005                     	;# 
    85  0006                     	;# 
    86  0007                     	;# 
    87  0008                     	;# 
    88  0009                     	;# 
    89  000A                     	;# 
    90  000B                     	;# 
    91  000C                     	;# 
    92  000D                     	;# 
    93  000E                     	;# 
    94  000E                     	;# 
    95  000F                     	;# 
    96  0010                     	;# 
    97  0011                     	;# 
    98  0012                     	;# 
    99  0013                     	;# 
   100  0014                     	;# 
   101  0015                     	;# 
   102  0015                     	;# 
   103  0016                     	;# 
   104  0017                     	;# 
   105  0018                     	;# 
   106  0019                     	;# 
   107  001A                     	;# 
   108  001B                     	;# 
   109  001B                     	;# 
   110  001C                     	;# 
   111  001D                     	;# 
   112  001E                     	;# 
   113  001F                     	;# 
   114  0081                     	;# 
   115  0085                     	;# 
   116  0086                     	;# 
   117  0087                     	;# 
   118  0088                     	;# 
   119  0089                     	;# 
   120  008C                     	;# 
   121  008D                     	;# 
   122  008E                     	;# 
   123  008F                     	;# 
   124  0090                     	;# 
   125  0091                     	;# 
   126  0092                     	;# 
   127  0093                     	;# 
   128  0093                     	;# 
   129  0093                     	;# 
   130  0094                     	;# 
   131  0095                     	;# 
   132  0096                     	;# 
   133  0097                     	;# 
   134  0098                     	;# 
   135  0099                     	;# 
   136  009A                     	;# 
   137  009B                     	;# 
   138  009C                     	;# 
   139  009D                     	;# 
   140  009E                     	;# 
   141  009F                     	;# 
   142  0105                     	;# 
   143  0107                     	;# 
   144  0108                     	;# 
   145  0109                     	;# 
   146  010C                     	;# 
   147  010C                     	;# 
   148  010D                     	;# 
   149  010E                     	;# 
   150  010F                     	;# 
   151  0185                     	;# 
   152  0187                     	;# 
   153  0188                     	;# 
   154  0189                     	;# 
   155  018C                     	;# 
   156  018D                     	;# 
   157  0000                     	;# 
   158  0001                     	;# 
   159  0002                     	;# 
   160  0003                     	;# 
   161  0004                     	;# 
   162  0005                     	;# 
   163  0006                     	;# 
   164  0007                     	;# 
   165  0008                     	;# 
   166  0009                     	;# 
   167  000A                     	;# 
   168  000B                     	;# 
   169  000C                     	;# 
   170  000D                     	;# 
   171  000E                     	;# 
   172  000E                     	;# 
   173  000F                     	;# 
   174  0010                     	;# 
   175  0011                     	;# 
   176  0012                     	;# 
   177  0013                     	;# 
   178  0014                     	;# 
   179  0015                     	;# 
   180  0015                     	;# 
   181  0016                     	;# 
   182  0017                     	;# 
   183  0018                     	;# 
   184  0019                     	;# 
   185  001A                     	;# 
   186  001B                     	;# 
   187  001B                     	;# 
   188  001C                     	;# 
   189  001D                     	;# 
   190  001E                     	;# 
   191  001F                     	;# 
   192  0081                     	;# 
   193  0085                     	;# 
   194  0086                     	;# 
   195  0087                     	;# 
   196  0088                     	;# 
   197  0089                     	;# 
   198  008C                     	;# 
   199  008D                     	;# 
   200  008E                     	;# 
   201  008F                     	;# 
   202  0090                     	;# 
   203  0091                     	;# 
   204  0092                     	;# 
   205  0093                     	;# 
   206  0093                     	;# 
   207  0093                     	;# 
   208  0094                     	;# 
   209  0095                     	;# 
   210  0096                     	;# 
   211  0097                     	;# 
   212  0098                     	;# 
   213  0099                     	;# 
   214  009A                     	;# 
   215  009B                     	;# 
   216  009C                     	;# 
   217  009D                     	;# 
   218  009E                     	;# 
   219  009F                     	;# 
   220  0105                     	;# 
   221  0107                     	;# 
   222  0108                     	;# 
   223  0109                     	;# 
   224  010C                     	;# 
   225  010C                     	;# 
   226  010D                     	;# 
   227  010E                     	;# 
   228  010F                     	;# 
   229  0185                     	;# 
   230  0187                     	;# 
   231  0188                     	;# 
   232  0189                     	;# 
   233  018C                     	;# 
   234  018D                     	;# 
   235  0000                     	;# 
   236  0001                     	;# 
   237  0002                     	;# 
   238  0003                     	;# 
   239  0004                     	;# 
   240  0005                     	;# 
   241  0006                     	;# 
   242  0007                     	;# 
   243  0008                     	;# 
   244  0009                     	;# 
   245  000A                     	;# 
   246  000B                     	;# 
   247  000C                     	;# 
   248  000D                     	;# 
   249  000E                     	;# 
   250  000E                     	;# 
   251  000F                     	;# 
   252  0010                     	;# 
   253  0011                     	;# 
   254  0012                     	;# 
   255  0013                     	;# 
   256  0014                     	;# 
   257  0015                     	;# 
   258  0015                     	;# 
   259  0016                     	;# 
   260  0017                     	;# 
   261  0018                     	;# 
   262  0019                     	;# 
   263  001A                     	;# 
   264  001B                     	;# 
   265  001B                     	;# 
   266  001C                     	;# 
   267  001D                     	;# 
   268  001E                     	;# 
   269  001F                     	;# 
   270  0081                     	;# 
   271  0085                     	;# 
   272  0086                     	;# 
   273  0087                     	;# 
   274  0088                     	;# 
   275  0089                     	;# 
   276  008C                     	;# 
   277  008D                     	;# 
   278  008E                     	;# 
   279  008F                     	;# 
   280  0090                     	;# 
   281  0091                     	;# 
   282  0092                     	;# 
   283  0093                     	;# 
   284  0093                     	;# 
   285  0093                     	;# 
   286  0094                     	;# 
   287  0095                     	;# 
   288  0096                     	;# 
   289  0097                     	;# 
   290  0098                     	;# 
   291  0099                     	;# 
   292  009A                     	;# 
   293  009B                     	;# 
   294  009C                     	;# 
   295  009D                     	;# 
   296  009E                     	;# 
   297  009F                     	;# 
   298  0105                     	;# 
   299  0107                     	;# 
   300  0108                     	;# 
   301  0109                     	;# 
   302  010C                     	;# 
   303  010C                     	;# 
   304  010D                     	;# 
   305  010E                     	;# 
   306  010F                     	;# 
   307  0185                     	;# 
   308  0187                     	;# 
   309  0188                     	;# 
   310  0189                     	;# 
   311  018C                     	;# 
   312  018D                     	;# 
   313  0000                     	;# 
   314  0001                     	;# 
   315  0002                     	;# 
   316  0003                     	;# 
   317  0004                     	;# 
   318  0005                     	;# 
   319  0006                     	;# 
   320  0007                     	;# 
   321  0008                     	;# 
   322  0009                     	;# 
   323  000A                     	;# 
   324  000B                     	;# 
   325  000C                     	;# 
   326  000D                     	;# 
   327  000E                     	;# 
   328  000E                     	;# 
   329  000F                     	;# 
   330  0010                     	;# 
   331  0011                     	;# 
   332  0012                     	;# 
   333  0013                     	;# 
   334  0014                     	;# 
   335  0015                     	;# 
   336  0015                     	;# 
   337  0016                     	;# 
   338  0017                     	;# 
   339  0018                     	;# 
   340  0019                     	;# 
   341  001A                     	;# 
   342  001B                     	;# 
   343  001B                     	;# 
   344  001C                     	;# 
   345  001D                     	;# 
   346  001E                     	;# 
   347  001F                     	;# 
   348  0081                     	;# 
   349  0085                     	;# 
   350  0086                     	;# 
   351  0087                     	;# 
   352  0088                     	;# 
   353  0089                     	;# 
   354  008C                     	;# 
   355  008D                     	;# 
   356  008E                     	;# 
   357  008F                     	;# 
   358  0090                     	;# 
   359  0091                     	;# 
   360  0092                     	;# 
   361  0093                     	;# 
   362  0093                     	;# 
   363  0093                     	;# 
   364  0094                     	;# 
   365  0095                     	;# 
   366  0096                     	;# 
   367  0097                     	;# 
   368  0098                     	;# 
   369  0099                     	;# 
   370  009A                     	;# 
   371  009B                     	;# 
   372  009C                     	;# 
   373  009D                     	;# 
   374  009E                     	;# 
   375  009F                     	;# 
   376  0105                     	;# 
   377  0107                     	;# 
   378  0108                     	;# 
   379  0109                     	;# 
   380  010C                     	;# 
   381  010C                     	;# 
   382  010D                     	;# 
   383  010E                     	;# 
   384  010F                     	;# 
   385  0185                     	;# 
   386  0187                     	;# 
   387  0188                     	;# 
   388  0189                     	;# 
   389  018C                     	;# 
   390  018D                     	;# 
   391  0000                     	;# 
   392  0001                     	;# 
   393  0002                     	;# 
   394  0003                     	;# 
   395  0004                     	;# 
   396  0005                     	;# 
   397  0006                     	;# 
   398  0007                     	;# 
   399  0008                     	;# 
   400  0009                     	;# 
   401  000A                     	;# 
   402  000B                     	;# 
   403  000C                     	;# 
   404  000D                     	;# 
   405  000E                     	;# 
   406  000E                     	;# 
   407  000F                     	;# 
   408  0010                     	;# 
   409  0011                     	;# 
   410  0012                     	;# 
   411  0013                     	;# 
   412  0014                     	;# 
   413  0015                     	;# 
   414  0015                     	;# 
   415  0016                     	;# 
   416  0017                     	;# 
   417  0018                     	;# 
   418  0019                     	;# 
   419  001A                     	;# 
   420  001B                     	;# 
   421  001B                     	;# 
   422  001C                     	;# 
   423  001D                     	;# 
   424  001E                     	;# 
   425  001F                     	;# 
   426  0081                     	;# 
   427  0085                     	;# 
   428  0086                     	;# 
   429  0087                     	;# 
   430  0088                     	;# 
   431  0089                     	;# 
   432  008C                     	;# 
   433  008D                     	;# 
   434  008E                     	;# 
   435  008F                     	;# 
   436  0090                     	;# 
   437  0091                     	;# 
   438  0092                     	;# 
   439  0093                     	;# 
   440  0093                     	;# 
   441  0093                     	;# 
   442  0094                     	;# 
   443  0095                     	;# 
   444  0096                     	;# 
   445  0097                     	;# 
   446  0098                     	;# 
   447  0099                     	;# 
   448  009A                     	;# 
   449  009B                     	;# 
   450  009C                     	;# 
   451  009D                     	;# 
   452  009E                     	;# 
   453  009F                     	;# 
   454  0105                     	;# 
   455  0107                     	;# 
   456  0108                     	;# 
   457  0109                     	;# 
   458  010C                     	;# 
   459  010C                     	;# 
   460  010D                     	;# 
   461  010E                     	;# 
   462  010F                     	;# 
   463  0185                     	;# 
   464  0187                     	;# 
   465  0188                     	;# 
   466  0189                     	;# 
   467  018C                     	;# 
   468  018D                     	;# 
   469  0013                     _SSPBUF	set	19
   470  0014                     _SSPCONbits	set	20
   471  0009                     _PORTEbits	set	9
   472  0018                     _RCSTAbits	set	24
   473  000C                     _PIR1bits	set	12
   474  0019                     _TXREG	set	25
   475  0009                     _PORTE	set	9
   476  0008                     _PORTD	set	8
   477  0007                     _PORTC	set	7
   478  0006                     _PORTB	set	6
   479  0005                     _PORTA	set	5
   480  0001                     _TMR0	set	1
   481  0007                     _PORTCbits	set	7
   482  000B                     _INTCONbits	set	11
   483  0085                     _TRISAbits	set	133
   484  0094                     _SSPSTATbits	set	148
   485  008C                     _PIE1bits	set	140
   486  0098                     _TXSTAbits	set	152
   487  0099                     _SPBRG	set	153
   488  0081                     _OPTION_REGbits	set	129
   489  008F                     _OSCCONbits	set	143
   490  0096                     _IOCB	set	150
   491  0089                     _TRISE	set	137
   492  0088                     _TRISD	set	136
   493  0087                     _TRISCbits	set	135
   494  0087                     _TRISC	set	135
   495  0086                     _TRISB	set	134
   496  0085                     _TRISA	set	133
   497  0189                     _ANSELH	set	393
   498  0188                     _ANSEL	set	392
   499                           
   500                           	psect	strings
   501  060F                     __pstrings:
   502  060F                     stringtab:
   503  060F                     __stringtab:
   504  060F                     stringcode:	
   505                           ;	String table - string pointers are 1 byte each
   506                           
   507  060F                     stringdir:
   508  060F  3006               	movlw	high stringdir
   509  0610  008A               	movwf	10
   510  0611  0804               	movf	4,w
   511  0612  0A84               	incf	4,f
   512  0613  0782               	addwf	2,f
   513  0614                     __stringbase:
   514  0614  3400               	retlw	0
   515  0615                     __end_of__stringtab:
   516  0615                     STR_1:
   517  0615  3441               	retlw	65	;'A'
   518  0616  3444               	retlw	68	;'D'
   519  0617  3443               	retlw	67	;'C'
   520  0618  343A               	retlw	58	;':'
   521  0619  3420               	retlw	32	;' '
   522  061A  3420               	retlw	32	;' '
   523  061B  3442               	retlw	66	;'B'
   524  061C  3454               	retlw	84	;'T'
   525  061D  344E               	retlw	78	;'N'
   526  061E  343A               	retlw	58	;':'
   527  061F  3420               	retlw	32	;' '
   528  0620  3454               	retlw	84	;'T'
   529  0621  3445               	retlw	69	;'E'
   530  0622  344D               	retlw	77	;'M'
   531  0623  3450               	retlw	80	;'P'
   532  0624  343A               	retlw	58	;':'
   533  0625  3400               	retlw	0
   534                           
   535                           	psect	cinit
   536  000F                     start_initialization:	
   537                           ; #config settings
   538                           
   539  000F                     __initialization:
   540                           
   541                           ; Clear objects allocated to COMMON
   542  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   543  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   544  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   545  0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   546  0013  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   547                           
   548                           ; Clear objects allocated to BANK0
   549  0014  1383               	bcf	3,7	;select IRP bank0
   550  0015  3020               	movlw	low __pbssBANK0
   551  0016  0084               	movwf	4
   552  0017  3039               	movlw	low (__pbssBANK0+25)
   553  0018  120A  118A  2660  120A  118A  	fcall	clear_ram0
   554  001D                     end_of_initialization:	
   555                           ;End of C runtime variable initialization code
   556                           
   557  001D                     __end_of__initialization:
   558  001D  0183               	clrf	3
   559  001E  120A  118A  29C6   	ljmp	_main	;jump to C main() function
   560                           
   561                           	psect	bssCOMMON
   562  0070                     __pbssCOMMON:
   563  0070                     _dato_push:
   564  0070                     	ds	1
   565  0071                     _x2:
   566  0071                     	ds	1
   567  0072                     _x1:
   568  0072                     	ds	1
   569  0073                     _unidad:
   570  0073                     	ds	1
   571  0074                     _voltaje:
   572  0074                     	ds	1
   573                           
   574                           	psect	bssBANK0
   575  0020                     __pbssBANK0:
   576  0020                     _dato_semaforo:
   577  0020                     	ds	1
   578  0021                     _dato_push1:
   579  0021                     	ds	1
   580  0022                     _dato_pot:
   581  0022                     	ds	1
   582  0023                     _velocidad3:
   583  0023                     	ds	1
   584  0024                     _velocidad2:
   585  0024                     	ds	1
   586  0025                     _velocidad1:
   587  0025                     	ds	1
   588  0026                     _a:
   589  0026                     	ds	1
   590  0027                     _w2:
   591  0027                     	ds	1
   592  0028                     _w1:
   593  0028                     	ds	1
   594  0029                     _contador:
   595  0029                     	ds	1
   596  002A                     _leer:
   597  002A                     	ds	1
   598  002B                     _y2y:
   599  002B                     	ds	1
   600  002C                     _x2y:
   601  002C                     	ds	1
   602  002D                     _y1y:
   603  002D                     	ds	1
   604  002E                     _x1y:
   605  002E                     	ds	1
   606  002F                     _unidady:
   607  002F                     	ds	1
   608  0030                     _voltajey:
   609  0030                     	ds	1
   610  0031                     _y2z:
   611  0031                     	ds	1
   612  0032                     _x2z:
   613  0032                     	ds	1
   614  0033                     _y1z:
   615  0033                     	ds	1
   616  0034                     _x1z:
   617  0034                     	ds	1
   618  0035                     _unidadz:
   619  0035                     	ds	1
   620  0036                     _voltajez:
   621  0036                     	ds	1
   622  0037                     _y2:
   623  0037                     	ds	1
   624  0038                     _y1:
   625  0038                     	ds	1
   626                           
   627                           	psect	clrtext
   628  0660                     clear_ram0:	
   629                           ;	Called with FSR containing the base address, and
   630                           ;	W with the last address+1
   631                           
   632  0660  0064               	clrwdt	;clear the watchdog before getting into this loop
   633  0661                     clrloop0:
   634  0661  0180               	clrf	0	;clear RAM location pointed to by FSR
   635  0662  0A84               	incf	4,f	;increment pointer
   636  0663  0604               	xorwf	4,w	;XOR with final address
   637  0664  1903               	btfsc	3,2	;have we reached the end yet?
   638  0665  3400               	retlw	0	;all done for this memory range, return
   639  0666  0604               	xorwf	4,w	;XOR again to restore value
   640  0667  2E61               	goto	clrloop0	;do the next byte
   641                           
   642                           	psect	cstackCOMMON
   643  0075                     __pcstackCOMMON:
   644  0075                     ?_SPI_Enviar:
   645  0075                     ?_SPI_Recibir:	
   646                           ; 1 bytes @ 0x0
   647                           
   648  0075                     ?_setup:	
   649                           ; 1 bytes @ 0x0
   650                           
   651  0075                     ?_osc_config:	
   652                           ; 1 bytes @ 0x0
   653                           
   654  0075                     ?_interrup_config:	
   655                           ; 1 bytes @ 0x0
   656                           
   657  0075                     ?_tmr0_config:	
   658                           ; 1 bytes @ 0x0
   659                           
   660  0075                     ?_Lcd_Init:	
   661                           ; 1 bytes @ 0x0
   662                           
   663  0075                     ?_USART_config:	
   664                           ; 1 bytes @ 0x0
   665                           
   666  0075                     ?_SPI_config:	
   667                           ; 1 bytes @ 0x0
   668                           
   669  0075                     ?_lcd:	
   670                           ; 1 bytes @ 0x0
   671                           
   672  0075                     ?_USART_lib_config:	
   673                           ; 1 bytes @ 0x0
   674                           
   675  0075                     ?_Lcd_Write_String:	
   676                           ; 1 bytes @ 0x0
   677                           
   678  0075                     ?_Conversion1:	
   679                           ; 1 bytes @ 0x0
   680                           
   681  0075                     ?_Conversion2:	
   682                           ; 1 bytes @ 0x0
   683                           
   684  0075                     ?_Conversion3:	
   685                           ; 1 bytes @ 0x0
   686                           
   687  0075                     ?_Lcd_Write_Char:	
   688                           ; 1 bytes @ 0x0
   689                           
   690  0075                     ?_virtual_display1:	
   691                           ; 1 bytes @ 0x0
   692                           
   693  0075                     ?_virtual_display2:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0075                     ?_virtual_display3:	
   697                           ; 1 bytes @ 0x0
   698                           
   699  0075                     ?_escribir_char:	
   700                           ; 1 bytes @ 0x0
   701                           
   702  0075                     ?_ISR:	
   703                           ; 1 bytes @ 0x0
   704                           
   705  0075                     ?_main:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  0075                     ?_Lcd_Port:	
   709                           ; 1 bytes @ 0x0
   710                           
   711  0075                     ?_Lcd_Cmd:	
   712                           ; 1 bytes @ 0x0
   713                           
   714  0075                     ?i1_SPI_Enviar:	
   715                           ; 1 bytes @ 0x0
   716                           
   717  0075                     ??i1_SPI_Enviar:	
   718                           ; 1 bytes @ 0x0
   719                           
   720  0075                     ?i1_SPI_Recibir:	
   721                           ; 1 bytes @ 0x0
   722                           
   723  0075                     ??i1_SPI_Recibir:	
   724                           ; 1 bytes @ 0x0
   725                           
   726  0075                     i1SPI_Enviar@valor:	
   727                           ; 1 bytes @ 0x0
   728                           
   729                           
   730                           ; 1 bytes @ 0x0
   731  0075                     	ds	1
   732  0076                     ??_ISR:
   733                           
   734                           ; 1 bytes @ 0x1
   735  0076                     	ds	4
   736                           
   737                           	psect	cstackBANK0
   738  0039                     __pcstackBANK0:
   739  0039                     ??_SPI_Enviar:
   740  0039                     ??_SPI_Recibir:	
   741                           ; 1 bytes @ 0x0
   742                           
   743  0039                     ??_setup:	
   744                           ; 1 bytes @ 0x0
   745                           
   746  0039                     ??_osc_config:	
   747                           ; 1 bytes @ 0x0
   748                           
   749  0039                     ??_interrup_config:	
   750                           ; 1 bytes @ 0x0
   751                           
   752  0039                     ??_tmr0_config:	
   753                           ; 1 bytes @ 0x0
   754                           
   755  0039                     ??_USART_config:	
   756                           ; 1 bytes @ 0x0
   757                           
   758  0039                     ??_USART_lib_config:	
   759                           ; 1 bytes @ 0x0
   760                           
   761  0039                     ?_SPI_Maestro_Init:	
   762                           ; 1 bytes @ 0x0
   763                           
   764  0039                     ??_escribir_char:	
   765                           ; 1 bytes @ 0x0
   766                           
   767  0039                     ??_Lcd_Port:	
   768                           ; 1 bytes @ 0x0
   769                           
   770  0039                     ?___awdiv:	
   771                           ; 1 bytes @ 0x0
   772                           
   773  0039                     ?___awmod:	
   774                           ; 2 bytes @ 0x0
   775                           
   776  0039                     escribir_char@valor:	
   777                           ; 2 bytes @ 0x0
   778                           
   779  0039                     Lcd_Port@a:	
   780                           ; 1 bytes @ 0x0
   781                           
   782  0039                     SPI_Maestro_Init@SCK:	
   783                           ; 1 bytes @ 0x0
   784                           
   785  0039                     SPI_Enviar@valor:	
   786                           ; 1 bytes @ 0x0
   787                           
   788  0039                     ___awdiv@divisor:	
   789                           ; 1 bytes @ 0x0
   790                           
   791  0039                     ___awmod@divisor:	
   792                           ; 2 bytes @ 0x0
   793                           
   794                           
   795                           ; 2 bytes @ 0x0
   796  0039                     	ds	1
   797  003A                     ??_SPI_Maestro_Init:
   798  003A                     ??_Lcd_Write_Char:	
   799                           ; 1 bytes @ 0x1
   800                           
   801  003A                     ??_virtual_display1:	
   802                           ; 1 bytes @ 0x1
   803                           
   804  003A                     ??_virtual_display2:	
   805                           ; 1 bytes @ 0x1
   806                           
   807  003A                     ??_virtual_display3:	
   808                           ; 1 bytes @ 0x1
   809                           
   810  003A                     ??_Lcd_Cmd:	
   811                           ; 1 bytes @ 0x1
   812                           
   813                           
   814                           ; 1 bytes @ 0x1
   815  003A                     	ds	1
   816  003B                     Lcd_Write_Char@a:
   817  003B                     ___awdiv@dividend:	
   818                           ; 1 bytes @ 0x2
   819                           
   820  003B                     ___awmod@dividend:	
   821                           ; 2 bytes @ 0x2
   822                           
   823                           
   824                           ; 2 bytes @ 0x2
   825  003B                     	ds	1
   826  003C                     ??_Lcd_Write_String:
   827  003C                     Lcd_Cmd@a:	
   828                           ; 1 bytes @ 0x3
   829                           
   830  003C                     Lcd_Write_String@a:	
   831                           ; 1 bytes @ 0x3
   832                           
   833  003C                     SPI_Maestro_Init@port_mode:	
   834                           ; 1 bytes @ 0x3
   835                           
   836                           
   837                           ; 1 bytes @ 0x3
   838  003C                     	ds	1
   839  003D                     ??_Lcd_Init:
   840  003D                     ??_SPI_config:	
   841                           ; 1 bytes @ 0x4
   842                           
   843  003D                     ?_Lcd_Set_Cursor:	
   844                           ; 1 bytes @ 0x4
   845                           
   846  003D                     ??___awdiv:	
   847                           ; 1 bytes @ 0x4
   848                           
   849  003D                     ??___awmod:	
   850                           ; 1 bytes @ 0x4
   851                           
   852  003D                     Lcd_Set_Cursor@b:	
   853                           ; 1 bytes @ 0x4
   854                           
   855  003D                     Lcd_Write_String@i:	
   856                           ; 1 bytes @ 0x4
   857                           
   858                           
   859                           ; 2 bytes @ 0x4
   860  003D                     	ds	1
   861  003E                     ??_Lcd_Set_Cursor:
   862  003E                     ___awdiv@counter:	
   863                           ; 1 bytes @ 0x5
   864                           
   865  003E                     ___awmod@counter:	
   866                           ; 1 bytes @ 0x5
   867                           
   868                           
   869                           ; 1 bytes @ 0x5
   870  003E                     	ds	1
   871  003F                     Lcd_Set_Cursor@a:
   872  003F                     ___awdiv@sign:	
   873                           ; 1 bytes @ 0x6
   874                           
   875  003F                     ___awmod@sign:	
   876                           ; 1 bytes @ 0x6
   877                           
   878                           
   879                           ; 1 bytes @ 0x6
   880  003F                     	ds	1
   881  0040                     Lcd_Set_Cursor@temp:
   882  0040                     ___awdiv@quotient:	
   883                           ; 1 bytes @ 0x7
   884                           
   885                           
   886                           ; 2 bytes @ 0x7
   887  0040                     	ds	2
   888  0042                     ??_Conversion1:
   889  0042                     ??_Conversion2:	
   890                           ; 1 bytes @ 0x9
   891                           
   892  0042                     ??_Conversion3:	
   893                           ; 1 bytes @ 0x9
   894                           
   895                           
   896                           ; 1 bytes @ 0x9
   897  0042                     	ds	3
   898  0045                     ??_lcd:
   899                           
   900                           ; 1 bytes @ 0xC
   901  0045                     	ds	1
   902  0046                     ??_main:
   903                           
   904                           ; 1 bytes @ 0xD
   905  0046                     	ds	2
   906                           
   907                           	psect	maintext
   908  01C6                     __pmaintext:	
   909 ;;
   910 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   911 ;;
   912 ;; *************** function _main *****************
   913 ;; Defined at:
   914 ;;		line 130 in file "MAESTRO_SPI.c"
   915 ;; Parameters:    Size  Location     Type
   916 ;;		None
   917 ;; Auto vars:     Size  Location     Type
   918 ;;		None
   919 ;; Return value:  Size  Location     Type
   920 ;;                  1    wreg      void 
   921 ;; Registers used:
   922 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   923 ;; Tracked objects:
   924 ;;		On entry : B00/0
   925 ;;		On exit  : 0/0
   926 ;;		Unchanged: 0/0
   927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   928 ;;      Params:         0       0       0       0       0
   929 ;;      Locals:         0       0       0       0       0
   930 ;;      Temps:          0       2       0       0       0
   931 ;;      Totals:         0       2       0       0       0
   932 ;;Total ram usage:        2 bytes
   933 ;; Hardware stack levels required when called:    6
   934 ;; This function calls:
   935 ;;		_Lcd_Init
   936 ;;		_SPI_Enviar
   937 ;;		_SPI_Recibir
   938 ;;		_SPI_config
   939 ;;		_USART_config
   940 ;;		_interrup_config
   941 ;;		_lcd
   942 ;;		_osc_config
   943 ;;		_setup
   944 ;;		_tmr0_config
   945 ;; This function is called by:
   946 ;;		Startup code after reset
   947 ;; This function uses a non-reentrant model
   948 ;;
   949                           
   950                           
   951                           ;psect for function _main
   952  01C6                     _main:
   953  01C6                     l2119:	
   954                           ;incstack = 0
   955                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   956                           
   957                           
   958                           ;MAESTRO_SPI.c: 132:     TRISA = 0;
   959  01C6  120A  118A  2541  120A  118A  	fcall	_setup
   960                           
   961                           ;MAESTRO_SPI.c: 133:     PORTA = 0;
   962  01CB  120A  118A  264C  120A  118A  	fcall	_osc_config
   963                           
   964                           ;MAESTRO_SPI.c: 134:     ANSELH = 0;
   965  01D0  120A  118A  2640  120A  118A  	fcall	_interrup_config
   966  01D5                     l2121:
   967                           
   968                           ;MAESTRO_SPI.c: 135:     TRISB = 0;
   969  01D5  120A  118A  2626  120A  118A  	fcall	_tmr0_config
   970  01DA                     l2123:
   971                           
   972                           ;MAESTRO_SPI.c: 136:     PORTB = 0;
   973  01DA  120A  118A  23BC  120A  118A  	fcall	_Lcd_Init
   974  01DF                     l2125:
   975                           
   976                           ;MAESTRO_SPI.c: 137:     TRISC = 0;
   977  01DF  120A  118A  2668  120A  118A  	fcall	_USART_config
   978  01E4                     l2127:
   979                           
   980                           ;MAESTRO_SPI.c: 138:     PORTC = 0;
   981  01E4  120A  118A  2633  120A  118A  	fcall	_SPI_config
   982  01E9                     l2129:
   983                           
   984                           ;MAESTRO_SPI.c: 140:     TRISCbits.TRISC4 = 1;;MAESTRO_SPI.c: 141:     PORTCbits.RC0 = 1
      +                          ;
   985  01E9  1283               	bcf	3,5	;RP0=0, select bank0
   986  01EA  1303               	bcf	3,6	;RP1=0, select bank0
   987  01EB  1007               	bcf	7,0	;volatile
   988  01EC                     l2131:
   989                           
   990                           ;MAESTRO_SPI.c: 142:     PORTCbits.RC1 = 1;
   991  01EC  3003               	movlw	3
   992  01ED  1283               	bcf	3,5	;RP0=0, select bank0
   993  01EE  1303               	bcf	3,6	;RP1=0, select bank0
   994  01EF  00C7               	movwf	??_main+1
   995  01F0  3097               	movlw	151
   996  01F1  00C6               	movwf	??_main
   997  01F2                     u907:
   998  01F2  0BC6               	decfsz	??_main,f
   999  01F3  29F2               	goto	u907
  1000  01F4  0BC7               	decfsz	??_main+1,f
  1001  01F5  29F2               	goto	u907
  1002  01F6                     l2133:
  1003                           
  1004                           ;MAESTRO_SPI.c: 144:     TRISD = 0;
  1005  01F6  1283               	bcf	3,5	;RP0=0, select bank0
  1006  01F7  1303               	bcf	3,6	;RP1=0, select bank0
  1007  01F8  0822               	movf	_dato_pot,w
  1008  01F9  120A  118A  266E  120A  118A  	fcall	_SPI_Enviar
  1009  01FE                     l2135:
  1010                           
  1011                           ;MAESTRO_SPI.c: 145:     PORTD = 0;
  1012  01FE  120A  118A  2680  120A  118A  	fcall	_SPI_Recibir
  1013  0203  1283               	bcf	3,5	;RP0=0, select bank0
  1014  0204  1303               	bcf	3,6	;RP1=0, select bank0
  1015  0205  00C6               	movwf	??_main
  1016  0206  0846               	movf	??_main,w
  1017  0207  00A2               	movwf	_dato_pot
  1018  0208                     l2137:
  1019                           
  1020                           ;MAESTRO_SPI.c: 147:     PORTE = 0;
  1021  0208  3003               	movlw	3
  1022  0209  1283               	bcf	3,5	;RP0=0, select bank0
  1023  020A  1303               	bcf	3,6	;RP1=0, select bank0
  1024  020B  00C7               	movwf	??_main+1
  1025  020C  3097               	movlw	151
  1026  020D  00C6               	movwf	??_main
  1027  020E                     u917:
  1028  020E  0BC6               	decfsz	??_main,f
  1029  020F  2A0E               	goto	u917
  1030  0210  0BC7               	decfsz	??_main+1,f
  1031  0211  2A0E               	goto	u917
  1032  0212                     l2139:
  1033                           
  1034                           ;MAESTRO_SPI.c: 148: }
  1035  0212  1283               	bcf	3,5	;RP0=0, select bank0
  1036  0213  1303               	bcf	3,6	;RP1=0, select bank0
  1037  0214  1407               	bsf	7,0	;volatile
  1038  0215                     l2141:
  1039                           
  1040                           ;MAESTRO_SPI.c: 154:     INTCONbits.T0IE = 1;
  1041  0215  120A  118A  24CA  120A  118A  	fcall	_lcd
  1042                           
  1043                           ;MAESTRO_SPI.c: 155:     INTCONbits.INTE = 0;
  1044  021A  1283               	bcf	3,5	;RP0=0, select bank0
  1045  021B  1303               	bcf	3,6	;RP1=0, select bank0
  1046  021C  0825               	movf	_velocidad1,w
  1047  021D  3E01               	addlw	1
  1048  021E  00C6               	movwf	??_main
  1049  021F  0846               	movf	??_main,w
  1050  0220  00A5               	movwf	_velocidad1
  1051                           
  1052                           ;MAESTRO_SPI.c: 156:     INTCONbits.RBIE = 0;
  1053  0221  0824               	movf	_velocidad2,w
  1054  0222  3E01               	addlw	1
  1055  0223  00C6               	movwf	??_main
  1056  0224  0846               	movf	??_main,w
  1057  0225  00A4               	movwf	_velocidad2
  1058                           
  1059                           ;MAESTRO_SPI.c: 157:     INTCONbits.T0IF = 0;
  1060  0226  0823               	movf	_velocidad3,w
  1061  0227  3E01               	addlw	1
  1062  0228  00C6               	movwf	??_main
  1063  0229  0846               	movf	??_main,w
  1064  022A  00A3               	movwf	_velocidad3
  1065  022B  29E9               	goto	l2129
  1066  022C  120A  118A  280C   	ljmp	start
  1067  022F                     __end_of_main:
  1068                           
  1069                           	psect	text1
  1070  0626                     __ptext1:	
  1071 ;; *************** function _tmr0_config *****************
  1072 ;; Defined at:
  1073 ;;		line 212 in file "MAESTRO_SPI.c"
  1074 ;; Parameters:    Size  Location     Type
  1075 ;;		None
  1076 ;; Auto vars:     Size  Location     Type
  1077 ;;		None
  1078 ;; Return value:  Size  Location     Type
  1079 ;;                  1    wreg      void 
  1080 ;; Registers used:
  1081 ;;		wreg
  1082 ;; Tracked objects:
  1083 ;;		On entry : 0/0
  1084 ;;		On exit  : 0/0
  1085 ;;		Unchanged: 0/0
  1086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1087 ;;      Params:         0       0       0       0       0
  1088 ;;      Locals:         0       0       0       0       0
  1089 ;;      Temps:          0       0       0       0       0
  1090 ;;      Totals:         0       0       0       0       0
  1091 ;;Total ram usage:        0 bytes
  1092 ;; Hardware stack levels used:    1
  1093 ;; Hardware stack levels required when called:    2
  1094 ;; This function calls:
  1095 ;;		Nothing
  1096 ;; This function is called by:
  1097 ;;		_main
  1098 ;; This function uses a non-reentrant model
  1099 ;;
  1100                           
  1101                           
  1102                           ;psect for function _tmr0_config
  1103  0626                     _tmr0_config:
  1104  0626                     l2073:	
  1105                           ;incstack = 0
  1106                           ; Regs used in _tmr0_config: [wreg]
  1107                           
  1108                           
  1109                           ;MAESTRO_SPI.c: 214: }
  1110  0626  1683               	bsf	3,5	;RP0=1, select bank1
  1111  0627  1303               	bcf	3,6	;RP1=0, select bank1
  1112  0628  1381               	bcf	1,7	;volatile
  1113                           
  1114                           ;MAESTRO_SPI.c: 215: 
  1115  0629  1281               	bcf	1,5	;volatile
  1116                           
  1117                           ;MAESTRO_SPI.c: 216: void Conversion1 ()
  1118  062A  1181               	bcf	1,3	;volatile
  1119                           
  1120                           ;MAESTRO_SPI.c: 217: {
  1121  062B  1101               	bcf	1,2	;volatile
  1122                           
  1123                           ;MAESTRO_SPI.c: 218:     voltaje = dato_pot * 2;
  1124  062C  1481               	bsf	1,1	;volatile
  1125                           
  1126                           ;MAESTRO_SPI.c: 219:     unidad = voltaje / 100;
  1127  062D  1001               	bcf	1,0	;volatile
  1128  062E                     l2075:
  1129                           
  1130                           ;MAESTRO_SPI.c: 220:     x1 = voltaje % 100;
  1131  062E  3064               	movlw	100
  1132  062F  1283               	bcf	3,5	;RP0=0, select bank0
  1133  0630  1303               	bcf	3,6	;RP1=0, select bank0
  1134  0631  0081               	movwf	1	;volatile
  1135  0632                     l174:
  1136  0632  0008               	return
  1137  0633                     __end_of_tmr0_config:
  1138                           
  1139                           	psect	text2
  1140  0541                     __ptext2:	
  1141 ;; *************** function _setup *****************
  1142 ;; Defined at:
  1143 ;;		line 167 in file "MAESTRO_SPI.c"
  1144 ;; Parameters:    Size  Location     Type
  1145 ;;		None
  1146 ;; Auto vars:     Size  Location     Type
  1147 ;;		None
  1148 ;; Return value:  Size  Location     Type
  1149 ;;                  1    wreg      void 
  1150 ;; Registers used:
  1151 ;;		status,2
  1152 ;; Tracked objects:
  1153 ;;		On entry : 0/0
  1154 ;;		On exit  : 0/0
  1155 ;;		Unchanged: 0/0
  1156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1157 ;;      Params:         0       0       0       0       0
  1158 ;;      Locals:         0       0       0       0       0
  1159 ;;      Temps:          0       0       0       0       0
  1160 ;;      Totals:         0       0       0       0       0
  1161 ;;Total ram usage:        0 bytes
  1162 ;; Hardware stack levels used:    1
  1163 ;; Hardware stack levels required when called:    2
  1164 ;; This function calls:
  1165 ;;		Nothing
  1166 ;; This function is called by:
  1167 ;;		_main
  1168 ;; This function uses a non-reentrant model
  1169 ;;
  1170                           
  1171                           
  1172                           ;psect for function _setup
  1173  0541                     _setup:
  1174  0541                     l2055:	
  1175                           ;incstack = 0
  1176                           ; Regs used in _setup: [status,2]
  1177                           
  1178                           
  1179                           ;MAESTRO_SPI.c: 169:     OSCCONbits.HTS = 0;
  1180  0541  1683               	bsf	3,5	;RP0=1, select bank3
  1181  0542  1703               	bsf	3,6	;RP1=1, select bank3
  1182  0543  0188               	clrf	8	;volatile
  1183                           
  1184                           ;MAESTRO_SPI.c: 170:     OSCCONbits.LTS = 1;
  1185  0544  1683               	bsf	3,5	;RP0=1, select bank1
  1186  0545  1303               	bcf	3,6	;RP1=0, select bank1
  1187  0546  0185               	clrf	5	;volatile
  1188                           
  1189                           ;MAESTRO_SPI.c: 171:     OSCCONbits.SCS = 0;
  1190  0547  1283               	bcf	3,5	;RP0=0, select bank0
  1191  0548  1303               	bcf	3,6	;RP1=0, select bank0
  1192  0549  0185               	clrf	5	;volatile
  1193                           
  1194                           ;MAESTRO_SPI.c: 172: }
  1195  054A  1683               	bsf	3,5	;RP0=1, select bank3
  1196  054B  1703               	bsf	3,6	;RP1=1, select bank3
  1197  054C  0189               	clrf	9	;volatile
  1198                           
  1199                           ;MAESTRO_SPI.c: 173: 
  1200  054D  1683               	bsf	3,5	;RP0=1, select bank1
  1201  054E  1303               	bcf	3,6	;RP1=0, select bank1
  1202  054F  0186               	clrf	6	;volatile
  1203                           
  1204                           ;MAESTRO_SPI.c: 174: void tmr0_config (void)
  1205  0550  1283               	bcf	3,5	;RP0=0, select bank0
  1206  0551  1303               	bcf	3,6	;RP1=0, select bank0
  1207  0552  0186               	clrf	6	;volatile
  1208                           
  1209                           ;MAESTRO_SPI.c: 175: {
  1210  0553  1683               	bsf	3,5	;RP0=1, select bank1
  1211  0554  1303               	bcf	3,6	;RP1=0, select bank1
  1212  0555  0187               	clrf	7	;volatile
  1213                           
  1214                           ;MAESTRO_SPI.c: 176:     OPTION_REGbits.nRBPU = 0;
  1215  0556  1283               	bcf	3,5	;RP0=0, select bank0
  1216  0557  1303               	bcf	3,6	;RP1=0, select bank0
  1217  0558  0187               	clrf	7	;volatile
  1218  0559                     l2057:
  1219                           
  1220                           ;MAESTRO_SPI.c: 177:     OPTION_REGbits.T0CS = 0;
  1221  0559  1683               	bsf	3,5	;RP0=1, select bank1
  1222  055A  1303               	bcf	3,6	;RP1=0, select bank1
  1223  055B  1307               	bcf	7,6	;volatile
  1224  055C                     l2059:
  1225                           
  1226                           ;MAESTRO_SPI.c: 178:     OPTION_REGbits.PSA = 0;
  1227  055C  1607               	bsf	7,4	;volatile
  1228  055D                     l2061:
  1229                           
  1230                           ;MAESTRO_SPI.c: 179:     OPTION_REGbits.PS2 = 0;
  1231  055D  1283               	bcf	3,5	;RP0=0, select bank0
  1232  055E  1303               	bcf	3,6	;RP1=0, select bank0
  1233  055F  1407               	bsf	7,0	;volatile
  1234  0560                     l2063:
  1235                           
  1236                           ;MAESTRO_SPI.c: 180:     OPTION_REGbits.PS1 = 1;
  1237  0560  1487               	bsf	7,1	;volatile
  1238  0561                     l2065:
  1239                           
  1240                           ;MAESTRO_SPI.c: 181:     OPTION_REGbits.PS0 = 0;
  1241  0561  1507               	bsf	7,2	;volatile
  1242                           
  1243                           ;MAESTRO_SPI.c: 182:     TMR0 = 100;
  1244  0562  1683               	bsf	3,5	;RP0=1, select bank1
  1245  0563  1303               	bcf	3,6	;RP1=0, select bank1
  1246  0564  0188               	clrf	8	;volatile
  1247                           
  1248                           ;MAESTRO_SPI.c: 183: }
  1249  0565  1283               	bcf	3,5	;RP0=0, select bank0
  1250  0566  1303               	bcf	3,6	;RP1=0, select bank0
  1251  0567  0188               	clrf	8	;volatile
  1252                           
  1253                           ;MAESTRO_SPI.c: 184: 
  1254  0568  1683               	bsf	3,5	;RP0=1, select bank1
  1255  0569  1303               	bcf	3,6	;RP1=0, select bank1
  1256  056A  0189               	clrf	9	;volatile
  1257                           
  1258                           ;MAESTRO_SPI.c: 185: 
  1259  056B  1283               	bcf	3,5	;RP0=0, select bank0
  1260  056C  1303               	bcf	3,6	;RP1=0, select bank0
  1261  056D  0189               	clrf	9	;volatile
  1262  056E                     l165:
  1263  056E  0008               	return
  1264  056F                     __end_of_setup:
  1265                           
  1266                           	psect	text3
  1267  064C                     __ptext3:	
  1268 ;; *************** function _osc_config *****************
  1269 ;; Defined at:
  1270 ;;		line 201 in file "MAESTRO_SPI.c"
  1271 ;; Parameters:    Size  Location     Type
  1272 ;;		None
  1273 ;; Auto vars:     Size  Location     Type
  1274 ;;		None
  1275 ;; Return value:  Size  Location     Type
  1276 ;;                  1    wreg      void 
  1277 ;; Registers used:
  1278 ;;		None
  1279 ;; Tracked objects:
  1280 ;;		On entry : 0/0
  1281 ;;		On exit  : 0/0
  1282 ;;		Unchanged: 0/0
  1283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1284 ;;      Params:         0       0       0       0       0
  1285 ;;      Locals:         0       0       0       0       0
  1286 ;;      Temps:          0       0       0       0       0
  1287 ;;      Totals:         0       0       0       0       0
  1288 ;;Total ram usage:        0 bytes
  1289 ;; Hardware stack levels used:    1
  1290 ;; Hardware stack levels required when called:    2
  1291 ;; This function calls:
  1292 ;;		Nothing
  1293 ;; This function is called by:
  1294 ;;		_main
  1295 ;; This function uses a non-reentrant model
  1296 ;;
  1297                           
  1298                           
  1299                           ;psect for function _osc_config
  1300  064C                     _osc_config:
  1301  064C                     l2067:	
  1302                           ;incstack = 0
  1303                           ; Regs used in _osc_config: []
  1304                           
  1305                           
  1306                           ;MAESTRO_SPI.c: 203: void lcd (void)
  1307  064C  1683               	bsf	3,5	;RP0=1, select bank1
  1308  064D  1303               	bcf	3,6	;RP1=0, select bank1
  1309  064E  170F               	bsf	15,6	;volatile
  1310                           
  1311                           ;MAESTRO_SPI.c: 204: {
  1312  064F  168F               	bsf	15,5	;volatile
  1313                           
  1314                           ;MAESTRO_SPI.c: 205:     Lcd_Set_Cursor(0,1);
  1315  0650  120F               	bcf	15,4	;volatile
  1316                           
  1317                           ;MAESTRO_SPI.c: 206:     Lcd_Write_String("ADC:  BTN: TEMP:");
  1318  0651  118F               	bcf	15,3	;volatile
  1319                           
  1320                           ;MAESTRO_SPI.c: 207:     Lcd_Set_Cursor(2,0);
  1321  0652  110F               	bcf	15,2	;volatile
  1322                           
  1323                           ;MAESTRO_SPI.c: 208:     Conversion1 ();
  1324  0653  148F               	bsf	15,1	;volatile
  1325                           
  1326                           ;MAESTRO_SPI.c: 209:     Lcd_Set_Cursor(2,7);
  1327  0654  100F               	bcf	15,0	;volatile
  1328  0655                     l171:
  1329  0655  0008               	return
  1330  0656                     __end_of_osc_config:
  1331                           
  1332                           	psect	text4
  1333  04CA                     __ptext4:	
  1334 ;; *************** function _lcd *****************
  1335 ;; Defined at:
  1336 ;;		line 241 in file "MAESTRO_SPI.c"
  1337 ;; Parameters:    Size  Location     Type
  1338 ;;		None
  1339 ;; Auto vars:     Size  Location     Type
  1340 ;;		None
  1341 ;; Return value:  Size  Location     Type
  1342 ;;                  1    wreg      void 
  1343 ;; Registers used:
  1344 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1345 ;; Tracked objects:
  1346 ;;		On entry : 0/0
  1347 ;;		On exit  : 0/0
  1348 ;;		Unchanged: 0/0
  1349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1350 ;;      Params:         0       0       0       0       0
  1351 ;;      Locals:         0       0       0       0       0
  1352 ;;      Temps:          0       1       0       0       0
  1353 ;;      Totals:         0       1       0       0       0
  1354 ;;Total ram usage:        1 bytes
  1355 ;; Hardware stack levels used:    1
  1356 ;; Hardware stack levels required when called:    5
  1357 ;; This function calls:
  1358 ;;		_Conversion1
  1359 ;;		_Conversion2
  1360 ;;		_Conversion3
  1361 ;;		_Lcd_Set_Cursor
  1362 ;;		_Lcd_Write_String
  1363 ;; This function is called by:
  1364 ;;		_main
  1365 ;; This function uses a non-reentrant model
  1366 ;;
  1367                           
  1368                           
  1369                           ;psect for function _lcd
  1370  04CA                     _lcd:
  1371  04CA                     l2103:	
  1372                           ;incstack = 0
  1373                           ; Regs used in _lcd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1374                           
  1375                           
  1376                           ;MAESTRO_SPI.c: 243:         w2 = dato_push % 10;
  1377  04CA  1283               	bcf	3,5	;RP0=0, select bank0
  1378  04CB  1303               	bcf	3,6	;RP1=0, select bank0
  1379  04CC  01BD               	clrf	Lcd_Set_Cursor@b
  1380  04CD  0ABD               	incf	Lcd_Set_Cursor@b,f
  1381  04CE  3000               	movlw	0
  1382  04CF  120A  118A  2598  120A  118A  	fcall	_Lcd_Set_Cursor
  1383  04D4                     l2105:
  1384                           
  1385                           ;MAESTRO_SPI.c: 244:         Lcd_Write_Char(w1+48);
  1386  04D4  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1387  04D5  120A  118A  256F  120A  118A  	fcall	_Lcd_Write_String
  1388  04DA                     l2107:
  1389                           
  1390                           ;MAESTRO_SPI.c: 245:         Lcd_Write_Char(w2+48);
  1391  04DA  1283               	bcf	3,5	;RP0=0, select bank0
  1392  04DB  1303               	bcf	3,6	;RP1=0, select bank0
  1393  04DC  01BD               	clrf	Lcd_Set_Cursor@b
  1394  04DD  3002               	movlw	2
  1395  04DE  120A  118A  2598  120A  118A  	fcall	_Lcd_Set_Cursor
  1396  04E3                     l2109:
  1397                           
  1398                           ;MAESTRO_SPI.c: 246:         virtual_display2();
  1399  04E3  120A  118A  20C0  120A  118A  	fcall	_Conversion1
  1400  04E8                     l2111:
  1401                           
  1402                           ;MAESTRO_SPI.c: 247:     }
  1403  04E8  3007               	movlw	7
  1404  04E9  1283               	bcf	3,5	;RP0=0, select bank0
  1405  04EA  1303               	bcf	3,6	;RP1=0, select bank0
  1406  04EB  00C5               	movwf	??_lcd
  1407  04EC  0845               	movf	??_lcd,w
  1408  04ED  00BD               	movwf	Lcd_Set_Cursor@b
  1409  04EE  3002               	movlw	2
  1410  04EF  120A  118A  2598  120A  118A  	fcall	_Lcd_Set_Cursor
  1411  04F4                     l2113:
  1412                           
  1413                           ;MAESTRO_SPI.c: 248: }
  1414  04F4  120A  118A  2298  120A  118A  	fcall	_Conversion2
  1415  04F9                     l2115:
  1416                           
  1417                           ;MAESTRO_SPI.c: 249: 
  1418  04F9  300C               	movlw	12
  1419  04FA  1283               	bcf	3,5	;RP0=0, select bank0
  1420  04FB  1303               	bcf	3,6	;RP1=0, select bank0
  1421  04FC  00C5               	movwf	??_lcd
  1422  04FD  0845               	movf	??_lcd,w
  1423  04FE  00BD               	movwf	Lcd_Set_Cursor@b
  1424  04FF  3002               	movlw	2
  1425  0500  120A  118A  2598  120A  118A  	fcall	_Lcd_Set_Cursor
  1426  0505                     l2117:
  1427                           
  1428                           ;MAESTRO_SPI.c: 250: void Conversion3 ()
  1429  0505  120A  118A  22FB  120A  118A  	fcall	_Conversion3
  1430  050A                     l183:
  1431  050A  0008               	return
  1432  050B                     __end_of_lcd:
  1433                           
  1434                           	psect	text5
  1435  056F                     __ptext5:	
  1436 ;; *************** function _Lcd_Write_String *****************
  1437 ;; Defined at:
  1438 ;;		line 78 in file "LCD_SPI.c"
  1439 ;; Parameters:    Size  Location     Type
  1440 ;;  a               1    wreg     PTR unsigned char 
  1441 ;;		 -> STR_1(17), 
  1442 ;; Auto vars:     Size  Location     Type
  1443 ;;  a               1    3[BANK0 ] PTR unsigned char 
  1444 ;;		 -> STR_1(17), 
  1445 ;;  i               2    4[BANK0 ] int 
  1446 ;; Return value:  Size  Location     Type
  1447 ;;                  1    wreg      void 
  1448 ;; Registers used:
  1449 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1450 ;; Tracked objects:
  1451 ;;		On entry : 0/0
  1452 ;;		On exit  : 0/0
  1453 ;;		Unchanged: 0/0
  1454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1455 ;;      Params:         0       0       0       0       0
  1456 ;;      Locals:         0       3       0       0       0
  1457 ;;      Temps:          0       0       0       0       0
  1458 ;;      Totals:         0       3       0       0       0
  1459 ;;Total ram usage:        3 bytes
  1460 ;; Hardware stack levels used:    1
  1461 ;; Hardware stack levels required when called:    4
  1462 ;; This function calls:
  1463 ;;		_Lcd_Write_Char
  1464 ;; This function is called by:
  1465 ;;		_lcd
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469                           
  1470                           ;psect for function _Lcd_Write_String
  1471  056F                     _Lcd_Write_String:
  1472                           
  1473                           ;incstack = 0
  1474                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1475                           ;Lcd_Write_String@a stored from wreg
  1476  056F  1283               	bcf	3,5	;RP0=0, select bank0
  1477  0570  1303               	bcf	3,6	;RP1=0, select bank0
  1478  0571  00BC               	movwf	Lcd_Write_String@a
  1479  0572                     l1985:
  1480                           
  1481                           ;LCD_SPI.c: 78: void Lcd_Write_String(char *a);LCD_SPI.c: 79: {;LCD_SPI.c: 80:     int i
      +                          ;;LCD_SPI.c: 81:     for (i = 0; a[i] != '\0'; i++)
  1482  0572  01BD               	clrf	Lcd_Write_String@i
  1483  0573  01BE               	clrf	Lcd_Write_String@i+1
  1484  0574  2D8A               	goto	l1991
  1485  0575                     l1987:
  1486                           
  1487                           ;LCD_SPI.c: 82:         Lcd_Write_Char(a[i]);
  1488  0575  083D               	movf	Lcd_Write_String@i,w
  1489  0576  073C               	addwf	Lcd_Write_String@a,w
  1490  0577  0084               	movwf	4
  1491  0578  120A  118A  260F  120A  118A  	fcall	stringdir
  1492  057D  120A  118A  25F7  120A  118A  	fcall	_Lcd_Write_Char
  1493  0582                     l1989:
  1494  0582  3001               	movlw	1
  1495  0583  1283               	bcf	3,5	;RP0=0, select bank0
  1496  0584  1303               	bcf	3,6	;RP1=0, select bank0
  1497  0585  07BD               	addwf	Lcd_Write_String@i,f
  1498  0586  1803               	skipnc
  1499  0587  0ABE               	incf	Lcd_Write_String@i+1,f
  1500  0588  3000               	movlw	0
  1501  0589  07BE               	addwf	Lcd_Write_String@i+1,f
  1502  058A                     l1991:
  1503  058A  083D               	movf	Lcd_Write_String@i,w
  1504  058B  073C               	addwf	Lcd_Write_String@a,w
  1505  058C  0084               	movwf	4
  1506  058D  120A  118A  260F  120A  118A  	fcall	stringdir
  1507  0592  3A00               	xorlw	0
  1508  0593  1D03               	skipz
  1509  0594  2D96               	goto	u871
  1510  0595  2D97               	goto	u870
  1511  0596                     u871:
  1512  0596  2D75               	goto	l1987
  1513  0597                     u870:
  1514  0597                     l260:
  1515  0597  0008               	return
  1516  0598                     __end_of_Lcd_Write_String:
  1517                           
  1518                           	psect	text6
  1519  0598                     __ptext6:	
  1520 ;; *************** function _Lcd_Set_Cursor *****************
  1521 ;; Defined at:
  1522 ;;		line 63 in file "LCD_SPI.c"
  1523 ;; Parameters:    Size  Location     Type
  1524 ;;  a               1    wreg     unsigned char 
  1525 ;;  b               1    4[BANK0 ] unsigned char 
  1526 ;; Auto vars:     Size  Location     Type
  1527 ;;  a               1    6[BANK0 ] unsigned char 
  1528 ;;  temp            1    7[BANK0 ] unsigned char 
  1529 ;; Return value:  Size  Location     Type
  1530 ;;                  1    wreg      void 
  1531 ;; Registers used:
  1532 ;;		wreg, status,2, status,0, pclath, cstack
  1533 ;; Tracked objects:
  1534 ;;		On entry : 0/0
  1535 ;;		On exit  : 0/0
  1536 ;;		Unchanged: 0/0
  1537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1538 ;;      Params:         0       1       0       0       0
  1539 ;;      Locals:         0       2       0       0       0
  1540 ;;      Temps:          0       1       0       0       0
  1541 ;;      Totals:         0       4       0       0       0
  1542 ;;Total ram usage:        4 bytes
  1543 ;; Hardware stack levels used:    1
  1544 ;; Hardware stack levels required when called:    4
  1545 ;; This function calls:
  1546 ;;		_Lcd_Cmd
  1547 ;; This function is called by:
  1548 ;;		_lcd
  1549 ;; This function uses a non-reentrant model
  1550 ;;
  1551                           
  1552                           
  1553                           ;psect for function _Lcd_Set_Cursor
  1554  0598                     _Lcd_Set_Cursor:
  1555                           
  1556                           ;incstack = 0
  1557                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1558                           ;Lcd_Set_Cursor@a stored from wreg
  1559  0598  1283               	bcf	3,5	;RP0=0, select bank0
  1560  0599  1303               	bcf	3,6	;RP1=0, select bank0
  1561  059A  00BF               	movwf	Lcd_Set_Cursor@a
  1562  059B                     l1973:
  1563                           
  1564                           ;LCD_SPI.c: 63: void Lcd_Set_Cursor(char a, char b);LCD_SPI.c: 64: {;LCD_SPI.c: 65:     
      +                          char temp;;LCD_SPI.c: 66:     if (a == 1)
  1565  059B  033F               	decf	Lcd_Set_Cursor@a,w
  1566  059C  1D03               	btfss	3,2
  1567  059D  2D9F               	goto	u851
  1568  059E  2DA0               	goto	u850
  1569  059F                     u851:
  1570  059F  2DAC               	goto	l1979
  1571  05A0                     u850:
  1572  05A0                     l1975:
  1573                           
  1574                           ;LCD_SPI.c: 67:     {;LCD_SPI.c: 68:         temp = 0x80 + b;
  1575  05A0  083D               	movf	Lcd_Set_Cursor@b,w
  1576  05A1  3E80               	addlw	128
  1577  05A2  00BE               	movwf	??_Lcd_Set_Cursor
  1578  05A3  083E               	movf	??_Lcd_Set_Cursor,w
  1579  05A4  00C0               	movwf	Lcd_Set_Cursor@temp
  1580  05A5                     l1977:
  1581                           
  1582                           ;LCD_SPI.c: 69:         Lcd_Cmd(temp);
  1583  05A5  0840               	movf	Lcd_Set_Cursor@temp,w
  1584  05A6  120A  118A  25DC  120A  118A  	fcall	_Lcd_Cmd
  1585                           
  1586                           ;LCD_SPI.c: 70:     }
  1587  05AB  2DBD               	goto	l254
  1588  05AC                     l1979:
  1589  05AC  3002               	movlw	2
  1590  05AD  063F               	xorwf	Lcd_Set_Cursor@a,w
  1591  05AE  1D03               	btfss	3,2
  1592  05AF  2DB1               	goto	u861
  1593  05B0  2DB2               	goto	u860
  1594  05B1                     u861:
  1595  05B1  2DBD               	goto	l254
  1596  05B2                     u860:
  1597  05B2                     l1981:
  1598                           
  1599                           ;LCD_SPI.c: 72:     {;LCD_SPI.c: 73:         temp = 0xC0 + b;
  1600  05B2  083D               	movf	Lcd_Set_Cursor@b,w
  1601  05B3  3EC0               	addlw	192
  1602  05B4  00BE               	movwf	??_Lcd_Set_Cursor
  1603  05B5  083E               	movf	??_Lcd_Set_Cursor,w
  1604  05B6  00C0               	movwf	Lcd_Set_Cursor@temp
  1605  05B7                     l1983:
  1606                           
  1607                           ;LCD_SPI.c: 74:         Lcd_Cmd(temp);
  1608  05B7  0840               	movf	Lcd_Set_Cursor@temp,w
  1609  05B8  120A  118A  25DC  120A  118A  	fcall	_Lcd_Cmd
  1610  05BD                     l254:
  1611  05BD  0008               	return
  1612  05BE                     __end_of_Lcd_Set_Cursor:
  1613                           
  1614                           	psect	text7
  1615  02FB                     __ptext7:	
  1616 ;; *************** function _Conversion3 *****************
  1617 ;; Defined at:
  1618 ;;		line 288 in file "MAESTRO_SPI.c"
  1619 ;; Parameters:    Size  Location     Type
  1620 ;;		None
  1621 ;; Auto vars:     Size  Location     Type
  1622 ;;		None
  1623 ;; Return value:  Size  Location     Type
  1624 ;;                  1    wreg      void 
  1625 ;; Registers used:
  1626 ;;		wreg, status,2, status,0, pclath, cstack
  1627 ;; Tracked objects:
  1628 ;;		On entry : 0/0
  1629 ;;		On exit  : 0/0
  1630 ;;		Unchanged: 0/0
  1631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1632 ;;      Params:         0       0       0       0       0
  1633 ;;      Locals:         0       0       0       0       0
  1634 ;;      Temps:          0       3       0       0       0
  1635 ;;      Totals:         0       3       0       0       0
  1636 ;;Total ram usage:        3 bytes
  1637 ;; Hardware stack levels used:    1
  1638 ;; Hardware stack levels required when called:    4
  1639 ;; This function calls:
  1640 ;;		_Lcd_Write_Char
  1641 ;;		___awdiv
  1642 ;;		___awmod
  1643 ;;		_virtual_display3
  1644 ;; This function is called by:
  1645 ;;		_lcd
  1646 ;; This function uses a non-reentrant model
  1647 ;;
  1648                           
  1649                           
  1650                           ;psect for function _Conversion3
  1651  02FB                     _Conversion3:
  1652  02FB                     l2025:	
  1653                           ;incstack = 0
  1654                           ; Regs used in _Conversion3: [wreg+status,2+status,0+pclath+cstack]
  1655                           
  1656                           
  1657                           ;MAESTRO_SPI.c: 290:     {
  1658  02FB  1283               	bcf	3,5	;RP0=0, select bank0
  1659  02FC  1303               	bcf	3,6	;RP1=0, select bank0
  1660  02FD  0822               	movf	_dato_pot,w
  1661  02FE  00C2               	movwf	??_Conversion3
  1662  02FF  0742               	addwf	??_Conversion3,w
  1663  0300  00C3               	movwf	??_Conversion3+1
  1664  0301  0843               	movf	??_Conversion3+1,w
  1665  0302  00B0               	movwf	_voltajey
  1666  0303                     l2027:
  1667                           
  1668                           ;MAESTRO_SPI.c: 291:         if (dato_push < 10)
  1669  0303  3064               	movlw	100
  1670  0304  00B9               	movwf	___awdiv@divisor
  1671  0305  3000               	movlw	0
  1672  0306  00BA               	movwf	___awdiv@divisor+1
  1673  0307  0830               	movf	_voltajey,w
  1674  0308  00C2               	movwf	??_Conversion3
  1675  0309  01C3               	clrf	??_Conversion3+1
  1676  030A  0842               	movf	??_Conversion3,w
  1677  030B  00BB               	movwf	___awdiv@dividend
  1678  030C  0843               	movf	??_Conversion3+1,w
  1679  030D  00BC               	movwf	___awdiv@dividend+1
  1680  030E  120A  118A  222F  120A  118A  	fcall	___awdiv
  1681  0313  1283               	bcf	3,5	;RP0=0, select bank0
  1682  0314  1303               	bcf	3,6	;RP1=0, select bank0
  1683  0315  0839               	movf	?___awdiv,w
  1684  0316  00C4               	movwf	??_Conversion3+2
  1685  0317  0844               	movf	??_Conversion3+2,w
  1686  0318  00AF               	movwf	_unidady
  1687  0319                     l2029:
  1688                           
  1689                           ;MAESTRO_SPI.c: 292:         {
  1690  0319  3064               	movlw	100
  1691  031A  00B9               	movwf	___awmod@divisor
  1692  031B  3000               	movlw	0
  1693  031C  00BA               	movwf	___awmod@divisor+1
  1694  031D  0830               	movf	_voltajey,w
  1695  031E  00C2               	movwf	??_Conversion3
  1696  031F  01C3               	clrf	??_Conversion3+1
  1697  0320  0842               	movf	??_Conversion3,w
  1698  0321  00BB               	movwf	___awmod@dividend
  1699  0322  0843               	movf	??_Conversion3+1,w
  1700  0323  00BC               	movwf	___awmod@dividend+1
  1701  0324  120A  118A  2418  120A  118A  	fcall	___awmod
  1702  0329  1283               	bcf	3,5	;RP0=0, select bank0
  1703  032A  1303               	bcf	3,6	;RP1=0, select bank0
  1704  032B  0839               	movf	?___awmod,w
  1705  032C  00C4               	movwf	??_Conversion3+2
  1706  032D  0844               	movf	??_Conversion3+2,w
  1707  032E  00B4               	movwf	_x1z
  1708  032F                     l2031:
  1709                           
  1710                           ;MAESTRO_SPI.c: 293:             escribir_char (67);
  1711  032F  01AC               	clrf	_x2y
  1712  0330                     l2033:
  1713                           
  1714                           ;MAESTRO_SPI.c: 294:             escribir_char (79);
  1715  0330  01AD               	clrf	_y1y
  1716  0331                     l2035:
  1717                           
  1718                           ;MAESTRO_SPI.c: 295:             escribir_char (78);
  1719  0331  01AB               	clrf	_y2y
  1720  0332                     l2037:
  1721                           
  1722                           ;MAESTRO_SPI.c: 296:             escribir_char (84);
  1723  0332  082F               	movf	_unidady,w
  1724  0333  3E30               	addlw	48
  1725  0334  120A  118A  25F7  120A  118A  	fcall	_Lcd_Write_Char
  1726  0339                     l2039:
  1727                           
  1728                           ;MAESTRO_SPI.c: 297:             escribir_char (58);
  1729  0339  302E               	movlw	46
  1730  033A  120A  118A  25F7  120A  118A  	fcall	_Lcd_Write_Char
  1731  033F                     l2041:
  1732                           
  1733                           ;MAESTRO_SPI.c: 298:             escribir_char (48);
  1734  033F  1283               	bcf	3,5	;RP0=0, select bank0
  1735  0340  1303               	bcf	3,6	;RP1=0, select bank0
  1736  0341  082C               	movf	_x2y,w
  1737  0342  3E30               	addlw	48
  1738  0343  120A  118A  25F7  120A  118A  	fcall	_Lcd_Write_Char
  1739  0348                     l2043:
  1740                           
  1741                           ;MAESTRO_SPI.c: 299:             escribir_char (dato_push+48);
  1742  0348  1283               	bcf	3,5	;RP0=0, select bank0
  1743  0349  1303               	bcf	3,6	;RP1=0, select bank0
  1744  034A  082B               	movf	_y2y,w
  1745  034B  3E30               	addlw	48
  1746  034C  120A  118A  25F7  120A  118A  	fcall	_Lcd_Write_Char
  1747  0351                     l2045:
  1748                           
  1749                           ;MAESTRO_SPI.c: 300:             escribir_char (32);
  1750  0351  3056               	movlw	86
  1751  0352  120A  118A  25F7  120A  118A  	fcall	_Lcd_Write_Char
  1752  0357                     l2047:
  1753                           
  1754                           ;MAESTRO_SPI.c: 301:             escribir_char (32);
  1755  0357  120A  118A  2473  120A  118A  	fcall	_virtual_display3
  1756  035C                     l195:
  1757  035C  0008               	return
  1758  035D                     __end_of_Conversion3:
  1759                           
  1760                           	psect	text8
  1761  0473                     __ptext8:	
  1762 ;; *************** function _virtual_display3 *****************
  1763 ;; Defined at:
  1764 ;;		line 364 in file "MAESTRO_SPI.c"
  1765 ;; Parameters:    Size  Location     Type
  1766 ;;		None
  1767 ;; Auto vars:     Size  Location     Type
  1768 ;;		None
  1769 ;; Return value:  Size  Location     Type
  1770 ;;                  1    wreg      void 
  1771 ;; Registers used:
  1772 ;;		wreg, status,2, status,0, pclath, cstack
  1773 ;; Tracked objects:
  1774 ;;		On entry : 0/0
  1775 ;;		On exit  : 0/0
  1776 ;;		Unchanged: 0/0
  1777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1778 ;;      Params:         0       0       0       0       0
  1779 ;;      Locals:         0       0       0       0       0
  1780 ;;      Temps:          0       0       0       0       0
  1781 ;;      Totals:         0       0       0       0       0
  1782 ;;Total ram usage:        0 bytes
  1783 ;; Hardware stack levels used:    1
  1784 ;; Hardware stack levels required when called:    3
  1785 ;; This function calls:
  1786 ;;		_escribir_char
  1787 ;; This function is called by:
  1788 ;;		_Conversion3
  1789 ;; This function uses a non-reentrant model
  1790 ;;
  1791                           
  1792                           
  1793                           ;psect for function _virtual_display3
  1794  0473                     _virtual_display3:
  1795  0473                     l1817:	
  1796                           ;incstack = 0
  1797                           ; Regs used in _virtual_display3: [wreg+status,2+status,0+pclath+cstack]
  1798                           
  1799  0473  3010               	movlw	16
  1800  0474  1283               	bcf	3,5	;RP0=0, select bank0
  1801  0475  1303               	bcf	3,6	;RP1=0, select bank0
  1802  0476  0223               	subwf	_velocidad3,w
  1803  0477  1C03               	skipc
  1804  0478  2C7A               	goto	u651
  1805  0479  2C7B               	goto	u650
  1806  047A                     u651:
  1807  047A  2CC9               	goto	l209
  1808  047B                     u650:
  1809  047B                     l1819:
  1810  047B  3054               	movlw	84
  1811  047C  120A  118A  2656  120A  118A  	fcall	_escribir_char
  1812  0481  3045               	movlw	69
  1813  0482  120A  118A  2656  120A  118A  	fcall	_escribir_char
  1814  0487  304D               	movlw	77
  1815  0488  120A  118A  2656  120A  118A  	fcall	_escribir_char
  1816  048D  3050               	movlw	80
  1817  048E  120A  118A  2656  120A  118A  	fcall	_escribir_char
  1818  0493  303A               	movlw	58
  1819  0494  120A  118A  2656  120A  118A  	fcall	_escribir_char
  1820  0499  1283               	bcf	3,5	;RP0=0, select bank0
  1821  049A  1303               	bcf	3,6	;RP1=0, select bank0
  1822  049B  082F               	movf	_unidady,w
  1823  049C  3E30               	addlw	48
  1824  049D  120A  118A  2656  120A  118A  	fcall	_escribir_char
  1825  04A2  302E               	movlw	46
  1826  04A3  120A  118A  2656  120A  118A  	fcall	_escribir_char
  1827  04A8  1283               	bcf	3,5	;RP0=0, select bank0
  1828  04A9  1303               	bcf	3,6	;RP1=0, select bank0
  1829  04AA  082C               	movf	_x2y,w
  1830  04AB  3E30               	addlw	48
  1831  04AC  120A  118A  2656  120A  118A  	fcall	_escribir_char
  1832  04B1  1283               	bcf	3,5	;RP0=0, select bank0
  1833  04B2  1303               	bcf	3,6	;RP1=0, select bank0
  1834  04B3  082B               	movf	_y2y,w
  1835  04B4  3E30               	addlw	48
  1836  04B5  120A  118A  2656  120A  118A  	fcall	_escribir_char
  1837  04BA  3056               	movlw	86
  1838  04BB  120A  118A  2656  120A  118A  	fcall	_escribir_char
  1839  04C0  300D               	movlw	13
  1840  04C1  120A  118A  2656  120A  118A  	fcall	_escribir_char
  1841  04C6                     l1821:
  1842  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  1843  04C7  1303               	bcf	3,6	;RP1=0, select bank0
  1844  04C8  01A3               	clrf	_velocidad3
  1845  04C9                     l209:
  1846  04C9  0008               	return
  1847  04CA                     __end_of_virtual_display3:
  1848                           
  1849                           	psect	text9
  1850  0298                     __ptext9:	
  1851 ;; *************** function _Conversion2 *****************
  1852 ;; Defined at:
  1853 ;;		line 270 in file "MAESTRO_SPI.c"
  1854 ;; Parameters:    Size  Location     Type
  1855 ;;		None
  1856 ;; Auto vars:     Size  Location     Type
  1857 ;;		None
  1858 ;; Return value:  Size  Location     Type
  1859 ;;                  1    wreg      void 
  1860 ;; Registers used:
  1861 ;;		wreg, status,2, status,0, pclath, cstack
  1862 ;; Tracked objects:
  1863 ;;		On entry : 0/0
  1864 ;;		On exit  : 0/0
  1865 ;;		Unchanged: 0/0
  1866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1867 ;;      Params:         0       0       0       0       0
  1868 ;;      Locals:         0       0       0       0       0
  1869 ;;      Temps:          0       3       0       0       0
  1870 ;;      Totals:         0       3       0       0       0
  1871 ;;Total ram usage:        3 bytes
  1872 ;; Hardware stack levels used:    1
  1873 ;; Hardware stack levels required when called:    4
  1874 ;; This function calls:
  1875 ;;		_Lcd_Write_Char
  1876 ;;		___awdiv
  1877 ;;		___awmod
  1878 ;;		_virtual_display2
  1879 ;; This function is called by:
  1880 ;;		_lcd
  1881 ;; This function uses a non-reentrant model
  1882 ;;
  1883                           
  1884                           
  1885                           ;psect for function _Conversion2
  1886  0298                     _Conversion2:
  1887  0298                     l2017:	
  1888                           ;incstack = 0
  1889                           ; Regs used in _Conversion2: [wreg+status,2+status,0+pclath+cstack]
  1890                           
  1891                           
  1892                           ;MAESTRO_SPI.c: 272:         escribir_char (67);
  1893  0298  300A               	movlw	10
  1894  0299  0270               	subwf	_dato_push,w
  1895  029A  1803               	skipnc
  1896  029B  2A9D               	goto	u881
  1897  029C  2A9E               	goto	u880
  1898  029D                     u881:
  1899  029D  2AB1               	goto	l2021
  1900  029E                     u880:
  1901  029E                     l2019:
  1902                           
  1903                           ;MAESTRO_SPI.c: 273:         escribir_char (58);;MAESTRO_SPI.c: 274:         escribir_ch
      +                          ar (unidad+48);
  1904  029E  3030               	movlw	48
  1905  029F  120A  118A  25F7  120A  118A  	fcall	_Lcd_Write_Char
  1906                           
  1907                           ;MAESTRO_SPI.c: 275:         escribir_char (46);
  1908  02A4  0870               	movf	_dato_push,w
  1909  02A5  3E30               	addlw	48
  1910  02A6  120A  118A  25F7  120A  118A  	fcall	_Lcd_Write_Char
  1911                           
  1912                           ;MAESTRO_SPI.c: 276:         escribir_char (x2+48);
  1913  02AB  120A  118A  2021  120A  118A  	fcall	_virtual_display2
  1914                           
  1915                           ;MAESTRO_SPI.c: 277:         escribir_char (y2+48);
  1916  02B0  2AFA               	goto	l192
  1917  02B1                     l2021:
  1918  02B1  300A               	movlw	10
  1919  02B2  0270               	subwf	_dato_push,w
  1920  02B3  1C03               	skipc
  1921  02B4  2AB6               	goto	u891
  1922  02B5  2AB7               	goto	u890
  1923  02B6                     u891:
  1924  02B6  2AFA               	goto	l192
  1925  02B7                     u890:
  1926  02B7                     l2023:
  1927                           
  1928                           ;MAESTRO_SPI.c: 279:         escribir_char (32);;MAESTRO_SPI.c: 280:         escribir_ch
      +                          ar (32);
  1929  02B7  300A               	movlw	10
  1930  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  1931  02B9  1303               	bcf	3,6	;RP1=0, select bank0
  1932  02BA  00B9               	movwf	___awdiv@divisor
  1933  02BB  3000               	movlw	0
  1934  02BC  00BA               	movwf	___awdiv@divisor+1
  1935  02BD  0870               	movf	_dato_push,w
  1936  02BE  00C2               	movwf	??_Conversion2
  1937  02BF  01C3               	clrf	??_Conversion2+1
  1938  02C0  0842               	movf	??_Conversion2,w
  1939  02C1  00BB               	movwf	___awdiv@dividend
  1940  02C2  0843               	movf	??_Conversion2+1,w
  1941  02C3  00BC               	movwf	___awdiv@dividend+1
  1942  02C4  120A  118A  222F  120A  118A  	fcall	___awdiv
  1943  02C9  1283               	bcf	3,5	;RP0=0, select bank0
  1944  02CA  1303               	bcf	3,6	;RP1=0, select bank0
  1945  02CB  0839               	movf	?___awdiv,w
  1946  02CC  00C4               	movwf	??_Conversion2+2
  1947  02CD  0844               	movf	??_Conversion2+2,w
  1948  02CE  00A8               	movwf	_w1
  1949                           
  1950                           ;MAESTRO_SPI.c: 281:         escribir_char (32);
  1951  02CF  300A               	movlw	10
  1952  02D0  00B9               	movwf	___awmod@divisor
  1953  02D1  3000               	movlw	0
  1954  02D2  00BA               	movwf	___awmod@divisor+1
  1955  02D3  0870               	movf	_dato_push,w
  1956  02D4  00C2               	movwf	??_Conversion2
  1957  02D5  01C3               	clrf	??_Conversion2+1
  1958  02D6  0842               	movf	??_Conversion2,w
  1959  02D7  00BB               	movwf	___awmod@dividend
  1960  02D8  0843               	movf	??_Conversion2+1,w
  1961  02D9  00BC               	movwf	___awmod@dividend+1
  1962  02DA  120A  118A  2418  120A  118A  	fcall	___awmod
  1963  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  1964  02E0  1303               	bcf	3,6	;RP1=0, select bank0
  1965  02E1  0839               	movf	?___awmod,w
  1966  02E2  00C4               	movwf	??_Conversion2+2
  1967  02E3  0844               	movf	??_Conversion2+2,w
  1968  02E4  00A7               	movwf	_w2
  1969                           
  1970                           ;MAESTRO_SPI.c: 282:         escribir_char (32);
  1971  02E5  0828               	movf	_w1,w
  1972  02E6  3E30               	addlw	48
  1973  02E7  120A  118A  25F7  120A  118A  	fcall	_Lcd_Write_Char
  1974                           
  1975                           ;MAESTRO_SPI.c: 283:         velocidad1 = 0;
  1976  02EC  1283               	bcf	3,5	;RP0=0, select bank0
  1977  02ED  1303               	bcf	3,6	;RP1=0, select bank0
  1978  02EE  0827               	movf	_w2,w
  1979  02EF  3E30               	addlw	48
  1980  02F0  120A  118A  25F7  120A  118A  	fcall	_Lcd_Write_Char
  1981                           
  1982                           ;MAESTRO_SPI.c: 284:     }
  1983  02F5  120A  118A  2021  120A  118A  	fcall	_virtual_display2
  1984  02FA                     l192:
  1985  02FA  0008               	return
  1986  02FB                     __end_of_Conversion2:
  1987                           
  1988                           	psect	text10
  1989  0021                     __ptext10:	
  1990 ;; *************** function _virtual_display2 *****************
  1991 ;; Defined at:
  1992 ;;		line 325 in file "MAESTRO_SPI.c"
  1993 ;; Parameters:    Size  Location     Type
  1994 ;;		None
  1995 ;; Auto vars:     Size  Location     Type
  1996 ;;		None
  1997 ;; Return value:  Size  Location     Type
  1998 ;;                  1    wreg      void 
  1999 ;; Registers used:
  2000 ;;		wreg, status,2, status,0, pclath, cstack
  2001 ;; Tracked objects:
  2002 ;;		On entry : 0/0
  2003 ;;		On exit  : 0/0
  2004 ;;		Unchanged: 0/0
  2005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2006 ;;      Params:         0       0       0       0       0
  2007 ;;      Locals:         0       0       0       0       0
  2008 ;;      Temps:          0       0       0       0       0
  2009 ;;      Totals:         0       0       0       0       0
  2010 ;;Total ram usage:        0 bytes
  2011 ;; Hardware stack levels used:    1
  2012 ;; Hardware stack levels required when called:    3
  2013 ;; This function calls:
  2014 ;;		_escribir_char
  2015 ;; This function is called by:
  2016 ;;		_Conversion2
  2017 ;; This function uses a non-reentrant model
  2018 ;;
  2019                           
  2020                           
  2021                           ;psect for function _virtual_display2
  2022  0021                     _virtual_display2:
  2023  0021                     l1805:	
  2024                           ;incstack = 0
  2025                           ; Regs used in _virtual_display2: [wreg+status,2+status,0+pclath+cstack]
  2026                           
  2027                           
  2028                           ;MAESTRO_SPI.c: 327: {
  2029  0021  3010               	movlw	16
  2030  0022  1283               	bcf	3,5	;RP0=0, select bank0
  2031  0023  1303               	bcf	3,6	;RP1=0, select bank0
  2032  0024  0224               	subwf	_velocidad2,w
  2033  0025  1C03               	skipc
  2034  0026  2828               	goto	u631
  2035  0027  2829               	goto	u630
  2036  0028                     u631:
  2037  0028  28BF               	goto	l205
  2038  0029                     u630:
  2039  0029                     l1807:
  2040                           
  2041                           ;MAESTRO_SPI.c: 328:     if (velocidad3 > 15);MAESTRO_SPI.c: 329:     {
  2042  0029  300A               	movlw	10
  2043  002A  0270               	subwf	_dato_push,w
  2044  002B  1803               	skipnc
  2045  002C  282E               	goto	u641
  2046  002D  282F               	goto	u640
  2047  002E                     u641:
  2048  002E  2876               	goto	l1813
  2049  002F                     u640:
  2050  002F                     l1809:
  2051                           
  2052                           ;MAESTRO_SPI.c: 330:         escribir_char (84);;MAESTRO_SPI.c: 331:         escribir_ch
      +                          ar (69);
  2053  002F  3043               	movlw	67
  2054  0030  120A  118A  2656  120A  118A  	fcall	_escribir_char
  2055                           
  2056                           ;MAESTRO_SPI.c: 332:         escribir_char (77);
  2057  0035  304F               	movlw	79
  2058  0036  120A  118A  2656  120A  118A  	fcall	_escribir_char
  2059                           
  2060                           ;MAESTRO_SPI.c: 333:         escribir_char (80);
  2061  003B  304E               	movlw	78
  2062  003C  120A  118A  2656  120A  118A  	fcall	_escribir_char
  2063                           
  2064                           ;MAESTRO_SPI.c: 334:         escribir_char (58);
  2065  0041  3054               	movlw	84
  2066  0042  120A  118A  2656  120A  118A  	fcall	_escribir_char
  2067                           
  2068                           ;MAESTRO_SPI.c: 335:         escribir_char (unidady+48);
  2069  0047  303A               	movlw	58
  2070  0048  120A  118A  2656  120A  118A  	fcall	_escribir_char
  2071                           
  2072                           ;MAESTRO_SPI.c: 336:         escribir_char (46);
  2073  004D  3030               	movlw	48
  2074  004E  120A  118A  2656  120A  118A  	fcall	_escribir_char
  2075                           
  2076                           ;MAESTRO_SPI.c: 337:         escribir_char (x2y+48);
  2077  0053  0870               	movf	_dato_push,w
  2078  0054  3E30               	addlw	48
  2079  0055  120A  118A  2656  120A  118A  	fcall	_escribir_char
  2080                           
  2081                           ;MAESTRO_SPI.c: 338:         escribir_char (y2y+48);
  2082  005A  3020               	movlw	32
  2083  005B  120A  118A  2656  120A  118A  	fcall	_escribir_char
  2084                           
  2085                           ;MAESTRO_SPI.c: 339:         escribir_char (86);
  2086  0060  3020               	movlw	32
  2087  0061  120A  118A  2656  120A  118A  	fcall	_escribir_char
  2088                           
  2089                           ;MAESTRO_SPI.c: 340:         escribir_char ('\r');
  2090  0066  3020               	movlw	32
  2091  0067  120A  118A  2656  120A  118A  	fcall	_escribir_char
  2092                           
  2093                           ;MAESTRO_SPI.c: 341:         velocidad3 = 0;
  2094  006C  3020               	movlw	32
  2095  006D  120A  118A  2656  120A  118A  	fcall	_escribir_char
  2096  0072                     l1811:
  2097                           
  2098                           ;MAESTRO_SPI.c: 343: }
  2099  0072  1283               	bcf	3,5	;RP0=0, select bank0
  2100  0073  1303               	bcf	3,6	;RP1=0, select bank0
  2101  0074  01A4               	clrf	_velocidad2
  2102                           
  2103                           ;MAESTRO_SPI.c: 344: 
  2104  0075  28BF               	goto	l205
  2105  0076                     l1813:
  2106                           
  2107                           ;MAESTRO_SPI.c: 346: {;MAESTRO_SPI.c: 347:     TXREG = valor;
  2108  0076  3043               	movlw	67
  2109  0077  120A  118A  2656  120A  118A  	fcall	_escribir_char
  2110                           
  2111                           ;MAESTRO_SPI.c: 348:     while (PIR1bits.TXIF == 0);
  2112  007C  304F               	movlw	79
  2113  007D  120A  118A  2656  120A  118A  	fcall	_escribir_char
  2114                           
  2115                           ;MAESTRO_SPI.c: 349: }
  2116  0082  304E               	movlw	78
  2117  0083  120A  118A  2656  120A  118A  	fcall	_escribir_char
  2118  0088  3054               	movlw	84
  2119  0089  120A  118A  2656  120A  118A  	fcall	_escribir_char
  2120  008E  303A               	movlw	58
  2121  008F  120A  118A  2656  120A  118A  	fcall	_escribir_char
  2122  0094  1283               	bcf	3,5	;RP0=0, select bank0
  2123  0095  1303               	bcf	3,6	;RP1=0, select bank0
  2124  0096  0828               	movf	_w1,w
  2125  0097  3E30               	addlw	48
  2126  0098  120A  118A  2656  120A  118A  	fcall	_escribir_char
  2127  009D  1283               	bcf	3,5	;RP0=0, select bank0
  2128  009E  1303               	bcf	3,6	;RP1=0, select bank0
  2129  009F  0827               	movf	_w2,w
  2130  00A0  3E30               	addlw	48
  2131  00A1  120A  118A  2656  120A  118A  	fcall	_escribir_char
  2132  00A6  3020               	movlw	32
  2133  00A7  120A  118A  2656  120A  118A  	fcall	_escribir_char
  2134  00AC  3020               	movlw	32
  2135  00AD  120A  118A  2656  120A  118A  	fcall	_escribir_char
  2136  00B2  3020               	movlw	32
  2137  00B3  120A  118A  2656  120A  118A  	fcall	_escribir_char
  2138  00B8  3020               	movlw	32
  2139  00B9  120A  118A  2656  120A  118A  	fcall	_escribir_char
  2140  00BE  2872               	goto	l1811
  2141  00BF                     l205:
  2142  00BF  0008               	return
  2143  00C0                     __end_of_virtual_display2:
  2144                           
  2145                           	psect	text11
  2146  00C0                     __ptext11:	
  2147 ;; *************** function _Conversion1 *****************
  2148 ;; Defined at:
  2149 ;;		line 254 in file "MAESTRO_SPI.c"
  2150 ;; Parameters:    Size  Location     Type
  2151 ;;		None
  2152 ;; Auto vars:     Size  Location     Type
  2153 ;;		None
  2154 ;; Return value:  Size  Location     Type
  2155 ;;                  1    wreg      void 
  2156 ;; Registers used:
  2157 ;;		wreg, status,2, status,0, pclath, cstack
  2158 ;; Tracked objects:
  2159 ;;		On entry : 0/0
  2160 ;;		On exit  : 0/0
  2161 ;;		Unchanged: 0/0
  2162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2163 ;;      Params:         0       0       0       0       0
  2164 ;;      Locals:         0       0       0       0       0
  2165 ;;      Temps:          0       3       0       0       0
  2166 ;;      Totals:         0       3       0       0       0
  2167 ;;Total ram usage:        3 bytes
  2168 ;; Hardware stack levels used:    1
  2169 ;; Hardware stack levels required when called:    4
  2170 ;; This function calls:
  2171 ;;		_Lcd_Write_Char
  2172 ;;		___awdiv
  2173 ;;		___awmod
  2174 ;;		_virtual_display1
  2175 ;; This function is called by:
  2176 ;;		_lcd
  2177 ;; This function uses a non-reentrant model
  2178 ;;
  2179                           
  2180                           
  2181                           ;psect for function _Conversion1
  2182  00C0                     _Conversion1:
  2183  00C0                     l1993:	
  2184                           ;incstack = 0
  2185                           ; Regs used in _Conversion1: [wreg+status,2+status,0+pclath+cstack]
  2186                           
  2187                           
  2188                           ;MAESTRO_SPI.c: 256:     y1y = x1y % 10;
  2189  00C0  1283               	bcf	3,5	;RP0=0, select bank0
  2190  00C1  1303               	bcf	3,6	;RP1=0, select bank0
  2191  00C2  0822               	movf	_dato_pot,w
  2192  00C3  00C2               	movwf	??_Conversion1
  2193  00C4  0742               	addwf	??_Conversion1,w
  2194  00C5  00C3               	movwf	??_Conversion1+1
  2195  00C6  0843               	movf	??_Conversion1+1,w
  2196  00C7  00F4               	movwf	_voltaje
  2197  00C8                     l1995:
  2198                           
  2199                           ;MAESTRO_SPI.c: 257:     y2y = y1y / 1;
  2200  00C8  3064               	movlw	100
  2201  00C9  00B9               	movwf	___awdiv@divisor
  2202  00CA  3000               	movlw	0
  2203  00CB  00BA               	movwf	___awdiv@divisor+1
  2204  00CC  0874               	movf	_voltaje,w
  2205  00CD  00C2               	movwf	??_Conversion1
  2206  00CE  01C3               	clrf	??_Conversion1+1
  2207  00CF  0842               	movf	??_Conversion1,w
  2208  00D0  00BB               	movwf	___awdiv@dividend
  2209  00D1  0843               	movf	??_Conversion1+1,w
  2210  00D2  00BC               	movwf	___awdiv@dividend+1
  2211  00D3  120A  118A  222F  120A  118A  	fcall	___awdiv
  2212  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  2213  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  2214  00DA  0839               	movf	?___awdiv,w
  2215  00DB  00C4               	movwf	??_Conversion1+2
  2216  00DC  0844               	movf	??_Conversion1+2,w
  2217  00DD  00F3               	movwf	_unidad
  2218  00DE                     l1997:
  2219                           
  2220                           ;MAESTRO_SPI.c: 258:     Lcd_Write_Char(unidady+48);
  2221  00DE  3064               	movlw	100
  2222  00DF  00B9               	movwf	___awmod@divisor
  2223  00E0  3000               	movlw	0
  2224  00E1  00BA               	movwf	___awmod@divisor+1
  2225  00E2  0874               	movf	_voltaje,w
  2226  00E3  00C2               	movwf	??_Conversion1
  2227  00E4  01C3               	clrf	??_Conversion1+1
  2228  00E5  0842               	movf	??_Conversion1,w
  2229  00E6  00BB               	movwf	___awmod@dividend
  2230  00E7  0843               	movf	??_Conversion1+1,w
  2231  00E8  00BC               	movwf	___awmod@dividend+1
  2232  00E9  120A  118A  2418  120A  118A  	fcall	___awmod
  2233  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  2234  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  2235  00F0  0839               	movf	?___awmod,w
  2236  00F1  00C4               	movwf	??_Conversion1+2
  2237  00F2  0844               	movf	??_Conversion1+2,w
  2238  00F3  00F2               	movwf	_x1
  2239  00F4                     l1999:
  2240                           
  2241                           ;MAESTRO_SPI.c: 259:     Lcd_Write_Char(46);
  2242  00F4  300A               	movlw	10
  2243  00F5  00B9               	movwf	___awdiv@divisor
  2244  00F6  3000               	movlw	0
  2245  00F7  00BA               	movwf	___awdiv@divisor+1
  2246  00F8  0872               	movf	_x1,w
  2247  00F9  00C2               	movwf	??_Conversion1
  2248  00FA  01C3               	clrf	??_Conversion1+1
  2249  00FB  0842               	movf	??_Conversion1,w
  2250  00FC  00BB               	movwf	___awdiv@dividend
  2251  00FD  0843               	movf	??_Conversion1+1,w
  2252  00FE  00BC               	movwf	___awdiv@dividend+1
  2253  00FF  120A  118A  222F  120A  118A  	fcall	___awdiv
  2254  0104  1283               	bcf	3,5	;RP0=0, select bank0
  2255  0105  1303               	bcf	3,6	;RP1=0, select bank0
  2256  0106  0839               	movf	?___awdiv,w
  2257  0107  00C4               	movwf	??_Conversion1+2
  2258  0108  0844               	movf	??_Conversion1+2,w
  2259  0109  00F1               	movwf	_x2
  2260  010A                     l2001:
  2261                           
  2262                           ;MAESTRO_SPI.c: 260:     Lcd_Write_Char(x2y+48);
  2263  010A  300A               	movlw	10
  2264  010B  00B9               	movwf	___awmod@divisor
  2265  010C  3000               	movlw	0
  2266  010D  00BA               	movwf	___awmod@divisor+1
  2267  010E  0872               	movf	_x1,w
  2268  010F  00C2               	movwf	??_Conversion1
  2269  0110  01C3               	clrf	??_Conversion1+1
  2270  0111  0842               	movf	??_Conversion1,w
  2271  0112  00BB               	movwf	___awmod@dividend
  2272  0113  0843               	movf	??_Conversion1+1,w
  2273  0114  00BC               	movwf	___awmod@dividend+1
  2274  0115  120A  118A  2418  120A  118A  	fcall	___awmod
  2275  011A  1283               	bcf	3,5	;RP0=0, select bank0
  2276  011B  1303               	bcf	3,6	;RP1=0, select bank0
  2277  011C  0839               	movf	?___awmod,w
  2278  011D  00C4               	movwf	??_Conversion1+2
  2279  011E  0844               	movf	??_Conversion1+2,w
  2280  011F  00B8               	movwf	_y1
  2281  0120                     l2003:
  2282                           
  2283                           ;MAESTRO_SPI.c: 261:     Lcd_Write_Char(y2y+48);
  2284  0120  0838               	movf	_y1,w
  2285  0121  00C2               	movwf	??_Conversion1
  2286  0122  0842               	movf	??_Conversion1,w
  2287  0123  00B7               	movwf	_y2
  2288  0124                     l2005:
  2289                           
  2290                           ;MAESTRO_SPI.c: 262:     Lcd_Write_Char(86);
  2291  0124  0873               	movf	_unidad,w
  2292  0125  3E30               	addlw	48
  2293  0126  120A  118A  25F7  120A  118A  	fcall	_Lcd_Write_Char
  2294  012B                     l2007:
  2295                           
  2296                           ;MAESTRO_SPI.c: 263:     virtual_display3();
  2297  012B  302E               	movlw	46
  2298  012C  120A  118A  25F7  120A  118A  	fcall	_Lcd_Write_Char
  2299  0131                     l2009:
  2300                           
  2301                           ;MAESTRO_SPI.c: 264: }
  2302  0131  0871               	movf	_x2,w
  2303  0132  3E30               	addlw	48
  2304  0133  120A  118A  25F7  120A  118A  	fcall	_Lcd_Write_Char
  2305  0138                     l2011:
  2306                           
  2307                           ;MAESTRO_SPI.c: 265: 
  2308  0138  1283               	bcf	3,5	;RP0=0, select bank0
  2309  0139  1303               	bcf	3,6	;RP1=0, select bank0
  2310  013A  0837               	movf	_y2,w
  2311  013B  3E30               	addlw	48
  2312  013C  120A  118A  25F7  120A  118A  	fcall	_Lcd_Write_Char
  2313  0141                     l2013:
  2314                           
  2315                           ;MAESTRO_SPI.c: 266: void virtual_display1 (void)
  2316  0141  3056               	movlw	86
  2317  0142  120A  118A  25F7  120A  118A  	fcall	_Lcd_Write_Char
  2318  0147                     l2015:
  2319                           
  2320                           ;MAESTRO_SPI.c: 267: {
  2321  0147  120A  118A  235D  120A  118A  	fcall	_virtual_display1
  2322  014C                     l186:
  2323  014C  0008               	return
  2324  014D                     __end_of_Conversion1:
  2325                           
  2326                           	psect	text12
  2327  035D                     __ptext12:	
  2328 ;; *************** function _virtual_display1 *****************
  2329 ;; Defined at:
  2330 ;;		line 304 in file "MAESTRO_SPI.c"
  2331 ;; Parameters:    Size  Location     Type
  2332 ;;		None
  2333 ;; Auto vars:     Size  Location     Type
  2334 ;;		None
  2335 ;; Return value:  Size  Location     Type
  2336 ;;                  1    wreg      void 
  2337 ;; Registers used:
  2338 ;;		wreg, status,2, status,0, pclath, cstack
  2339 ;; Tracked objects:
  2340 ;;		On entry : 0/0
  2341 ;;		On exit  : 0/0
  2342 ;;		Unchanged: 0/0
  2343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2344 ;;      Params:         0       0       0       0       0
  2345 ;;      Locals:         0       0       0       0       0
  2346 ;;      Temps:          0       0       0       0       0
  2347 ;;      Totals:         0       0       0       0       0
  2348 ;;Total ram usage:        0 bytes
  2349 ;; Hardware stack levels used:    1
  2350 ;; Hardware stack levels required when called:    3
  2351 ;; This function calls:
  2352 ;;		_escribir_char
  2353 ;; This function is called by:
  2354 ;;		_Conversion1
  2355 ;; This function uses a non-reentrant model
  2356 ;;
  2357                           
  2358                           
  2359                           ;psect for function _virtual_display1
  2360  035D                     _virtual_display1:
  2361  035D                     l1799:	
  2362                           ;incstack = 0
  2363                           ; Regs used in _virtual_display1: [wreg+status,2+status,0+pclath+cstack]
  2364                           
  2365                           
  2366                           ;MAESTRO_SPI.c: 306:         }
  2367  035D  3010               	movlw	16
  2368  035E  1283               	bcf	3,5	;RP0=0, select bank0
  2369  035F  1303               	bcf	3,6	;RP1=0, select bank0
  2370  0360  0225               	subwf	_velocidad1,w
  2371  0361  1C03               	skipc
  2372  0362  2B64               	goto	u621
  2373  0363  2B65               	goto	u620
  2374  0364                     u621:
  2375  0364  2BBB               	goto	l199
  2376  0365                     u620:
  2377  0365                     l1801:
  2378                           
  2379                           ;MAESTRO_SPI.c: 307:         else;MAESTRO_SPI.c: 308:         {
  2380  0365  3041               	movlw	65
  2381  0366  120A  118A  2656  120A  118A  	fcall	_escribir_char
  2382                           
  2383                           ;MAESTRO_SPI.c: 309:             escribir_char (67);
  2384  036B  3044               	movlw	68
  2385  036C  120A  118A  2656  120A  118A  	fcall	_escribir_char
  2386                           
  2387                           ;MAESTRO_SPI.c: 310:             escribir_char (79);
  2388  0371  3043               	movlw	67
  2389  0372  120A  118A  2656  120A  118A  	fcall	_escribir_char
  2390                           
  2391                           ;MAESTRO_SPI.c: 311:             escribir_char (78);
  2392  0377  303A               	movlw	58
  2393  0378  120A  118A  2656  120A  118A  	fcall	_escribir_char
  2394                           
  2395                           ;MAESTRO_SPI.c: 312:             escribir_char (84);
  2396  037D  0873               	movf	_unidad,w
  2397  037E  3E30               	addlw	48
  2398  037F  120A  118A  2656  120A  118A  	fcall	_escribir_char
  2399                           
  2400                           ;MAESTRO_SPI.c: 313:             escribir_char (58);
  2401  0384  302E               	movlw	46
  2402  0385  120A  118A  2656  120A  118A  	fcall	_escribir_char
  2403                           
  2404                           ;MAESTRO_SPI.c: 314:             escribir_char (w1+48);
  2405  038A  0871               	movf	_x2,w
  2406  038B  3E30               	addlw	48
  2407  038C  120A  118A  2656  120A  118A  	fcall	_escribir_char
  2408                           
  2409                           ;MAESTRO_SPI.c: 315:             escribir_char (w2+48);
  2410  0391  1283               	bcf	3,5	;RP0=0, select bank0
  2411  0392  1303               	bcf	3,6	;RP1=0, select bank0
  2412  0393  0837               	movf	_y2,w
  2413  0394  3E30               	addlw	48
  2414  0395  120A  118A  2656  120A  118A  	fcall	_escribir_char
  2415                           
  2416                           ;MAESTRO_SPI.c: 316:             escribir_char (32);
  2417  039A  3056               	movlw	86
  2418  039B  120A  118A  2656  120A  118A  	fcall	_escribir_char
  2419                           
  2420                           ;MAESTRO_SPI.c: 317:             escribir_char (32);
  2421  03A0  3020               	movlw	32
  2422  03A1  120A  118A  2656  120A  118A  	fcall	_escribir_char
  2423                           
  2424                           ;MAESTRO_SPI.c: 318:             escribir_char (32);
  2425  03A6  3020               	movlw	32
  2426  03A7  120A  118A  2656  120A  118A  	fcall	_escribir_char
  2427                           
  2428                           ;MAESTRO_SPI.c: 319:             escribir_char (32);
  2429  03AC  3020               	movlw	32
  2430  03AD  120A  118A  2656  120A  118A  	fcall	_escribir_char
  2431                           
  2432                           ;MAESTRO_SPI.c: 320: 
  2433  03B2  3020               	movlw	32
  2434  03B3  120A  118A  2656  120A  118A  	fcall	_escribir_char
  2435  03B8                     l1803:
  2436                           
  2437                           ;MAESTRO_SPI.c: 321:             velocidad2 = 0;
  2438  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  2439  03B9  1303               	bcf	3,6	;RP1=0, select bank0
  2440  03BA  01A5               	clrf	_velocidad1
  2441  03BB                     l199:
  2442  03BB  0008               	return
  2443  03BC                     __end_of_virtual_display1:
  2444                           
  2445                           	psect	text13
  2446  0656                     __ptext13:	
  2447 ;; *************** function _escribir_char *****************
  2448 ;; Defined at:
  2449 ;;		line 383 in file "MAESTRO_SPI.c"
  2450 ;; Parameters:    Size  Location     Type
  2451 ;;  valor           1    wreg     unsigned char 
  2452 ;; Auto vars:     Size  Location     Type
  2453 ;;  valor           1    0[BANK0 ] unsigned char 
  2454 ;; Return value:  Size  Location     Type
  2455 ;;                  1    wreg      void 
  2456 ;; Registers used:
  2457 ;;		wreg
  2458 ;; Tracked objects:
  2459 ;;		On entry : 0/0
  2460 ;;		On exit  : 0/0
  2461 ;;		Unchanged: 0/0
  2462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2463 ;;      Params:         0       0       0       0       0
  2464 ;;      Locals:         0       1       0       0       0
  2465 ;;      Temps:          0       0       0       0       0
  2466 ;;      Totals:         0       1       0       0       0
  2467 ;;Total ram usage:        1 bytes
  2468 ;; Hardware stack levels used:    1
  2469 ;; Hardware stack levels required when called:    2
  2470 ;; This function calls:
  2471 ;;		Nothing
  2472 ;; This function is called by:
  2473 ;;		_virtual_display1
  2474 ;;		_virtual_display2
  2475 ;;		_virtual_display3
  2476 ;; This function uses a non-reentrant model
  2477 ;;
  2478                           
  2479                           
  2480                           ;psect for function _escribir_char
  2481  0656                     _escribir_char:
  2482                           
  2483                           ;incstack = 0
  2484                           ; Regs used in _escribir_char: [wreg]
  2485                           ;escribir_char@valor stored from wreg
  2486  0656  1283               	bcf	3,5	;RP0=0, select bank0
  2487  0657  1303               	bcf	3,6	;RP1=0, select bank0
  2488  0658  00B9               	movwf	escribir_char@valor
  2489  0659                     l1785:
  2490  0659  0839               	movf	escribir_char@valor,w
  2491  065A  0099               	movwf	25	;volatile
  2492  065B                     l212:
  2493  065B  1E0C               	btfss	12,4	;volatile
  2494  065C  2E5E               	goto	u611
  2495  065D  2E5F               	goto	u610
  2496  065E                     u611:
  2497  065E  2E5B               	goto	l212
  2498  065F                     u610:
  2499  065F                     l215:
  2500  065F  0008               	return
  2501  0660                     __end_of_escribir_char:
  2502                           
  2503                           	psect	text14
  2504  0418                     __ptext14:	
  2505 ;; *************** function ___awmod *****************
  2506 ;; Defined at:
  2507 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  2508 ;; Parameters:    Size  Location     Type
  2509 ;;  divisor         2    0[BANK0 ] int 
  2510 ;;  dividend        2    2[BANK0 ] int 
  2511 ;; Auto vars:     Size  Location     Type
  2512 ;;  sign            1    6[BANK0 ] unsigned char 
  2513 ;;  counter         1    5[BANK0 ] unsigned char 
  2514 ;; Return value:  Size  Location     Type
  2515 ;;                  2    0[BANK0 ] int 
  2516 ;; Registers used:
  2517 ;;		wreg, status,2, status,0
  2518 ;; Tracked objects:
  2519 ;;		On entry : 0/0
  2520 ;;		On exit  : 0/0
  2521 ;;		Unchanged: 0/0
  2522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2523 ;;      Params:         0       4       0       0       0
  2524 ;;      Locals:         0       2       0       0       0
  2525 ;;      Temps:          0       1       0       0       0
  2526 ;;      Totals:         0       7       0       0       0
  2527 ;;Total ram usage:        7 bytes
  2528 ;; Hardware stack levels used:    1
  2529 ;; Hardware stack levels required when called:    2
  2530 ;; This function calls:
  2531 ;;		Nothing
  2532 ;; This function is called by:
  2533 ;;		_Conversion1
  2534 ;;		_Conversion2
  2535 ;;		_Conversion3
  2536 ;; This function uses a non-reentrant model
  2537 ;;
  2538                           
  2539                           
  2540                           ;psect for function ___awmod
  2541  0418                     ___awmod:
  2542  0418                     l1877:	
  2543                           ;incstack = 0
  2544                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2545                           
  2546  0418  1283               	bcf	3,5	;RP0=0, select bank0
  2547  0419  1303               	bcf	3,6	;RP1=0, select bank0
  2548  041A  01BF               	clrf	___awmod@sign
  2549  041B                     l1879:
  2550  041B  1FBC               	btfss	___awmod@dividend+1,7
  2551  041C  2C1E               	goto	u761
  2552  041D  2C1F               	goto	u760
  2553  041E                     u761:
  2554  041E  2C26               	goto	l1885
  2555  041F                     u760:
  2556  041F                     l1881:
  2557  041F  09BB               	comf	___awmod@dividend,f
  2558  0420  09BC               	comf	___awmod@dividend+1,f
  2559  0421  0ABB               	incf	___awmod@dividend,f
  2560  0422  1903               	skipnz
  2561  0423  0ABC               	incf	___awmod@dividend+1,f
  2562  0424                     l1883:
  2563  0424  01BF               	clrf	___awmod@sign
  2564  0425  0ABF               	incf	___awmod@sign,f
  2565  0426                     l1885:
  2566  0426  1FBA               	btfss	___awmod@divisor+1,7
  2567  0427  2C29               	goto	u771
  2568  0428  2C2A               	goto	u770
  2569  0429                     u771:
  2570  0429  2C2F               	goto	l1889
  2571  042A                     u770:
  2572  042A                     l1887:
  2573  042A  09B9               	comf	___awmod@divisor,f
  2574  042B  09BA               	comf	___awmod@divisor+1,f
  2575  042C  0AB9               	incf	___awmod@divisor,f
  2576  042D  1903               	skipnz
  2577  042E  0ABA               	incf	___awmod@divisor+1,f
  2578  042F                     l1889:
  2579  042F  0839               	movf	___awmod@divisor,w
  2580  0430  043A               	iorwf	___awmod@divisor+1,w
  2581  0431  1903               	btfsc	3,2
  2582  0432  2C34               	goto	u781
  2583  0433  2C35               	goto	u780
  2584  0434                     u781:
  2585  0434  2C64               	goto	l1907
  2586  0435                     u780:
  2587  0435                     l1891:
  2588  0435  01BE               	clrf	___awmod@counter
  2589  0436  0ABE               	incf	___awmod@counter,f
  2590  0437  2C43               	goto	l1897
  2591  0438                     l1893:
  2592  0438  3001               	movlw	1
  2593  0439                     u795:
  2594  0439  1003               	clrc
  2595  043A  0DB9               	rlf	___awmod@divisor,f
  2596  043B  0DBA               	rlf	___awmod@divisor+1,f
  2597  043C  3EFF               	addlw	-1
  2598  043D  1D03               	skipz
  2599  043E  2C39               	goto	u795
  2600  043F                     l1895:
  2601  043F  3001               	movlw	1
  2602  0440  00BD               	movwf	??___awmod
  2603  0441  083D               	movf	??___awmod,w
  2604  0442  07BE               	addwf	___awmod@counter,f
  2605  0443                     l1897:
  2606  0443  1FBA               	btfss	___awmod@divisor+1,7
  2607  0444  2C46               	goto	u801
  2608  0445  2C47               	goto	u800
  2609  0446                     u801:
  2610  0446  2C38               	goto	l1893
  2611  0447                     u800:
  2612  0447                     l1899:
  2613  0447  083A               	movf	___awmod@divisor+1,w
  2614  0448  023C               	subwf	___awmod@dividend+1,w
  2615  0449  1D03               	skipz
  2616  044A  2C4D               	goto	u815
  2617  044B  0839               	movf	___awmod@divisor,w
  2618  044C  023B               	subwf	___awmod@dividend,w
  2619  044D                     u815:
  2620  044D  1C03               	skipc
  2621  044E  2C50               	goto	u811
  2622  044F  2C51               	goto	u810
  2623  0450                     u811:
  2624  0450  2C57               	goto	l1903
  2625  0451                     u810:
  2626  0451                     l1901:
  2627  0451  0839               	movf	___awmod@divisor,w
  2628  0452  02BB               	subwf	___awmod@dividend,f
  2629  0453  083A               	movf	___awmod@divisor+1,w
  2630  0454  1C03               	skipc
  2631  0455  03BC               	decf	___awmod@dividend+1,f
  2632  0456  02BC               	subwf	___awmod@dividend+1,f
  2633  0457                     l1903:
  2634  0457  3001               	movlw	1
  2635  0458                     u825:
  2636  0458  1003               	clrc
  2637  0459  0CBA               	rrf	___awmod@divisor+1,f
  2638  045A  0CB9               	rrf	___awmod@divisor,f
  2639  045B  3EFF               	addlw	-1
  2640  045C  1D03               	skipz
  2641  045D  2C58               	goto	u825
  2642  045E                     l1905:
  2643  045E  3001               	movlw	1
  2644  045F  02BE               	subwf	___awmod@counter,f
  2645  0460  1D03               	btfss	3,2
  2646  0461  2C63               	goto	u831
  2647  0462  2C64               	goto	u830
  2648  0463                     u831:
  2649  0463  2C47               	goto	l1899
  2650  0464                     u830:
  2651  0464                     l1907:
  2652  0464  083F               	movf	___awmod@sign,w
  2653  0465  1903               	btfsc	3,2
  2654  0466  2C68               	goto	u841
  2655  0467  2C69               	goto	u840
  2656  0468                     u841:
  2657  0468  2C6E               	goto	l1911
  2658  0469                     u840:
  2659  0469                     l1909:
  2660  0469  09BB               	comf	___awmod@dividend,f
  2661  046A  09BC               	comf	___awmod@dividend+1,f
  2662  046B  0ABB               	incf	___awmod@dividend,f
  2663  046C  1903               	skipnz
  2664  046D  0ABC               	incf	___awmod@dividend+1,f
  2665  046E                     l1911:
  2666  046E  083C               	movf	___awmod@dividend+1,w
  2667  046F  00BA               	movwf	?___awmod+1
  2668  0470  083B               	movf	___awmod@dividend,w
  2669  0471  00B9               	movwf	?___awmod
  2670  0472                     l571:
  2671  0472  0008               	return
  2672  0473                     __end_of___awmod:
  2673                           
  2674                           	psect	text15
  2675  022F                     __ptext15:	
  2676 ;; *************** function ___awdiv *****************
  2677 ;; Defined at:
  2678 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2679 ;; Parameters:    Size  Location     Type
  2680 ;;  divisor         2    0[BANK0 ] int 
  2681 ;;  dividend        2    2[BANK0 ] int 
  2682 ;; Auto vars:     Size  Location     Type
  2683 ;;  quotient        2    7[BANK0 ] int 
  2684 ;;  sign            1    6[BANK0 ] unsigned char 
  2685 ;;  counter         1    5[BANK0 ] unsigned char 
  2686 ;; Return value:  Size  Location     Type
  2687 ;;                  2    0[BANK0 ] int 
  2688 ;; Registers used:
  2689 ;;		wreg, status,2, status,0
  2690 ;; Tracked objects:
  2691 ;;		On entry : 0/0
  2692 ;;		On exit  : 0/0
  2693 ;;		Unchanged: 0/0
  2694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2695 ;;      Params:         0       4       0       0       0
  2696 ;;      Locals:         0       4       0       0       0
  2697 ;;      Temps:          0       1       0       0       0
  2698 ;;      Totals:         0       9       0       0       0
  2699 ;;Total ram usage:        9 bytes
  2700 ;; Hardware stack levels used:    1
  2701 ;; Hardware stack levels required when called:    2
  2702 ;; This function calls:
  2703 ;;		Nothing
  2704 ;; This function is called by:
  2705 ;;		_Conversion1
  2706 ;;		_Conversion2
  2707 ;;		_Conversion3
  2708 ;; This function uses a non-reentrant model
  2709 ;;
  2710                           
  2711                           
  2712                           ;psect for function ___awdiv
  2713  022F                     ___awdiv:
  2714  022F                     l1833:	
  2715                           ;incstack = 0
  2716                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2717                           
  2718  022F  1283               	bcf	3,5	;RP0=0, select bank0
  2719  0230  1303               	bcf	3,6	;RP1=0, select bank0
  2720  0231  01BF               	clrf	___awdiv@sign
  2721  0232                     l1835:
  2722  0232  1FBA               	btfss	___awdiv@divisor+1,7
  2723  0233  2A35               	goto	u661
  2724  0234  2A36               	goto	u660
  2725  0235                     u661:
  2726  0235  2A3D               	goto	l1841
  2727  0236                     u660:
  2728  0236                     l1837:
  2729  0236  09B9               	comf	___awdiv@divisor,f
  2730  0237  09BA               	comf	___awdiv@divisor+1,f
  2731  0238  0AB9               	incf	___awdiv@divisor,f
  2732  0239  1903               	skipnz
  2733  023A  0ABA               	incf	___awdiv@divisor+1,f
  2734  023B                     l1839:
  2735  023B  01BF               	clrf	___awdiv@sign
  2736  023C  0ABF               	incf	___awdiv@sign,f
  2737  023D                     l1841:
  2738  023D  1FBC               	btfss	___awdiv@dividend+1,7
  2739  023E  2A40               	goto	u671
  2740  023F  2A41               	goto	u670
  2741  0240                     u671:
  2742  0240  2A4A               	goto	l1847
  2743  0241                     u670:
  2744  0241                     l1843:
  2745  0241  09BB               	comf	___awdiv@dividend,f
  2746  0242  09BC               	comf	___awdiv@dividend+1,f
  2747  0243  0ABB               	incf	___awdiv@dividend,f
  2748  0244  1903               	skipnz
  2749  0245  0ABC               	incf	___awdiv@dividend+1,f
  2750  0246                     l1845:
  2751  0246  3001               	movlw	1
  2752  0247  00BD               	movwf	??___awdiv
  2753  0248  083D               	movf	??___awdiv,w
  2754  0249  06BF               	xorwf	___awdiv@sign,f
  2755  024A                     l1847:
  2756  024A  01C0               	clrf	___awdiv@quotient
  2757  024B  01C1               	clrf	___awdiv@quotient+1
  2758  024C                     l1849:
  2759  024C  0839               	movf	___awdiv@divisor,w
  2760  024D  043A               	iorwf	___awdiv@divisor+1,w
  2761  024E  1903               	btfsc	3,2
  2762  024F  2A51               	goto	u681
  2763  0250  2A52               	goto	u680
  2764  0251                     u681:
  2765  0251  2A89               	goto	l1869
  2766  0252                     u680:
  2767  0252                     l1851:
  2768  0252  01BE               	clrf	___awdiv@counter
  2769  0253  0ABE               	incf	___awdiv@counter,f
  2770  0254  2A60               	goto	l1857
  2771  0255                     l1853:
  2772  0255  3001               	movlw	1
  2773  0256                     u695:
  2774  0256  1003               	clrc
  2775  0257  0DB9               	rlf	___awdiv@divisor,f
  2776  0258  0DBA               	rlf	___awdiv@divisor+1,f
  2777  0259  3EFF               	addlw	-1
  2778  025A  1D03               	skipz
  2779  025B  2A56               	goto	u695
  2780  025C                     l1855:
  2781  025C  3001               	movlw	1
  2782  025D  00BD               	movwf	??___awdiv
  2783  025E  083D               	movf	??___awdiv,w
  2784  025F  07BE               	addwf	___awdiv@counter,f
  2785  0260                     l1857:
  2786  0260  1FBA               	btfss	___awdiv@divisor+1,7
  2787  0261  2A63               	goto	u701
  2788  0262  2A64               	goto	u700
  2789  0263                     u701:
  2790  0263  2A55               	goto	l1853
  2791  0264                     u700:
  2792  0264                     l1859:
  2793  0264  3001               	movlw	1
  2794  0265                     u715:
  2795  0265  1003               	clrc
  2796  0266  0DC0               	rlf	___awdiv@quotient,f
  2797  0267  0DC1               	rlf	___awdiv@quotient+1,f
  2798  0268  3EFF               	addlw	-1
  2799  0269  1D03               	skipz
  2800  026A  2A65               	goto	u715
  2801  026B  083A               	movf	___awdiv@divisor+1,w
  2802  026C  023C               	subwf	___awdiv@dividend+1,w
  2803  026D  1D03               	skipz
  2804  026E  2A71               	goto	u725
  2805  026F  0839               	movf	___awdiv@divisor,w
  2806  0270  023B               	subwf	___awdiv@dividend,w
  2807  0271                     u725:
  2808  0271  1C03               	skipc
  2809  0272  2A74               	goto	u721
  2810  0273  2A75               	goto	u720
  2811  0274                     u721:
  2812  0274  2A7C               	goto	l1865
  2813  0275                     u720:
  2814  0275                     l1861:
  2815  0275  0839               	movf	___awdiv@divisor,w
  2816  0276  02BB               	subwf	___awdiv@dividend,f
  2817  0277  083A               	movf	___awdiv@divisor+1,w
  2818  0278  1C03               	skipc
  2819  0279  03BC               	decf	___awdiv@dividend+1,f
  2820  027A  02BC               	subwf	___awdiv@dividend+1,f
  2821  027B                     l1863:
  2822  027B  1440               	bsf	___awdiv@quotient,0
  2823  027C                     l1865:
  2824  027C  3001               	movlw	1
  2825  027D                     u735:
  2826  027D  1003               	clrc
  2827  027E  0CBA               	rrf	___awdiv@divisor+1,f
  2828  027F  0CB9               	rrf	___awdiv@divisor,f
  2829  0280  3EFF               	addlw	-1
  2830  0281  1D03               	skipz
  2831  0282  2A7D               	goto	u735
  2832  0283                     l1867:
  2833  0283  3001               	movlw	1
  2834  0284  02BE               	subwf	___awdiv@counter,f
  2835  0285  1D03               	btfss	3,2
  2836  0286  2A88               	goto	u741
  2837  0287  2A89               	goto	u740
  2838  0288                     u741:
  2839  0288  2A64               	goto	l1859
  2840  0289                     u740:
  2841  0289                     l1869:
  2842  0289  083F               	movf	___awdiv@sign,w
  2843  028A  1903               	btfsc	3,2
  2844  028B  2A8D               	goto	u751
  2845  028C  2A8E               	goto	u750
  2846  028D                     u751:
  2847  028D  2A93               	goto	l1873
  2848  028E                     u750:
  2849  028E                     l1871:
  2850  028E  09C0               	comf	___awdiv@quotient,f
  2851  028F  09C1               	comf	___awdiv@quotient+1,f
  2852  0290  0AC0               	incf	___awdiv@quotient,f
  2853  0291  1903               	skipnz
  2854  0292  0AC1               	incf	___awdiv@quotient+1,f
  2855  0293                     l1873:
  2856  0293  0841               	movf	___awdiv@quotient+1,w
  2857  0294  00BA               	movwf	?___awdiv+1
  2858  0295  0840               	movf	___awdiv@quotient,w
  2859  0296  00B9               	movwf	?___awdiv
  2860  0297                     l558:
  2861  0297  0008               	return
  2862  0298                     __end_of___awdiv:
  2863                           
  2864                           	psect	text16
  2865  05F7                     __ptext16:	
  2866 ;; *************** function _Lcd_Write_Char *****************
  2867 ;; Defined at:
  2868 ;;		line 95 in file "LCD_SPI.c"
  2869 ;; Parameters:    Size  Location     Type
  2870 ;;  a               1    wreg     unsigned char 
  2871 ;; Auto vars:     Size  Location     Type
  2872 ;;  a               1    2[BANK0 ] unsigned char 
  2873 ;; Return value:  Size  Location     Type
  2874 ;;                  1    wreg      void 
  2875 ;; Registers used:
  2876 ;;		wreg, status,2, status,0, pclath, cstack
  2877 ;; Tracked objects:
  2878 ;;		On entry : 0/0
  2879 ;;		On exit  : 0/0
  2880 ;;		Unchanged: 0/0
  2881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2882 ;;      Params:         0       0       0       0       0
  2883 ;;      Locals:         0       1       0       0       0
  2884 ;;      Temps:          0       1       0       0       0
  2885 ;;      Totals:         0       2       0       0       0
  2886 ;;Total ram usage:        2 bytes
  2887 ;; Hardware stack levels used:    1
  2888 ;; Hardware stack levels required when called:    3
  2889 ;; This function calls:
  2890 ;;		_Lcd_Port
  2891 ;; This function is called by:
  2892 ;;		_Conversion1
  2893 ;;		_Conversion2
  2894 ;;		_Conversion3
  2895 ;;		_Lcd_Write_String
  2896 ;; This function uses a non-reentrant model
  2897 ;;
  2898                           
  2899                           
  2900                           ;psect for function _Lcd_Write_Char
  2901  05F7                     _Lcd_Write_Char:
  2902                           
  2903                           ;incstack = 0
  2904                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2905                           ;Lcd_Write_Char@a stored from wreg
  2906  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  2907  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  2908  05F9  00BB               	movwf	Lcd_Write_Char@a
  2909  05FA                     l1789:
  2910                           
  2911                           ;LCD_SPI.c: 95: void Lcd_Write_Char(char a);LCD_SPI.c: 96: {;LCD_SPI.c: 97:     PORTEbit
      +                          s.RE0 = 1;
  2912  05FA  1409               	bsf	9,0	;volatile
  2913  05FB                     l1791:
  2914                           
  2915                           ;LCD_SPI.c: 98:     Lcd_Port(a);
  2916  05FB  083B               	movf	Lcd_Write_Char@a,w
  2917  05FC  120A  118A  2674  120A  118A  	fcall	_Lcd_Port
  2918  0601                     l1793:
  2919                           
  2920                           ;LCD_SPI.c: 99:     PORTEbits.RE1 = 1;
  2921  0601  1283               	bcf	3,5	;RP0=0, select bank0
  2922  0602  1303               	bcf	3,6	;RP1=0, select bank0
  2923  0603  1489               	bsf	9,1	;volatile
  2924  0604                     l1795:
  2925                           
  2926                           ;LCD_SPI.c: 100:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2927  0604  3019               	movlw	25
  2928  0605  1283               	bcf	3,5	;RP0=0, select bank0
  2929  0606  1303               	bcf	3,6	;RP1=0, select bank0
  2930  0607  00BA               	movwf	??_Lcd_Write_Char
  2931  0608                     u927:
  2932  0608  0BBA               	decfsz	??_Lcd_Write_Char,f
  2933  0609  2E08               	goto	u927
  2934  060A  2E0B               	nop2
  2935  060B                     l1797:
  2936                           
  2937                           ;LCD_SPI.c: 101:     PORTEbits.RE1 = 0;
  2938  060B  1283               	bcf	3,5	;RP0=0, select bank0
  2939  060C  1303               	bcf	3,6	;RP1=0, select bank0
  2940  060D  1089               	bcf	9,1	;volatile
  2941  060E                     l269:
  2942  060E  0008               	return
  2943  060F                     __end_of_Lcd_Write_Char:
  2944                           
  2945                           	psect	text17
  2946  0640                     __ptext17:	
  2947 ;; *************** function _interrup_config *****************
  2948 ;; Defined at:
  2949 ;;		line 188 in file "MAESTRO_SPI.c"
  2950 ;; Parameters:    Size  Location     Type
  2951 ;;		None
  2952 ;; Auto vars:     Size  Location     Type
  2953 ;;		None
  2954 ;; Return value:  Size  Location     Type
  2955 ;;                  1    wreg      void 
  2956 ;; Registers used:
  2957 ;;		status,2
  2958 ;; Tracked objects:
  2959 ;;		On entry : 0/0
  2960 ;;		On exit  : 0/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2963 ;;      Params:         0       0       0       0       0
  2964 ;;      Locals:         0       0       0       0       0
  2965 ;;      Temps:          0       0       0       0       0
  2966 ;;      Totals:         0       0       0       0       0
  2967 ;;Total ram usage:        0 bytes
  2968 ;; Hardware stack levels used:    1
  2969 ;; Hardware stack levels required when called:    2
  2970 ;; This function calls:
  2971 ;;		Nothing
  2972 ;; This function is called by:
  2973 ;;		_main
  2974 ;; This function uses a non-reentrant model
  2975 ;;
  2976                           
  2977                           
  2978                           ;psect for function _interrup_config
  2979  0640                     _interrup_config:
  2980  0640                     l2069:	
  2981                           ;incstack = 0
  2982                           ; Regs used in _interrup_config: [status,2]
  2983                           
  2984                           
  2985                           ;MAESTRO_SPI.c: 190: {
  2986  0640  178B               	bsf	11,7	;volatile
  2987                           
  2988                           ;MAESTRO_SPI.c: 191:     USART_lib_config();
  2989  0641  170B               	bsf	11,6	;volatile
  2990                           
  2991                           ;MAESTRO_SPI.c: 192: }
  2992  0642  168B               	bsf	11,5	;volatile
  2993                           
  2994                           ;MAESTRO_SPI.c: 193: 
  2995  0643  120B               	bcf	11,4	;volatile
  2996                           
  2997                           ;MAESTRO_SPI.c: 194: void SPI_config (void)
  2998  0644  118B               	bcf	11,3	;volatile
  2999                           
  3000                           ;MAESTRO_SPI.c: 195: {
  3001  0645  110B               	bcf	11,2	;volatile
  3002                           
  3003                           ;MAESTRO_SPI.c: 196:     SPI_Maestro_Init (0, 2);
  3004  0646  108B               	bcf	11,1	;volatile
  3005                           
  3006                           ;MAESTRO_SPI.c: 197: }
  3007  0647  100B               	bcf	11,0	;volatile
  3008  0648                     l2071:
  3009                           
  3010                           ;MAESTRO_SPI.c: 198: 
  3011  0648  1683               	bsf	3,5	;RP0=1, select bank1
  3012  0649  1303               	bcf	3,6	;RP1=0, select bank1
  3013  064A  0196               	clrf	22	;volatile
  3014  064B                     l168:
  3015  064B  0008               	return
  3016  064C                     __end_of_interrup_config:
  3017                           
  3018                           	psect	text18
  3019  0668                     __ptext18:	
  3020 ;; *************** function _USART_config *****************
  3021 ;; Defined at:
  3022 ;;		line 227 in file "MAESTRO_SPI.c"
  3023 ;; Parameters:    Size  Location     Type
  3024 ;;		None
  3025 ;; Auto vars:     Size  Location     Type
  3026 ;;		None
  3027 ;; Return value:  Size  Location     Type
  3028 ;;                  1    wreg      void 
  3029 ;; Registers used:
  3030 ;;		wreg, status,2, status,0, pclath, cstack
  3031 ;; Tracked objects:
  3032 ;;		On entry : 0/0
  3033 ;;		On exit  : 0/0
  3034 ;;		Unchanged: 0/0
  3035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3036 ;;      Params:         0       0       0       0       0
  3037 ;;      Locals:         0       0       0       0       0
  3038 ;;      Temps:          0       0       0       0       0
  3039 ;;      Totals:         0       0       0       0       0
  3040 ;;Total ram usage:        0 bytes
  3041 ;; Hardware stack levels used:    1
  3042 ;; Hardware stack levels required when called:    3
  3043 ;; This function calls:
  3044 ;;		_USART_lib_config
  3045 ;; This function is called by:
  3046 ;;		_main
  3047 ;; This function uses a non-reentrant model
  3048 ;;
  3049                           
  3050                           
  3051                           ;psect for function _USART_config
  3052  0668                     _USART_config:
  3053  0668                     l2099:	
  3054                           ;incstack = 0
  3055                           ; Regs used in _USART_config: [wreg+status,2+status,0+pclath+cstack]
  3056                           
  3057                           
  3058                           ;MAESTRO_SPI.c: 229:     virtual_display1();
  3059  0668  120A  118A  25BE  120A  118A  	fcall	_USART_lib_config
  3060  066D                     l177:
  3061  066D  0008               	return
  3062  066E                     __end_of_USART_config:
  3063                           
  3064                           	psect	text19
  3065  05BE                     __ptext19:	
  3066 ;; *************** function _USART_lib_config *****************
  3067 ;; Defined at:
  3068 ;;		line 19 in file "USART_SPI.c"
  3069 ;; Parameters:    Size  Location     Type
  3070 ;;		None
  3071 ;; Auto vars:     Size  Location     Type
  3072 ;;		None
  3073 ;; Return value:  Size  Location     Type
  3074 ;;                  1    wreg      void 
  3075 ;; Registers used:
  3076 ;;		wreg
  3077 ;; Tracked objects:
  3078 ;;		On entry : 0/0
  3079 ;;		On exit  : 0/0
  3080 ;;		Unchanged: 0/0
  3081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3082 ;;      Params:         0       0       0       0       0
  3083 ;;      Locals:         0       0       0       0       0
  3084 ;;      Temps:          0       0       0       0       0
  3085 ;;      Totals:         0       0       0       0       0
  3086 ;;Total ram usage:        0 bytes
  3087 ;; Hardware stack levels used:    1
  3088 ;; Hardware stack levels required when called:    2
  3089 ;; This function calls:
  3090 ;;		Nothing
  3091 ;; This function is called by:
  3092 ;;		_USART_config
  3093 ;; This function uses a non-reentrant model
  3094 ;;
  3095                           
  3096                           
  3097                           ;psect for function _USART_lib_config
  3098  05BE                     _USART_lib_config:
  3099  05BE                     l1915:	
  3100                           ;incstack = 0
  3101                           ; Regs used in _USART_lib_config: [wreg]
  3102                           
  3103                           
  3104                           ;USART_SPI.c: 21:     SPBRG = 25;
  3105  05BE  3019               	movlw	25
  3106  05BF  1683               	bsf	3,5	;RP0=1, select bank1
  3107  05C0  1303               	bcf	3,6	;RP1=0, select bank1
  3108  05C1  0099               	movwf	25	;volatile
  3109  05C2                     l1917:
  3110                           
  3111                           ;USART_SPI.c: 23:     TXSTAbits.CSRC = 0;
  3112  05C2  1398               	bcf	24,7	;volatile
  3113  05C3                     l1919:
  3114                           
  3115                           ;USART_SPI.c: 24:     TXSTAbits.TX9 = 0;
  3116  05C3  1318               	bcf	24,6	;volatile
  3117  05C4                     l1921:
  3118                           
  3119                           ;USART_SPI.c: 25:     TXSTAbits.TXEN = 1;
  3120  05C4  1698               	bsf	24,5	;volatile
  3121  05C5                     l1923:
  3122                           
  3123                           ;USART_SPI.c: 26:     TXSTAbits.SYNC = 0;
  3124  05C5  1218               	bcf	24,4	;volatile
  3125  05C6                     l1925:
  3126                           
  3127                           ;USART_SPI.c: 27:     TXSTAbits.SENDB= 0;
  3128  05C6  1198               	bcf	24,3	;volatile
  3129  05C7                     l1927:
  3130                           
  3131                           ;USART_SPI.c: 28:     TXSTAbits.BRGH = 1;
  3132  05C7  1518               	bsf	24,2	;volatile
  3133  05C8                     l1929:
  3134                           
  3135                           ;USART_SPI.c: 29:     TXSTAbits.TRMT = 0;
  3136  05C8  1098               	bcf	24,1	;volatile
  3137  05C9                     l1931:
  3138                           
  3139                           ;USART_SPI.c: 30:     TXSTAbits.TX9D = 0;
  3140  05C9  1018               	bcf	24,0	;volatile
  3141  05CA                     l1933:
  3142                           
  3143                           ;USART_SPI.c: 32:     RCSTAbits.SPEN = 1;
  3144  05CA  1283               	bcf	3,5	;RP0=0, select bank0
  3145  05CB  1303               	bcf	3,6	;RP1=0, select bank0
  3146  05CC  1798               	bsf	24,7	;volatile
  3147  05CD                     l1935:
  3148                           
  3149                           ;USART_SPI.c: 33:     RCSTAbits.RX9 = 0;
  3150  05CD  1318               	bcf	24,6	;volatile
  3151  05CE                     l1937:
  3152                           
  3153                           ;USART_SPI.c: 34:     RCSTAbits.SREN = 0;
  3154  05CE  1298               	bcf	24,5	;volatile
  3155  05CF                     l1939:
  3156                           
  3157                           ;USART_SPI.c: 35:     RCSTAbits.CREN = 1;
  3158  05CF  1618               	bsf	24,4	;volatile
  3159  05D0                     l1941:
  3160                           
  3161                           ;USART_SPI.c: 36:     RCSTAbits.ADDEN= 0;
  3162  05D0  1198               	bcf	24,3	;volatile
  3163  05D1                     l1943:
  3164                           
  3165                           ;USART_SPI.c: 37:     RCSTAbits.FERR = 0;
  3166  05D1  1118               	bcf	24,2	;volatile
  3167  05D2                     l1945:
  3168                           
  3169                           ;USART_SPI.c: 38:     RCSTAbits.OERR = 0;
  3170  05D2  1098               	bcf	24,1	;volatile
  3171  05D3                     l1947:
  3172                           
  3173                           ;USART_SPI.c: 39:     RCSTAbits.RX9D = 0;
  3174  05D3  1018               	bcf	24,0	;volatile
  3175  05D4                     l1949:
  3176                           
  3177                           ;USART_SPI.c: 41:     PIR1bits.RCIF = 0;
  3178  05D4  128C               	bcf	12,5	;volatile
  3179  05D5                     l1951:
  3180                           
  3181                           ;USART_SPI.c: 42:     PIE1bits.RCIE = 1;
  3182  05D5  1683               	bsf	3,5	;RP0=1, select bank1
  3183  05D6  1303               	bcf	3,6	;RP1=0, select bank1
  3184  05D7  168C               	bsf	12,5	;volatile
  3185  05D8                     l1953:
  3186                           
  3187                           ;USART_SPI.c: 43:     PIR1bits.TXIF = 0;
  3188  05D8  1283               	bcf	3,5	;RP0=0, select bank0
  3189  05D9  1303               	bcf	3,6	;RP1=0, select bank0
  3190  05DA  120C               	bcf	12,4	;volatile
  3191  05DB                     l228:
  3192  05DB  0008               	return
  3193  05DC                     __end_of_USART_lib_config:
  3194                           
  3195                           	psect	text20
  3196  0633                     __ptext20:	
  3197 ;; *************** function _SPI_config *****************
  3198 ;; Defined at:
  3199 ;;		line 232 in file "MAESTRO_SPI.c"
  3200 ;; Parameters:    Size  Location     Type
  3201 ;;		None
  3202 ;; Auto vars:     Size  Location     Type
  3203 ;;		None
  3204 ;; Return value:  Size  Location     Type
  3205 ;;                  1    wreg      void 
  3206 ;; Registers used:
  3207 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3208 ;; Tracked objects:
  3209 ;;		On entry : 0/0
  3210 ;;		On exit  : 0/0
  3211 ;;		Unchanged: 0/0
  3212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3213 ;;      Params:         0       0       0       0       0
  3214 ;;      Locals:         0       0       0       0       0
  3215 ;;      Temps:          0       1       0       0       0
  3216 ;;      Totals:         0       1       0       0       0
  3217 ;;Total ram usage:        1 bytes
  3218 ;; Hardware stack levels used:    1
  3219 ;; Hardware stack levels required when called:    3
  3220 ;; This function calls:
  3221 ;;		_SPI_Maestro_Init
  3222 ;; This function is called by:
  3223 ;;		_main
  3224 ;; This function uses a non-reentrant model
  3225 ;;
  3226                           
  3227                           
  3228                           ;psect for function _SPI_config
  3229  0633                     _SPI_config:
  3230  0633                     l2101:	
  3231                           ;incstack = 0
  3232                           ; Regs used in _SPI_config: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3233                           
  3234                           
  3235                           ;MAESTRO_SPI.c: 234:     if (dato_push < 10)
  3236  0633  3002               	movlw	2
  3237  0634  1283               	bcf	3,5	;RP0=0, select bank0
  3238  0635  1303               	bcf	3,6	;RP1=0, select bank0
  3239  0636  00BD               	movwf	??_SPI_config
  3240  0637  083D               	movf	??_SPI_config,w
  3241  0638  00B9               	movwf	SPI_Maestro_Init@SCK
  3242  0639  3000               	movlw	0
  3243  063A  120A  118A  214D  120A  118A  	fcall	_SPI_Maestro_Init
  3244  063F                     l180:
  3245  063F  0008               	return
  3246  0640                     __end_of_SPI_config:
  3247                           
  3248                           	psect	text21
  3249  014D                     __ptext21:	
  3250 ;; *************** function _SPI_Maestro_Init *****************
  3251 ;; Defined at:
  3252 ;;		line 4 in file "SPI_SPI.c"
  3253 ;; Parameters:    Size  Location     Type
  3254 ;;  port_mode       1    wreg     unsigned char 
  3255 ;;  SCK             1    0[BANK0 ] unsigned char 
  3256 ;; Auto vars:     Size  Location     Type
  3257 ;;  port_mode       1    3[BANK0 ] unsigned char 
  3258 ;; Return value:  Size  Location     Type
  3259 ;;                  1    wreg      void 
  3260 ;; Registers used:
  3261 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3262 ;; Tracked objects:
  3263 ;;		On entry : 0/0
  3264 ;;		On exit  : 0/0
  3265 ;;		Unchanged: 0/0
  3266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3267 ;;      Params:         0       1       0       0       0
  3268 ;;      Locals:         0       1       0       0       0
  3269 ;;      Temps:          0       2       0       0       0
  3270 ;;      Totals:         0       4       0       0       0
  3271 ;;Total ram usage:        4 bytes
  3272 ;; Hardware stack levels used:    1
  3273 ;; Hardware stack levels required when called:    2
  3274 ;; This function calls:
  3275 ;;		Nothing
  3276 ;; This function is called by:
  3277 ;;		_SPI_config
  3278 ;; This function uses a non-reentrant model
  3279 ;;
  3280                           
  3281                           
  3282                           ;psect for function _SPI_Maestro_Init
  3283  014D                     _SPI_Maestro_Init:
  3284                           
  3285                           ;incstack = 0
  3286                           ; Regs used in _SPI_Maestro_Init: [wreg-fsr0h+status,2+status,0]
  3287                           ;SPI_Maestro_Init@port_mode stored from wreg
  3288  014D  1283               	bcf	3,5	;RP0=0, select bank0
  3289  014E  1303               	bcf	3,6	;RP1=0, select bank0
  3290  014F  00BC               	movwf	SPI_Maestro_Init@port_mode
  3291  0150                     l1955:
  3292                           
  3293                           ;SPI_SPI.c: 4: void SPI_Maestro_Init (char port_mode, char SCK);SPI_SPI.c: 5: {;SPI_SPI.
      +                          c: 6:     TRISCbits.TRISC0 = 0;
  3294  0150  1683               	bsf	3,5	;RP0=1, select bank1
  3295  0151  1303               	bcf	3,6	;RP1=0, select bank1
  3296  0152  1007               	bcf	7,0	;volatile
  3297                           
  3298                           ;SPI_SPI.c: 7:     TRISCbits.TRISC1 = 0;
  3299  0153  1087               	bcf	7,1	;volatile
  3300                           
  3301                           ;SPI_SPI.c: 8:     TRISCbits.TRISC2 = 0;
  3302  0154  1107               	bcf	7,2	;volatile
  3303                           
  3304                           ;SPI_SPI.c: 9:     TRISCbits.TRISC5 = 0;
  3305  0155  1287               	bcf	7,5	;volatile
  3306                           
  3307                           ;SPI_SPI.c: 10:     TRISCbits.TRISC4 = 1;
  3308  0156  1607               	bsf	7,4	;volatile
  3309                           
  3310                           ;SPI_SPI.c: 11:     TRISCbits.TRISC3 = 0;
  3311  0157  1187               	bcf	7,3	;volatile
  3312                           
  3313                           ;SPI_SPI.c: 13:     switch (port_mode)
  3314  0158  2977               	goto	l1959
  3315  0159                     l283:	
  3316                           ;SPI_SPI.c: 14:     {;SPI_SPI.c: 15:         case 0:
  3317                           
  3318                           
  3319                           ;SPI_SPI.c: 16:             SSPCONbits.SSPM3 = 0;
  3320  0159  1194               	bcf	20,3	;volatile
  3321                           
  3322                           ;SPI_SPI.c: 17:             SSPCONbits.SSPM2 = 0;
  3323  015A  1114               	bcf	20,2	;volatile
  3324                           
  3325                           ;SPI_SPI.c: 18:             SSPCONbits.SSPM1 = 0;
  3326  015B  1094               	bcf	20,1	;volatile
  3327                           
  3328                           ;SPI_SPI.c: 19:             SSPCONbits.SSPM0 = 0;
  3329  015C  1014               	bcf	20,0	;volatile
  3330                           
  3331                           ;SPI_SPI.c: 21:             break;
  3332  015D  29A9               	goto	l1963
  3333  015E                     l285:	
  3334                           ;SPI_SPI.c: 22:          case 1:
  3335                           
  3336                           
  3337                           ;SPI_SPI.c: 23:             SSPCONbits.SSPM3 = 0;
  3338  015E  1194               	bcf	20,3	;volatile
  3339                           
  3340                           ;SPI_SPI.c: 24:             SSPCONbits.SSPM2 = 0;
  3341  015F  1114               	bcf	20,2	;volatile
  3342                           
  3343                           ;SPI_SPI.c: 25:             SSPCONbits.SSPM1 = 0;
  3344  0160  1094               	bcf	20,1	;volatile
  3345                           
  3346                           ;SPI_SPI.c: 26:             SSPCONbits.SSPM0 = 1;
  3347  0161  1414               	bsf	20,0	;volatile
  3348                           
  3349                           ;SPI_SPI.c: 28:             break;
  3350  0162  29A9               	goto	l1963
  3351  0163                     l286:	
  3352                           ;SPI_SPI.c: 29:          case 2:
  3353                           
  3354                           
  3355                           ;SPI_SPI.c: 30:             SSPCONbits.SSPM3 = 0;
  3356  0163  1194               	bcf	20,3	;volatile
  3357                           
  3358                           ;SPI_SPI.c: 31:             SSPCONbits.SSPM2 = 0;
  3359  0164  1114               	bcf	20,2	;volatile
  3360                           
  3361                           ;SPI_SPI.c: 32:             SSPCONbits.SSPM1 = 1;
  3362  0165  1494               	bsf	20,1	;volatile
  3363                           
  3364                           ;SPI_SPI.c: 33:             SSPCONbits.SSPM0 = 0;
  3365  0166  1014               	bcf	20,0	;volatile
  3366                           
  3367                           ;SPI_SPI.c: 35:             break;
  3368  0167  29A9               	goto	l1963
  3369  0168                     l287:	
  3370                           ;SPI_SPI.c: 36:          case 3:
  3371                           
  3372                           
  3373                           ;SPI_SPI.c: 37:             SSPCONbits.SSPM3 = 0;
  3374  0168  1194               	bcf	20,3	;volatile
  3375                           
  3376                           ;SPI_SPI.c: 38:             SSPCONbits.SSPM2 = 0;
  3377  0169  1114               	bcf	20,2	;volatile
  3378                           
  3379                           ;SPI_SPI.c: 39:             SSPCONbits.SSPM1 = 1;
  3380  016A  1494               	bsf	20,1	;volatile
  3381                           
  3382                           ;SPI_SPI.c: 40:             SSPCONbits.SSPM0 = 1;
  3383  016B  1414               	bsf	20,0	;volatile
  3384                           
  3385                           ;SPI_SPI.c: 41:             break;
  3386  016C  29A9               	goto	l1963
  3387  016D                     l288:	
  3388                           ;SPI_SPI.c: 42:          case 4:
  3389                           
  3390                           
  3391                           ;SPI_SPI.c: 43:             SSPCONbits.SSPM3 = 0;
  3392  016D  1194               	bcf	20,3	;volatile
  3393                           
  3394                           ;SPI_SPI.c: 44:             SSPCONbits.SSPM2 = 1;
  3395  016E  1514               	bsf	20,2	;volatile
  3396                           
  3397                           ;SPI_SPI.c: 45:             SSPCONbits.SSPM1 = 0;
  3398  016F  1094               	bcf	20,1	;volatile
  3399                           
  3400                           ;SPI_SPI.c: 46:             SSPCONbits.SSPM0 = 0;
  3401  0170  1014               	bcf	20,0	;volatile
  3402                           
  3403                           ;SPI_SPI.c: 48:             break;
  3404  0171  29A9               	goto	l1963
  3405  0172                     l289:	
  3406                           ;SPI_SPI.c: 49:          case 5:
  3407                           
  3408                           
  3409                           ;SPI_SPI.c: 50:             SSPCONbits.SSPM3 = 0;
  3410  0172  1194               	bcf	20,3	;volatile
  3411                           
  3412                           ;SPI_SPI.c: 51:             SSPCONbits.SSPM2 = 1;
  3413  0173  1514               	bsf	20,2	;volatile
  3414                           
  3415                           ;SPI_SPI.c: 52:             SSPCONbits.SSPM1 = 0;
  3416  0174  1094               	bcf	20,1	;volatile
  3417                           
  3418                           ;SPI_SPI.c: 53:             SSPCONbits.SSPM0 = 1;
  3419  0175  1414               	bsf	20,0	;volatile
  3420                           
  3421                           ;SPI_SPI.c: 54:             break;
  3422  0176  29A9               	goto	l1963
  3423  0177                     l1959:
  3424  0177  1283               	bcf	3,5	;RP0=0, select bank0
  3425  0178  1303               	bcf	3,6	;RP1=0, select bank0
  3426  0179  083C               	movf	SPI_Maestro_Init@port_mode,w
  3427  017A  00BA               	movwf	??_SPI_Maestro_Init
  3428  017B  01BB               	clrf	??_SPI_Maestro_Init+1
  3429                           
  3430                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3431                           ; Switch size 1, requested type "simple"
  3432                           ; Number of cases is 1, Range of values is 0 to 0
  3433                           ; switch strategies available:
  3434                           ; Name         Instructions Cycles
  3435                           ; simple_byte            4     3 (average)
  3436                           ; direct_byte           11     8 (fixed)
  3437                           ; jumptable            260     6 (fixed)
  3438                           ;	Chosen strategy is simple_byte
  3439  017C  083B               	movf	??_SPI_Maestro_Init+1,w
  3440  017D  3A00               	xorlw	0	; case 0
  3441  017E  1903               	skipnz
  3442  017F  2981               	goto	l2189
  3443  0180  29A9               	goto	l1963
  3444  0181                     l2189:
  3445                           
  3446                           ; Switch size 1, requested type "simple"
  3447                           ; Number of cases is 6, Range of values is 0 to 5
  3448                           ; switch strategies available:
  3449                           ; Name         Instructions Cycles
  3450                           ; simple_byte           19    10 (average)
  3451                           ; direct_byte           26     8 (fixed)
  3452                           ; jumptable            260     6 (fixed)
  3453                           ;	Chosen strategy is simple_byte
  3454  0181  083A               	movf	??_SPI_Maestro_Init,w
  3455  0182  3A00               	xorlw	0	; case 0
  3456  0183  1903               	skipnz
  3457  0184  2959               	goto	l283
  3458  0185  3A01               	xorlw	1	; case 1
  3459  0186  1903               	skipnz
  3460  0187  295E               	goto	l285
  3461  0188  3A03               	xorlw	3	; case 2
  3462  0189  1903               	skipnz
  3463  018A  2963               	goto	l286
  3464  018B  3A01               	xorlw	1	; case 3
  3465  018C  1903               	skipnz
  3466  018D  2968               	goto	l287
  3467  018E  3A07               	xorlw	7	; case 4
  3468  018F  1903               	skipnz
  3469  0190  296D               	goto	l288
  3470  0191  3A01               	xorlw	1	; case 5
  3471  0192  1903               	skipnz
  3472  0193  2972               	goto	l289
  3473  0194  29A9               	goto	l1963
  3474  0195                     l291:	
  3475                           ;SPI_SPI.c: 58:     {;SPI_SPI.c: 59:         case 0:
  3476                           
  3477                           
  3478                           ;SPI_SPI.c: 60:             SSPCONbits.CKP = 0;
  3479  0195  1214               	bcf	20,4	;volatile
  3480                           
  3481                           ;SPI_SPI.c: 61:             SSPSTATbits.CKE = 0;
  3482  0196  1683               	bsf	3,5	;RP0=1, select bank1
  3483  0197  1303               	bcf	3,6	;RP1=0, select bank1
  3484  0198  1314               	bcf	20,6	;volatile
  3485                           
  3486                           ;SPI_SPI.c: 63:             break;
  3487  0199  29BF               	goto	l292
  3488  019A                     l293:	
  3489                           ;SPI_SPI.c: 64:          case 1:
  3490                           
  3491                           
  3492                           ;SPI_SPI.c: 65:             SSPCONbits.CKP = 1;
  3493  019A  1614               	bsf	20,4	;volatile
  3494                           
  3495                           ;SPI_SPI.c: 66:             SSPSTATbits.CKE = 0;
  3496  019B  1683               	bsf	3,5	;RP0=1, select bank1
  3497  019C  1303               	bcf	3,6	;RP1=0, select bank1
  3498  019D  1314               	bcf	20,6	;volatile
  3499                           
  3500                           ;SPI_SPI.c: 68:             break;
  3501  019E  29BF               	goto	l292
  3502  019F                     l294:	
  3503                           ;SPI_SPI.c: 69:          case 2:
  3504                           
  3505                           
  3506                           ;SPI_SPI.c: 70:             SSPCONbits.CKP = 0;
  3507  019F  1214               	bcf	20,4	;volatile
  3508                           
  3509                           ;SPI_SPI.c: 71:             SSPSTATbits.CKE = 1;
  3510  01A0  1683               	bsf	3,5	;RP0=1, select bank1
  3511  01A1  1303               	bcf	3,6	;RP1=0, select bank1
  3512  01A2  1714               	bsf	20,6	;volatile
  3513                           
  3514                           ;SPI_SPI.c: 73:             break;
  3515  01A3  29BF               	goto	l292
  3516  01A4                     l295:	
  3517                           ;SPI_SPI.c: 74:          case 3:
  3518                           
  3519                           
  3520                           ;SPI_SPI.c: 75:             SSPCONbits.CKP = 1;
  3521  01A4  1614               	bsf	20,4	;volatile
  3522                           
  3523                           ;SPI_SPI.c: 76:             SSPSTATbits.CKE = 1;
  3524  01A5  1683               	bsf	3,5	;RP0=1, select bank1
  3525  01A6  1303               	bcf	3,6	;RP1=0, select bank1
  3526  01A7  1714               	bsf	20,6	;volatile
  3527                           
  3528                           ;SPI_SPI.c: 77:             break;
  3529  01A8  29BF               	goto	l292
  3530  01A9                     l1963:
  3531  01A9  0839               	movf	SPI_Maestro_Init@SCK,w
  3532  01AA  00BA               	movwf	??_SPI_Maestro_Init
  3533  01AB  01BB               	clrf	??_SPI_Maestro_Init+1
  3534                           
  3535                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3536                           ; Switch size 1, requested type "simple"
  3537                           ; Number of cases is 1, Range of values is 0 to 0
  3538                           ; switch strategies available:
  3539                           ; Name         Instructions Cycles
  3540                           ; simple_byte            4     3 (average)
  3541                           ; direct_byte           11     8 (fixed)
  3542                           ; jumptable            260     6 (fixed)
  3543                           ;	Chosen strategy is simple_byte
  3544  01AC  083B               	movf	??_SPI_Maestro_Init+1,w
  3545  01AD  3A00               	xorlw	0	; case 0
  3546  01AE  1903               	skipnz
  3547  01AF  29B1               	goto	l2191
  3548  01B0  29BF               	goto	l292
  3549  01B1                     l2191:
  3550                           
  3551                           ; Switch size 1, requested type "simple"
  3552                           ; Number of cases is 4, Range of values is 0 to 3
  3553                           ; switch strategies available:
  3554                           ; Name         Instructions Cycles
  3555                           ; simple_byte           13     7 (average)
  3556                           ; direct_byte           20     8 (fixed)
  3557                           ; jumptable            260     6 (fixed)
  3558                           ;	Chosen strategy is simple_byte
  3559  01B1  083A               	movf	??_SPI_Maestro_Init,w
  3560  01B2  3A00               	xorlw	0	; case 0
  3561  01B3  1903               	skipnz
  3562  01B4  2995               	goto	l291
  3563  01B5  3A01               	xorlw	1	; case 1
  3564  01B6  1903               	skipnz
  3565  01B7  299A               	goto	l293
  3566  01B8  3A03               	xorlw	3	; case 2
  3567  01B9  1903               	skipnz
  3568  01BA  299F               	goto	l294
  3569  01BB  3A01               	xorlw	1	; case 3
  3570  01BC  1903               	skipnz
  3571  01BD  29A4               	goto	l295
  3572  01BE  29BF               	goto	l292
  3573  01BF                     l292:
  3574                           
  3575                           ;SPI_SPI.c: 79:     SSPSTATbits.SMP = 0;
  3576  01BF  1683               	bsf	3,5	;RP0=1, select bank1
  3577  01C0  1303               	bcf	3,6	;RP1=0, select bank1
  3578  01C1  1394               	bcf	20,7	;volatile
  3579                           
  3580                           ;SPI_SPI.c: 80:     SSPCONbits.SSPEN = 1;
  3581  01C2  1283               	bcf	3,5	;RP0=0, select bank0
  3582  01C3  1303               	bcf	3,6	;RP1=0, select bank0
  3583  01C4  1694               	bsf	20,5	;volatile
  3584  01C5                     l296:
  3585  01C5  0008               	return
  3586  01C6                     __end_of_SPI_Maestro_Init:
  3587                           
  3588                           	psect	text22
  3589  0680                     __ptext22:	
  3590 ;; *************** function _SPI_Recibir *****************
  3591 ;; Defined at:
  3592 ;;		line 167 in file "SPI_SPI.c"
  3593 ;; Parameters:    Size  Location     Type
  3594 ;;		None
  3595 ;; Auto vars:     Size  Location     Type
  3596 ;;		None
  3597 ;; Return value:  Size  Location     Type
  3598 ;;                  1    wreg      unsigned char 
  3599 ;; Registers used:
  3600 ;;		wreg
  3601 ;; Tracked objects:
  3602 ;;		On entry : 0/0
  3603 ;;		On exit  : 0/0
  3604 ;;		Unchanged: 0/0
  3605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3606 ;;      Params:         0       0       0       0       0
  3607 ;;      Locals:         0       0       0       0       0
  3608 ;;      Temps:          0       0       0       0       0
  3609 ;;      Totals:         0       0       0       0       0
  3610 ;;Total ram usage:        0 bytes
  3611 ;; Hardware stack levels used:    1
  3612 ;; Hardware stack levels required when called:    2
  3613 ;; This function calls:
  3614 ;;		Nothing
  3615 ;; This function is called by:
  3616 ;;		_main
  3617 ;; This function uses a non-reentrant model
  3618 ;;
  3619                           
  3620                           
  3621                           ;psect for function _SPI_Recibir
  3622  0680                     _SPI_Recibir:
  3623  0680                     l2051:	
  3624                           ;incstack = 0
  3625                           ; Regs used in _SPI_Recibir: [wreg]
  3626                           
  3627                           
  3628                           ;SPI_SPI.c: 169:     return SSPBUF;
  3629  0680  1283               	bcf	3,5	;RP0=0, select bank0
  3630  0681  1303               	bcf	3,6	;RP1=0, select bank0
  3631  0682  0813               	movf	19,w	;volatile
  3632  0683                     l319:
  3633  0683  0008               	return
  3634  0684                     __end_of_SPI_Recibir:
  3635                           
  3636                           	psect	text23
  3637  066E                     __ptext23:	
  3638 ;; *************** function _SPI_Enviar *****************
  3639 ;; Defined at:
  3640 ;;		line 161 in file "SPI_SPI.c"
  3641 ;; Parameters:    Size  Location     Type
  3642 ;;  valor           1    wreg     unsigned char 
  3643 ;; Auto vars:     Size  Location     Type
  3644 ;;  valor           1    0[BANK0 ] unsigned char 
  3645 ;; Return value:  Size  Location     Type
  3646 ;;                  1    wreg      void 
  3647 ;; Registers used:
  3648 ;;		wreg
  3649 ;; Tracked objects:
  3650 ;;		On entry : 0/0
  3651 ;;		On exit  : 0/0
  3652 ;;		Unchanged: 0/0
  3653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3654 ;;      Params:         0       0       0       0       0
  3655 ;;      Locals:         0       1       0       0       0
  3656 ;;      Temps:          0       0       0       0       0
  3657 ;;      Totals:         0       1       0       0       0
  3658 ;;Total ram usage:        1 bytes
  3659 ;; Hardware stack levels used:    1
  3660 ;; Hardware stack levels required when called:    2
  3661 ;; This function calls:
  3662 ;;		Nothing
  3663 ;; This function is called by:
  3664 ;;		_main
  3665 ;; This function uses a non-reentrant model
  3666 ;;
  3667                           
  3668                           
  3669                           ;psect for function _SPI_Enviar
  3670  066E                     _SPI_Enviar:
  3671                           
  3672                           ;incstack = 0
  3673                           ; Regs used in _SPI_Enviar: [wreg]
  3674                           ;SPI_Enviar@valor stored from wreg
  3675  066E  1283               	bcf	3,5	;RP0=0, select bank0
  3676  066F  1303               	bcf	3,6	;RP1=0, select bank0
  3677  0670  00B9               	movwf	SPI_Enviar@valor
  3678  0671                     l2049:
  3679                           
  3680                           ;SPI_SPI.c: 161: void SPI_Enviar (char valor);SPI_SPI.c: 162: {;SPI_SPI.c: 163:     SSPB
      +                          UF = valor;
  3681  0671  0839               	movf	SPI_Enviar@valor,w
  3682  0672  0093               	movwf	19	;volatile
  3683  0673                     l316:
  3684  0673  0008               	return
  3685  0674                     __end_of_SPI_Enviar:
  3686                           
  3687                           	psect	text24
  3688  03BC                     __ptext24:	
  3689 ;; *************** function _Lcd_Init *****************
  3690 ;; Defined at:
  3691 ;;		line 37 in file "LCD_SPI.c"
  3692 ;; Parameters:    Size  Location     Type
  3693 ;;		None
  3694 ;; Auto vars:     Size  Location     Type
  3695 ;;		None
  3696 ;; Return value:  Size  Location     Type
  3697 ;;                  1    wreg      void 
  3698 ;; Registers used:
  3699 ;;		wreg, status,2, status,0, pclath, cstack
  3700 ;; Tracked objects:
  3701 ;;		On entry : 0/0
  3702 ;;		On exit  : 0/0
  3703 ;;		Unchanged: 0/0
  3704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3705 ;;      Params:         0       0       0       0       0
  3706 ;;      Locals:         0       0       0       0       0
  3707 ;;      Temps:          0       2       0       0       0
  3708 ;;      Totals:         0       2       0       0       0
  3709 ;;Total ram usage:        2 bytes
  3710 ;; Hardware stack levels used:    1
  3711 ;; Hardware stack levels required when called:    4
  3712 ;; This function calls:
  3713 ;;		_Lcd_Cmd
  3714 ;;		_Lcd_Port
  3715 ;; This function is called by:
  3716 ;;		_main
  3717 ;; This function uses a non-reentrant model
  3718 ;;
  3719                           
  3720                           
  3721                           ;psect for function _Lcd_Init
  3722  03BC                     _Lcd_Init:
  3723  03BC                     l2077:	
  3724                           ;incstack = 0
  3725                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3726                           
  3727                           
  3728                           ;LCD_SPI.c: 39:     Lcd_Port(0b0000000);
  3729  03BC  3000               	movlw	0
  3730  03BD  120A  118A  2674  120A  118A  	fcall	_Lcd_Port
  3731  03C2                     l2079:
  3732                           
  3733                           ;LCD_SPI.c: 40:     _delay((unsigned long)((20)*(8000000/4000.0)));
  3734  03C2  3034               	movlw	52
  3735  03C3  1283               	bcf	3,5	;RP0=0, select bank0
  3736  03C4  1303               	bcf	3,6	;RP1=0, select bank0
  3737  03C5  00BE               	movwf	??_Lcd_Init+1
  3738  03C6  30F1               	movlw	241
  3739  03C7  00BD               	movwf	??_Lcd_Init
  3740  03C8                     u937:
  3741  03C8  0BBD               	decfsz	??_Lcd_Init,f
  3742  03C9  2BC8               	goto	u937
  3743  03CA  0BBE               	decfsz	??_Lcd_Init+1,f
  3744  03CB  2BC8               	goto	u937
  3745  03CC                     l2081:
  3746                           
  3747                           ;LCD_SPI.c: 41:     Lcd_Cmd(0b00110000);
  3748  03CC  3030               	movlw	48
  3749  03CD  120A  118A  25DC  120A  118A  	fcall	_Lcd_Cmd
  3750  03D2                     l2083:
  3751                           
  3752                           ;LCD_SPI.c: 42:     PORTEbits.RE0 = 0;
  3753  03D2  1283               	bcf	3,5	;RP0=0, select bank0
  3754  03D3  1303               	bcf	3,6	;RP1=0, select bank0
  3755  03D4  1009               	bcf	9,0	;volatile
  3756  03D5                     l2085:
  3757                           
  3758                           ;LCD_SPI.c: 43:     PORTEbits.RE2 = 0;
  3759  03D5  1109               	bcf	9,2	;volatile
  3760                           
  3761                           ;LCD_SPI.c: 44:     _delay((unsigned long)((5)*(8000000/4000.0)));
  3762  03D6  300D               	movlw	13
  3763  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  3764  03D8  1303               	bcf	3,6	;RP1=0, select bank0
  3765  03D9  00BE               	movwf	??_Lcd_Init+1
  3766  03DA  30FB               	movlw	251
  3767  03DB  00BD               	movwf	??_Lcd_Init
  3768  03DC                     u947:
  3769  03DC  0BBD               	decfsz	??_Lcd_Init,f
  3770  03DD  2BDC               	goto	u947
  3771  03DE  0BBE               	decfsz	??_Lcd_Init+1,f
  3772  03DF  2BDC               	goto	u947
  3773  03E0                     l2087:
  3774                           
  3775                           ;LCD_SPI.c: 45:     Lcd_Cmd(0b00110000);
  3776  03E0  3030               	movlw	48
  3777  03E1  120A  118A  25DC  120A  118A  	fcall	_Lcd_Cmd
  3778  03E6                     l2089:
  3779                           
  3780                           ;LCD_SPI.c: 46:      PORTEbits.RE0 = 0;
  3781  03E6  1283               	bcf	3,5	;RP0=0, select bank0
  3782  03E7  1303               	bcf	3,6	;RP1=0, select bank0
  3783  03E8  1009               	bcf	9,0	;volatile
  3784  03E9                     l2091:
  3785                           
  3786                           ;LCD_SPI.c: 47:     PORTEbits.RE2 = 0;
  3787  03E9  1109               	bcf	9,2	;volatile
  3788  03EA                     l2093:
  3789                           
  3790                           ;LCD_SPI.c: 48:     _delay((unsigned long)((11)*(8000000/4000.0)));
  3791  03EA  301D               	movlw	29
  3792  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  3793  03EC  1303               	bcf	3,6	;RP1=0, select bank0
  3794  03ED  00BE               	movwf	??_Lcd_Init+1
  3795  03EE  3090               	movlw	144
  3796  03EF  00BD               	movwf	??_Lcd_Init
  3797  03F0                     u957:
  3798  03F0  0BBD               	decfsz	??_Lcd_Init,f
  3799  03F1  2BF0               	goto	u957
  3800  03F2  0BBE               	decfsz	??_Lcd_Init+1,f
  3801  03F3  2BF0               	goto	u957
  3802  03F4  0000               	nop
  3803                           
  3804                           ;LCD_SPI.c: 49:     Lcd_Cmd(0b00110000);
  3805  03F5  3030               	movlw	48
  3806  03F6  120A  118A  25DC  120A  118A  	fcall	_Lcd_Cmd
  3807  03FB                     l2095:
  3808                           
  3809                           ;LCD_SPI.c: 50:     PORTEbits.RE0 = 0;
  3810  03FB  1283               	bcf	3,5	;RP0=0, select bank0
  3811  03FC  1303               	bcf	3,6	;RP1=0, select bank0
  3812  03FD  1009               	bcf	9,0	;volatile
  3813  03FE                     l2097:
  3814                           
  3815                           ;LCD_SPI.c: 51:     PORTEbits.RE2 = 0;
  3816  03FE  1109               	bcf	9,2	;volatile
  3817                           
  3818                           ;LCD_SPI.c: 52:     Lcd_Cmd(0b00111000);
  3819  03FF  3038               	movlw	56
  3820  0400  120A  118A  25DC  120A  118A  	fcall	_Lcd_Cmd
  3821                           
  3822                           ;LCD_SPI.c: 53:     Lcd_Cmd(0b00001100);
  3823  0405  300C               	movlw	12
  3824  0406  120A  118A  25DC  120A  118A  	fcall	_Lcd_Cmd
  3825                           
  3826                           ;LCD_SPI.c: 54:     Lcd_Cmd(0b00000001);
  3827  040B  3001               	movlw	1
  3828  040C  120A  118A  25DC  120A  118A  	fcall	_Lcd_Cmd
  3829                           
  3830                           ;LCD_SPI.c: 55:     Lcd_Cmd(0b00000110);
  3831  0411  3006               	movlw	6
  3832  0412  120A  118A  25DC  120A  118A  	fcall	_Lcd_Cmd
  3833  0417                     l245:
  3834  0417  0008               	return
  3835  0418                     __end_of_Lcd_Init:
  3836                           
  3837                           	psect	text25
  3838  05DC                     __ptext25:	
  3839 ;; *************** function _Lcd_Cmd *****************
  3840 ;; Defined at:
  3841 ;;		line 28 in file "LCD_SPI.c"
  3842 ;; Parameters:    Size  Location     Type
  3843 ;;  a               1    wreg     unsigned char 
  3844 ;; Auto vars:     Size  Location     Type
  3845 ;;  a               1    3[BANK0 ] unsigned char 
  3846 ;; Return value:  Size  Location     Type
  3847 ;;                  1    wreg      void 
  3848 ;; Registers used:
  3849 ;;		wreg, status,2, status,0, pclath, cstack
  3850 ;; Tracked objects:
  3851 ;;		On entry : 0/0
  3852 ;;		On exit  : 0/0
  3853 ;;		Unchanged: 0/0
  3854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3855 ;;      Params:         0       0       0       0       0
  3856 ;;      Locals:         0       1       0       0       0
  3857 ;;      Temps:          0       2       0       0       0
  3858 ;;      Totals:         0       3       0       0       0
  3859 ;;Total ram usage:        3 bytes
  3860 ;; Hardware stack levels used:    1
  3861 ;; Hardware stack levels required when called:    3
  3862 ;; This function calls:
  3863 ;;		_Lcd_Port
  3864 ;; This function is called by:
  3865 ;;		_Lcd_Init
  3866 ;;		_Lcd_Set_Cursor
  3867 ;;		_Lcd_Clear
  3868 ;;		_Lcd_Shift_Left
  3869 ;;		_Lcd_Shift_Right
  3870 ;; This function uses a non-reentrant model
  3871 ;;
  3872                           
  3873                           
  3874                           ;psect for function _Lcd_Cmd
  3875  05DC                     _Lcd_Cmd:
  3876                           
  3877                           ;incstack = 0
  3878                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3879                           ;Lcd_Cmd@a stored from wreg
  3880  05DC  1283               	bcf	3,5	;RP0=0, select bank0
  3881  05DD  1303               	bcf	3,6	;RP1=0, select bank0
  3882  05DE  00BC               	movwf	Lcd_Cmd@a
  3883  05DF                     l1823:
  3884                           
  3885                           ;LCD_SPI.c: 28: void Lcd_Cmd (char a);LCD_SPI.c: 29: {;LCD_SPI.c: 30:     PORTEbits.RE0 
      +                          = 0;
  3886  05DF  1009               	bcf	9,0	;volatile
  3887  05E0                     l1825:
  3888                           
  3889                           ;LCD_SPI.c: 31:     Lcd_Port(a);
  3890  05E0  083C               	movf	Lcd_Cmd@a,w
  3891  05E1  120A  118A  2674  120A  118A  	fcall	_Lcd_Port
  3892  05E6                     l1827:
  3893                           
  3894                           ;LCD_SPI.c: 32:     PORTEbits.RE1 = 1;
  3895  05E6  1283               	bcf	3,5	;RP0=0, select bank0
  3896  05E7  1303               	bcf	3,6	;RP1=0, select bank0
  3897  05E8  1489               	bsf	9,1	;volatile
  3898  05E9                     l1829:
  3899                           
  3900                           ;LCD_SPI.c: 33:     _delay((unsigned long)((5)*(8000000/4000.0)));
  3901  05E9  300D               	movlw	13
  3902  05EA  1283               	bcf	3,5	;RP0=0, select bank0
  3903  05EB  1303               	bcf	3,6	;RP1=0, select bank0
  3904  05EC  00BB               	movwf	??_Lcd_Cmd+1
  3905  05ED  30FB               	movlw	251
  3906  05EE  00BA               	movwf	??_Lcd_Cmd
  3907  05EF                     u967:
  3908  05EF  0BBA               	decfsz	??_Lcd_Cmd,f
  3909  05F0  2DEF               	goto	u967
  3910  05F1  0BBB               	decfsz	??_Lcd_Cmd+1,f
  3911  05F2  2DEF               	goto	u967
  3912  05F3                     l1831:
  3913                           
  3914                           ;LCD_SPI.c: 34:     PORTEbits.RE1 = 0;
  3915  05F3  1283               	bcf	3,5	;RP0=0, select bank0
  3916  05F4  1303               	bcf	3,6	;RP1=0, select bank0
  3917  05F5  1089               	bcf	9,1	;volatile
  3918  05F6                     l242:
  3919  05F6  0008               	return
  3920  05F7                     __end_of_Lcd_Cmd:
  3921                           
  3922                           	psect	text26
  3923  0674                     __ptext26:	
  3924 ;; *************** function _Lcd_Port *****************
  3925 ;; Defined at:
  3926 ;;		line 23 in file "LCD_SPI.c"
  3927 ;; Parameters:    Size  Location     Type
  3928 ;;  a               1    wreg     unsigned char 
  3929 ;; Auto vars:     Size  Location     Type
  3930 ;;  a               1    0[BANK0 ] unsigned char 
  3931 ;; Return value:  Size  Location     Type
  3932 ;;                  1    wreg      void 
  3933 ;; Registers used:
  3934 ;;		wreg
  3935 ;; Tracked objects:
  3936 ;;		On entry : 0/0
  3937 ;;		On exit  : 0/0
  3938 ;;		Unchanged: 0/0
  3939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3940 ;;      Params:         0       0       0       0       0
  3941 ;;      Locals:         0       1       0       0       0
  3942 ;;      Temps:          0       0       0       0       0
  3943 ;;      Totals:         0       1       0       0       0
  3944 ;;Total ram usage:        1 bytes
  3945 ;; Hardware stack levels used:    1
  3946 ;; Hardware stack levels required when called:    2
  3947 ;; This function calls:
  3948 ;;		Nothing
  3949 ;; This function is called by:
  3950 ;;		_Lcd_Cmd
  3951 ;;		_Lcd_Init
  3952 ;;		_Lcd_Write_Char
  3953 ;; This function uses a non-reentrant model
  3954 ;;
  3955                           
  3956                           
  3957                           ;psect for function _Lcd_Port
  3958  0674                     _Lcd_Port:
  3959                           
  3960                           ;incstack = 0
  3961                           ; Regs used in _Lcd_Port: [wreg]
  3962                           ;Lcd_Port@a stored from wreg
  3963  0674  1283               	bcf	3,5	;RP0=0, select bank0
  3964  0675  1303               	bcf	3,6	;RP1=0, select bank0
  3965  0676  00B9               	movwf	Lcd_Port@a
  3966  0677                     l1787:
  3967                           
  3968                           ;LCD_SPI.c: 23: void Lcd_Port (char a);LCD_SPI.c: 24: {;LCD_SPI.c: 25:     PORTD = a;
  3969  0677  0839               	movf	Lcd_Port@a,w
  3970  0678  0088               	movwf	8	;volatile
  3971  0679                     l239:
  3972  0679  0008               	return
  3973  067A                     __end_of_Lcd_Port:
  3974                           
  3975                           	psect	text27
  3976  050B                     __ptext27:	
  3977 ;; *************** function _ISR *****************
  3978 ;; Defined at:
  3979 ;;		line 107 in file "MAESTRO_SPI.c"
  3980 ;; Parameters:    Size  Location     Type
  3981 ;;		None
  3982 ;; Auto vars:     Size  Location     Type
  3983 ;;		None
  3984 ;; Return value:  Size  Location     Type
  3985 ;;                  1    wreg      void 
  3986 ;; Registers used:
  3987 ;;		wreg, status,2, status,0, pclath, cstack
  3988 ;; Tracked objects:
  3989 ;;		On entry : 0/0
  3990 ;;		On exit  : 0/0
  3991 ;;		Unchanged: 0/0
  3992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3993 ;;      Params:         0       0       0       0       0
  3994 ;;      Locals:         0       0       0       0       0
  3995 ;;      Temps:          4       0       0       0       0
  3996 ;;      Totals:         4       0       0       0       0
  3997 ;;Total ram usage:        4 bytes
  3998 ;; Hardware stack levels used:    1
  3999 ;; Hardware stack levels required when called:    1
  4000 ;; This function calls:
  4001 ;;		i1_SPI_Enviar
  4002 ;;		i1_SPI_Recibir
  4003 ;; This function is called by:
  4004 ;;		Interrupt level 1
  4005 ;; This function uses a non-reentrant model
  4006 ;;
  4007                           
  4008                           
  4009                           ;psect for function _ISR
  4010  050B                     _ISR:
  4011  050B                     i1l1697:
  4012                           
  4013                           ;MAESTRO_SPI.c: 109:         _delay((unsigned long)((1)*(8000000/4000.0)));
  4014  050B  1D0B               	btfss	11,2	;volatile
  4015  050C  2D0E               	goto	u60_21
  4016  050D  2D0F               	goto	u60_20
  4017  050E                     u60_21:
  4018  050E  2D3A               	goto	i1l154
  4019  050F                     u60_20:
  4020  050F                     i1l1699:
  4021                           
  4022                           ;MAESTRO_SPI.c: 110:         PORTCbits.RC0 = 1;;MAESTRO_SPI.c: 112: 
  4023  050F  1283               	bcf	3,5	;RP0=0, select bank0
  4024  0510  1303               	bcf	3,6	;RP1=0, select bank0
  4025  0511  1087               	bcf	7,1	;volatile
  4026  0512                     i1l1701:
  4027                           
  4028                           ;MAESTRO_SPI.c: 113: 
  4029  0512  3003               	movlw	3
  4030  0513  00F7               	movwf	??_ISR+1
  4031  0514  3097               	movlw	151
  4032  0515  00F6               	movwf	??_ISR
  4033  0516                     u97_27:
  4034  0516  0BF6               	decfsz	??_ISR,f
  4035  0517  2D16               	goto	u97_27
  4036  0518  0BF7               	decfsz	??_ISR+1,f
  4037  0519  2D16               	goto	u97_27
  4038  051A  2D1B               	nop2
  4039  051B                     i1l1703:
  4040                           
  4041                           ;MAESTRO_SPI.c: 115: 
  4042  051B  1283               	bcf	3,5	;RP0=0, select bank0
  4043  051C  1303               	bcf	3,6	;RP1=0, select bank0
  4044  051D  0821               	movf	_dato_push1,w
  4045  051E  120A  118A  267A  120A  118A  	fcall	i1_SPI_Enviar
  4046  0523                     i1l1705:
  4047                           
  4048                           ;MAESTRO_SPI.c: 116:         lcd ();
  4049  0523  120A  118A  2684  120A  118A  	fcall	i1_SPI_Recibir
  4050  0528  00F6               	movwf	??_ISR
  4051  0529  0876               	movf	??_ISR,w
  4052  052A  00F0               	movwf	_dato_push
  4053  052B                     i1l1707:
  4054                           
  4055                           ;MAESTRO_SPI.c: 118:         velocidad2 = velocidad2 + 1;
  4056  052B  3003               	movlw	3
  4057  052C  00F7               	movwf	??_ISR+1
  4058  052D  3097               	movlw	151
  4059  052E  00F6               	movwf	??_ISR
  4060  052F                     u98_27:
  4061  052F  0BF6               	decfsz	??_ISR,f
  4062  0530  2D2F               	goto	u98_27
  4063  0531  0BF7               	decfsz	??_ISR+1,f
  4064  0532  2D2F               	goto	u98_27
  4065  0533  2D34               	nop2
  4066  0534                     i1l1709:
  4067                           
  4068                           ;MAESTRO_SPI.c: 119:         velocidad3 = velocidad3 + 1;
  4069  0534  1283               	bcf	3,5	;RP0=0, select bank0
  4070  0535  1303               	bcf	3,6	;RP1=0, select bank0
  4071  0536  1487               	bsf	7,1	;volatile
  4072  0537                     i1l1711:
  4073                           
  4074                           ;MAESTRO_SPI.c: 121: 
  4075  0537  110B               	bcf	11,2	;volatile
  4076  0538                     i1l1713:
  4077                           
  4078                           ;MAESTRO_SPI.c: 122:     }
  4079  0538  3064               	movlw	100
  4080  0539  0081               	movwf	1	;volatile
  4081  053A                     i1l154:
  4082  053A  0879               	movf	??_ISR+3,w
  4083  053B  008A               	movwf	10
  4084  053C  0E78               	swapf	??_ISR+2,w
  4085  053D  0083               	movwf	3
  4086  053E  0EFE               	swapf	btemp,f
  4087  053F  0E7E               	swapf	btemp,w
  4088  0540  0009               	retfie
  4089  0541                     __end_of_ISR:
  4090                           
  4091                           	psect	intentry
  4092  0004                     __pintentry:	
  4093                           ;incstack = 0
  4094                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  4095                           
  4096  0004                     interrupt_function:
  4097  007E                     saved_w	set	btemp
  4098  0004  00FE               	movwf	btemp
  4099  0005  0E03               	swapf	3,w
  4100  0006  00F8               	movwf	??_ISR+2
  4101  0007  080A               	movf	10,w
  4102  0008  00F9               	movwf	??_ISR+3
  4103  0009  120A  118A  2D0B   	ljmp	_ISR
  4104                           
  4105                           	psect	text28
  4106  0684                     __ptext28:	
  4107 ;; *************** function i1_SPI_Recibir *****************
  4108 ;; Defined at:
  4109 ;;		line 167 in file "SPI_SPI.c"
  4110 ;; Parameters:    Size  Location     Type
  4111 ;;		None
  4112 ;; Auto vars:     Size  Location     Type
  4113 ;;		None
  4114 ;; Return value:  Size  Location     Type
  4115 ;;                  1    wreg      unsigned char 
  4116 ;; Registers used:
  4117 ;;		wreg
  4118 ;; Tracked objects:
  4119 ;;		On entry : 0/0
  4120 ;;		On exit  : 0/0
  4121 ;;		Unchanged: 0/0
  4122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4123 ;;      Params:         0       0       0       0       0
  4124 ;;      Locals:         0       0       0       0       0
  4125 ;;      Temps:          0       0       0       0       0
  4126 ;;      Totals:         0       0       0       0       0
  4127 ;;Total ram usage:        0 bytes
  4128 ;; Hardware stack levels used:    1
  4129 ;; This function calls:
  4130 ;;		Nothing
  4131 ;; This function is called by:
  4132 ;;		_ISR
  4133 ;; This function uses a non-reentrant model
  4134 ;;
  4135                           
  4136                           
  4137                           ;psect for function i1_SPI_Recibir
  4138  0684                     i1_SPI_Recibir:
  4139  0684                     i1l1693:	
  4140                           ;incstack = 0
  4141                           ; Regs used in i1_SPI_Recibir: [wreg]
  4142                           
  4143                           
  4144                           ;SPI_SPI.c: 169:     return SSPBUF;
  4145  0684  1283               	bcf	3,5	;RP0=0, select bank0
  4146  0685  1303               	bcf	3,6	;RP1=0, select bank0
  4147  0686  0813               	movf	19,w	;volatile
  4148  0687                     i1l319:
  4149  0687  0008               	return
  4150  0688                     __end_ofi1_SPI_Recibir:
  4151                           
  4152                           	psect	text29
  4153  067A                     __ptext29:	
  4154 ;; *************** function i1_SPI_Enviar *****************
  4155 ;; Defined at:
  4156 ;;		line 161 in file "SPI_SPI.c"
  4157 ;; Parameters:    Size  Location     Type
  4158 ;;  valor           1    wreg     unsigned char 
  4159 ;; Auto vars:     Size  Location     Type
  4160 ;;  valor           1    0[COMMON] unsigned char 
  4161 ;; Return value:  Size  Location     Type
  4162 ;;                  1    wreg      void 
  4163 ;; Registers used:
  4164 ;;		wreg
  4165 ;; Tracked objects:
  4166 ;;		On entry : 0/0
  4167 ;;		On exit  : 0/0
  4168 ;;		Unchanged: 0/0
  4169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4170 ;;      Params:         0       0       0       0       0
  4171 ;;      Locals:         1       0       0       0       0
  4172 ;;      Temps:          0       0       0       0       0
  4173 ;;      Totals:         1       0       0       0       0
  4174 ;;Total ram usage:        1 bytes
  4175 ;; Hardware stack levels used:    1
  4176 ;; This function calls:
  4177 ;;		Nothing
  4178 ;; This function is called by:
  4179 ;;		_ISR
  4180 ;; This function uses a non-reentrant model
  4181 ;;
  4182                           
  4183                           
  4184                           ;psect for function i1_SPI_Enviar
  4185  067A                     i1_SPI_Enviar:
  4186                           
  4187                           ;incstack = 0
  4188                           ; Regs used in i1_SPI_Enviar: [wreg]
  4189                           ;i1SPI_Enviar@valor stored from wreg
  4190  067A  00F5               	movwf	i1SPI_Enviar@valor
  4191  067B                     i1l1691:
  4192                           
  4193                           ;SPI_SPI.c: 161: void SPI_Enviar (char valor);SPI_SPI.c: 162: {;SPI_SPI.c: 163:     SSPB
      +                          UF = valor;
  4194  067B  0875               	movf	i1SPI_Enviar@valor,w
  4195  067C  1283               	bcf	3,5	;RP0=0, select bank0
  4196  067D  1303               	bcf	3,6	;RP1=0, select bank0
  4197  067E  0093               	movwf	19	;volatile
  4198  067F                     i1l316:
  4199  067F  0008               	return
  4200  0680                     __end_ofi1_SPI_Enviar:
  4201  007E                     btemp	set	126	;btemp
  4202  007E                     wtemp0	set	126
  4203                           
  4204                           	psect	config
  4205                           
  4206                           ;Config register CONFIG1 @ 0x2007
  4207                           ;	Oscillator Selection bits
  4208                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4209                           ;	Watchdog Timer Enable bit
  4210                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4211                           ;	Power-up Timer Enable bit
  4212                           ;	PWRTE = OFF, PWRT disabled
  4213                           ;	RE3/MCLR pin function select bit
  4214                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4215                           ;	Code Protection bit
  4216                           ;	CP = OFF, Program memory code protection is disabled
  4217                           ;	Data Code Protection bit
  4218                           ;	CPD = OFF, Data memory code protection is disabled
  4219                           ;	Brown Out Reset Selection bits
  4220                           ;	BOREN = OFF, BOR disabled
  4221                           ;	Internal External Switchover bit
  4222                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4223                           ;	Fail-Safe Clock Monitor Enabled bit
  4224                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4225                           ;	Low Voltage Programming Enable bit
  4226                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4227                           ;	In-Circuit Debugger Mode bit
  4228                           ;	DEBUG = 0x1, unprogrammed default
  4229  2007                     	org	8199
  4230  2007  20D4               	dw	8404
  4231                           
  4232                           ;Config register CONFIG2 @ 0x2008
  4233                           ;	Brown-out Reset Selection bit
  4234                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4235                           ;	Flash Program Memory Self Write Enable bits
  4236                           ;	WRT = OFF, Write protection off
  4237  2008                     	org	8200
  4238  2008  3FFF               	dw	16383

Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         30
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     15      40
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1_SPI_Enviar

Critical Paths under _main in BANK0

    _main->_lcd
    _lcd->_Conversion1
    _lcd->_Conversion2
    _lcd->_Conversion3
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Conversion3->___awdiv
    _virtual_display3->_escribir_char
    _Conversion2->___awdiv
    _virtual_display2->_escribir_char
    _Conversion1->___awdiv
    _virtual_display1->_escribir_char
    _Lcd_Write_Char->_Lcd_Port
    _SPI_config->_SPI_Maestro_Init
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    9263
                                             13 BANK0      2     2      0
                           _Lcd_Init
                         _SPI_Enviar
                        _SPI_Recibir
                         _SPI_config
                       _USART_config
                    _interrup_config
                                _lcd
                         _osc_config
                              _setup
                        _tmr0_config
 ---------------------------------------------------------------------------------
 (1) _tmr0_config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _osc_config                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd                                                  1     1      0    8987
                                             12 BANK0      1     1      0
                        _Conversion1
                        _Conversion2
                        _Conversion3
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     3     3      0     228
                                              3 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       4     3      1     614
                                              4 BANK0      4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Conversion3                                          3     3      0    2715
                                              9 BANK0      3     3      0
                     _Lcd_Write_Char
                            ___awdiv
                            ___awmod
                   _virtual_display3
 ---------------------------------------------------------------------------------
 (3) _virtual_display3                                     0     0      0      31
                      _escribir_char
 ---------------------------------------------------------------------------------
 (2) _Conversion2                                          3     3      0    2715
                                              9 BANK0      3     3      0
                     _Lcd_Write_Char
                            ___awdiv
                            ___awmod
                   _virtual_display2
 ---------------------------------------------------------------------------------
 (3) _virtual_display2                                     0     0      0      31
                      _escribir_char
 ---------------------------------------------------------------------------------
 (2) _Conversion1                                          3     3      0    2715
                                              9 BANK0      3     3      0
                     _Lcd_Write_Char
                            ___awdiv
                            ___awmod
                   _virtual_display1
 ---------------------------------------------------------------------------------
 (3) _virtual_display1                                     0     0      0      31
                      _escribir_char
 ---------------------------------------------------------------------------------
 (4) _escribir_char                                        1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1305
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1317
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      62
                                              1 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _interrup_config                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_config                                         0     0      0       0
                   _USART_lib_config
 ---------------------------------------------------------------------------------
 (2) _USART_lib_config                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_config                                           1     1      0     152
                                              4 BANK0      1     1      0
                   _SPI_Maestro_Init
 ---------------------------------------------------------------------------------
 (2) _SPI_Maestro_Init                                     4     3      1     152
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _SPI_Recibir                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Enviar                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      93
                                              4 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      62
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  4     4      0      22
                                              1 COMMON     4     4      0
                       i1_SPI_Enviar
                      i1_SPI_Recibir
 ---------------------------------------------------------------------------------
 (6) i1_SPI_Recibir                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) i1_SPI_Enviar                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _SPI_Enviar
   _SPI_Recibir
   _SPI_config
     _SPI_Maestro_Init
   _USART_config
     _USART_lib_config
   _interrup_config
   _lcd
     _Conversion1
       _Lcd_Write_Char
         _Lcd_Port
       ___awdiv
       ___awmod
       _virtual_display1
         _escribir_char
     _Conversion2
       _Lcd_Write_Char
         _Lcd_Port
       ___awdiv
       ___awmod
       _virtual_display2
         _escribir_char
     _Conversion3
       _Lcd_Write_Char
         _Lcd_Port
       ___awdiv
       ___awmod
       _virtual_display3
         _escribir_char
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
   _osc_config
   _setup
   _tmr0_config

 _ISR (ROOT)
   i1_SPI_Enviar
   i1_SPI_Recibir

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      32       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      F      28       5       50.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      32      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 16 23:49:42 2021

              _SPI_Recibir 0680            SPI_Enviar@valor 0039                          _a 0026  
                        pc 0002                _SSPSTATbits 0094               ___awdiv@sign 003F  
                       _w1 0028                         _w2 0027                         _x1 0072  
                       _x2 0071                         _y1 0038                         _y2 0037  
               _SPI_config 0633     __size_of_escribir_char 000A                         fsr 0004  
                      l212 065B                        l205 00BF                        l215 065F  
                      l209 04C9                        l242 05F6                        l171 0655  
                      l316 0673                        l180 063F                        l228 05DB  
                      l260 0597                        l245 0417                        l165 056E  
                      l254 05BD                        l174 0632                        l239 0679  
                      l319 0683                        l183 050A                        l168 064B  
                      l192 02FA                        l177 066D                        l186 014C  
                      l291 0195                        l283 0159                        l195 035C  
                      l292 01BF                        l293 019A                        l285 015E  
                      l269 060E                        l294 019F                        l286 0163  
                      l295 01A4                        l287 0168                        l199 03BB  
                      l296 01C5                        l288 016D                        l289 0172  
                      l571 0472                        l558 0297    __end_of_interrup_config 064C  
                      u610 065F                        u611 065E                        u700 0264  
                      u620 0365                        _ISR 050B                        u701 0263  
                      u621 0364                        u630 0029                        u631 0028  
                      u720 0275                        u800 0447                        u640 002F  
                      u721 0274                        u801 0446                        u641 002E  
                      u810 0451                        u650 047B                        u715 0265  
                      u811 0450                        u651 047A                        u740 0289  
                      u660 0236                        u741 0288                        u725 0271  
                      u661 0235                        u750 028E                        u670 0241  
                      u830 0464                        u751 028D                        u735 027D  
                      u671 0240                        u831 0463                        u815 044D  
                      u680 0252                        u840 0469                        u760 041F  
                      u681 0251                        u841 0468                        u825 0458  
                      u761 041E                        u770 042A                        u850 05A0  
                      u771 0429                        u851 059F                        u907 01F2  
                      u780 0435                        u860 05B2                        u781 0434  
                      u861 05B1                        u917 020E                        u870 0597  
                      u927 0608                        u695 0256                        u871 0596  
                      u880 029E                        u937 03C8                        u881 029D  
                      u890 02B7                        u947 03DC                        u795 0439  
                      u891 02B6                        u957 03F0                        u967 05EF  
         _USART_lib_config 05BE                        _x1y 002E                        _x1z 0034  
                      _x2y 002C                        _x2z 0032                        _y1y 002D  
                      _y1z 0033                        _y2y 002B                        _y2z 0031  
                      _lcd 04CA              ??_Conversion1 0042              ??_Conversion2 0042  
            ??_Conversion3 0042                        fsr0 0004                        indf 0000  
             ___awmod@sign 003F                       ?_ISR 0075                       l2001 010A  
                     l2011 0138                       l2003 0120                       l2101 0633  
                     l2013 0141                       l2005 0124                       l2021 02B1  
                     l2015 0147                       l2007 012B                       l2023 02B7  
                     l2031 032F                       l2111 04E8                       l2103 04CA  
                     l2009 0131                       l2017 0298                       l2041 033F  
                     l2033 0330                       l2025 02FB                       l2113 04F4  
                     l2105 04D4                       l2121 01D5                       l2051 0680  
                     l2019 029E                       l2043 0348                       l2035 0331  
                     l2027 0303                       l2115 04F9                       l2107 04DA  
                     l2131 01EC                       l2123 01DA                       l2045 0351  
                     l2037 0332                       l2029 0319                       l2117 0505  
                     l2109 04E3                       l2061 055D                       l2141 0215  
                     l2133 01F6                       l2125 01DF                       l2071 0648  
                     l2047 0357                       l2039 0339                       l2063 0560  
                     l2055 0541                       l2135 01FE                       l2127 01E4  
                     l2119 01C6                       l2081 03CC                       l2049 0671  
                     l2065 0561                       l2057 0559                       l2073 0626  
                     l2137 0208                       l2129 01E9                       l2091 03E9  
                     l2083 03D2                       l2067 064C                       l2059 055C  
                     l2075 062E                       l2139 0212                       l2093 03EA  
                     l2085 03D5                       l2077 03BC                       l2069 0640  
                     l2095 03FB                       l2087 03E0                       l2079 03C2  
                     l2191 01B1                       l2097 03FE                       l2089 03E6  
                     l1801 0365                       l2099 0668                       l1803 03B8  
                     l1811 0072                       l2189 0181                       l1901 0451  
                     l1813 0076                       l1805 0021                       l1821 04C6  
                     l1831 05F3                       l1823 05DF                       l1911 046E  
                     l1903 0457                       l1807 0029                       l1825 05E0  
                     l1921 05C4                       l1841 023D                       l1833 022F  
                     l1905 045E                       l1809 002F                       l1817 0473  
                     ?_lcd 0075                       l1827 05E6                       l1931 05C9  
                     l1923 05C5                       l1915 05BE                       l1851 0252  
                     l1843 0241                       l1835 0232                       l1907 0464  
                     l1819 047B                       l1829 05E9                       l1941 05D0  
                     l1933 05CA                       l1925 05C6                       l1917 05C2  
                     l1861 0275                       l1853 0255                       l1845 0246  
                     l1837 0236                       l1909 0469                       l1951 05D5  
                     l1943 05D1                       l1935 05CD                       l1927 05C7  
                     l1919 05C3                       l1791 05FB                       l1871 028E  
                     l1863 027B                       l1855 025C                       l1847 024A  
                     l1839 023B                       l1953 05D8                       l1945 05D2  
                     l1937 05CE                       l1929 05C8                       l1793 0601  
                     l1873 0293                       l1865 027C                       l1857 0260  
                     l1849 024C                       l1881 041F                       l1785 0659  
                     l1787 0677                       l1963 01A9                       l1955 0150  
                     l1947 05D3                       l1939 05CF                       l1795 0604  
                     l1867 0283                       l1859 0264                       l1891 0435  
                     l1883 0424                       l1949 05D4                       l1797 060B  
                     l1789 05FA                       l1869 0289                       l1893 0438  
                     l1885 0426                       l1877 0418                       l1981 05B2  
                     l1973 059B                       l1959 0177                       l1895 043F  
                     l1887 042A                       l1879 041B                       l1799 035D  
                     l1983 05B7                       l1975 05A0                       l1991 058A  
                     l1897 0443                       l1889 042F                       l1993 00C0  
                     l1977 05A5                       l1985 0572                       l1899 0447  
                     l1995 00C8                       l1979 05AC                       l1987 0575  
                     l1997 00DE                       l1989 0582                       l1999 00F4  
                     STR_1 0615                       _IOCB 0096                       _TMR0 0001  
        ?_Lcd_Write_String 0075                       _main 01C6                       _leer 002A  
                     btemp 007E                       start 000C         ??_Lcd_Write_String 003C  
          __end_of_Lcd_Cmd 05F7      __end_ofi1_SPI_Recibir 0688                      ??_ISR 0076  
                    ??_lcd 0045                      ?_main 0075            __end_of___awdiv 0298  
          __end_of___awmod 0473                      _ANSEL 0188            ___awdiv@divisor 0039  
                    i1l154 053A                      i1l316 067F                      i1l319 0687  
          ___awdiv@counter 003E                      _SPBRG 0099                      _PORTA 0005  
                    _PORTB 0006                      _PORTC 0007                      _PORTD 0008  
                    _PORTE 0009                      u60_20 050F                      u60_21 050E  
  __size_of_Lcd_Set_Cursor 0026                      _TRISA 0085                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088                      _TRISE 0089  
                    _TXREG 0019                      u97_27 0516                      u98_27 052F  
                    _setup 0541        __end_of_Conversion1 014D        __end_of_Conversion2 02FB  
      __end_of_Conversion3 035D              _escribir_char 0656                      pclath 000A  
                    status 0003                      wtemp0 007E           __end_of_Lcd_Init 0418  
         __end_of_Lcd_Port 067A                ?_SPI_Enviar 0075            __initialization 000F  
             __end_of_main 022F        SPI_Maestro_Init@SCK 0039                ?_SPI_config 0075  
                   ??_main 0046           ?_interrup_config 0075   __end_of_virtual_display1 03BC  
 __end_of_virtual_display2 00C0               ?_tmr0_config 0075   __end_of_virtual_display3 04CA  
 __end_of_SPI_Maestro_Init 01C6           ___awdiv@dividend 003B             ?_escribir_char 0075  
                   ?_setup 0075                     _ANSELH 0189                     i1l1701 0512  
                   i1l1711 0537                     i1l1703 051B                     i1l1713 0538  
                   i1l1705 0523                     i1l1707 052B                     i1l1709 0534  
                   i1l1691 067B                     i1l1693 0684                     i1l1697 050B  
                   i1l1699 050F                  ??_Lcd_Cmd 003A    __size_of_Lcd_Write_Char 0018  
                   _SSPBUF 0013                  ??___awdiv 003D                  ??___awmod 003D  
         ___awdiv@quotient 0040            ___awmod@divisor 0039            ___awmod@counter 003E  
                   _unidad 0073                _Conversion1 00C0                _Conversion2 0298  
              _Conversion3 02FB                     saved_w 007E        __size_of_SPI_Enviar 0006  
          Lcd_Set_Cursor@a 003F            Lcd_Set_Cursor@b 003D    __end_of__initialization 001D  
      __size_of_SPI_config 000D   __end_of_USART_lib_config 05DC               ?_SPI_Recibir 0075  
           __pcstackCOMMON 0075              __end_of_setup 056F             _Lcd_Set_Cursor 0598  
           _OPTION_REGbits 0081              ?i1_SPI_Enviar 0075            ??_escribir_char 0039  
                ?_Lcd_Init 0075                  ?_Lcd_Port 0075                    ??_setup 0039  
               __pbssBANK0 0020                 __pmaintext 01C6                 _dato_push1 0021  
               __pintentry 0004  __size_of_Lcd_Write_String 0029     __end_of_Lcd_Set_Cursor 05BE  
           ??i1_SPI_Enviar 0075                 ??_Lcd_Init 003D                 ??_Lcd_Port 0039  
     __size_of_tmr0_config 000D                 __stringtab 060F             _Lcd_Write_Char 05F7  
                  _Lcd_Cmd 05DC               ??_SPI_Enviar 0039                    ___awdiv 022F  
                  ___awmod 0418               ??_SPI_config 003D            ?_Lcd_Set_Cursor 003D  
                  __ptext1 0626                    __ptext2 0541                    __ptext3 064C  
                  __ptext4 04CA                    __ptext5 056F                    __ptext6 0598  
                  __ptext7 02FB                    __ptext8 0473                    __ptext9 0298  
             __size_of_ISR 0036               __size_of_lcd 0041           ___awmod@dividend 003B  
        ?_virtual_display1 0075          ?_virtual_display2 0075          ?_virtual_display3 0075  
        ?_SPI_Maestro_Init 0039                    _unidady 002F                    _unidadz 0035  
       __end_of_SPI_Enviar 0674     __size_ofi1_SPI_Recibir 0004         ??_virtual_display1 003A  
       ??_virtual_display2 003A         ??_virtual_display3 003A                    clrloop0 0661  
       ??_SPI_Maestro_Init 003A                    _voltaje 0074     __end_of_Lcd_Write_Char 060F  
     end_of_initialization 001D                 _osc_config 064C         __end_of_SPI_config 0640  
                _RCSTAbits 0018                  Lcd_Port@a 0039       __size_of_SPI_Recibir 0004  
               _velocidad1 0025                 _velocidad2 0024                 _velocidad3 0023  
                _PORTCbits 0007                  _PORTEbits 0009               ?_Conversion1 0075  
             ?_Conversion2 0075               ?_Conversion3 0075                  _TRISAbits 0085  
                _TRISCbits 0087            ?_Lcd_Write_Char 0075   __size_of_interrup_config 000C  
        Lcd_Write_String@a 003C          Lcd_Write_String@i 003D                  _TXSTAbits 0098  
        ?_USART_lib_config 0075              ?_USART_config 0075       __end_ofi1_SPI_Enviar 0680  
       ??_USART_lib_config 0039              i1_SPI_Recibir 0684           _Lcd_Write_String 056F  
      start_initialization 000F                __end_of_ISR 0541                __end_of_lcd 050B  
        __size_of_Lcd_Init 005C          __size_of_Lcd_Port 0006                ?_osc_config 0075  
           ??_USART_config 0039          i1SPI_Enviar@valor 0075             ?i1_SPI_Recibir 0075  
          Lcd_Write_Char@a 003B                __pbssCOMMON 0070                  ___latbits 0002  
            __pcstackBANK0 0039      __end_of_escribir_char 0660                   ?_Lcd_Cmd 0075  
        ??_interrup_config 0039                  _dato_push 0070           ??_Lcd_Set_Cursor 003E  
                 ?___awdiv 0039                   ?___awmod 0039                  __pstrings 060F  
            _dato_semaforo 0020        __size_of_osc_config 000A              ??_tmr0_config 0039  
     __size_of_Conversion1 008D       __size_of_Conversion2 0063       __size_of_Conversion3 0062  
           __size_of_setup 002E          interrupt_function 0004      __size_ofi1_SPI_Enviar 0006  
                clear_ram0 0660                   _PIE1bits 008C            ??i1_SPI_Recibir 0075  
__size_of_virtual_display1 005F  __size_of_virtual_display2 009F  __size_of_virtual_display3 0057  
__size_of_SPI_Maestro_Init 0079                   Lcd_Cmd@a 003C                   _PIR1bits 000C  
              __stringbase 0614           ??_Lcd_Write_Char 003A       __end_of_USART_config 066E  
             i1_SPI_Enviar 067A                   _Lcd_Init 03BC                   _Lcd_Port 0674  
      __end_of_tmr0_config 0633   __end_of_Lcd_Write_String 0598           __size_of_Lcd_Cmd 001B  
            ??_SPI_Recibir 0039           __size_of___awdiv 0069           __size_of___awmod 005B  
       __end_of__stringtab 0615  __size_of_USART_lib_config 001E                   _dato_pot 0022  
                 __ptext10 0021                   __ptext11 00C0                   __ptext20 0633  
                 __ptext12 035D                   __ptext21 014D                   __ptext13 0656  
                 __ptext22 0680                   __ptext14 0418                   __ptext23 066E  
                 __ptext15 022F                   __ptext24 03BC                   __ptext16 05F7  
                 __ptext25 05DC                   __ptext17 0640                   __ptext26 0674  
                 __ptext18 0668                   __ptext27 050B                   __ptext19 05BE  
                 __ptext28 0684                   __ptext29 067A         escribir_char@valor 0039  
                 _contador 0029               ??_osc_config 0039              __size_of_main 0069  
                 _voltajey 0030                   _voltajez 0036        __end_of_SPI_Recibir 0684  
               _INTCONbits 000B         __end_of_osc_config 0656                _tmr0_config 0626  
          _interrup_config 0640                   intlevel1 0000           _virtual_display1 035D  
         _virtual_display2 0021           _virtual_display3 0473           _SPI_Maestro_Init 014D  
                stringcode 060F                 _OSCCONbits 008F         Lcd_Set_Cursor@temp 0040  
SPI_Maestro_Init@port_mode 003C      __size_of_USART_config 0006                   stringdir 060F  
                 stringtab 060F                 _SSPCONbits 0014                 _SPI_Enviar 066E  
             _USART_config 0668  
