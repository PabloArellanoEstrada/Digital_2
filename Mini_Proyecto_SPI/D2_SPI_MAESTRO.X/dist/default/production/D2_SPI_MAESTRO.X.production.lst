

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Feb 14 23:57:53 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	intentry,global,class=CODE,delta=2
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 2.20
    41                           ; Generated 12/02/2020 GMT
    42                           ; 
    43                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F887 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000D                     	;# 
    88  000E                     	;# 
    89  000E                     	;# 
    90  000F                     	;# 
    91  0010                     	;# 
    92  0011                     	;# 
    93  0012                     	;# 
    94  0013                     	;# 
    95  0014                     	;# 
    96  0015                     	;# 
    97  0015                     	;# 
    98  0016                     	;# 
    99  0017                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  001A                     	;# 
   103  001B                     	;# 
   104  001B                     	;# 
   105  001C                     	;# 
   106  001D                     	;# 
   107  001E                     	;# 
   108  001F                     	;# 
   109  0081                     	;# 
   110  0085                     	;# 
   111  0086                     	;# 
   112  0087                     	;# 
   113  0088                     	;# 
   114  0089                     	;# 
   115  008C                     	;# 
   116  008D                     	;# 
   117  008E                     	;# 
   118  008F                     	;# 
   119  0090                     	;# 
   120  0091                     	;# 
   121  0092                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0093                     	;# 
   125  0094                     	;# 
   126  0095                     	;# 
   127  0096                     	;# 
   128  0097                     	;# 
   129  0098                     	;# 
   130  0099                     	;# 
   131  009A                     	;# 
   132  009B                     	;# 
   133  009C                     	;# 
   134  009D                     	;# 
   135  009E                     	;# 
   136  009F                     	;# 
   137  0105                     	;# 
   138  0107                     	;# 
   139  0108                     	;# 
   140  0109                     	;# 
   141  010C                     	;# 
   142  010C                     	;# 
   143  010D                     	;# 
   144  010E                     	;# 
   145  010F                     	;# 
   146  0185                     	;# 
   147  0187                     	;# 
   148  0188                     	;# 
   149  0189                     	;# 
   150  018C                     	;# 
   151  018D                     	;# 
   152  0000                     	;# 
   153  0001                     	;# 
   154  0002                     	;# 
   155  0003                     	;# 
   156  0004                     	;# 
   157  0005                     	;# 
   158  0006                     	;# 
   159  0007                     	;# 
   160  0008                     	;# 
   161  0009                     	;# 
   162  000A                     	;# 
   163  000B                     	;# 
   164  000C                     	;# 
   165  000D                     	;# 
   166  000E                     	;# 
   167  000E                     	;# 
   168  000F                     	;# 
   169  0010                     	;# 
   170  0011                     	;# 
   171  0012                     	;# 
   172  0013                     	;# 
   173  0014                     	;# 
   174  0015                     	;# 
   175  0015                     	;# 
   176  0016                     	;# 
   177  0017                     	;# 
   178  0018                     	;# 
   179  0019                     	;# 
   180  001A                     	;# 
   181  001B                     	;# 
   182  001B                     	;# 
   183  001C                     	;# 
   184  001D                     	;# 
   185  001E                     	;# 
   186  001F                     	;# 
   187  0081                     	;# 
   188  0085                     	;# 
   189  0086                     	;# 
   190  0087                     	;# 
   191  0088                     	;# 
   192  0089                     	;# 
   193  008C                     	;# 
   194  008D                     	;# 
   195  008E                     	;# 
   196  008F                     	;# 
   197  0090                     	;# 
   198  0091                     	;# 
   199  0092                     	;# 
   200  0093                     	;# 
   201  0093                     	;# 
   202  0093                     	;# 
   203  0094                     	;# 
   204  0095                     	;# 
   205  0096                     	;# 
   206  0097                     	;# 
   207  0098                     	;# 
   208  0099                     	;# 
   209  009A                     	;# 
   210  009B                     	;# 
   211  009C                     	;# 
   212  009D                     	;# 
   213  009E                     	;# 
   214  009F                     	;# 
   215  0105                     	;# 
   216  0107                     	;# 
   217  0108                     	;# 
   218  0109                     	;# 
   219  010C                     	;# 
   220  010C                     	;# 
   221  010D                     	;# 
   222  010E                     	;# 
   223  010F                     	;# 
   224  0185                     	;# 
   225  0187                     	;# 
   226  0188                     	;# 
   227  0189                     	;# 
   228  018C                     	;# 
   229  018D                     	;# 
   230  0000                     	;# 
   231  0001                     	;# 
   232  0002                     	;# 
   233  0003                     	;# 
   234  0004                     	;# 
   235  0005                     	;# 
   236  0006                     	;# 
   237  0007                     	;# 
   238  0008                     	;# 
   239  0009                     	;# 
   240  000A                     	;# 
   241  000B                     	;# 
   242  000C                     	;# 
   243  000D                     	;# 
   244  000E                     	;# 
   245  000E                     	;# 
   246  000F                     	;# 
   247  0010                     	;# 
   248  0011                     	;# 
   249  0012                     	;# 
   250  0013                     	;# 
   251  0014                     	;# 
   252  0015                     	;# 
   253  0015                     	;# 
   254  0016                     	;# 
   255  0017                     	;# 
   256  0018                     	;# 
   257  0019                     	;# 
   258  001A                     	;# 
   259  001B                     	;# 
   260  001B                     	;# 
   261  001C                     	;# 
   262  001D                     	;# 
   263  001E                     	;# 
   264  001F                     	;# 
   265  0081                     	;# 
   266  0085                     	;# 
   267  0086                     	;# 
   268  0087                     	;# 
   269  0088                     	;# 
   270  0089                     	;# 
   271  008C                     	;# 
   272  008D                     	;# 
   273  008E                     	;# 
   274  008F                     	;# 
   275  0090                     	;# 
   276  0091                     	;# 
   277  0092                     	;# 
   278  0093                     	;# 
   279  0093                     	;# 
   280  0093                     	;# 
   281  0094                     	;# 
   282  0095                     	;# 
   283  0096                     	;# 
   284  0097                     	;# 
   285  0098                     	;# 
   286  0099                     	;# 
   287  009A                     	;# 
   288  009B                     	;# 
   289  009C                     	;# 
   290  009D                     	;# 
   291  009E                     	;# 
   292  009F                     	;# 
   293  0105                     	;# 
   294  0107                     	;# 
   295  0108                     	;# 
   296  0109                     	;# 
   297  010C                     	;# 
   298  010C                     	;# 
   299  010D                     	;# 
   300  010E                     	;# 
   301  010F                     	;# 
   302  0185                     	;# 
   303  0187                     	;# 
   304  0188                     	;# 
   305  0189                     	;# 
   306  018C                     	;# 
   307  018D                     	;# 
   308  0000                     	;# 
   309  0001                     	;# 
   310  0002                     	;# 
   311  0003                     	;# 
   312  0004                     	;# 
   313  0005                     	;# 
   314  0006                     	;# 
   315  0007                     	;# 
   316  0008                     	;# 
   317  0009                     	;# 
   318  000A                     	;# 
   319  000B                     	;# 
   320  000C                     	;# 
   321  000D                     	;# 
   322  000E                     	;# 
   323  000E                     	;# 
   324  000F                     	;# 
   325  0010                     	;# 
   326  0011                     	;# 
   327  0012                     	;# 
   328  0013                     	;# 
   329  0014                     	;# 
   330  0015                     	;# 
   331  0015                     	;# 
   332  0016                     	;# 
   333  0017                     	;# 
   334  0018                     	;# 
   335  0019                     	;# 
   336  001A                     	;# 
   337  001B                     	;# 
   338  001B                     	;# 
   339  001C                     	;# 
   340  001D                     	;# 
   341  001E                     	;# 
   342  001F                     	;# 
   343  0081                     	;# 
   344  0085                     	;# 
   345  0086                     	;# 
   346  0087                     	;# 
   347  0088                     	;# 
   348  0089                     	;# 
   349  008C                     	;# 
   350  008D                     	;# 
   351  008E                     	;# 
   352  008F                     	;# 
   353  0090                     	;# 
   354  0091                     	;# 
   355  0092                     	;# 
   356  0093                     	;# 
   357  0093                     	;# 
   358  0093                     	;# 
   359  0094                     	;# 
   360  0095                     	;# 
   361  0096                     	;# 
   362  0097                     	;# 
   363  0098                     	;# 
   364  0099                     	;# 
   365  009A                     	;# 
   366  009B                     	;# 
   367  009C                     	;# 
   368  009D                     	;# 
   369  009E                     	;# 
   370  009F                     	;# 
   371  0105                     	;# 
   372  0107                     	;# 
   373  0108                     	;# 
   374  0109                     	;# 
   375  010C                     	;# 
   376  010C                     	;# 
   377  010D                     	;# 
   378  010E                     	;# 
   379  010F                     	;# 
   380  0185                     	;# 
   381  0187                     	;# 
   382  0188                     	;# 
   383  0189                     	;# 
   384  018C                     	;# 
   385  018D                     	;# 
   386  0000                     	;# 
   387  0001                     	;# 
   388  0002                     	;# 
   389  0003                     	;# 
   390  0004                     	;# 
   391  0005                     	;# 
   392  0006                     	;# 
   393  0007                     	;# 
   394  0008                     	;# 
   395  0009                     	;# 
   396  000A                     	;# 
   397  000B                     	;# 
   398  000C                     	;# 
   399  000D                     	;# 
   400  000E                     	;# 
   401  000E                     	;# 
   402  000F                     	;# 
   403  0010                     	;# 
   404  0011                     	;# 
   405  0012                     	;# 
   406  0013                     	;# 
   407  0014                     	;# 
   408  0015                     	;# 
   409  0015                     	;# 
   410  0016                     	;# 
   411  0017                     	;# 
   412  0018                     	;# 
   413  0019                     	;# 
   414  001A                     	;# 
   415  001B                     	;# 
   416  001B                     	;# 
   417  001C                     	;# 
   418  001D                     	;# 
   419  001E                     	;# 
   420  001F                     	;# 
   421  0081                     	;# 
   422  0085                     	;# 
   423  0086                     	;# 
   424  0087                     	;# 
   425  0088                     	;# 
   426  0089                     	;# 
   427  008C                     	;# 
   428  008D                     	;# 
   429  008E                     	;# 
   430  008F                     	;# 
   431  0090                     	;# 
   432  0091                     	;# 
   433  0092                     	;# 
   434  0093                     	;# 
   435  0093                     	;# 
   436  0093                     	;# 
   437  0094                     	;# 
   438  0095                     	;# 
   439  0096                     	;# 
   440  0097                     	;# 
   441  0098                     	;# 
   442  0099                     	;# 
   443  009A                     	;# 
   444  009B                     	;# 
   445  009C                     	;# 
   446  009D                     	;# 
   447  009E                     	;# 
   448  009F                     	;# 
   449  0105                     	;# 
   450  0107                     	;# 
   451  0108                     	;# 
   452  0109                     	;# 
   453  010C                     	;# 
   454  010C                     	;# 
   455  010D                     	;# 
   456  010E                     	;# 
   457  010F                     	;# 
   458  0185                     	;# 
   459  0187                     	;# 
   460  0188                     	;# 
   461  0189                     	;# 
   462  018C                     	;# 
   463  018D                     	;# 
   464  0013                     _SSPBUF	set	19
   465  0014                     _SSPCONbits	set	20
   466  0007                     _PORTCbits	set	7
   467  0018                     _RCSTAbits	set	24
   468  0019                     _TXREG	set	25
   469  000B                     _INTCONbits	set	11
   470  0009                     _PORTE	set	9
   471  0008                     _PORTD	set	8
   472  0007                     _PORTC	set	7
   473  0006                     _PORTB	set	6
   474  0005                     _PORTA	set	5
   475  0005                     _PORTAbits	set	5
   476  000C                     _PIR1bits	set	12
   477  0094                     _SSPSTATbits	set	148
   478  0085                     _TRISAbits	set	133
   479  008C                     _PIE1bits	set	140
   480  0098                     _TXSTAbits	set	152
   481  0099                     _SPBRG	set	153
   482  008F                     _OSCCONbits	set	143
   483  0096                     _IOCB	set	150
   484  0089                     _TRISE	set	137
   485  0088                     _TRISD	set	136
   486  0087                     _TRISCbits	set	135
   487  0087                     _TRISC	set	135
   488  0086                     _TRISB	set	134
   489  0085                     _TRISA	set	133
   490  0189                     _ANSELH	set	393
   491  0188                     _ANSEL	set	392
   492                           
   493                           	psect	strings
   494  0483                     __pstrings:
   495  0483                     stringtab:
   496  0483                     __stringtab:
   497  0483                     stringcode:	
   498                           ;	String table - string pointers are 1 byte each
   499                           
   500  0483                     stringdir:
   501  0483  3004               	movlw	high stringdir
   502  0484  008A               	movwf	10
   503  0485  0804               	movf	4,w
   504  0486  0A84               	incf	4,f
   505  0487  0782               	addwf	2,f
   506  0488                     __stringbase:
   507  0488  3400               	retlw	0
   508  0489                     __end_of__stringtab:
   509  0489                     STR_1:
   510  0489  3453               	retlw	83	;'S'
   511  048A  3431               	retlw	49	;'1'
   512  048B  343A               	retlw	58	;':'
   513  048C  3420               	retlw	32	;' '
   514  048D  3420               	retlw	32	;' '
   515  048E  3420               	retlw	32	;' '
   516  048F  3453               	retlw	83	;'S'
   517  0490  3432               	retlw	50	;'2'
   518  0491  343A               	retlw	58	;':'
   519  0492  3420               	retlw	32	;' '
   520  0493  3420               	retlw	32	;' '
   521  0494  3420               	retlw	32	;' '
   522  0495  3453               	retlw	83	;'S'
   523  0496  3433               	retlw	51	;'3'
   524  0497  343A               	retlw	58	;':'
   525  0498  3420               	retlw	32	;' '
   526  0499  3400               	retlw	0
   527                           
   528                           	psect	cinit
   529  000F                     start_initialization:	
   530                           ; #config settings
   531                           
   532  000F                     __initialization:
   533                           
   534                           ; Clear objects allocated to COMMON
   535  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   536  0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   537                           
   538                           ; Clear objects allocated to BANK0
   539  0011  1383               	bcf	3,7	;select IRP bank0
   540  0012  3020               	movlw	low __pbssBANK0
   541  0013  0084               	movwf	4
   542  0014  3032               	movlw	low (__pbssBANK0+18)
   543  0015  120A  118A  24E8  120A  118A  	fcall	clear_ram0
   544  001A                     end_of_initialization:	
   545                           ;End of C runtime variable initialization code
   546                           
   547  001A                     __end_of__initialization:
   548  001A  0183               	clrf	3
   549  001B  120A  118A  290C   	ljmp	_main	;jump to C main() function
   550                           
   551                           	psect	bssCOMMON
   552  007A                     __pbssCOMMON:
   553  007A                     _x1:
   554  007A                     	ds	1
   555  007B                     _unidad:
   556  007B                     	ds	1
   557                           
   558                           	psect	bssBANK0
   559  0020                     __pbssBANK0:
   560  0020                     _velocidad3:
   561  0020                     	ds	1
   562  0021                     _velocidad2:
   563  0021                     	ds	1
   564  0022                     _velocidad1:
   565  0022                     	ds	1
   566  0023                     _a:
   567  0023                     	ds	1
   568  0024                     _w2:
   569  0024                     	ds	1
   570  0025                     _w1:
   571  0025                     	ds	1
   572  0026                     _contador:
   573  0026                     	ds	1
   574  0027                     _leer:
   575  0027                     	ds	1
   576  0028                     _y2z:
   577  0028                     	ds	1
   578  0029                     _x2z:
   579  0029                     	ds	1
   580  002A                     _y1z:
   581  002A                     	ds	1
   582  002B                     _x1z:
   583  002B                     	ds	1
   584  002C                     _unidadz:
   585  002C                     	ds	1
   586  002D                     _voltajez:
   587  002D                     	ds	1
   588  002E                     _y2:
   589  002E                     	ds	1
   590  002F                     _x2:
   591  002F                     	ds	1
   592  0030                     _y1:
   593  0030                     	ds	1
   594  0031                     _voltaje:
   595  0031                     	ds	1
   596                           
   597                           	psect	clrtext
   598  04E8                     clear_ram0:	
   599                           ;	Called with FSR containing the base address, and
   600                           ;	W with the last address+1
   601                           
   602  04E8  0064               	clrwdt	;clear the watchdog before getting into this loop
   603  04E9                     clrloop0:
   604  04E9  0180               	clrf	0	;clear RAM location pointed to by FSR
   605  04EA  0A84               	incf	4,f	;increment pointer
   606  04EB  0604               	xorwf	4,w	;XOR with final address
   607  04EC  1903               	btfsc	3,2	;have we reached the end yet?
   608  04ED  3400               	retlw	0	;all done for this memory range, return
   609  04EE  0604               	xorwf	4,w	;XOR again to restore value
   610  04EF  2CE9               	goto	clrloop0	;do the next byte
   611                           
   612                           	psect	cstackCOMMON
   613  0070                     __pcstackCOMMON:
   614  0070                     ?_setup:
   615  0070                     ?_osc_config:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0070                     ?_interrup_config:	
   619                           ; 1 bytes @ 0x0
   620                           
   621  0070                     ?_Lcd_Init:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0070                     ?_USART_config:	
   625                           ; 1 bytes @ 0x0
   626                           
   627  0070                     ?_SPI_config:	
   628                           ; 1 bytes @ 0x0
   629                           
   630  0070                     ?_SPI_Enviar:	
   631                           ; 1 bytes @ 0x0
   632                           
   633  0070                     ?_lcd:	
   634                           ; 1 bytes @ 0x0
   635                           
   636  0070                     ?_USART_lib_config:	
   637                           ; 1 bytes @ 0x0
   638                           
   639  0070                     ?_Lcd_Write_String:	
   640                           ; 1 bytes @ 0x0
   641                           
   642  0070                     ?_Conversion1:	
   643                           ; 1 bytes @ 0x0
   644                           
   645  0070                     ?_Conversion2:	
   646                           ; 1 bytes @ 0x0
   647                           
   648  0070                     ?_Lcd_Write_Char:	
   649                           ; 1 bytes @ 0x0
   650                           
   651  0070                     ?_virtual_display1:	
   652                           ; 1 bytes @ 0x0
   653                           
   654  0070                     ?_virtual_display2:	
   655                           ; 1 bytes @ 0x0
   656                           
   657  0070                     ?_virtual_display3:	
   658                           ; 1 bytes @ 0x0
   659                           
   660  0070                     ?_escribir_char:	
   661                           ; 1 bytes @ 0x0
   662                           
   663  0070                     ?_ISR:	
   664                           ; 1 bytes @ 0x0
   665                           
   666  0070                     ??_ISR:	
   667                           ; 1 bytes @ 0x0
   668                           
   669  0070                     ?_main:	
   670                           ; 1 bytes @ 0x0
   671                           
   672  0070                     ?_Lcd_Port:	
   673                           ; 1 bytes @ 0x0
   674                           
   675  0070                     ?_Lcd_Cmd:	
   676                           ; 1 bytes @ 0x0
   677                           
   678                           
   679                           ; 1 bytes @ 0x0
   680  0070                     	ds	2
   681  0072                     ??_setup:
   682  0072                     ??_osc_config:	
   683                           ; 1 bytes @ 0x2
   684                           
   685  0072                     ??_interrup_config:	
   686                           ; 1 bytes @ 0x2
   687                           
   688  0072                     ??_USART_config:	
   689                           ; 1 bytes @ 0x2
   690                           
   691  0072                     ??_SPI_Enviar:	
   692                           ; 1 bytes @ 0x2
   693                           
   694  0072                     ??_USART_lib_config:	
   695                           ; 1 bytes @ 0x2
   696                           
   697  0072                     ?_SPI_Maestro_Init:	
   698                           ; 1 bytes @ 0x2
   699                           
   700  0072                     ??_escribir_char:	
   701                           ; 1 bytes @ 0x2
   702                           
   703  0072                     ??_Lcd_Port:	
   704                           ; 1 bytes @ 0x2
   705                           
   706  0072                     ?___awdiv:	
   707                           ; 1 bytes @ 0x2
   708                           
   709  0072                     ?___awmod:	
   710                           ; 2 bytes @ 0x2
   711                           
   712  0072                     escribir_char@valor:	
   713                           ; 2 bytes @ 0x2
   714                           
   715  0072                     Lcd_Port@a:	
   716                           ; 1 bytes @ 0x2
   717                           
   718  0072                     SPI_Maestro_Init@SCK:	
   719                           ; 1 bytes @ 0x2
   720                           
   721  0072                     SPI_Enviar@valor:	
   722                           ; 1 bytes @ 0x2
   723                           
   724  0072                     ___awdiv@divisor:	
   725                           ; 1 bytes @ 0x2
   726                           
   727  0072                     ___awmod@divisor:	
   728                           ; 2 bytes @ 0x2
   729                           
   730                           
   731                           ; 2 bytes @ 0x2
   732  0072                     	ds	1
   733  0073                     ??_SPI_Maestro_Init:
   734  0073                     ??_Lcd_Write_Char:	
   735                           ; 1 bytes @ 0x3
   736                           
   737  0073                     ??_virtual_display1:	
   738                           ; 1 bytes @ 0x3
   739                           
   740  0073                     ??_virtual_display2:	
   741                           ; 1 bytes @ 0x3
   742                           
   743  0073                     ??_virtual_display3:	
   744                           ; 1 bytes @ 0x3
   745                           
   746  0073                     ??_Lcd_Cmd:	
   747                           ; 1 bytes @ 0x3
   748                           
   749                           
   750                           ; 1 bytes @ 0x3
   751  0073                     	ds	1
   752  0074                     Lcd_Write_Char@a:
   753  0074                     ___awdiv@dividend:	
   754                           ; 1 bytes @ 0x4
   755                           
   756  0074                     ___awmod@dividend:	
   757                           ; 2 bytes @ 0x4
   758                           
   759                           
   760                           ; 2 bytes @ 0x4
   761  0074                     	ds	1
   762  0075                     ??_Lcd_Write_String:
   763  0075                     Lcd_Cmd@a:	
   764                           ; 1 bytes @ 0x5
   765                           
   766  0075                     SPI_Maestro_Init@port_mode:	
   767                           ; 1 bytes @ 0x5
   768                           
   769  0075                     Lcd_Write_String@i:	
   770                           ; 1 bytes @ 0x5
   771                           
   772                           
   773                           ; 2 bytes @ 0x5
   774  0075                     	ds	1
   775  0076                     ??_Lcd_Init:
   776  0076                     ??_SPI_config:	
   777                           ; 1 bytes @ 0x6
   778                           
   779  0076                     ?_Lcd_Set_Cursor:	
   780                           ; 1 bytes @ 0x6
   781                           
   782  0076                     ??___awdiv:	
   783                           ; 1 bytes @ 0x6
   784                           
   785  0076                     ??___awmod:	
   786                           ; 1 bytes @ 0x6
   787                           
   788  0076                     Lcd_Set_Cursor@b:	
   789                           ; 1 bytes @ 0x6
   790                           
   791                           
   792                           ; 1 bytes @ 0x6
   793  0076                     	ds	1
   794  0077                     ??_Lcd_Set_Cursor:
   795  0077                     Lcd_Write_String@a:	
   796                           ; 1 bytes @ 0x7
   797                           
   798  0077                     ___awmod@counter:	
   799                           ; 1 bytes @ 0x7
   800                           
   801                           
   802                           ; 1 bytes @ 0x7
   803  0077                     	ds	1
   804  0078                     Lcd_Set_Cursor@a:
   805  0078                     ___awmod@sign:	
   806                           ; 1 bytes @ 0x8
   807                           
   808                           
   809                           ; 1 bytes @ 0x8
   810  0078                     	ds	1
   811  0079                     ??_Conversion1:
   812  0079                     ??_Conversion2:	
   813                           ; 1 bytes @ 0x9
   814                           
   815  0079                     Lcd_Set_Cursor@temp:	
   816                           ; 1 bytes @ 0x9
   817                           
   818                           
   819                           ; 1 bytes @ 0x9
   820  0079                     	ds	1
   821                           
   822                           	psect	cstackBANK0
   823  0032                     __pcstackBANK0:
   824  0032                     ___awdiv@counter:
   825                           
   826                           ; 1 bytes @ 0x0
   827  0032                     	ds	1
   828  0033                     ___awdiv@sign:
   829                           
   830                           ; 1 bytes @ 0x1
   831  0033                     	ds	1
   832  0034                     ___awdiv@quotient:
   833                           
   834                           ; 2 bytes @ 0x2
   835  0034                     	ds	2
   836  0036                     ??_lcd:
   837                           
   838                           ; 1 bytes @ 0x4
   839  0036                     	ds	1
   840  0037                     ??_main:
   841                           
   842                           ; 1 bytes @ 0x5
   843  0037                     	ds	3
   844  003A                     main@j:
   845                           
   846                           ; 1 bytes @ 0x8
   847  003A                     	ds	1
   848                           
   849                           	psect	maintext
   850  010C                     __pmaintext:	
   851 ;;
   852 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   853 ;;
   854 ;; *************** function _main *****************
   855 ;; Defined at:
   856 ;;		line 107 in file "MAESTRO_SPI.c"
   857 ;; Parameters:    Size  Location     Type
   858 ;;		None
   859 ;; Auto vars:     Size  Location     Type
   860 ;;  j               1    8[BANK0 ] unsigned char 
   861 ;; Return value:  Size  Location     Type
   862 ;;                  1    wreg      void 
   863 ;; Registers used:
   864 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   865 ;; Tracked objects:
   866 ;;		On entry : B00/0
   867 ;;		On exit  : 0/0
   868 ;;		Unchanged: 0/0
   869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   870 ;;      Params:         0       0       0       0       0
   871 ;;      Locals:         0       1       0       0       0
   872 ;;      Temps:          0       3       0       0       0
   873 ;;      Totals:         0       4       0       0       0
   874 ;;Total ram usage:        4 bytes
   875 ;; Hardware stack levels required when called:    5
   876 ;; This function calls:
   877 ;;		_Lcd_Init
   878 ;;		_SPI_Enviar
   879 ;;		_SPI_config
   880 ;;		_USART_config
   881 ;;		_interrup_config
   882 ;;		_lcd
   883 ;;		_osc_config
   884 ;;		_setup
   885 ;; This function is called by:
   886 ;;		Startup code after reset
   887 ;; This function uses a non-reentrant model
   888 ;;
   889                           
   890                           
   891                           ;psect for function _main
   892  010C                     _main:
   893  010C                     l1797:	
   894                           ;incstack = 0
   895                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   896                           
   897                           
   898                           ;MAESTRO_SPI.c: 109:     PORTC = 0;
   899  010C  120A  118A  23DC  120A  118A  	fcall	_setup
   900                           
   901                           ;MAESTRO_SPI.c: 110:     TRISD = 0;
   902  0111  120A  118A  24D4  120A  118A  	fcall	_osc_config
   903                           
   904                           ;MAESTRO_SPI.c: 111:     PORTD = 0;
   905  0116  120A  118A  24BD  120A  118A  	fcall	_interrup_config
   906  011B                     l1799:
   907                           
   908                           ;MAESTRO_SPI.c: 112:     TRISE = 0;
   909  011B  120A  118A  2228  120A  118A  	fcall	_Lcd_Init
   910  0120                     l1801:
   911                           
   912                           ;MAESTRO_SPI.c: 113:     PORTE = 0;
   913  0120  120A  118A  24F0  120A  118A  	fcall	_USART_config
   914  0125                     l1803:
   915                           
   916                           ;MAESTRO_SPI.c: 114: }
   917  0125  120A  118A  24C9  120A  118A  	fcall	_SPI_config
   918  012A                     l1805:
   919                           
   920                           ;MAESTRO_SPI.c: 116: void interrup_config (void);MAESTRO_SPI.c: 117: {
   921  012A  1283               	bcf	3,5	;RP0=0, select bank0
   922  012B  1303               	bcf	3,6	;RP1=0, select bank0
   923  012C  1385               	bcf	5,7	;volatile
   924  012D                     l1807:
   925                           
   926                           ;MAESTRO_SPI.c: 118:     INTCONbits.GIE = 1;
   927  012D  01BA               	clrf	main@j
   928  012E                     l1813:
   929                           
   930                           ;MAESTRO_SPI.c: 119:     INTCONbits.PEIE = 1;;MAESTRO_SPI.c: 120:     INTCONbits.T0IE = 
      +                          0;
   931  012E  083A               	movf	main@j,w
   932  012F  120A  118A  24F6  120A  118A  	fcall	_SPI_Enviar
   933  0134                     l1815:
   934                           
   935                           ;MAESTRO_SPI.c: 121:     INTCONbits.INTE = 0;
   936  0134  3003               	movlw	3
   937  0135  1283               	bcf	3,5	;RP0=0, select bank0
   938  0136  1303               	bcf	3,6	;RP1=0, select bank0
   939  0137  00B9               	movwf	??_main+2
   940  0138  308A               	movlw	138
   941  0139  00B8               	movwf	??_main+1
   942  013A  3055               	movlw	85
   943  013B  00B7               	movwf	??_main
   944  013C                     u677:
   945  013C  0BB7               	decfsz	??_main,f
   946  013D  293C               	goto	u677
   947  013E  0BB8               	decfsz	??_main+1,f
   948  013F  293C               	goto	u677
   949  0140  0BB9               	decfsz	??_main+2,f
   950  0141  293C               	goto	u677
   951  0142                     l1817:
   952                           
   953                           ;MAESTRO_SPI.c: 122:     INTCONbits.RBIE = 0;
   954  0142  3001               	movlw	1
   955  0143  1283               	bcf	3,5	;RP0=0, select bank0
   956  0144  1303               	bcf	3,6	;RP1=0, select bank0
   957  0145  00B7               	movwf	??_main
   958  0146  0837               	movf	??_main,w
   959  0147  07BA               	addwf	main@j,f
   960  0148                     l1819:
   961  0148  3010               	movlw	16
   962  0149  023A               	subwf	main@j,w
   963  014A  1C03               	skipc
   964  014B  294D               	goto	u661
   965  014C  294E               	goto	u660
   966  014D                     u661:
   967  014D  292E               	goto	l1813
   968  014E                     u660:
   969  014E                     l131:
   970                           
   971                           ;MAESTRO_SPI.c: 123:     INTCONbits.T0IF = 0;
   972  014E  1785               	bsf	5,7	;volatile
   973  014F                     l1821:
   974                           
   975                           ;MAESTRO_SPI.c: 124:     INTCONbits.INTF = 0;
   976  014F  3082               	movlw	130
   977  0150  1283               	bcf	3,5	;RP0=0, select bank0
   978  0151  1303               	bcf	3,6	;RP1=0, select bank0
   979  0152  00B8               	movwf	??_main+1
   980  0153  30DD               	movlw	221
   981  0154  00B7               	movwf	??_main
   982  0155                     u687:
   983  0155  0BB7               	decfsz	??_main,f
   984  0156  2955               	goto	u687
   985  0157  0BB8               	decfsz	??_main+1,f
   986  0158  2955               	goto	u687
   987  0159                     l1823:
   988                           
   989                           ;MAESTRO_SPI.c: 125:     INTCONbits.RBIF = 0;
   990  0159  120A  118A  2374  120A  118A  	fcall	_lcd
   991  015E                     l1825:
   992                           
   993                           ;MAESTRO_SPI.c: 126:     IOCB = 0b00000000;
   994  015E  1283               	bcf	3,5	;RP0=0, select bank0
   995  015F  1303               	bcf	3,6	;RP1=0, select bank0
   996  0160  0822               	movf	_velocidad1,w
   997  0161  3E01               	addlw	1
   998  0162  00B7               	movwf	??_main
   999  0163  0837               	movf	??_main,w
  1000  0164  00A2               	movwf	_velocidad1
  1001  0165                     l1827:
  1002                           
  1003                           ;MAESTRO_SPI.c: 127: }
  1004  0165  0821               	movf	_velocidad2,w
  1005  0166  3E01               	addlw	1
  1006  0167  00B7               	movwf	??_main
  1007  0168  0837               	movf	??_main,w
  1008  0169  00A1               	movwf	_velocidad2
  1009  016A                     l1829:
  1010                           
  1011                           ;MAESTRO_SPI.c: 128: 
  1012  016A  0820               	movf	_velocidad3,w
  1013  016B  3E01               	addlw	1
  1014  016C  00B7               	movwf	??_main
  1015  016D  0837               	movf	??_main,w
  1016  016E  00A0               	movwf	_velocidad3
  1017  016F  292A               	goto	l1805
  1018  0170  120A  118A  280C   	ljmp	start
  1019  0173                     __end_of_main:
  1020                           
  1021                           	psect	text1
  1022  03DC                     __ptext1:	
  1023 ;; *************** function _setup *****************
  1024 ;; Defined at:
  1025 ;;		line 136 in file "MAESTRO_SPI.c"
  1026 ;; Parameters:    Size  Location     Type
  1027 ;;		None
  1028 ;; Auto vars:     Size  Location     Type
  1029 ;;		None
  1030 ;; Return value:  Size  Location     Type
  1031 ;;                  1    wreg      void 
  1032 ;; Registers used:
  1033 ;;		status,2
  1034 ;; Tracked objects:
  1035 ;;		On entry : 0/0
  1036 ;;		On exit  : 0/0
  1037 ;;		Unchanged: 0/0
  1038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1039 ;;      Params:         0       0       0       0       0
  1040 ;;      Locals:         0       0       0       0       0
  1041 ;;      Temps:          0       0       0       0       0
  1042 ;;      Totals:         0       0       0       0       0
  1043 ;;Total ram usage:        0 bytes
  1044 ;; Hardware stack levels used:    1
  1045 ;; Hardware stack levels required when called:    1
  1046 ;; This function calls:
  1047 ;;		Nothing
  1048 ;; This function is called by:
  1049 ;;		_main
  1050 ;; This function uses a non-reentrant model
  1051 ;;
  1052                           
  1053                           
  1054                           ;psect for function _setup
  1055  03DC                     _setup:
  1056  03DC                     l1543:	
  1057                           ;incstack = 0
  1058                           ; Regs used in _setup: [status,2]
  1059                           
  1060                           
  1061                           ;MAESTRO_SPI.c: 138: }
  1062  03DC  1683               	bsf	3,5	;RP0=1, select bank3
  1063  03DD  1703               	bsf	3,6	;RP1=1, select bank3
  1064  03DE  0188               	clrf	8	;volatile
  1065                           
  1066                           ;MAESTRO_SPI.c: 139: 
  1067  03DF  1683               	bsf	3,5	;RP0=1, select bank1
  1068  03E0  1303               	bcf	3,6	;RP1=0, select bank1
  1069  03E1  0185               	clrf	5	;volatile
  1070                           
  1071                           ;MAESTRO_SPI.c: 140: 
  1072  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  1073  03E3  1303               	bcf	3,6	;RP1=0, select bank0
  1074  03E4  0185               	clrf	5	;volatile
  1075                           
  1076                           ;MAESTRO_SPI.c: 141: 
  1077  03E5  1683               	bsf	3,5	;RP0=1, select bank3
  1078  03E6  1703               	bsf	3,6	;RP1=1, select bank3
  1079  03E7  0189               	clrf	9	;volatile
  1080                           
  1081                           ;MAESTRO_SPI.c: 142: 
  1082  03E8  1683               	bsf	3,5	;RP0=1, select bank1
  1083  03E9  1303               	bcf	3,6	;RP1=0, select bank1
  1084  03EA  0186               	clrf	6	;volatile
  1085                           
  1086                           ;MAESTRO_SPI.c: 143: 
  1087  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  1088  03EC  1303               	bcf	3,6	;RP1=0, select bank0
  1089  03ED  0186               	clrf	6	;volatile
  1090                           
  1091                           ;MAESTRO_SPI.c: 144: void USART_config(void)
  1092  03EE  1683               	bsf	3,5	;RP0=1, select bank1
  1093  03EF  1303               	bcf	3,6	;RP1=0, select bank1
  1094  03F0  0187               	clrf	7	;volatile
  1095  03F1                     l1545:
  1096                           
  1097                           ;MAESTRO_SPI.c: 145: {
  1098  03F1  1307               	bcf	7,6	;volatile
  1099  03F2                     l1547:
  1100                           
  1101                           ;MAESTRO_SPI.c: 146:     USART_lib_config();
  1102  03F2  1607               	bsf	7,4	;volatile
  1103                           
  1104                           ;MAESTRO_SPI.c: 147: }
  1105  03F3  1283               	bcf	3,5	;RP0=0, select bank0
  1106  03F4  1303               	bcf	3,6	;RP1=0, select bank0
  1107  03F5  0187               	clrf	7	;volatile
  1108                           
  1109                           ;MAESTRO_SPI.c: 148: 
  1110  03F6  1683               	bsf	3,5	;RP0=1, select bank1
  1111  03F7  1303               	bcf	3,6	;RP1=0, select bank1
  1112  03F8  0188               	clrf	8	;volatile
  1113                           
  1114                           ;MAESTRO_SPI.c: 149: void SPI_config (void)
  1115  03F9  1283               	bcf	3,5	;RP0=0, select bank0
  1116  03FA  1303               	bcf	3,6	;RP1=0, select bank0
  1117  03FB  0188               	clrf	8	;volatile
  1118                           
  1119                           ;MAESTRO_SPI.c: 150: {
  1120  03FC  1683               	bsf	3,5	;RP0=1, select bank1
  1121  03FD  1303               	bcf	3,6	;RP1=0, select bank1
  1122  03FE  0189               	clrf	9	;volatile
  1123                           
  1124                           ;MAESTRO_SPI.c: 151:     SPI_Maestro_Init (0, 2);
  1125  03FF  1283               	bcf	3,5	;RP0=0, select bank0
  1126  0400  1303               	bcf	3,6	;RP1=0, select bank0
  1127  0401  0189               	clrf	9	;volatile
  1128  0402                     l137:
  1129  0402  0008               	return
  1130  0403                     __end_of_setup:
  1131                           
  1132                           	psect	text2
  1133  04D4                     __ptext2:	
  1134 ;; *************** function _osc_config *****************
  1135 ;; Defined at:
  1136 ;;		line 167 in file "MAESTRO_SPI.c"
  1137 ;; Parameters:    Size  Location     Type
  1138 ;;		None
  1139 ;; Auto vars:     Size  Location     Type
  1140 ;;		None
  1141 ;; Return value:  Size  Location     Type
  1142 ;;                  1    wreg      void 
  1143 ;; Registers used:
  1144 ;;		None
  1145 ;; Tracked objects:
  1146 ;;		On entry : 0/0
  1147 ;;		On exit  : 0/0
  1148 ;;		Unchanged: 0/0
  1149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1150 ;;      Params:         0       0       0       0       0
  1151 ;;      Locals:         0       0       0       0       0
  1152 ;;      Temps:          0       0       0       0       0
  1153 ;;      Totals:         0       0       0       0       0
  1154 ;;Total ram usage:        0 bytes
  1155 ;; Hardware stack levels used:    1
  1156 ;; Hardware stack levels required when called:    1
  1157 ;; This function calls:
  1158 ;;		Nothing
  1159 ;; This function is called by:
  1160 ;;		_main
  1161 ;; This function uses a non-reentrant model
  1162 ;;
  1163                           
  1164                           
  1165                           ;psect for function _osc_config
  1166  04D4                     _osc_config:
  1167  04D4                     l1549:	
  1168                           ;incstack = 0
  1169                           ; Regs used in _osc_config: []
  1170                           
  1171                           
  1172                           ;MAESTRO_SPI.c: 169:         Lcd_Write_Char(contador + 48);
  1173  04D4  1683               	bsf	3,5	;RP0=1, select bank1
  1174  04D5  1303               	bcf	3,6	;RP1=0, select bank1
  1175  04D6  170F               	bsf	15,6	;volatile
  1176                           
  1177                           ;MAESTRO_SPI.c: 170:     }
  1178  04D7  168F               	bsf	15,5	;volatile
  1179                           
  1180                           ;MAESTRO_SPI.c: 171:     else if (contador >= 10)
  1181  04D8  120F               	bcf	15,4	;volatile
  1182                           
  1183                           ;MAESTRO_SPI.c: 172:     {
  1184  04D9  118F               	bcf	15,3	;volatile
  1185                           
  1186                           ;MAESTRO_SPI.c: 173:         w1 = contador/10;
  1187  04DA  110F               	bcf	15,2	;volatile
  1188                           
  1189                           ;MAESTRO_SPI.c: 174:         w2 = contador % 10;
  1190  04DB  148F               	bsf	15,1	;volatile
  1191                           
  1192                           ;MAESTRO_SPI.c: 175:         Lcd_Set_Cursor(2,13);
  1193  04DC  100F               	bcf	15,0	;volatile
  1194  04DD                     l143:
  1195  04DD  0008               	return
  1196  04DE                     __end_of_osc_config:
  1197                           
  1198                           	psect	text3
  1199  0374                     __ptext3:	
  1200 ;; *************** function _lcd *****************
  1201 ;; Defined at:
  1202 ;;		line 196 in file "MAESTRO_SPI.c"
  1203 ;; Parameters:    Size  Location     Type
  1204 ;;		None
  1205 ;; Auto vars:     Size  Location     Type
  1206 ;;		None
  1207 ;; Return value:  Size  Location     Type
  1208 ;;                  1    wreg      void 
  1209 ;; Registers used:
  1210 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1211 ;; Tracked objects:
  1212 ;;		On entry : 0/0
  1213 ;;		On exit  : 0/0
  1214 ;;		Unchanged: 0/0
  1215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1216 ;;      Params:         0       0       0       0       0
  1217 ;;      Locals:         0       0       0       0       0
  1218 ;;      Temps:          0       1       0       0       0
  1219 ;;      Totals:         0       1       0       0       0
  1220 ;;Total ram usage:        1 bytes
  1221 ;; Hardware stack levels used:    1
  1222 ;; Hardware stack levels required when called:    4
  1223 ;; This function calls:
  1224 ;;		_Conversion1
  1225 ;;		_Conversion2
  1226 ;;		_Lcd_Set_Cursor
  1227 ;;		_Lcd_Write_Char
  1228 ;;		_Lcd_Write_String
  1229 ;; This function is called by:
  1230 ;;		_main
  1231 ;; This function uses a non-reentrant model
  1232 ;;
  1233                           
  1234                           
  1235                           ;psect for function _lcd
  1236  0374                     _lcd:
  1237  0374                     l1773:	
  1238                           ;incstack = 0
  1239                           ; Regs used in _lcd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1240                           
  1241                           
  1242                           ;MAESTRO_SPI.c: 198: {
  1243  0374  01F6               	clrf	Lcd_Set_Cursor@b
  1244  0375  0AF6               	incf	Lcd_Set_Cursor@b,f
  1245  0376  3001               	movlw	1
  1246  0377  120A  118A  2428  120A  118A  	fcall	_Lcd_Set_Cursor
  1247  037C                     l1775:
  1248                           
  1249                           ;MAESTRO_SPI.c: 199: 
  1250  037C  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1251  037D  120A  118A  2403  120A  118A  	fcall	_Lcd_Write_String
  1252  0382                     l1777:
  1253                           
  1254                           ;MAESTRO_SPI.c: 200:     unidadz = voltajez / 100;
  1255  0382  01F6               	clrf	Lcd_Set_Cursor@b
  1256  0383  3002               	movlw	2
  1257  0384  120A  118A  2428  120A  118A  	fcall	_Lcd_Set_Cursor
  1258  0389                     l1779:
  1259                           
  1260                           ;MAESTRO_SPI.c: 201:     x1z = voltajez % 100;
  1261  0389  120A  118A  227F  120A  118A  	fcall	_Conversion1
  1262  038E                     l1781:
  1263                           
  1264                           ;MAESTRO_SPI.c: 202:     x2z = x1z / 10;
  1265  038E  3006               	movlw	6
  1266  038F  1283               	bcf	3,5	;RP0=0, select bank0
  1267  0390  1303               	bcf	3,6	;RP1=0, select bank0
  1268  0391  00B6               	movwf	??_lcd
  1269  0392  0836               	movf	??_lcd,w
  1270  0393  00F6               	movwf	Lcd_Set_Cursor@b
  1271  0394  3002               	movlw	2
  1272  0395  120A  118A  2428  120A  118A  	fcall	_Lcd_Set_Cursor
  1273  039A                     l1783:
  1274                           
  1275                           ;MAESTRO_SPI.c: 204:     y2z = y1z / 1;
  1276  039A  120A  118A  2173  120A  118A  	fcall	_Conversion2
  1277  039F                     l1785:
  1278                           
  1279                           ;MAESTRO_SPI.c: 205:     Lcd_Write_Char(unidadz+48);;MAESTRO_SPI.c: 206:     Lcd_Write_C
      +                          har(46);
  1280  039F  300E               	movlw	14
  1281  03A0  1283               	bcf	3,5	;RP0=0, select bank0
  1282  03A1  1303               	bcf	3,6	;RP1=0, select bank0
  1283  03A2  00B6               	movwf	??_lcd
  1284  03A3  0836               	movf	??_lcd,w
  1285  03A4  00F6               	movwf	Lcd_Set_Cursor@b
  1286  03A5  3002               	movlw	2
  1287  03A6  120A  118A  2428  120A  118A  	fcall	_Lcd_Set_Cursor
  1288  03AB                     l1787:
  1289                           
  1290                           ;MAESTRO_SPI.c: 207:     Lcd_Write_Char(x2z+48);
  1291  03AB  3030               	movlw	48
  1292  03AC  120A  118A  249A  120A  118A  	fcall	_Lcd_Write_Char
  1293  03B1                     l155:	
  1294                           ;MAESTRO_SPI.c: 208:     Lcd_Write_Char(y2z+48);
  1295                           
  1296  03B1  0008               	return
  1297  03B2                     __end_of_lcd:
  1298                           
  1299                           	psect	text4
  1300  0403                     __ptext4:	
  1301 ;; *************** function _Lcd_Write_String *****************
  1302 ;; Defined at:
  1303 ;;		line 78 in file "LCD_SPI.c"
  1304 ;; Parameters:    Size  Location     Type
  1305 ;;  a               1    wreg     PTR unsigned char 
  1306 ;;		 -> STR_1(17), 
  1307 ;; Auto vars:     Size  Location     Type
  1308 ;;  a               1    7[COMMON] PTR unsigned char 
  1309 ;;		 -> STR_1(17), 
  1310 ;;  i               2    5[COMMON] int 
  1311 ;; Return value:  Size  Location     Type
  1312 ;;                  1    wreg      void 
  1313 ;; Registers used:
  1314 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1315 ;; Tracked objects:
  1316 ;;		On entry : 0/0
  1317 ;;		On exit  : 0/0
  1318 ;;		Unchanged: 0/0
  1319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1320 ;;      Params:         0       0       0       0       0
  1321 ;;      Locals:         3       0       0       0       0
  1322 ;;      Temps:          0       0       0       0       0
  1323 ;;      Totals:         3       0       0       0       0
  1324 ;;Total ram usage:        3 bytes
  1325 ;; Hardware stack levels used:    1
  1326 ;; Hardware stack levels required when called:    3
  1327 ;; This function calls:
  1328 ;;		_Lcd_Write_Char
  1329 ;; This function is called by:
  1330 ;;		_lcd
  1331 ;; This function uses a non-reentrant model
  1332 ;;
  1333                           
  1334                           
  1335                           ;psect for function _Lcd_Write_String
  1336  0403                     _Lcd_Write_String:
  1337                           
  1338                           ;incstack = 0
  1339                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1340                           ;Lcd_Write_String@a stored from wreg
  1341  0403  00F7               	movwf	Lcd_Write_String@a
  1342  0404                     l1493:
  1343                           
  1344                           ;LCD_SPI.c: 78: void Lcd_Write_String(char *a);LCD_SPI.c: 79: {;LCD_SPI.c: 80:     int i
      +                          ;;LCD_SPI.c: 81:     for (i = 0; a[i] != '\0'; i++)
  1345  0404  01F5               	clrf	Lcd_Write_String@i
  1346  0405  01F6               	clrf	Lcd_Write_String@i+1
  1347  0406  2C1A               	goto	l1499
  1348  0407                     l1495:
  1349                           
  1350                           ;LCD_SPI.c: 82:         Lcd_Write_Char(a[i]);
  1351  0407  0875               	movf	Lcd_Write_String@i,w
  1352  0408  0777               	addwf	Lcd_Write_String@a,w
  1353  0409  0084               	movwf	4
  1354  040A  120A  118A  2483  120A  118A  	fcall	stringdir
  1355  040F  120A  118A  249A  120A  118A  	fcall	_Lcd_Write_Char
  1356  0414                     l1497:
  1357  0414  3001               	movlw	1
  1358  0415  07F5               	addwf	Lcd_Write_String@i,f
  1359  0416  1803               	skipnc
  1360  0417  0AF6               	incf	Lcd_Write_String@i+1,f
  1361  0418  3000               	movlw	0
  1362  0419  07F6               	addwf	Lcd_Write_String@i+1,f
  1363  041A                     l1499:
  1364  041A  0875               	movf	Lcd_Write_String@i,w
  1365  041B  0777               	addwf	Lcd_Write_String@a,w
  1366  041C  0084               	movwf	4
  1367  041D  120A  118A  2483  120A  118A  	fcall	stringdir
  1368  0422  3A00               	xorlw	0
  1369  0423  1D03               	skipz
  1370  0424  2C26               	goto	u541
  1371  0425  2C27               	goto	u540
  1372  0426                     u541:
  1373  0426  2C07               	goto	l1495
  1374  0427                     u540:
  1375  0427                     l226:
  1376  0427  0008               	return
  1377  0428                     __end_of_Lcd_Write_String:
  1378                           
  1379                           	psect	text5
  1380  0428                     __ptext5:	
  1381 ;; *************** function _Lcd_Set_Cursor *****************
  1382 ;; Defined at:
  1383 ;;		line 63 in file "LCD_SPI.c"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;  a               1    wreg     unsigned char 
  1386 ;;  b               1    6[COMMON] unsigned char 
  1387 ;; Auto vars:     Size  Location     Type
  1388 ;;  a               1    8[COMMON] unsigned char 
  1389 ;;  temp            1    9[COMMON] unsigned char 
  1390 ;; Return value:  Size  Location     Type
  1391 ;;                  1    wreg      void 
  1392 ;; Registers used:
  1393 ;;		wreg, status,2, status,0, pclath, cstack
  1394 ;; Tracked objects:
  1395 ;;		On entry : 0/0
  1396 ;;		On exit  : 0/0
  1397 ;;		Unchanged: 0/0
  1398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1399 ;;      Params:         1       0       0       0       0
  1400 ;;      Locals:         2       0       0       0       0
  1401 ;;      Temps:          1       0       0       0       0
  1402 ;;      Totals:         4       0       0       0       0
  1403 ;;Total ram usage:        4 bytes
  1404 ;; Hardware stack levels used:    1
  1405 ;; Hardware stack levels required when called:    3
  1406 ;; This function calls:
  1407 ;;		_Lcd_Cmd
  1408 ;; This function is called by:
  1409 ;;		_lcd
  1410 ;; This function uses a non-reentrant model
  1411 ;;
  1412                           
  1413                           
  1414                           ;psect for function _Lcd_Set_Cursor
  1415  0428                     _Lcd_Set_Cursor:
  1416                           
  1417                           ;incstack = 0
  1418                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1419                           ;Lcd_Set_Cursor@a stored from wreg
  1420  0428  00F8               	movwf	Lcd_Set_Cursor@a
  1421  0429                     l1481:
  1422                           
  1423                           ;LCD_SPI.c: 63: void Lcd_Set_Cursor(char a, char b);LCD_SPI.c: 64: {;LCD_SPI.c: 65:     
      +                          char temp;;LCD_SPI.c: 66:     if (a == 1)
  1424  0429  0378               	decf	Lcd_Set_Cursor@a,w
  1425  042A  1D03               	btfss	3,2
  1426  042B  2C2D               	goto	u521
  1427  042C  2C2E               	goto	u520
  1428  042D                     u521:
  1429  042D  2C3A               	goto	l1487
  1430  042E                     u520:
  1431  042E                     l1483:
  1432                           
  1433                           ;LCD_SPI.c: 67:     {;LCD_SPI.c: 68:         temp = 0x80 + b;
  1434  042E  0876               	movf	Lcd_Set_Cursor@b,w
  1435  042F  3E80               	addlw	128
  1436  0430  00F7               	movwf	??_Lcd_Set_Cursor
  1437  0431  0877               	movf	??_Lcd_Set_Cursor,w
  1438  0432  00F9               	movwf	Lcd_Set_Cursor@temp
  1439  0433                     l1485:
  1440                           
  1441                           ;LCD_SPI.c: 69:         Lcd_Cmd(temp);
  1442  0433  0879               	movf	Lcd_Set_Cursor@temp,w
  1443  0434  120A  118A  246A  120A  118A  	fcall	_Lcd_Cmd
  1444                           
  1445                           ;LCD_SPI.c: 70:     }
  1446  0439  2C4B               	goto	l220
  1447  043A                     l1487:
  1448  043A  3002               	movlw	2
  1449  043B  0678               	xorwf	Lcd_Set_Cursor@a,w
  1450  043C  1D03               	btfss	3,2
  1451  043D  2C3F               	goto	u531
  1452  043E  2C40               	goto	u530
  1453  043F                     u531:
  1454  043F  2C4B               	goto	l220
  1455  0440                     u530:
  1456  0440                     l1489:
  1457                           
  1458                           ;LCD_SPI.c: 72:     {;LCD_SPI.c: 73:         temp = 0xC0 + b;
  1459  0440  0876               	movf	Lcd_Set_Cursor@b,w
  1460  0441  3EC0               	addlw	192
  1461  0442  00F7               	movwf	??_Lcd_Set_Cursor
  1462  0443  0877               	movf	??_Lcd_Set_Cursor,w
  1463  0444  00F9               	movwf	Lcd_Set_Cursor@temp
  1464  0445                     l1491:
  1465                           
  1466                           ;LCD_SPI.c: 74:         Lcd_Cmd(temp);
  1467  0445  0879               	movf	Lcd_Set_Cursor@temp,w
  1468  0446  120A  118A  246A  120A  118A  	fcall	_Lcd_Cmd
  1469  044B                     l220:
  1470  044B  0008               	return
  1471  044C                     __end_of_Lcd_Set_Cursor:
  1472                           
  1473                           	psect	text6
  1474  0173                     __ptext6:	
  1475 ;; *************** function _Conversion2 *****************
  1476 ;; Defined at:
  1477 ;;		line 235 in file "MAESTRO_SPI.c"
  1478 ;; Parameters:    Size  Location     Type
  1479 ;;		None
  1480 ;; Auto vars:     Size  Location     Type
  1481 ;;		None
  1482 ;; Return value:  Size  Location     Type
  1483 ;;                  1    wreg      void 
  1484 ;; Registers used:
  1485 ;;		wreg, status,2, status,0, pclath, cstack
  1486 ;; Tracked objects:
  1487 ;;		On entry : 0/0
  1488 ;;		On exit  : 0/0
  1489 ;;		Unchanged: 0/0
  1490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1491 ;;      Params:         0       0       0       0       0
  1492 ;;      Locals:         0       0       0       0       0
  1493 ;;      Temps:          1       0       0       0       0
  1494 ;;      Totals:         1       0       0       0       0
  1495 ;;Total ram usage:        1 bytes
  1496 ;; Hardware stack levels used:    1
  1497 ;; Hardware stack levels required when called:    3
  1498 ;; This function calls:
  1499 ;;		_Lcd_Write_Char
  1500 ;;		___awdiv
  1501 ;;		___awmod
  1502 ;;		_virtual_display2
  1503 ;;		_virtual_display3
  1504 ;; This function is called by:
  1505 ;;		_lcd
  1506 ;; This function uses a non-reentrant model
  1507 ;;
  1508                           
  1509                           
  1510                           ;psect for function _Conversion2
  1511  0173                     _Conversion2:
  1512  0173                     l1751:	
  1513                           ;incstack = 0
  1514                           ; Regs used in _Conversion2: [wreg+status,2+status,0+pclath+cstack]
  1515                           
  1516                           
  1517                           ;MAESTRO_SPI.c: 238:         escribir_char (58);
  1518  0173  1283               	bcf	3,5	;RP0=0, select bank0
  1519  0174  1303               	bcf	3,6	;RP1=0, select bank0
  1520  0175  01AC               	clrf	_unidadz
  1521                           
  1522                           ;MAESTRO_SPI.c: 239:         escribir_char (unidadz+48);
  1523  0176  01AB               	clrf	_x1z
  1524  0177                     l1753:
  1525                           
  1526                           ;MAESTRO_SPI.c: 240:         escribir_char (46);
  1527  0177  300A               	movlw	10
  1528  0178  00F2               	movwf	___awdiv@divisor
  1529  0179  3000               	movlw	0
  1530  017A  00F3               	movwf	___awdiv@divisor+1
  1531  017B  3000               	movlw	0
  1532  017C  00F4               	movwf	___awdiv@dividend
  1533  017D  00F5               	movwf	___awdiv@dividend+1
  1534  017E  120A  118A  20A3  120A  118A  	fcall	___awdiv
  1535  0183  0872               	movf	?___awdiv,w
  1536  0184  00F9               	movwf	??_Conversion2
  1537  0185  0879               	movf	??_Conversion2,w
  1538  0186  1283               	bcf	3,5	;RP0=0, select bank0
  1539  0187  1303               	bcf	3,6	;RP1=0, select bank0
  1540  0188  00A9               	movwf	_x2z
  1541  0189                     l1755:
  1542                           
  1543                           ;MAESTRO_SPI.c: 241:         escribir_char (x2z+48);
  1544  0189  300A               	movlw	10
  1545  018A  00F2               	movwf	___awmod@divisor
  1546  018B  3000               	movlw	0
  1547  018C  00F3               	movwf	___awmod@divisor+1
  1548  018D  3000               	movlw	0
  1549  018E  00F4               	movwf	___awmod@dividend
  1550  018F  00F5               	movwf	___awmod@dividend+1
  1551  0190  120A  118A  21CF  120A  118A  	fcall	___awmod
  1552  0195  0872               	movf	?___awmod,w
  1553  0196  00F9               	movwf	??_Conversion2
  1554  0197  0879               	movf	??_Conversion2,w
  1555  0198  1283               	bcf	3,5	;RP0=0, select bank0
  1556  0199  1303               	bcf	3,6	;RP1=0, select bank0
  1557  019A  00AA               	movwf	_y1z
  1558  019B                     l1757:
  1559                           
  1560                           ;MAESTRO_SPI.c: 242:         escribir_char (y2z+48);
  1561  019B  082A               	movf	_y1z,w
  1562  019C  00F9               	movwf	??_Conversion2
  1563  019D  0879               	movf	??_Conversion2,w
  1564  019E  00A8               	movwf	_y2z
  1565  019F                     l1759:
  1566                           
  1567                           ;MAESTRO_SPI.c: 243:         escribir_char (86);
  1568  019F  082C               	movf	_unidadz,w
  1569  01A0  3E30               	addlw	48
  1570  01A1  120A  118A  249A  120A  118A  	fcall	_Lcd_Write_Char
  1571  01A6                     l1761:
  1572                           
  1573                           ;MAESTRO_SPI.c: 244:         escribir_char (32);
  1574  01A6  302E               	movlw	46
  1575  01A7  120A  118A  249A  120A  118A  	fcall	_Lcd_Write_Char
  1576  01AC                     l1763:
  1577                           
  1578                           ;MAESTRO_SPI.c: 245:         escribir_char (32);
  1579  01AC  1283               	bcf	3,5	;RP0=0, select bank0
  1580  01AD  1303               	bcf	3,6	;RP1=0, select bank0
  1581  01AE  0829               	movf	_x2z,w
  1582  01AF  3E30               	addlw	48
  1583  01B0  120A  118A  249A  120A  118A  	fcall	_Lcd_Write_Char
  1584  01B5                     l1765:
  1585                           
  1586                           ;MAESTRO_SPI.c: 246:         velocidad2 = 0;
  1587  01B5  1283               	bcf	3,5	;RP0=0, select bank0
  1588  01B6  1303               	bcf	3,6	;RP1=0, select bank0
  1589  01B7  0828               	movf	_y2z,w
  1590  01B8  3E30               	addlw	48
  1591  01B9  120A  118A  249A  120A  118A  	fcall	_Lcd_Write_Char
  1592  01BE                     l1767:
  1593                           
  1594                           ;MAESTRO_SPI.c: 247:     }
  1595  01BE  3056               	movlw	86
  1596  01BF  120A  118A  249A  120A  118A  	fcall	_Lcd_Write_Char
  1597  01C4                     l1769:
  1598                           
  1599                           ;MAESTRO_SPI.c: 248: }
  1600  01C4  120A  118A  22D4  120A  118A  	fcall	_virtual_display2
  1601  01C9                     l1771:
  1602                           
  1603                           ;MAESTRO_SPI.c: 249: 
  1604  01C9  120A  118A  23B2  120A  118A  	fcall	_virtual_display3
  1605  01CE                     l161:
  1606  01CE  0008               	return
  1607  01CF                     __end_of_Conversion2:
  1608                           
  1609                           	psect	text7
  1610  03B2                     __ptext7:	
  1611 ;; *************** function _virtual_display3 *****************
  1612 ;; Defined at:
  1613 ;;		line 288 in file "MAESTRO_SPI.c"
  1614 ;; Parameters:    Size  Location     Type
  1615 ;;		None
  1616 ;; Auto vars:     Size  Location     Type
  1617 ;;		None
  1618 ;; Return value:  Size  Location     Type
  1619 ;;                  1    wreg      void 
  1620 ;; Registers used:
  1621 ;;		wreg, status,2, status,0, pclath, cstack
  1622 ;; Tracked objects:
  1623 ;;		On entry : 0/0
  1624 ;;		On exit  : 0/0
  1625 ;;		Unchanged: 0/0
  1626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1627 ;;      Params:         0       0       0       0       0
  1628 ;;      Locals:         0       0       0       0       0
  1629 ;;      Temps:          0       0       0       0       0
  1630 ;;      Totals:         0       0       0       0       0
  1631 ;;Total ram usage:        0 bytes
  1632 ;; Hardware stack levels used:    1
  1633 ;; Hardware stack levels required when called:    2
  1634 ;; This function calls:
  1635 ;;		_escribir_char
  1636 ;; This function is called by:
  1637 ;;		_Conversion2
  1638 ;; This function uses a non-reentrant model
  1639 ;;
  1640                           
  1641                           
  1642                           ;psect for function _virtual_display3
  1643  03B2                     _virtual_display3:
  1644  03B2                     l1321:	
  1645                           ;incstack = 0
  1646                           ; Regs used in _virtual_display3: [wreg+status,2+status,0+pclath+cstack]
  1647                           
  1648  03B2  3010               	movlw	16
  1649  03B3  1283               	bcf	3,5	;RP0=0, select bank0
  1650  03B4  1303               	bcf	3,6	;RP1=0, select bank0
  1651  03B5  0220               	subwf	_velocidad3,w
  1652  03B6  1C03               	skipc
  1653  03B7  2BB9               	goto	u321
  1654  03B8  2BBA               	goto	u320
  1655  03B9                     u321:
  1656  03B9  2BDB               	goto	l175
  1657  03BA                     u320:
  1658  03BA                     l1323:
  1659  03BA  3043               	movlw	67
  1660  03BB  120A  118A  24DE  120A  118A  	fcall	_escribir_char
  1661  03C0  303A               	movlw	58
  1662  03C1  120A  118A  24DE  120A  118A  	fcall	_escribir_char
  1663  03C6  3030               	movlw	48
  1664  03C7  120A  118A  24DE  120A  118A  	fcall	_escribir_char
  1665  03CC  3030               	movlw	48
  1666  03CD  120A  118A  24DE  120A  118A  	fcall	_escribir_char
  1667  03D2  300D               	movlw	13
  1668  03D3  120A  118A  24DE  120A  118A  	fcall	_escribir_char
  1669  03D8                     l1325:
  1670  03D8  1283               	bcf	3,5	;RP0=0, select bank0
  1671  03D9  1303               	bcf	3,6	;RP1=0, select bank0
  1672  03DA  01A0               	clrf	_velocidad3
  1673  03DB                     l175:
  1674  03DB  0008               	return
  1675  03DC                     __end_of_virtual_display3:
  1676                           
  1677                           	psect	text8
  1678  02D4                     __ptext8:	
  1679 ;; *************** function _virtual_display2 *****************
  1680 ;; Defined at:
  1681 ;;		line 270 in file "MAESTRO_SPI.c"
  1682 ;; Parameters:    Size  Location     Type
  1683 ;;		None
  1684 ;; Auto vars:     Size  Location     Type
  1685 ;;		None
  1686 ;; Return value:  Size  Location     Type
  1687 ;;                  1    wreg      void 
  1688 ;; Registers used:
  1689 ;;		wreg, status,2, status,0, pclath, cstack
  1690 ;; Tracked objects:
  1691 ;;		On entry : 0/0
  1692 ;;		On exit  : 0/0
  1693 ;;		Unchanged: 0/0
  1694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1695 ;;      Params:         0       0       0       0       0
  1696 ;;      Locals:         0       0       0       0       0
  1697 ;;      Temps:          0       0       0       0       0
  1698 ;;      Totals:         0       0       0       0       0
  1699 ;;Total ram usage:        0 bytes
  1700 ;; Hardware stack levels used:    1
  1701 ;; Hardware stack levels required when called:    2
  1702 ;; This function calls:
  1703 ;;		_escribir_char
  1704 ;; This function is called by:
  1705 ;;		_Conversion2
  1706 ;; This function uses a non-reentrant model
  1707 ;;
  1708                           
  1709                           
  1710                           ;psect for function _virtual_display2
  1711  02D4                     _virtual_display2:
  1712  02D4                     l1315:	
  1713                           ;incstack = 0
  1714                           ; Regs used in _virtual_display2: [wreg+status,2+status,0+pclath+cstack]
  1715                           
  1716                           
  1717                           ;MAESTRO_SPI.c: 272:     }
  1718  02D4  3010               	movlw	16
  1719  02D5  1283               	bcf	3,5	;RP0=0, select bank0
  1720  02D6  1303               	bcf	3,6	;RP1=0, select bank0
  1721  02D7  0221               	subwf	_velocidad2,w
  1722  02D8  1C03               	skipc
  1723  02D9  2ADB               	goto	u311
  1724  02DA  2ADC               	goto	u310
  1725  02DB                     u311:
  1726  02DB  2B24               	goto	l169
  1727  02DC                     u310:
  1728  02DC                     l1317:
  1729                           
  1730                           ;MAESTRO_SPI.c: 273: };MAESTRO_SPI.c: 274: 
  1731  02DC  3053               	movlw	83
  1732  02DD  120A  118A  24DE  120A  118A  	fcall	_escribir_char
  1733                           
  1734                           ;MAESTRO_SPI.c: 275: void escribir_char (uint8_t valor)
  1735  02E2  3032               	movlw	50
  1736  02E3  120A  118A  24DE  120A  118A  	fcall	_escribir_char
  1737                           
  1738                           ;MAESTRO_SPI.c: 276: {
  1739  02E8  303A               	movlw	58
  1740  02E9  120A  118A  24DE  120A  118A  	fcall	_escribir_char
  1741                           
  1742                           ;MAESTRO_SPI.c: 277:     TXREG = valor;
  1743  02EE  1283               	bcf	3,5	;RP0=0, select bank0
  1744  02EF  1303               	bcf	3,6	;RP1=0, select bank0
  1745  02F0  082C               	movf	_unidadz,w
  1746  02F1  3E30               	addlw	48
  1747  02F2  120A  118A  24DE  120A  118A  	fcall	_escribir_char
  1748                           
  1749                           ;MAESTRO_SPI.c: 278:     while (PIR1bits.TXIF == 0);
  1750  02F7  302E               	movlw	46
  1751  02F8  120A  118A  24DE  120A  118A  	fcall	_escribir_char
  1752                           
  1753                           ;MAESTRO_SPI.c: 279: }
  1754  02FD  1283               	bcf	3,5	;RP0=0, select bank0
  1755  02FE  1303               	bcf	3,6	;RP1=0, select bank0
  1756  02FF  0829               	movf	_x2z,w
  1757  0300  3E30               	addlw	48
  1758  0301  120A  118A  24DE  120A  118A  	fcall	_escribir_char
  1759  0306  1283               	bcf	3,5	;RP0=0, select bank0
  1760  0307  1303               	bcf	3,6	;RP1=0, select bank0
  1761  0308  0828               	movf	_y2z,w
  1762  0309  3E30               	addlw	48
  1763  030A  120A  118A  24DE  120A  118A  	fcall	_escribir_char
  1764  030F  3056               	movlw	86
  1765  0310  120A  118A  24DE  120A  118A  	fcall	_escribir_char
  1766  0315  3020               	movlw	32
  1767  0316  120A  118A  24DE  120A  118A  	fcall	_escribir_char
  1768  031B  3020               	movlw	32
  1769  031C  120A  118A  24DE  120A  118A  	fcall	_escribir_char
  1770  0321                     l1319:
  1771  0321  1283               	bcf	3,5	;RP0=0, select bank0
  1772  0322  1303               	bcf	3,6	;RP1=0, select bank0
  1773  0323  01A1               	clrf	_velocidad2
  1774  0324                     l169:
  1775  0324  0008               	return
  1776  0325                     __end_of_virtual_display2:
  1777                           
  1778                           	psect	text9
  1779  027F                     __ptext9:	
  1780 ;; *************** function _Conversion1 *****************
  1781 ;; Defined at:
  1782 ;;		line 219 in file "MAESTRO_SPI.c"
  1783 ;; Parameters:    Size  Location     Type
  1784 ;;		None
  1785 ;; Auto vars:     Size  Location     Type
  1786 ;;		None
  1787 ;; Return value:  Size  Location     Type
  1788 ;;                  1    wreg      void 
  1789 ;; Registers used:
  1790 ;;		wreg, status,2, status,0, pclath, cstack
  1791 ;; Tracked objects:
  1792 ;;		On entry : 0/0
  1793 ;;		On exit  : 0/0
  1794 ;;		Unchanged: 0/0
  1795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1796 ;;      Params:         0       0       0       0       0
  1797 ;;      Locals:         0       0       0       0       0
  1798 ;;      Temps:          1       0       0       0       0
  1799 ;;      Totals:         1       0       0       0       0
  1800 ;;Total ram usage:        1 bytes
  1801 ;; Hardware stack levels used:    1
  1802 ;; Hardware stack levels required when called:    3
  1803 ;; This function calls:
  1804 ;;		_Lcd_Write_Char
  1805 ;;		___awdiv
  1806 ;;		___awmod
  1807 ;;		_virtual_display1
  1808 ;; This function is called by:
  1809 ;;		_lcd
  1810 ;; This function uses a non-reentrant model
  1811 ;;
  1812                           
  1813                           
  1814                           ;psect for function _Conversion1
  1815  027F                     _Conversion1:
  1816  027F                     l1731:	
  1817                           ;incstack = 0
  1818                           ; Regs used in _Conversion1: [wreg+status,2+status,0+pclath+cstack]
  1819                           
  1820                           
  1821                           ;MAESTRO_SPI.c: 222:         escribir_char (46);
  1822  027F  01FB               	clrf	_unidad
  1823                           
  1824                           ;MAESTRO_SPI.c: 223:         escribir_char (x2+48);
  1825  0280  01FA               	clrf	_x1
  1826  0281                     l1733:
  1827                           
  1828                           ;MAESTRO_SPI.c: 224:         escribir_char (y2+48);
  1829  0281  300A               	movlw	10
  1830  0282  00F2               	movwf	___awdiv@divisor
  1831  0283  3000               	movlw	0
  1832  0284  00F3               	movwf	___awdiv@divisor+1
  1833  0285  3000               	movlw	0
  1834  0286  00F4               	movwf	___awdiv@dividend
  1835  0287  00F5               	movwf	___awdiv@dividend+1
  1836  0288  120A  118A  20A3  120A  118A  	fcall	___awdiv
  1837  028D  0872               	movf	?___awdiv,w
  1838  028E  00F9               	movwf	??_Conversion1
  1839  028F  0879               	movf	??_Conversion1,w
  1840  0290  1283               	bcf	3,5	;RP0=0, select bank0
  1841  0291  1303               	bcf	3,6	;RP1=0, select bank0
  1842  0292  00AF               	movwf	_x2
  1843  0293                     l1735:
  1844                           
  1845                           ;MAESTRO_SPI.c: 225:         escribir_char (86);
  1846  0293  300A               	movlw	10
  1847  0294  00F2               	movwf	___awmod@divisor
  1848  0295  3000               	movlw	0
  1849  0296  00F3               	movwf	___awmod@divisor+1
  1850  0297  3000               	movlw	0
  1851  0298  00F4               	movwf	___awmod@dividend
  1852  0299  00F5               	movwf	___awmod@dividend+1
  1853  029A  120A  118A  21CF  120A  118A  	fcall	___awmod
  1854  029F  0872               	movf	?___awmod,w
  1855  02A0  00F9               	movwf	??_Conversion1
  1856  02A1  0879               	movf	??_Conversion1,w
  1857  02A2  1283               	bcf	3,5	;RP0=0, select bank0
  1858  02A3  1303               	bcf	3,6	;RP1=0, select bank0
  1859  02A4  00B0               	movwf	_y1
  1860  02A5                     l1737:
  1861                           
  1862                           ;MAESTRO_SPI.c: 226:         escribir_char (32);
  1863  02A5  0830               	movf	_y1,w
  1864  02A6  00F9               	movwf	??_Conversion1
  1865  02A7  0879               	movf	??_Conversion1,w
  1866  02A8  00AE               	movwf	_y2
  1867  02A9                     l1739:
  1868                           
  1869                           ;MAESTRO_SPI.c: 227:         escribir_char (32);
  1870  02A9  087B               	movf	_unidad,w
  1871  02AA  3E30               	addlw	48
  1872  02AB  120A  118A  249A  120A  118A  	fcall	_Lcd_Write_Char
  1873  02B0                     l1741:
  1874                           
  1875                           ;MAESTRO_SPI.c: 228:         velocidad1 = 0;
  1876  02B0  302E               	movlw	46
  1877  02B1  120A  118A  249A  120A  118A  	fcall	_Lcd_Write_Char
  1878  02B6                     l1743:
  1879                           
  1880                           ;MAESTRO_SPI.c: 229:     }
  1881  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  1882  02B7  1303               	bcf	3,6	;RP1=0, select bank0
  1883  02B8  082F               	movf	_x2,w
  1884  02B9  3E30               	addlw	48
  1885  02BA  120A  118A  249A  120A  118A  	fcall	_Lcd_Write_Char
  1886  02BF                     l1745:
  1887                           
  1888                           ;MAESTRO_SPI.c: 230: }
  1889  02BF  1283               	bcf	3,5	;RP0=0, select bank0
  1890  02C0  1303               	bcf	3,6	;RP1=0, select bank0
  1891  02C1  082E               	movf	_y2,w
  1892  02C2  3E30               	addlw	48
  1893  02C3  120A  118A  249A  120A  118A  	fcall	_Lcd_Write_Char
  1894  02C8                     l1747:
  1895                           
  1896                           ;MAESTRO_SPI.c: 231: 
  1897  02C8  3056               	movlw	86
  1898  02C9  120A  118A  249A  120A  118A  	fcall	_Lcd_Write_Char
  1899  02CE                     l1749:
  1900                           
  1901                           ;MAESTRO_SPI.c: 232: void virtual_display2 (void)
  1902  02CE  120A  118A  2325  120A  118A  	fcall	_virtual_display1
  1903  02D3                     l158:
  1904  02D3  0008               	return
  1905  02D4                     __end_of_Conversion1:
  1906                           
  1907                           	psect	text10
  1908  0325                     __ptext10:	
  1909 ;; *************** function _virtual_display1 *****************
  1910 ;; Defined at:
  1911 ;;		line 252 in file "MAESTRO_SPI.c"
  1912 ;; Parameters:    Size  Location     Type
  1913 ;;		None
  1914 ;; Auto vars:     Size  Location     Type
  1915 ;;		None
  1916 ;; Return value:  Size  Location     Type
  1917 ;;                  1    wreg      void 
  1918 ;; Registers used:
  1919 ;;		wreg, status,2, status,0, pclath, cstack
  1920 ;; Tracked objects:
  1921 ;;		On entry : 0/0
  1922 ;;		On exit  : 0/0
  1923 ;;		Unchanged: 0/0
  1924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1925 ;;      Params:         0       0       0       0       0
  1926 ;;      Locals:         0       0       0       0       0
  1927 ;;      Temps:          0       0       0       0       0
  1928 ;;      Totals:         0       0       0       0       0
  1929 ;;Total ram usage:        0 bytes
  1930 ;; Hardware stack levels used:    1
  1931 ;; Hardware stack levels required when called:    2
  1932 ;; This function calls:
  1933 ;;		_escribir_char
  1934 ;; This function is called by:
  1935 ;;		_Conversion1
  1936 ;; This function uses a non-reentrant model
  1937 ;;
  1938                           
  1939                           
  1940                           ;psect for function _virtual_display1
  1941  0325                     _virtual_display1:
  1942  0325                     l1309:	
  1943                           ;incstack = 0
  1944                           ; Regs used in _virtual_display1: [wreg+status,2+status,0+pclath+cstack]
  1945                           
  1946                           
  1947                           ;MAESTRO_SPI.c: 254:         if (contador < 10)
  1948  0325  3010               	movlw	16
  1949  0326  1283               	bcf	3,5	;RP0=0, select bank0
  1950  0327  1303               	bcf	3,6	;RP1=0, select bank0
  1951  0328  0222               	subwf	_velocidad1,w
  1952  0329  1C03               	skipc
  1953  032A  2B2C               	goto	u301
  1954  032B  2B2D               	goto	u300
  1955  032C                     u301:
  1956  032C  2B73               	goto	l165
  1957  032D                     u300:
  1958  032D                     l1311:
  1959                           
  1960                           ;MAESTRO_SPI.c: 255:         {;MAESTRO_SPI.c: 256:             escribir_char (67);
  1961  032D  3053               	movlw	83
  1962  032E  120A  118A  24DE  120A  118A  	fcall	_escribir_char
  1963                           
  1964                           ;MAESTRO_SPI.c: 257:             escribir_char (58);
  1965  0333  3031               	movlw	49
  1966  0334  120A  118A  24DE  120A  118A  	fcall	_escribir_char
  1967                           
  1968                           ;MAESTRO_SPI.c: 258:             escribir_char (48);
  1969  0339  303A               	movlw	58
  1970  033A  120A  118A  24DE  120A  118A  	fcall	_escribir_char
  1971                           
  1972                           ;MAESTRO_SPI.c: 259:             escribir_char (contador+48);
  1973  033F  087B               	movf	_unidad,w
  1974  0340  3E30               	addlw	48
  1975  0341  120A  118A  24DE  120A  118A  	fcall	_escribir_char
  1976                           
  1977                           ;MAESTRO_SPI.c: 260:             escribir_char ('\r');
  1978  0346  302E               	movlw	46
  1979  0347  120A  118A  24DE  120A  118A  	fcall	_escribir_char
  1980                           
  1981                           ;MAESTRO_SPI.c: 261:             velocidad3 = 0;
  1982  034C  1283               	bcf	3,5	;RP0=0, select bank0
  1983  034D  1303               	bcf	3,6	;RP1=0, select bank0
  1984  034E  082F               	movf	_x2,w
  1985  034F  3E30               	addlw	48
  1986  0350  120A  118A  24DE  120A  118A  	fcall	_escribir_char
  1987                           
  1988                           ;MAESTRO_SPI.c: 262:         }
  1989  0355  1283               	bcf	3,5	;RP0=0, select bank0
  1990  0356  1303               	bcf	3,6	;RP1=0, select bank0
  1991  0357  082E               	movf	_y2,w
  1992  0358  3E30               	addlw	48
  1993  0359  120A  118A  24DE  120A  118A  	fcall	_escribir_char
  1994                           
  1995                           ;MAESTRO_SPI.c: 263:         else
  1996  035E  3056               	movlw	86
  1997  035F  120A  118A  24DE  120A  118A  	fcall	_escribir_char
  1998                           
  1999                           ;MAESTRO_SPI.c: 264:         {
  2000  0364  3020               	movlw	32
  2001  0365  120A  118A  24DE  120A  118A  	fcall	_escribir_char
  2002                           
  2003                           ;MAESTRO_SPI.c: 265:             escribir_char (67);
  2004  036A  3020               	movlw	32
  2005  036B  120A  118A  24DE  120A  118A  	fcall	_escribir_char
  2006  0370                     l1313:
  2007                           
  2008                           ;MAESTRO_SPI.c: 266:             escribir_char (58);
  2009  0370  1283               	bcf	3,5	;RP0=0, select bank0
  2010  0371  1303               	bcf	3,6	;RP1=0, select bank0
  2011  0372  01A2               	clrf	_velocidad1
  2012  0373                     l165:
  2013  0373  0008               	return
  2014  0374                     __end_of_virtual_display1:
  2015                           
  2016                           	psect	text11
  2017  04DE                     __ptext11:	
  2018 ;; *************** function _escribir_char *****************
  2019 ;; Defined at:
  2020 ;;		line 313 in file "MAESTRO_SPI.c"
  2021 ;; Parameters:    Size  Location     Type
  2022 ;;  valor           1    wreg     unsigned char 
  2023 ;; Auto vars:     Size  Location     Type
  2024 ;;  valor           1    2[COMMON] unsigned char 
  2025 ;; Return value:  Size  Location     Type
  2026 ;;                  1    wreg      void 
  2027 ;; Registers used:
  2028 ;;		wreg
  2029 ;; Tracked objects:
  2030 ;;		On entry : 0/0
  2031 ;;		On exit  : 0/0
  2032 ;;		Unchanged: 0/0
  2033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2034 ;;      Params:         0       0       0       0       0
  2035 ;;      Locals:         1       0       0       0       0
  2036 ;;      Temps:          0       0       0       0       0
  2037 ;;      Totals:         1       0       0       0       0
  2038 ;;Total ram usage:        1 bytes
  2039 ;; Hardware stack levels used:    1
  2040 ;; Hardware stack levels required when called:    1
  2041 ;; This function calls:
  2042 ;;		Nothing
  2043 ;; This function is called by:
  2044 ;;		_virtual_display1
  2045 ;;		_virtual_display2
  2046 ;;		_virtual_display3
  2047 ;; This function uses a non-reentrant model
  2048 ;;
  2049                           
  2050                           
  2051                           ;psect for function _escribir_char
  2052  04DE                     _escribir_char:
  2053                           
  2054                           ;incstack = 0
  2055                           ; Regs used in _escribir_char: [wreg]
  2056                           ;escribir_char@valor stored from wreg
  2057  04DE  00F2               	movwf	escribir_char@valor
  2058  04DF                     l1295:
  2059  04DF  0872               	movf	escribir_char@valor,w
  2060  04E0  1283               	bcf	3,5	;RP0=0, select bank0
  2061  04E1  1303               	bcf	3,6	;RP1=0, select bank0
  2062  04E2  0099               	movwf	25	;volatile
  2063  04E3                     l178:
  2064  04E3  1E0C               	btfss	12,4	;volatile
  2065  04E4  2CE6               	goto	u291
  2066  04E5  2CE7               	goto	u290
  2067  04E6                     u291:
  2068  04E6  2CE3               	goto	l178
  2069  04E7                     u290:
  2070  04E7                     l181:
  2071  04E7  0008               	return
  2072  04E8                     __end_of_escribir_char:
  2073                           
  2074                           	psect	text12
  2075  01CF                     __ptext12:	
  2076 ;; *************** function ___awmod *****************
  2077 ;; Defined at:
  2078 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  2079 ;; Parameters:    Size  Location     Type
  2080 ;;  divisor         2    2[COMMON] int 
  2081 ;;  dividend        2    4[COMMON] int 
  2082 ;; Auto vars:     Size  Location     Type
  2083 ;;  sign            1    8[COMMON] unsigned char 
  2084 ;;  counter         1    7[COMMON] unsigned char 
  2085 ;; Return value:  Size  Location     Type
  2086 ;;                  2    2[COMMON] int 
  2087 ;; Registers used:
  2088 ;;		wreg, status,2, status,0
  2089 ;; Tracked objects:
  2090 ;;		On entry : 0/0
  2091 ;;		On exit  : 0/0
  2092 ;;		Unchanged: 0/0
  2093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2094 ;;      Params:         4       0       0       0       0
  2095 ;;      Locals:         2       0       0       0       0
  2096 ;;      Temps:          1       0       0       0       0
  2097 ;;      Totals:         7       0       0       0       0
  2098 ;;Total ram usage:        7 bytes
  2099 ;; Hardware stack levels used:    1
  2100 ;; Hardware stack levels required when called:    1
  2101 ;; This function calls:
  2102 ;;		Nothing
  2103 ;; This function is called by:
  2104 ;;		_lcd
  2105 ;;		_Conversion1
  2106 ;;		_Conversion2
  2107 ;; This function uses a non-reentrant model
  2108 ;;
  2109                           
  2110                           
  2111                           ;psect for function ___awmod
  2112  01CF                     ___awmod:
  2113  01CF                     l1385:	
  2114                           ;incstack = 0
  2115                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2116                           
  2117  01CF  01F8               	clrf	___awmod@sign
  2118  01D0                     l1387:
  2119  01D0  1FF5               	btfss	___awmod@dividend+1,7
  2120  01D1  29D3               	goto	u431
  2121  01D2  29D4               	goto	u430
  2122  01D3                     u431:
  2123  01D3  29DB               	goto	l1393
  2124  01D4                     u430:
  2125  01D4                     l1389:
  2126  01D4  09F4               	comf	___awmod@dividend,f
  2127  01D5  09F5               	comf	___awmod@dividend+1,f
  2128  01D6  0AF4               	incf	___awmod@dividend,f
  2129  01D7  1903               	skipnz
  2130  01D8  0AF5               	incf	___awmod@dividend+1,f
  2131  01D9                     l1391:
  2132  01D9  01F8               	clrf	___awmod@sign
  2133  01DA  0AF8               	incf	___awmod@sign,f
  2134  01DB                     l1393:
  2135  01DB  1FF3               	btfss	___awmod@divisor+1,7
  2136  01DC  29DE               	goto	u441
  2137  01DD  29DF               	goto	u440
  2138  01DE                     u441:
  2139  01DE  29E4               	goto	l1397
  2140  01DF                     u440:
  2141  01DF                     l1395:
  2142  01DF  09F2               	comf	___awmod@divisor,f
  2143  01E0  09F3               	comf	___awmod@divisor+1,f
  2144  01E1  0AF2               	incf	___awmod@divisor,f
  2145  01E2  1903               	skipnz
  2146  01E3  0AF3               	incf	___awmod@divisor+1,f
  2147  01E4                     l1397:
  2148  01E4  0872               	movf	___awmod@divisor,w
  2149  01E5  0473               	iorwf	___awmod@divisor+1,w
  2150  01E6  1903               	btfsc	3,2
  2151  01E7  29E9               	goto	u451
  2152  01E8  29EA               	goto	u450
  2153  01E9                     u451:
  2154  01E9  2A19               	goto	l1415
  2155  01EA                     u450:
  2156  01EA                     l1399:
  2157  01EA  01F7               	clrf	___awmod@counter
  2158  01EB  0AF7               	incf	___awmod@counter,f
  2159  01EC  29F8               	goto	l1405
  2160  01ED                     l1401:
  2161  01ED  3001               	movlw	1
  2162  01EE                     u465:
  2163  01EE  1003               	clrc
  2164  01EF  0DF2               	rlf	___awmod@divisor,f
  2165  01F0  0DF3               	rlf	___awmod@divisor+1,f
  2166  01F1  3EFF               	addlw	-1
  2167  01F2  1D03               	skipz
  2168  01F3  29EE               	goto	u465
  2169  01F4                     l1403:
  2170  01F4  3001               	movlw	1
  2171  01F5  00F6               	movwf	??___awmod
  2172  01F6  0876               	movf	??___awmod,w
  2173  01F7  07F7               	addwf	___awmod@counter,f
  2174  01F8                     l1405:
  2175  01F8  1FF3               	btfss	___awmod@divisor+1,7
  2176  01F9  29FB               	goto	u471
  2177  01FA  29FC               	goto	u470
  2178  01FB                     u471:
  2179  01FB  29ED               	goto	l1401
  2180  01FC                     u470:
  2181  01FC                     l1407:
  2182  01FC  0873               	movf	___awmod@divisor+1,w
  2183  01FD  0275               	subwf	___awmod@dividend+1,w
  2184  01FE  1D03               	skipz
  2185  01FF  2A02               	goto	u485
  2186  0200  0872               	movf	___awmod@divisor,w
  2187  0201  0274               	subwf	___awmod@dividend,w
  2188  0202                     u485:
  2189  0202  1C03               	skipc
  2190  0203  2A05               	goto	u481
  2191  0204  2A06               	goto	u480
  2192  0205                     u481:
  2193  0205  2A0C               	goto	l1411
  2194  0206                     u480:
  2195  0206                     l1409:
  2196  0206  0872               	movf	___awmod@divisor,w
  2197  0207  02F4               	subwf	___awmod@dividend,f
  2198  0208  0873               	movf	___awmod@divisor+1,w
  2199  0209  1C03               	skipc
  2200  020A  03F5               	decf	___awmod@dividend+1,f
  2201  020B  02F5               	subwf	___awmod@dividend+1,f
  2202  020C                     l1411:
  2203  020C  3001               	movlw	1
  2204  020D                     u495:
  2205  020D  1003               	clrc
  2206  020E  0CF3               	rrf	___awmod@divisor+1,f
  2207  020F  0CF2               	rrf	___awmod@divisor,f
  2208  0210  3EFF               	addlw	-1
  2209  0211  1D03               	skipz
  2210  0212  2A0D               	goto	u495
  2211  0213                     l1413:
  2212  0213  3001               	movlw	1
  2213  0214  02F7               	subwf	___awmod@counter,f
  2214  0215  1D03               	btfss	3,2
  2215  0216  2A18               	goto	u501
  2216  0217  2A19               	goto	u500
  2217  0218                     u501:
  2218  0218  29FC               	goto	l1407
  2219  0219                     u500:
  2220  0219                     l1415:
  2221  0219  0878               	movf	___awmod@sign,w
  2222  021A  1903               	btfsc	3,2
  2223  021B  2A1D               	goto	u511
  2224  021C  2A1E               	goto	u510
  2225  021D                     u511:
  2226  021D  2A23               	goto	l1419
  2227  021E                     u510:
  2228  021E                     l1417:
  2229  021E  09F4               	comf	___awmod@dividend,f
  2230  021F  09F5               	comf	___awmod@dividend+1,f
  2231  0220  0AF4               	incf	___awmod@dividend,f
  2232  0221  1903               	skipnz
  2233  0222  0AF5               	incf	___awmod@dividend+1,f
  2234  0223                     l1419:
  2235  0223  0875               	movf	___awmod@dividend+1,w
  2236  0224  00F3               	movwf	?___awmod+1
  2237  0225  0874               	movf	___awmod@dividend,w
  2238  0226  00F2               	movwf	?___awmod
  2239  0227                     l537:
  2240  0227  0008               	return
  2241  0228                     __end_of___awmod:
  2242                           
  2243                           	psect	text13
  2244  00A3                     __ptext13:	
  2245 ;; *************** function ___awdiv *****************
  2246 ;; Defined at:
  2247 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2248 ;; Parameters:    Size  Location     Type
  2249 ;;  divisor         2    2[COMMON] int 
  2250 ;;  dividend        2    4[COMMON] int 
  2251 ;; Auto vars:     Size  Location     Type
  2252 ;;  quotient        2    2[BANK0 ] int 
  2253 ;;  sign            1    1[BANK0 ] unsigned char 
  2254 ;;  counter         1    0[BANK0 ] unsigned char 
  2255 ;; Return value:  Size  Location     Type
  2256 ;;                  2    2[COMMON] int 
  2257 ;; Registers used:
  2258 ;;		wreg, status,2, status,0
  2259 ;; Tracked objects:
  2260 ;;		On entry : 0/0
  2261 ;;		On exit  : 0/0
  2262 ;;		Unchanged: 0/0
  2263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2264 ;;      Params:         4       0       0       0       0
  2265 ;;      Locals:         0       4       0       0       0
  2266 ;;      Temps:          1       0       0       0       0
  2267 ;;      Totals:         5       4       0       0       0
  2268 ;;Total ram usage:        9 bytes
  2269 ;; Hardware stack levels used:    1
  2270 ;; Hardware stack levels required when called:    1
  2271 ;; This function calls:
  2272 ;;		Nothing
  2273 ;; This function is called by:
  2274 ;;		_lcd
  2275 ;;		_Conversion1
  2276 ;;		_Conversion2
  2277 ;; This function uses a non-reentrant model
  2278 ;;
  2279                           
  2280                           
  2281                           ;psect for function ___awdiv
  2282  00A3                     ___awdiv:
  2283  00A3                     l1687:	
  2284                           ;incstack = 0
  2285                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2286                           
  2287  00A3  1283               	bcf	3,5	;RP0=0, select bank0
  2288  00A4  1303               	bcf	3,6	;RP1=0, select bank0
  2289  00A5  01B3               	clrf	___awdiv@sign
  2290  00A6                     l1689:
  2291  00A6  1FF3               	btfss	___awdiv@divisor+1,7
  2292  00A7  28A9               	goto	u561
  2293  00A8  28AA               	goto	u560
  2294  00A9                     u561:
  2295  00A9  28B1               	goto	l1695
  2296  00AA                     u560:
  2297  00AA                     l1691:
  2298  00AA  09F2               	comf	___awdiv@divisor,f
  2299  00AB  09F3               	comf	___awdiv@divisor+1,f
  2300  00AC  0AF2               	incf	___awdiv@divisor,f
  2301  00AD  1903               	skipnz
  2302  00AE  0AF3               	incf	___awdiv@divisor+1,f
  2303  00AF                     l1693:
  2304  00AF  01B3               	clrf	___awdiv@sign
  2305  00B0  0AB3               	incf	___awdiv@sign,f
  2306  00B1                     l1695:
  2307  00B1  1FF5               	btfss	___awdiv@dividend+1,7
  2308  00B2  28B4               	goto	u571
  2309  00B3  28B5               	goto	u570
  2310  00B4                     u571:
  2311  00B4  28BE               	goto	l1701
  2312  00B5                     u570:
  2313  00B5                     l1697:
  2314  00B5  09F4               	comf	___awdiv@dividend,f
  2315  00B6  09F5               	comf	___awdiv@dividend+1,f
  2316  00B7  0AF4               	incf	___awdiv@dividend,f
  2317  00B8  1903               	skipnz
  2318  00B9  0AF5               	incf	___awdiv@dividend+1,f
  2319  00BA                     l1699:
  2320  00BA  3001               	movlw	1
  2321  00BB  00F6               	movwf	??___awdiv
  2322  00BC  0876               	movf	??___awdiv,w
  2323  00BD  06B3               	xorwf	___awdiv@sign,f
  2324  00BE                     l1701:
  2325  00BE  01B4               	clrf	___awdiv@quotient
  2326  00BF  01B5               	clrf	___awdiv@quotient+1
  2327  00C0                     l1703:
  2328  00C0  0872               	movf	___awdiv@divisor,w
  2329  00C1  0473               	iorwf	___awdiv@divisor+1,w
  2330  00C2  1903               	btfsc	3,2
  2331  00C3  28C5               	goto	u581
  2332  00C4  28C6               	goto	u580
  2333  00C5                     u581:
  2334  00C5  28FD               	goto	l1723
  2335  00C6                     u580:
  2336  00C6                     l1705:
  2337  00C6  01B2               	clrf	___awdiv@counter
  2338  00C7  0AB2               	incf	___awdiv@counter,f
  2339  00C8  28D4               	goto	l1711
  2340  00C9                     l1707:
  2341  00C9  3001               	movlw	1
  2342  00CA                     u595:
  2343  00CA  1003               	clrc
  2344  00CB  0DF2               	rlf	___awdiv@divisor,f
  2345  00CC  0DF3               	rlf	___awdiv@divisor+1,f
  2346  00CD  3EFF               	addlw	-1
  2347  00CE  1D03               	skipz
  2348  00CF  28CA               	goto	u595
  2349  00D0                     l1709:
  2350  00D0  3001               	movlw	1
  2351  00D1  00F6               	movwf	??___awdiv
  2352  00D2  0876               	movf	??___awdiv,w
  2353  00D3  07B2               	addwf	___awdiv@counter,f
  2354  00D4                     l1711:
  2355  00D4  1FF3               	btfss	___awdiv@divisor+1,7
  2356  00D5  28D7               	goto	u601
  2357  00D6  28D8               	goto	u600
  2358  00D7                     u601:
  2359  00D7  28C9               	goto	l1707
  2360  00D8                     u600:
  2361  00D8                     l1713:
  2362  00D8  3001               	movlw	1
  2363  00D9                     u615:
  2364  00D9  1003               	clrc
  2365  00DA  0DB4               	rlf	___awdiv@quotient,f
  2366  00DB  0DB5               	rlf	___awdiv@quotient+1,f
  2367  00DC  3EFF               	addlw	-1
  2368  00DD  1D03               	skipz
  2369  00DE  28D9               	goto	u615
  2370  00DF  0873               	movf	___awdiv@divisor+1,w
  2371  00E0  0275               	subwf	___awdiv@dividend+1,w
  2372  00E1  1D03               	skipz
  2373  00E2  28E5               	goto	u625
  2374  00E3  0872               	movf	___awdiv@divisor,w
  2375  00E4  0274               	subwf	___awdiv@dividend,w
  2376  00E5                     u625:
  2377  00E5  1C03               	skipc
  2378  00E6  28E8               	goto	u621
  2379  00E7  28E9               	goto	u620
  2380  00E8                     u621:
  2381  00E8  28F0               	goto	l1719
  2382  00E9                     u620:
  2383  00E9                     l1715:
  2384  00E9  0872               	movf	___awdiv@divisor,w
  2385  00EA  02F4               	subwf	___awdiv@dividend,f
  2386  00EB  0873               	movf	___awdiv@divisor+1,w
  2387  00EC  1C03               	skipc
  2388  00ED  03F5               	decf	___awdiv@dividend+1,f
  2389  00EE  02F5               	subwf	___awdiv@dividend+1,f
  2390  00EF                     l1717:
  2391  00EF  1434               	bsf	___awdiv@quotient,0
  2392  00F0                     l1719:
  2393  00F0  3001               	movlw	1
  2394  00F1                     u635:
  2395  00F1  1003               	clrc
  2396  00F2  0CF3               	rrf	___awdiv@divisor+1,f
  2397  00F3  0CF2               	rrf	___awdiv@divisor,f
  2398  00F4  3EFF               	addlw	-1
  2399  00F5  1D03               	skipz
  2400  00F6  28F1               	goto	u635
  2401  00F7                     l1721:
  2402  00F7  3001               	movlw	1
  2403  00F8  02B2               	subwf	___awdiv@counter,f
  2404  00F9  1D03               	btfss	3,2
  2405  00FA  28FC               	goto	u641
  2406  00FB  28FD               	goto	u640
  2407  00FC                     u641:
  2408  00FC  28D8               	goto	l1713
  2409  00FD                     u640:
  2410  00FD                     l1723:
  2411  00FD  0833               	movf	___awdiv@sign,w
  2412  00FE  1903               	btfsc	3,2
  2413  00FF  2901               	goto	u651
  2414  0100  2902               	goto	u650
  2415  0101                     u651:
  2416  0101  2907               	goto	l1727
  2417  0102                     u650:
  2418  0102                     l1725:
  2419  0102  09B4               	comf	___awdiv@quotient,f
  2420  0103  09B5               	comf	___awdiv@quotient+1,f
  2421  0104  0AB4               	incf	___awdiv@quotient,f
  2422  0105  1903               	skipnz
  2423  0106  0AB5               	incf	___awdiv@quotient+1,f
  2424  0107                     l1727:
  2425  0107  0835               	movf	___awdiv@quotient+1,w
  2426  0108  00F3               	movwf	?___awdiv+1
  2427  0109  0834               	movf	___awdiv@quotient,w
  2428  010A  00F2               	movwf	?___awdiv
  2429  010B                     l524:
  2430  010B  0008               	return
  2431  010C                     __end_of___awdiv:
  2432                           
  2433                           	psect	text14
  2434  049A                     __ptext14:	
  2435 ;; *************** function _Lcd_Write_Char *****************
  2436 ;; Defined at:
  2437 ;;		line 95 in file "LCD_SPI.c"
  2438 ;; Parameters:    Size  Location     Type
  2439 ;;  a               1    wreg     unsigned char 
  2440 ;; Auto vars:     Size  Location     Type
  2441 ;;  a               1    4[COMMON] unsigned char 
  2442 ;; Return value:  Size  Location     Type
  2443 ;;                  1    wreg      void 
  2444 ;; Registers used:
  2445 ;;		wreg, status,2, status,0, pclath, cstack
  2446 ;; Tracked objects:
  2447 ;;		On entry : 0/0
  2448 ;;		On exit  : 0/0
  2449 ;;		Unchanged: 0/0
  2450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2451 ;;      Params:         0       0       0       0       0
  2452 ;;      Locals:         1       0       0       0       0
  2453 ;;      Temps:          1       0       0       0       0
  2454 ;;      Totals:         2       0       0       0       0
  2455 ;;Total ram usage:        2 bytes
  2456 ;; Hardware stack levels used:    1
  2457 ;; Hardware stack levels required when called:    2
  2458 ;; This function calls:
  2459 ;;		_Lcd_Port
  2460 ;; This function is called by:
  2461 ;;		_lcd
  2462 ;;		_Conversion1
  2463 ;;		_Conversion2
  2464 ;;		_Lcd_Write_String
  2465 ;; This function uses a non-reentrant model
  2466 ;;
  2467                           
  2468                           
  2469                           ;psect for function _Lcd_Write_Char
  2470  049A                     _Lcd_Write_Char:
  2471                           
  2472                           ;incstack = 0
  2473                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2474                           ;Lcd_Write_Char@a stored from wreg
  2475  049A  00F4               	movwf	Lcd_Write_Char@a
  2476  049B                     l1299:
  2477                           
  2478                           ;LCD_SPI.c: 95: void Lcd_Write_Char(char a);LCD_SPI.c: 96: {;LCD_SPI.c: 97:     PORTCbit
      +                          s.RC0 = 1;
  2479  049B  1283               	bcf	3,5	;RP0=0, select bank0
  2480  049C  1303               	bcf	3,6	;RP1=0, select bank0
  2481  049D  1407               	bsf	7,0	;volatile
  2482  049E                     l1301:
  2483                           
  2484                           ;LCD_SPI.c: 98:     Lcd_Port(a);
  2485  049E  0874               	movf	Lcd_Write_Char@a,w
  2486  049F  120A  118A  24FC  120A  118A  	fcall	_Lcd_Port
  2487  04A4                     l1303:
  2488                           
  2489                           ;LCD_SPI.c: 99:     PORTCbits.RC2 = 1;
  2490  04A4  1283               	bcf	3,5	;RP0=0, select bank0
  2491  04A5  1303               	bcf	3,6	;RP1=0, select bank0
  2492  04A6  1507               	bsf	7,2	;volatile
  2493  04A7                     l1305:
  2494                           
  2495                           ;LCD_SPI.c: 100:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2496  04A7  300D               	movlw	13
  2497  04A8  00F3               	movwf	??_Lcd_Write_Char
  2498  04A9                     u697:
  2499  04A9  0BF3               	decfsz	??_Lcd_Write_Char,f
  2500  04AA  2CA9               	goto	u697
  2501  04AB                     l1307:
  2502                           
  2503                           ;LCD_SPI.c: 101:     PORTCbits.RC2 = 0;
  2504  04AB  1283               	bcf	3,5	;RP0=0, select bank0
  2505  04AC  1303               	bcf	3,6	;RP1=0, select bank0
  2506  04AD  1107               	bcf	7,2	;volatile
  2507  04AE                     l235:
  2508  04AE  0008               	return
  2509  04AF                     __end_of_Lcd_Write_Char:
  2510                           
  2511                           	psect	text15
  2512  04BD                     __ptext15:	
  2513 ;; *************** function _interrup_config *****************
  2514 ;; Defined at:
  2515 ;;		line 154 in file "MAESTRO_SPI.c"
  2516 ;; Parameters:    Size  Location     Type
  2517 ;;		None
  2518 ;; Auto vars:     Size  Location     Type
  2519 ;;		None
  2520 ;; Return value:  Size  Location     Type
  2521 ;;                  1    wreg      void 
  2522 ;; Registers used:
  2523 ;;		status,2
  2524 ;; Tracked objects:
  2525 ;;		On entry : 0/0
  2526 ;;		On exit  : 0/0
  2527 ;;		Unchanged: 0/0
  2528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2529 ;;      Params:         0       0       0       0       0
  2530 ;;      Locals:         0       0       0       0       0
  2531 ;;      Temps:          0       0       0       0       0
  2532 ;;      Totals:         0       0       0       0       0
  2533 ;;Total ram usage:        0 bytes
  2534 ;; Hardware stack levels used:    1
  2535 ;; Hardware stack levels required when called:    1
  2536 ;; This function calls:
  2537 ;;		Nothing
  2538 ;; This function is called by:
  2539 ;;		_main
  2540 ;; This function uses a non-reentrant model
  2541 ;;
  2542                           
  2543                           
  2544                           ;psect for function _interrup_config
  2545  04BD                     _interrup_config:
  2546  04BD                     l1551:	
  2547                           ;incstack = 0
  2548                           ; Regs used in _interrup_config: [status,2]
  2549                           
  2550                           
  2551                           ;MAESTRO_SPI.c: 156: 
  2552  04BD  178B               	bsf	11,7	;volatile
  2553                           
  2554                           ;MAESTRO_SPI.c: 157: 
  2555  04BE  170B               	bsf	11,6	;volatile
  2556                           
  2557                           ;MAESTRO_SPI.c: 158: void lcd (void)
  2558  04BF  128B               	bcf	11,5	;volatile
  2559                           
  2560                           ;MAESTRO_SPI.c: 159: {
  2561  04C0  120B               	bcf	11,4	;volatile
  2562                           
  2563                           ;MAESTRO_SPI.c: 160:     Lcd_Set_Cursor(1,1);
  2564  04C1  118B               	bcf	11,3	;volatile
  2565                           
  2566                           ;MAESTRO_SPI.c: 161:     Lcd_Write_String("S1:   S2:   S3: ");
  2567  04C2  110B               	bcf	11,2	;volatile
  2568                           
  2569                           ;MAESTRO_SPI.c: 162:     Lcd_Set_Cursor(2,0);
  2570  04C3  108B               	bcf	11,1	;volatile
  2571                           
  2572                           ;MAESTRO_SPI.c: 163:     Conversion1 ();
  2573  04C4  100B               	bcf	11,0	;volatile
  2574  04C5                     l1553:
  2575                           
  2576                           ;MAESTRO_SPI.c: 164:     Lcd_Set_Cursor(2,6);
  2577  04C5  1683               	bsf	3,5	;RP0=1, select bank1
  2578  04C6  1303               	bcf	3,6	;RP1=0, select bank1
  2579  04C7  0196               	clrf	22	;volatile
  2580  04C8                     l140:
  2581  04C8  0008               	return
  2582  04C9                     __end_of_interrup_config:
  2583                           
  2584                           	psect	text16
  2585  04F0                     __ptext16:	
  2586 ;; *************** function _USART_config *****************
  2587 ;; Defined at:
  2588 ;;		line 182 in file "MAESTRO_SPI.c"
  2589 ;; Parameters:    Size  Location     Type
  2590 ;;		None
  2591 ;; Auto vars:     Size  Location     Type
  2592 ;;		None
  2593 ;; Return value:  Size  Location     Type
  2594 ;;                  1    wreg      void 
  2595 ;; Registers used:
  2596 ;;		wreg, status,2, status,0, pclath, cstack
  2597 ;; Tracked objects:
  2598 ;;		On entry : 0/0
  2599 ;;		On exit  : 0/0
  2600 ;;		Unchanged: 0/0
  2601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2602 ;;      Params:         0       0       0       0       0
  2603 ;;      Locals:         0       0       0       0       0
  2604 ;;      Temps:          0       0       0       0       0
  2605 ;;      Totals:         0       0       0       0       0
  2606 ;;Total ram usage:        0 bytes
  2607 ;; Hardware stack levels used:    1
  2608 ;; Hardware stack levels required when called:    2
  2609 ;; This function calls:
  2610 ;;		_USART_lib_config
  2611 ;; This function is called by:
  2612 ;;		_main
  2613 ;; This function uses a non-reentrant model
  2614 ;;
  2615                           
  2616                           
  2617                           ;psect for function _USART_config
  2618  04F0                     _USART_config:
  2619  04F0                     l1577:	
  2620                           ;incstack = 0
  2621                           ; Regs used in _USART_config: [wreg+status,2+status,0+pclath+cstack]
  2622                           
  2623                           
  2624                           ;MAESTRO_SPI.c: 184:     unidad = voltaje / 100;
  2625  04F0  120A  118A  244C  120A  118A  	fcall	_USART_lib_config
  2626  04F5                     l146:
  2627  04F5  0008               	return
  2628  04F6                     __end_of_USART_config:
  2629                           
  2630                           	psect	text17
  2631  044C                     __ptext17:	
  2632 ;; *************** function _USART_lib_config *****************
  2633 ;; Defined at:
  2634 ;;		line 19 in file "USART_SPI.c"
  2635 ;; Parameters:    Size  Location     Type
  2636 ;;		None
  2637 ;; Auto vars:     Size  Location     Type
  2638 ;;		None
  2639 ;; Return value:  Size  Location     Type
  2640 ;;                  1    wreg      void 
  2641 ;; Registers used:
  2642 ;;		wreg
  2643 ;; Tracked objects:
  2644 ;;		On entry : 0/0
  2645 ;;		On exit  : 0/0
  2646 ;;		Unchanged: 0/0
  2647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2648 ;;      Params:         0       0       0       0       0
  2649 ;;      Locals:         0       0       0       0       0
  2650 ;;      Temps:          0       0       0       0       0
  2651 ;;      Totals:         0       0       0       0       0
  2652 ;;Total ram usage:        0 bytes
  2653 ;; Hardware stack levels used:    1
  2654 ;; Hardware stack levels required when called:    1
  2655 ;; This function calls:
  2656 ;;		Nothing
  2657 ;; This function is called by:
  2658 ;;		_USART_config
  2659 ;; This function uses a non-reentrant model
  2660 ;;
  2661                           
  2662                           
  2663                           ;psect for function _USART_lib_config
  2664  044C                     _USART_lib_config:
  2665  044C                     l1423:	
  2666                           ;incstack = 0
  2667                           ; Regs used in _USART_lib_config: [wreg]
  2668                           
  2669                           
  2670                           ;USART_SPI.c: 21:     SPBRG = 25;
  2671  044C  3019               	movlw	25
  2672  044D  1683               	bsf	3,5	;RP0=1, select bank1
  2673  044E  1303               	bcf	3,6	;RP1=0, select bank1
  2674  044F  0099               	movwf	25	;volatile
  2675  0450                     l1425:
  2676                           
  2677                           ;USART_SPI.c: 23:     TXSTAbits.CSRC = 0;
  2678  0450  1398               	bcf	24,7	;volatile
  2679  0451                     l1427:
  2680                           
  2681                           ;USART_SPI.c: 24:     TXSTAbits.TX9 = 0;
  2682  0451  1318               	bcf	24,6	;volatile
  2683  0452                     l1429:
  2684                           
  2685                           ;USART_SPI.c: 25:     TXSTAbits.TXEN = 1;
  2686  0452  1698               	bsf	24,5	;volatile
  2687  0453                     l1431:
  2688                           
  2689                           ;USART_SPI.c: 26:     TXSTAbits.SYNC = 0;
  2690  0453  1218               	bcf	24,4	;volatile
  2691  0454                     l1433:
  2692                           
  2693                           ;USART_SPI.c: 27:     TXSTAbits.SENDB= 0;
  2694  0454  1198               	bcf	24,3	;volatile
  2695  0455                     l1435:
  2696                           
  2697                           ;USART_SPI.c: 28:     TXSTAbits.BRGH = 1;
  2698  0455  1518               	bsf	24,2	;volatile
  2699  0456                     l1437:
  2700                           
  2701                           ;USART_SPI.c: 29:     TXSTAbits.TRMT = 0;
  2702  0456  1098               	bcf	24,1	;volatile
  2703  0457                     l1439:
  2704                           
  2705                           ;USART_SPI.c: 30:     TXSTAbits.TX9D = 0;
  2706  0457  1018               	bcf	24,0	;volatile
  2707  0458                     l1441:
  2708                           
  2709                           ;USART_SPI.c: 32:     RCSTAbits.SPEN = 1;
  2710  0458  1283               	bcf	3,5	;RP0=0, select bank0
  2711  0459  1303               	bcf	3,6	;RP1=0, select bank0
  2712  045A  1798               	bsf	24,7	;volatile
  2713  045B                     l1443:
  2714                           
  2715                           ;USART_SPI.c: 33:     RCSTAbits.RX9 = 0;
  2716  045B  1318               	bcf	24,6	;volatile
  2717  045C                     l1445:
  2718                           
  2719                           ;USART_SPI.c: 34:     RCSTAbits.SREN = 0;
  2720  045C  1298               	bcf	24,5	;volatile
  2721  045D                     l1447:
  2722                           
  2723                           ;USART_SPI.c: 35:     RCSTAbits.CREN = 1;
  2724  045D  1618               	bsf	24,4	;volatile
  2725  045E                     l1449:
  2726                           
  2727                           ;USART_SPI.c: 36:     RCSTAbits.ADDEN= 0;
  2728  045E  1198               	bcf	24,3	;volatile
  2729  045F                     l1451:
  2730                           
  2731                           ;USART_SPI.c: 37:     RCSTAbits.FERR = 0;
  2732  045F  1118               	bcf	24,2	;volatile
  2733  0460                     l1453:
  2734                           
  2735                           ;USART_SPI.c: 38:     RCSTAbits.OERR = 0;
  2736  0460  1098               	bcf	24,1	;volatile
  2737  0461                     l1455:
  2738                           
  2739                           ;USART_SPI.c: 39:     RCSTAbits.RX9D = 0;
  2740  0461  1018               	bcf	24,0	;volatile
  2741  0462                     l1457:
  2742                           
  2743                           ;USART_SPI.c: 41:     PIR1bits.RCIF = 0;
  2744  0462  128C               	bcf	12,5	;volatile
  2745  0463                     l1459:
  2746                           
  2747                           ;USART_SPI.c: 42:     PIE1bits.RCIE = 1;
  2748  0463  1683               	bsf	3,5	;RP0=1, select bank1
  2749  0464  1303               	bcf	3,6	;RP1=0, select bank1
  2750  0465  168C               	bsf	12,5	;volatile
  2751  0466                     l1461:
  2752                           
  2753                           ;USART_SPI.c: 43:     PIR1bits.TXIF = 0;
  2754  0466  1283               	bcf	3,5	;RP0=0, select bank0
  2755  0467  1303               	bcf	3,6	;RP1=0, select bank0
  2756  0468  120C               	bcf	12,4	;volatile
  2757  0469                     l194:
  2758  0469  0008               	return
  2759  046A                     __end_of_USART_lib_config:
  2760                           
  2761                           	psect	text18
  2762  04C9                     __ptext18:	
  2763 ;; *************** function _SPI_config *****************
  2764 ;; Defined at:
  2765 ;;		line 187 in file "MAESTRO_SPI.c"
  2766 ;; Parameters:    Size  Location     Type
  2767 ;;		None
  2768 ;; Auto vars:     Size  Location     Type
  2769 ;;		None
  2770 ;; Return value:  Size  Location     Type
  2771 ;;                  1    wreg      void 
  2772 ;; Registers used:
  2773 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2774 ;; Tracked objects:
  2775 ;;		On entry : 0/0
  2776 ;;		On exit  : 0/0
  2777 ;;		Unchanged: 0/0
  2778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2779 ;;      Params:         0       0       0       0       0
  2780 ;;      Locals:         0       0       0       0       0
  2781 ;;      Temps:          1       0       0       0       0
  2782 ;;      Totals:         1       0       0       0       0
  2783 ;;Total ram usage:        1 bytes
  2784 ;; Hardware stack levels used:    1
  2785 ;; Hardware stack levels required when called:    2
  2786 ;; This function calls:
  2787 ;;		_SPI_Maestro_Init
  2788 ;; This function is called by:
  2789 ;;		_main
  2790 ;; This function uses a non-reentrant model
  2791 ;;
  2792                           
  2793                           
  2794                           ;psect for function _SPI_config
  2795  04C9                     _SPI_config:
  2796  04C9                     l1579:	
  2797                           ;incstack = 0
  2798                           ; Regs used in _SPI_config: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2799                           
  2800                           
  2801                           ;MAESTRO_SPI.c: 189:     Lcd_Write_Char(unidad+48);
  2802  04C9  3002               	movlw	2
  2803  04CA  00F6               	movwf	??_SPI_config
  2804  04CB  0876               	movf	??_SPI_config,w
  2805  04CC  00F2               	movwf	SPI_Maestro_Init@SCK
  2806  04CD  3000               	movlw	0
  2807  04CE  120A  118A  201E  120A  118A  	fcall	_SPI_Maestro_Init
  2808  04D3                     l149:
  2809  04D3  0008               	return
  2810  04D4                     __end_of_SPI_config:
  2811                           
  2812                           	psect	text19
  2813  001E                     __ptext19:	
  2814 ;; *************** function _SPI_Maestro_Init *****************
  2815 ;; Defined at:
  2816 ;;		line 4 in file "SPI_SPI.c"
  2817 ;; Parameters:    Size  Location     Type
  2818 ;;  port_mode       1    wreg     unsigned char 
  2819 ;;  SCK             1    2[COMMON] unsigned char 
  2820 ;; Auto vars:     Size  Location     Type
  2821 ;;  port_mode       1    5[COMMON] unsigned char 
  2822 ;; Return value:  Size  Location     Type
  2823 ;;                  1    wreg      void 
  2824 ;; Registers used:
  2825 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2826 ;; Tracked objects:
  2827 ;;		On entry : 0/0
  2828 ;;		On exit  : 0/0
  2829 ;;		Unchanged: 0/0
  2830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2831 ;;      Params:         1       0       0       0       0
  2832 ;;      Locals:         1       0       0       0       0
  2833 ;;      Temps:          2       0       0       0       0
  2834 ;;      Totals:         4       0       0       0       0
  2835 ;;Total ram usage:        4 bytes
  2836 ;; Hardware stack levels used:    1
  2837 ;; Hardware stack levels required when called:    1
  2838 ;; This function calls:
  2839 ;;		Nothing
  2840 ;; This function is called by:
  2841 ;;		_SPI_config
  2842 ;; This function uses a non-reentrant model
  2843 ;;
  2844                           
  2845                           
  2846                           ;psect for function _SPI_Maestro_Init
  2847  001E                     _SPI_Maestro_Init:
  2848                           
  2849                           ;incstack = 0
  2850                           ; Regs used in _SPI_Maestro_Init: [wreg-fsr0h+status,2+status,0]
  2851                           ;SPI_Maestro_Init@port_mode stored from wreg
  2852  001E  00F5               	movwf	SPI_Maestro_Init@port_mode
  2853  001F                     l1463:
  2854                           
  2855                           ;SPI_SPI.c: 4: void SPI_Maestro_Init (char port_mode, char SCK);SPI_SPI.c: 5: {;SPI_SPI.
      +                          c: 6:     TRISAbits.TRISA5 = 0;
  2856  001F  1683               	bsf	3,5	;RP0=1, select bank1
  2857  0020  1303               	bcf	3,6	;RP1=0, select bank1
  2858  0021  1285               	bcf	5,5	;volatile
  2859                           
  2860                           ;SPI_SPI.c: 7:     TRISAbits.TRISA6 = 0;
  2861  0022  1305               	bcf	5,6	;volatile
  2862                           
  2863                           ;SPI_SPI.c: 8:     TRISAbits.TRISA7 = 0;
  2864  0023  1385               	bcf	5,7	;volatile
  2865                           
  2866                           ;SPI_SPI.c: 9:     TRISCbits.TRISC5 = 0;
  2867  0024  1287               	bcf	7,5	;volatile
  2868                           
  2869                           ;SPI_SPI.c: 10:     TRISCbits.TRISC4 = 1;
  2870  0025  1607               	bsf	7,4	;volatile
  2871                           
  2872                           ;SPI_SPI.c: 11:     TRISCbits.TRISC3 = 0;
  2873  0026  1187               	bcf	7,3	;volatile
  2874                           
  2875                           ;SPI_SPI.c: 13:     switch (port_mode)
  2876  0027  2852               	goto	l1467
  2877  0028                     l249:	
  2878                           ;SPI_SPI.c: 14:     {;SPI_SPI.c: 15:         case 0:
  2879                           
  2880                           
  2881                           ;SPI_SPI.c: 16:             SSPCONbits.SSPM3 = 0;
  2882  0028  1283               	bcf	3,5	;RP0=0, select bank0
  2883  0029  1303               	bcf	3,6	;RP1=0, select bank0
  2884  002A  1194               	bcf	20,3	;volatile
  2885                           
  2886                           ;SPI_SPI.c: 17:             SSPCONbits.SSPM2 = 0;
  2887  002B  1114               	bcf	20,2	;volatile
  2888                           
  2889                           ;SPI_SPI.c: 18:             SSPCONbits.SSPM1 = 0;
  2890  002C  1094               	bcf	20,1	;volatile
  2891                           
  2892                           ;SPI_SPI.c: 19:             SSPCONbits.SSPM0 = 0;
  2893  002D  1014               	bcf	20,0	;volatile
  2894                           
  2895                           ;SPI_SPI.c: 21:             break;
  2896  002E  2886               	goto	l1471
  2897  002F                     l251:	
  2898                           ;SPI_SPI.c: 22:          case 1:
  2899                           
  2900                           
  2901                           ;SPI_SPI.c: 23:             SSPCONbits.SSPM3 = 0;
  2902  002F  1283               	bcf	3,5	;RP0=0, select bank0
  2903  0030  1303               	bcf	3,6	;RP1=0, select bank0
  2904  0031  1194               	bcf	20,3	;volatile
  2905                           
  2906                           ;SPI_SPI.c: 24:             SSPCONbits.SSPM2 = 0;
  2907  0032  1114               	bcf	20,2	;volatile
  2908                           
  2909                           ;SPI_SPI.c: 25:             SSPCONbits.SSPM1 = 0;
  2910  0033  1094               	bcf	20,1	;volatile
  2911                           
  2912                           ;SPI_SPI.c: 26:             SSPCONbits.SSPM0 = 1;
  2913  0034  1414               	bsf	20,0	;volatile
  2914                           
  2915                           ;SPI_SPI.c: 28:             break;
  2916  0035  2886               	goto	l1471
  2917  0036                     l252:	
  2918                           ;SPI_SPI.c: 29:          case 2:
  2919                           
  2920                           
  2921                           ;SPI_SPI.c: 30:             SSPCONbits.SSPM3 = 0;
  2922  0036  1283               	bcf	3,5	;RP0=0, select bank0
  2923  0037  1303               	bcf	3,6	;RP1=0, select bank0
  2924  0038  1194               	bcf	20,3	;volatile
  2925                           
  2926                           ;SPI_SPI.c: 31:             SSPCONbits.SSPM2 = 0;
  2927  0039  1114               	bcf	20,2	;volatile
  2928                           
  2929                           ;SPI_SPI.c: 32:             SSPCONbits.SSPM1 = 1;
  2930  003A  1494               	bsf	20,1	;volatile
  2931                           
  2932                           ;SPI_SPI.c: 33:             SSPCONbits.SSPM0 = 0;
  2933  003B  1014               	bcf	20,0	;volatile
  2934                           
  2935                           ;SPI_SPI.c: 35:             break;
  2936  003C  2886               	goto	l1471
  2937  003D                     l253:	
  2938                           ;SPI_SPI.c: 36:          case 3:
  2939                           
  2940                           
  2941                           ;SPI_SPI.c: 37:             SSPCONbits.SSPM3 = 0;
  2942  003D  1283               	bcf	3,5	;RP0=0, select bank0
  2943  003E  1303               	bcf	3,6	;RP1=0, select bank0
  2944  003F  1194               	bcf	20,3	;volatile
  2945                           
  2946                           ;SPI_SPI.c: 38:             SSPCONbits.SSPM2 = 0;
  2947  0040  1114               	bcf	20,2	;volatile
  2948                           
  2949                           ;SPI_SPI.c: 39:             SSPCONbits.SSPM1 = 1;
  2950  0041  1494               	bsf	20,1	;volatile
  2951                           
  2952                           ;SPI_SPI.c: 40:             SSPCONbits.SSPM0 = 1;
  2953  0042  1414               	bsf	20,0	;volatile
  2954                           
  2955                           ;SPI_SPI.c: 41:             break;
  2956  0043  2886               	goto	l1471
  2957  0044                     l254:	
  2958                           ;SPI_SPI.c: 42:          case 4:
  2959                           
  2960                           
  2961                           ;SPI_SPI.c: 43:             SSPCONbits.SSPM3 = 0;
  2962  0044  1283               	bcf	3,5	;RP0=0, select bank0
  2963  0045  1303               	bcf	3,6	;RP1=0, select bank0
  2964  0046  1194               	bcf	20,3	;volatile
  2965                           
  2966                           ;SPI_SPI.c: 44:             SSPCONbits.SSPM2 = 1;
  2967  0047  1514               	bsf	20,2	;volatile
  2968                           
  2969                           ;SPI_SPI.c: 45:             SSPCONbits.SSPM1 = 0;
  2970  0048  1094               	bcf	20,1	;volatile
  2971                           
  2972                           ;SPI_SPI.c: 46:             SSPCONbits.SSPM0 = 0;
  2973  0049  1014               	bcf	20,0	;volatile
  2974                           
  2975                           ;SPI_SPI.c: 48:             break;
  2976  004A  2886               	goto	l1471
  2977  004B                     l255:	
  2978                           ;SPI_SPI.c: 49:          case 5:
  2979                           
  2980                           
  2981                           ;SPI_SPI.c: 50:             SSPCONbits.SSPM3 = 0;
  2982  004B  1283               	bcf	3,5	;RP0=0, select bank0
  2983  004C  1303               	bcf	3,6	;RP1=0, select bank0
  2984  004D  1194               	bcf	20,3	;volatile
  2985                           
  2986                           ;SPI_SPI.c: 51:             SSPCONbits.SSPM2 = 1;
  2987  004E  1514               	bsf	20,2	;volatile
  2988                           
  2989                           ;SPI_SPI.c: 52:             SSPCONbits.SSPM1 = 0;
  2990  004F  1094               	bcf	20,1	;volatile
  2991                           
  2992                           ;SPI_SPI.c: 53:             SSPCONbits.SSPM0 = 1;
  2993  0050  1414               	bsf	20,0	;volatile
  2994                           
  2995                           ;SPI_SPI.c: 54:             break;
  2996  0051  2886               	goto	l1471
  2997  0052                     l1467:
  2998  0052  0875               	movf	SPI_Maestro_Init@port_mode,w
  2999  0053  00F3               	movwf	??_SPI_Maestro_Init
  3000  0054  01F4               	clrf	??_SPI_Maestro_Init+1
  3001                           
  3002                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3003                           ; Switch size 1, requested type "simple"
  3004                           ; Number of cases is 1, Range of values is 0 to 0
  3005                           ; switch strategies available:
  3006                           ; Name         Instructions Cycles
  3007                           ; simple_byte            4     3 (average)
  3008                           ; direct_byte           11     8 (fixed)
  3009                           ; jumptable            260     6 (fixed)
  3010                           ;	Chosen strategy is simple_byte
  3011  0055  0874               	movf	??_SPI_Maestro_Init+1,w
  3012  0056  3A00               	xorlw	0	; case 0
  3013  0057  1903               	skipnz
  3014  0058  285A               	goto	l1871
  3015  0059  2886               	goto	l1471
  3016  005A                     l1871:
  3017                           
  3018                           ; Switch size 1, requested type "simple"
  3019                           ; Number of cases is 6, Range of values is 0 to 5
  3020                           ; switch strategies available:
  3021                           ; Name         Instructions Cycles
  3022                           ; simple_byte           19    10 (average)
  3023                           ; direct_byte           26     8 (fixed)
  3024                           ; jumptable            260     6 (fixed)
  3025                           ;	Chosen strategy is simple_byte
  3026  005A  0873               	movf	??_SPI_Maestro_Init,w
  3027  005B  3A00               	xorlw	0	; case 0
  3028  005C  1903               	skipnz
  3029  005D  2828               	goto	l249
  3030  005E  3A01               	xorlw	1	; case 1
  3031  005F  1903               	skipnz
  3032  0060  282F               	goto	l251
  3033  0061  3A03               	xorlw	3	; case 2
  3034  0062  1903               	skipnz
  3035  0063  2836               	goto	l252
  3036  0064  3A01               	xorlw	1	; case 3
  3037  0065  1903               	skipnz
  3038  0066  283D               	goto	l253
  3039  0067  3A07               	xorlw	7	; case 4
  3040  0068  1903               	skipnz
  3041  0069  2844               	goto	l254
  3042  006A  3A01               	xorlw	1	; case 5
  3043  006B  1903               	skipnz
  3044  006C  284B               	goto	l255
  3045  006D  2886               	goto	l1471
  3046  006E                     l257:	
  3047                           ;SPI_SPI.c: 58:     {;SPI_SPI.c: 59:         case 0:
  3048                           
  3049                           
  3050                           ;SPI_SPI.c: 60:             SSPCONbits.CKP = 0;
  3051  006E  1283               	bcf	3,5	;RP0=0, select bank0
  3052  006F  1214               	bcf	20,4	;volatile
  3053                           
  3054                           ;SPI_SPI.c: 61:             SSPSTATbits.CKE = 0;
  3055  0070  1683               	bsf	3,5	;RP0=1, select bank1
  3056  0071  1303               	bcf	3,6	;RP1=0, select bank1
  3057  0072  1314               	bcf	20,6	;volatile
  3058                           
  3059                           ;SPI_SPI.c: 63:             break;
  3060  0073  289C               	goto	l258
  3061  0074                     l259:	
  3062                           ;SPI_SPI.c: 64:          case 1:
  3063                           
  3064                           
  3065                           ;SPI_SPI.c: 65:             SSPCONbits.CKP = 1;
  3066  0074  1283               	bcf	3,5	;RP0=0, select bank0
  3067  0075  1614               	bsf	20,4	;volatile
  3068                           
  3069                           ;SPI_SPI.c: 66:             SSPSTATbits.CKE = 0;
  3070  0076  1683               	bsf	3,5	;RP0=1, select bank1
  3071  0077  1303               	bcf	3,6	;RP1=0, select bank1
  3072  0078  1314               	bcf	20,6	;volatile
  3073                           
  3074                           ;SPI_SPI.c: 68:             break;
  3075  0079  289C               	goto	l258
  3076  007A                     l260:	
  3077                           ;SPI_SPI.c: 69:          case 2:
  3078                           
  3079                           
  3080                           ;SPI_SPI.c: 70:             SSPCONbits.CKP = 0;
  3081  007A  1283               	bcf	3,5	;RP0=0, select bank0
  3082  007B  1214               	bcf	20,4	;volatile
  3083                           
  3084                           ;SPI_SPI.c: 71:             SSPSTATbits.CKE = 1;
  3085  007C  1683               	bsf	3,5	;RP0=1, select bank1
  3086  007D  1303               	bcf	3,6	;RP1=0, select bank1
  3087  007E  1714               	bsf	20,6	;volatile
  3088                           
  3089                           ;SPI_SPI.c: 73:             break;
  3090  007F  289C               	goto	l258
  3091  0080                     l261:	
  3092                           ;SPI_SPI.c: 74:          case 3:
  3093                           
  3094                           
  3095                           ;SPI_SPI.c: 75:             SSPCONbits.CKP = 1;
  3096  0080  1283               	bcf	3,5	;RP0=0, select bank0
  3097  0081  1614               	bsf	20,4	;volatile
  3098                           
  3099                           ;SPI_SPI.c: 76:             SSPSTATbits.CKE = 1;
  3100  0082  1683               	bsf	3,5	;RP0=1, select bank1
  3101  0083  1303               	bcf	3,6	;RP1=0, select bank1
  3102  0084  1714               	bsf	20,6	;volatile
  3103                           
  3104                           ;SPI_SPI.c: 77:             break;
  3105  0085  289C               	goto	l258
  3106  0086                     l1471:
  3107  0086  0872               	movf	SPI_Maestro_Init@SCK,w
  3108  0087  00F3               	movwf	??_SPI_Maestro_Init
  3109  0088  01F4               	clrf	??_SPI_Maestro_Init+1
  3110                           
  3111                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3112                           ; Switch size 1, requested type "simple"
  3113                           ; Number of cases is 1, Range of values is 0 to 0
  3114                           ; switch strategies available:
  3115                           ; Name         Instructions Cycles
  3116                           ; simple_byte            4     3 (average)
  3117                           ; direct_byte           11     8 (fixed)
  3118                           ; jumptable            260     6 (fixed)
  3119                           ;	Chosen strategy is simple_byte
  3120  0089  0874               	movf	??_SPI_Maestro_Init+1,w
  3121  008A  3A00               	xorlw	0	; case 0
  3122  008B  1903               	skipnz
  3123  008C  288E               	goto	l1873
  3124  008D  289C               	goto	l258
  3125  008E                     l1873:
  3126                           
  3127                           ; Switch size 1, requested type "simple"
  3128                           ; Number of cases is 4, Range of values is 0 to 3
  3129                           ; switch strategies available:
  3130                           ; Name         Instructions Cycles
  3131                           ; simple_byte           13     7 (average)
  3132                           ; direct_byte           20     8 (fixed)
  3133                           ; jumptable            260     6 (fixed)
  3134                           ;	Chosen strategy is simple_byte
  3135  008E  0873               	movf	??_SPI_Maestro_Init,w
  3136  008F  3A00               	xorlw	0	; case 0
  3137  0090  1903               	skipnz
  3138  0091  286E               	goto	l257
  3139  0092  3A01               	xorlw	1	; case 1
  3140  0093  1903               	skipnz
  3141  0094  2874               	goto	l259
  3142  0095  3A03               	xorlw	3	; case 2
  3143  0096  1903               	skipnz
  3144  0097  287A               	goto	l260
  3145  0098  3A01               	xorlw	1	; case 3
  3146  0099  1903               	skipnz
  3147  009A  2880               	goto	l261
  3148  009B  289C               	goto	l258
  3149  009C                     l258:
  3150                           
  3151                           ;SPI_SPI.c: 79:     SSPSTATbits.SMP = 0;
  3152  009C  1683               	bsf	3,5	;RP0=1, select bank1
  3153  009D  1303               	bcf	3,6	;RP1=0, select bank1
  3154  009E  1394               	bcf	20,7	;volatile
  3155                           
  3156                           ;SPI_SPI.c: 80:     SSPCONbits.SSPEN = 1;
  3157  009F  1283               	bcf	3,5	;RP0=0, select bank0
  3158  00A0  1303               	bcf	3,6	;RP1=0, select bank0
  3159  00A1  1694               	bsf	20,5	;volatile
  3160  00A2                     l262:
  3161  00A2  0008               	return
  3162  00A3                     __end_of_SPI_Maestro_Init:
  3163                           
  3164                           	psect	text20
  3165  04F6                     __ptext20:	
  3166 ;; *************** function _SPI_Enviar *****************
  3167 ;; Defined at:
  3168 ;;		line 161 in file "SPI_SPI.c"
  3169 ;; Parameters:    Size  Location     Type
  3170 ;;  valor           1    wreg     unsigned char 
  3171 ;; Auto vars:     Size  Location     Type
  3172 ;;  valor           1    2[COMMON] unsigned char 
  3173 ;; Return value:  Size  Location     Type
  3174 ;;                  1    wreg      void 
  3175 ;; Registers used:
  3176 ;;		wreg
  3177 ;; Tracked objects:
  3178 ;;		On entry : 0/0
  3179 ;;		On exit  : 0/0
  3180 ;;		Unchanged: 0/0
  3181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3182 ;;      Params:         0       0       0       0       0
  3183 ;;      Locals:         1       0       0       0       0
  3184 ;;      Temps:          0       0       0       0       0
  3185 ;;      Totals:         1       0       0       0       0
  3186 ;;Total ram usage:        1 bytes
  3187 ;; Hardware stack levels used:    1
  3188 ;; Hardware stack levels required when called:    1
  3189 ;; This function calls:
  3190 ;;		Nothing
  3191 ;; This function is called by:
  3192 ;;		_main
  3193 ;; This function uses a non-reentrant model
  3194 ;;
  3195                           
  3196                           
  3197                           ;psect for function _SPI_Enviar
  3198  04F6                     _SPI_Enviar:
  3199                           
  3200                           ;incstack = 0
  3201                           ; Regs used in _SPI_Enviar: [wreg]
  3202                           ;SPI_Enviar@valor stored from wreg
  3203  04F6  00F2               	movwf	SPI_Enviar@valor
  3204  04F7                     l1581:
  3205                           
  3206                           ;SPI_SPI.c: 161: void SPI_Enviar (char valor);SPI_SPI.c: 162: {;SPI_SPI.c: 163:     SSPB
      +                          UF = valor;
  3207  04F7  0872               	movf	SPI_Enviar@valor,w
  3208  04F8  1283               	bcf	3,5	;RP0=0, select bank0
  3209  04F9  1303               	bcf	3,6	;RP1=0, select bank0
  3210  04FA  0093               	movwf	19	;volatile
  3211  04FB                     l282:
  3212  04FB  0008               	return
  3213  04FC                     __end_of_SPI_Enviar:
  3214                           
  3215                           	psect	text21
  3216  0228                     __ptext21:	
  3217 ;; *************** function _Lcd_Init *****************
  3218 ;; Defined at:
  3219 ;;		line 37 in file "LCD_SPI.c"
  3220 ;; Parameters:    Size  Location     Type
  3221 ;;		None
  3222 ;; Auto vars:     Size  Location     Type
  3223 ;;		None
  3224 ;; Return value:  Size  Location     Type
  3225 ;;                  1    wreg      void 
  3226 ;; Registers used:
  3227 ;;		wreg, status,2, status,0, pclath, cstack
  3228 ;; Tracked objects:
  3229 ;;		On entry : 0/0
  3230 ;;		On exit  : 0/0
  3231 ;;		Unchanged: 0/0
  3232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3233 ;;      Params:         0       0       0       0       0
  3234 ;;      Locals:         0       0       0       0       0
  3235 ;;      Temps:          2       0       0       0       0
  3236 ;;      Totals:         2       0       0       0       0
  3237 ;;Total ram usage:        2 bytes
  3238 ;; Hardware stack levels used:    1
  3239 ;; Hardware stack levels required when called:    3
  3240 ;; This function calls:
  3241 ;;		_Lcd_Cmd
  3242 ;;		_Lcd_Port
  3243 ;; This function is called by:
  3244 ;;		_main
  3245 ;; This function uses a non-reentrant model
  3246 ;;
  3247                           
  3248                           
  3249                           ;psect for function _Lcd_Init
  3250  0228                     _Lcd_Init:
  3251  0228                     l1555:	
  3252                           ;incstack = 0
  3253                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3254                           
  3255                           
  3256                           ;LCD_SPI.c: 39:     Lcd_Port(0b0000000);
  3257  0228  3000               	movlw	0
  3258  0229  120A  118A  24FC  120A  118A  	fcall	_Lcd_Port
  3259  022E                     l1557:
  3260                           
  3261                           ;LCD_SPI.c: 40:     _delay((unsigned long)((20)*(4000000/4000.0)));
  3262  022E  301A               	movlw	26
  3263  022F  00F7               	movwf	??_Lcd_Init+1
  3264  0230  30F8               	movlw	248
  3265  0231  00F6               	movwf	??_Lcd_Init
  3266  0232                     u707:
  3267  0232  0BF6               	decfsz	??_Lcd_Init,f
  3268  0233  2A32               	goto	u707
  3269  0234  0BF7               	decfsz	??_Lcd_Init+1,f
  3270  0235  2A32               	goto	u707
  3271  0236  0000               	nop
  3272  0237                     l1559:
  3273                           
  3274                           ;LCD_SPI.c: 41:     Lcd_Cmd(0b00110000);
  3275  0237  3030               	movlw	48
  3276  0238  120A  118A  246A  120A  118A  	fcall	_Lcd_Cmd
  3277  023D                     l1561:
  3278                           
  3279                           ;LCD_SPI.c: 42:     PORTCbits.RC0 = 0;
  3280  023D  1283               	bcf	3,5	;RP0=0, select bank0
  3281  023E  1303               	bcf	3,6	;RP1=0, select bank0
  3282  023F  1007               	bcf	7,0	;volatile
  3283  0240                     l1563:
  3284                           
  3285                           ;LCD_SPI.c: 43:     PORTCbits.RC1 = 0;
  3286  0240  1087               	bcf	7,1	;volatile
  3287                           
  3288                           ;LCD_SPI.c: 44:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3289  0241  3007               	movlw	7
  3290  0242  00F7               	movwf	??_Lcd_Init+1
  3291  0243  307D               	movlw	125
  3292  0244  00F6               	movwf	??_Lcd_Init
  3293  0245                     u717:
  3294  0245  0BF6               	decfsz	??_Lcd_Init,f
  3295  0246  2A45               	goto	u717
  3296  0247  0BF7               	decfsz	??_Lcd_Init+1,f
  3297  0248  2A45               	goto	u717
  3298  0249                     l1565:
  3299                           
  3300                           ;LCD_SPI.c: 45:     Lcd_Cmd(0b00110000);
  3301  0249  3030               	movlw	48
  3302  024A  120A  118A  246A  120A  118A  	fcall	_Lcd_Cmd
  3303  024F                     l1567:
  3304                           
  3305                           ;LCD_SPI.c: 46:      PORTCbits.RC0 = 0;
  3306  024F  1283               	bcf	3,5	;RP0=0, select bank0
  3307  0250  1303               	bcf	3,6	;RP1=0, select bank0
  3308  0251  1007               	bcf	7,0	;volatile
  3309  0252                     l1569:
  3310                           
  3311                           ;LCD_SPI.c: 47:     PORTCbits.RC1 = 0;
  3312  0252  1087               	bcf	7,1	;volatile
  3313  0253                     l1571:
  3314                           
  3315                           ;LCD_SPI.c: 48:     _delay((unsigned long)((11)*(4000000/4000.0)));
  3316  0253  300F               	movlw	15
  3317  0254  00F7               	movwf	??_Lcd_Init+1
  3318  0255  3047               	movlw	71
  3319  0256  00F6               	movwf	??_Lcd_Init
  3320  0257                     u727:
  3321  0257  0BF6               	decfsz	??_Lcd_Init,f
  3322  0258  2A57               	goto	u727
  3323  0259  0BF7               	decfsz	??_Lcd_Init+1,f
  3324  025A  2A57               	goto	u727
  3325  025B  2A5C               	nop2
  3326                           
  3327                           ;LCD_SPI.c: 49:     Lcd_Cmd(0b00110000);
  3328  025C  3030               	movlw	48
  3329  025D  120A  118A  246A  120A  118A  	fcall	_Lcd_Cmd
  3330  0262                     l1573:
  3331                           
  3332                           ;LCD_SPI.c: 50:     PORTCbits.RC0 = 0;
  3333  0262  1283               	bcf	3,5	;RP0=0, select bank0
  3334  0263  1303               	bcf	3,6	;RP1=0, select bank0
  3335  0264  1007               	bcf	7,0	;volatile
  3336  0265                     l1575:
  3337                           
  3338                           ;LCD_SPI.c: 51:     PORTCbits.RC1 = 0;
  3339  0265  1087               	bcf	7,1	;volatile
  3340                           
  3341                           ;LCD_SPI.c: 52:     Lcd_Cmd(0b00111000);
  3342  0266  3038               	movlw	56
  3343  0267  120A  118A  246A  120A  118A  	fcall	_Lcd_Cmd
  3344                           
  3345                           ;LCD_SPI.c: 53:     Lcd_Cmd(0b00001100);
  3346  026C  300C               	movlw	12
  3347  026D  120A  118A  246A  120A  118A  	fcall	_Lcd_Cmd
  3348                           
  3349                           ;LCD_SPI.c: 54:     Lcd_Cmd(0b00000001);
  3350  0272  3001               	movlw	1
  3351  0273  120A  118A  246A  120A  118A  	fcall	_Lcd_Cmd
  3352                           
  3353                           ;LCD_SPI.c: 55:     Lcd_Cmd(0b00000110);
  3354  0278  3006               	movlw	6
  3355  0279  120A  118A  246A  120A  118A  	fcall	_Lcd_Cmd
  3356  027E                     l211:
  3357  027E  0008               	return
  3358  027F                     __end_of_Lcd_Init:
  3359                           
  3360                           	psect	text22
  3361  046A                     __ptext22:	
  3362 ;; *************** function _Lcd_Cmd *****************
  3363 ;; Defined at:
  3364 ;;		line 28 in file "LCD_SPI.c"
  3365 ;; Parameters:    Size  Location     Type
  3366 ;;  a               1    wreg     unsigned char 
  3367 ;; Auto vars:     Size  Location     Type
  3368 ;;  a               1    5[COMMON] unsigned char 
  3369 ;; Return value:  Size  Location     Type
  3370 ;;                  1    wreg      void 
  3371 ;; Registers used:
  3372 ;;		wreg, status,2, status,0, pclath, cstack
  3373 ;; Tracked objects:
  3374 ;;		On entry : 0/0
  3375 ;;		On exit  : 0/0
  3376 ;;		Unchanged: 0/0
  3377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3378 ;;      Params:         0       0       0       0       0
  3379 ;;      Locals:         1       0       0       0       0
  3380 ;;      Temps:          2       0       0       0       0
  3381 ;;      Totals:         3       0       0       0       0
  3382 ;;Total ram usage:        3 bytes
  3383 ;; Hardware stack levels used:    1
  3384 ;; Hardware stack levels required when called:    2
  3385 ;; This function calls:
  3386 ;;		_Lcd_Port
  3387 ;; This function is called by:
  3388 ;;		_Lcd_Init
  3389 ;;		_Lcd_Set_Cursor
  3390 ;;		_Lcd_Clear
  3391 ;;		_Lcd_Shift_Left
  3392 ;;		_Lcd_Shift_Right
  3393 ;; This function uses a non-reentrant model
  3394 ;;
  3395                           
  3396                           
  3397                           ;psect for function _Lcd_Cmd
  3398  046A                     _Lcd_Cmd:
  3399                           
  3400                           ;incstack = 0
  3401                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3402                           ;Lcd_Cmd@a stored from wreg
  3403  046A  00F5               	movwf	Lcd_Cmd@a
  3404  046B                     l1331:
  3405                           
  3406                           ;LCD_SPI.c: 28: void Lcd_Cmd (char a);LCD_SPI.c: 29: {;LCD_SPI.c: 30:     PORTCbits.RC0 
      +                          = 0;
  3407  046B  1283               	bcf	3,5	;RP0=0, select bank0
  3408  046C  1303               	bcf	3,6	;RP1=0, select bank0
  3409  046D  1007               	bcf	7,0	;volatile
  3410  046E                     l1333:
  3411                           
  3412                           ;LCD_SPI.c: 31:     Lcd_Port(a);
  3413  046E  0875               	movf	Lcd_Cmd@a,w
  3414  046F  120A  118A  24FC  120A  118A  	fcall	_Lcd_Port
  3415  0474                     l1335:
  3416                           
  3417                           ;LCD_SPI.c: 32:     PORTCbits.RC2 = 1;
  3418  0474  1283               	bcf	3,5	;RP0=0, select bank0
  3419  0475  1303               	bcf	3,6	;RP1=0, select bank0
  3420  0476  1507               	bsf	7,2	;volatile
  3421  0477                     l1337:
  3422                           
  3423                           ;LCD_SPI.c: 33:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3424  0477  3007               	movlw	7
  3425  0478  00F4               	movwf	??_Lcd_Cmd+1
  3426  0479  307D               	movlw	125
  3427  047A  00F3               	movwf	??_Lcd_Cmd
  3428  047B                     u737:
  3429  047B  0BF3               	decfsz	??_Lcd_Cmd,f
  3430  047C  2C7B               	goto	u737
  3431  047D  0BF4               	decfsz	??_Lcd_Cmd+1,f
  3432  047E  2C7B               	goto	u737
  3433  047F                     l1339:
  3434                           
  3435                           ;LCD_SPI.c: 34:     PORTCbits.RC2 = 0;
  3436  047F  1283               	bcf	3,5	;RP0=0, select bank0
  3437  0480  1303               	bcf	3,6	;RP1=0, select bank0
  3438  0481  1107               	bcf	7,2	;volatile
  3439  0482                     l208:
  3440  0482  0008               	return
  3441  0483                     __end_of_Lcd_Cmd:
  3442                           
  3443                           	psect	text23
  3444  04FC                     __ptext23:	
  3445 ;; *************** function _Lcd_Port *****************
  3446 ;; Defined at:
  3447 ;;		line 23 in file "LCD_SPI.c"
  3448 ;; Parameters:    Size  Location     Type
  3449 ;;  a               1    wreg     unsigned char 
  3450 ;; Auto vars:     Size  Location     Type
  3451 ;;  a               1    2[COMMON] unsigned char 
  3452 ;; Return value:  Size  Location     Type
  3453 ;;                  1    wreg      void 
  3454 ;; Registers used:
  3455 ;;		wreg
  3456 ;; Tracked objects:
  3457 ;;		On entry : 0/0
  3458 ;;		On exit  : 0/0
  3459 ;;		Unchanged: 0/0
  3460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3461 ;;      Params:         0       0       0       0       0
  3462 ;;      Locals:         1       0       0       0       0
  3463 ;;      Temps:          0       0       0       0       0
  3464 ;;      Totals:         1       0       0       0       0
  3465 ;;Total ram usage:        1 bytes
  3466 ;; Hardware stack levels used:    1
  3467 ;; Hardware stack levels required when called:    1
  3468 ;; This function calls:
  3469 ;;		Nothing
  3470 ;; This function is called by:
  3471 ;;		_Lcd_Cmd
  3472 ;;		_Lcd_Init
  3473 ;;		_Lcd_Write_Char
  3474 ;; This function uses a non-reentrant model
  3475 ;;
  3476                           
  3477                           
  3478                           ;psect for function _Lcd_Port
  3479  04FC                     _Lcd_Port:
  3480                           
  3481                           ;incstack = 0
  3482                           ; Regs used in _Lcd_Port: [wreg]
  3483                           ;Lcd_Port@a stored from wreg
  3484  04FC  00F2               	movwf	Lcd_Port@a
  3485  04FD                     l1297:
  3486                           
  3487                           ;LCD_SPI.c: 23: void Lcd_Port (char a);LCD_SPI.c: 24: {;LCD_SPI.c: 25:     PORTD = a;
  3488  04FD  0872               	movf	Lcd_Port@a,w
  3489  04FE  1283               	bcf	3,5	;RP0=0, select bank0
  3490  04FF  1303               	bcf	3,6	;RP1=0, select bank0
  3491  0500  0088               	movwf	8	;volatile
  3492  0501                     l205:
  3493  0501  0008               	return
  3494  0502                     __end_of_Lcd_Port:
  3495                           
  3496                           	psect	text24
  3497  04AF                     __ptext24:	
  3498 ;; *************** function _ISR *****************
  3499 ;; Defined at:
  3500 ;;		line 95 in file "MAESTRO_SPI.c"
  3501 ;; Parameters:    Size  Location     Type
  3502 ;;		None
  3503 ;; Auto vars:     Size  Location     Type
  3504 ;;		None
  3505 ;; Return value:  Size  Location     Type
  3506 ;;                  1    wreg      void 
  3507 ;; Registers used:
  3508 ;;		None
  3509 ;; Tracked objects:
  3510 ;;		On entry : 0/0
  3511 ;;		On exit  : 0/0
  3512 ;;		Unchanged: 0/0
  3513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3514 ;;      Params:         0       0       0       0       0
  3515 ;;      Locals:         0       0       0       0       0
  3516 ;;      Temps:          2       0       0       0       0
  3517 ;;      Totals:         2       0       0       0       0
  3518 ;;Total ram usage:        2 bytes
  3519 ;; Hardware stack levels used:    1
  3520 ;; This function calls:
  3521 ;;		Nothing
  3522 ;; This function is called by:
  3523 ;;		Interrupt level 1
  3524 ;; This function uses a non-reentrant model
  3525 ;;
  3526                           
  3527                           
  3528                           ;psect for function _ISR
  3529  04AF                     _ISR:
  3530  04AF                     i1l1189:
  3531                           
  3532                           ;MAESTRO_SPI.c: 97: 
  3533  04AF  1283               	bcf	3,5	;RP0=0, select bank0
  3534  04B0  1303               	bcf	3,6	;RP1=0, select bank0
  3535  04B1  1E8C               	btfss	12,5	;volatile
  3536  04B2  2CB4               	goto	u27_21
  3537  04B3  2CB5               	goto	u27_20
  3538  04B4                     u27_21:
  3539  04B4  2CB6               	goto	i1l124
  3540  04B5                     u27_20:
  3541  04B5                     i1l1191:
  3542                           
  3543                           ;MAESTRO_SPI.c: 98: void setup(void);MAESTRO_SPI.c: 99: {
  3544  04B5  128C               	bcf	12,5	;volatile
  3545  04B6                     i1l124:
  3546  04B6  0871               	movf	??_ISR+1,w
  3547  04B7  008A               	movwf	10
  3548  04B8  0E70               	swapf	??_ISR,w
  3549  04B9  0083               	movwf	3
  3550  04BA  0EFE               	swapf	btemp,f
  3551  04BB  0E7E               	swapf	btemp,w
  3552  04BC  0009               	retfie
  3553  04BD                     __end_of_ISR:
  3554  007E                     btemp	set	126	;btemp
  3555  007E                     wtemp0	set	126
  3556                           
  3557                           	psect	intentry
  3558  0004                     __pintentry:	
  3559                           ;incstack = 0
  3560                           ; Regs used in _ISR: []
  3561                           
  3562  0004                     interrupt_function:
  3563  007E                     saved_w	set	btemp
  3564  0004  00FE               	movwf	btemp
  3565  0005  0E03               	swapf	3,w
  3566  0006  00F0               	movwf	??_ISR
  3567  0007  080A               	movf	10,w
  3568  0008  00F1               	movwf	??_ISR+1
  3569  0009  120A  118A  2CAF   	ljmp	_ISR
  3570                           
  3571                           	psect	config
  3572                           
  3573                           ;Config register CONFIG1 @ 0x2007
  3574                           ;	Oscillator Selection bits
  3575                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3576                           ;	Watchdog Timer Enable bit
  3577                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3578                           ;	Power-up Timer Enable bit
  3579                           ;	PWRTE = OFF, PWRT disabled
  3580                           ;	RE3/MCLR pin function select bit
  3581                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3582                           ;	Code Protection bit
  3583                           ;	CP = OFF, Program memory code protection is disabled
  3584                           ;	Data Code Protection bit
  3585                           ;	CPD = OFF, Data memory code protection is disabled
  3586                           ;	Brown Out Reset Selection bits
  3587                           ;	BOREN = OFF, BOR disabled
  3588                           ;	Internal External Switchover bit
  3589                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3590                           ;	Fail-Safe Clock Monitor Enabled bit
  3591                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3592                           ;	Low Voltage Programming Enable bit
  3593                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3594                           ;	In-Circuit Debugger Mode bit
  3595                           ;	DEBUG = 0x1, unprogrammed default
  3596  2007                     	org	8199
  3597  2007  20D4               	dw	8404
  3598                           
  3599                           ;Config register CONFIG2 @ 0x2008
  3600                           ;	Brown-out Reset Selection bit
  3601                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3602                           ;	Flash Program Memory Self Write Enable bits
  3603                           ;	WRT = OFF, Write protection off
  3604  2008                     	org	8200
  3605  2008  3FFF               	dw	16383

Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80      9      27
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _lcd->_Conversion1
    _lcd->_Conversion2
    _lcd->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Conversion2->___awmod
    _virtual_display3->_escribir_char
    _virtual_display2->_escribir_char
    _Conversion1->___awmod
    _virtual_display1->_escribir_char
    _Lcd_Write_Char->_Lcd_Port
    _SPI_config->_SPI_Maestro_Init
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_lcd
    _Conversion2->___awdiv
    _Conversion1->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    5768
                                              5 BANK0      4     4      0
                           _Lcd_Init
                         _SPI_Enviar
                         _SPI_config
                       _USART_config
                    _interrup_config
                                _lcd
                         _osc_config
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _osc_config                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd                                                  1     1      0    5461
                                              4 BANK0      1     1      0
                        _Conversion1
                        _Conversion2
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     3     3      0     167
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       4     3      1     558
                                              6 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Conversion2                                          1     1      0    2357
                                              9 COMMON     1     1      0
                     _Lcd_Write_Char
                            ___awdiv
                            ___awmod
                   _virtual_display2
                   _virtual_display3
 ---------------------------------------------------------------------------------
 (3) _virtual_display3                                     0     0      0      22
                      _escribir_char
 ---------------------------------------------------------------------------------
 (3) _virtual_display2                                     0     0      0      22
                      _escribir_char
 ---------------------------------------------------------------------------------
 (2) _Conversion1                                          1     1      0    2335
                                              9 COMMON     1     1      0
                     _Lcd_Write_Char
                            ___awdiv
                            ___awmod
                   _virtual_display1
 ---------------------------------------------------------------------------------
 (3) _virtual_display1                                     0     0      0      22
                      _escribir_char
 ---------------------------------------------------------------------------------
 (4) _escribir_char                                        1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1008
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1261
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      44
                                              3 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _interrup_config                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_config                                         0     0      0       0
                   _USART_lib_config
 ---------------------------------------------------------------------------------
 (2) _USART_lib_config                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_config                                           1     1      0     120
                                              6 COMMON     1     1      0
                   _SPI_Maestro_Init
 ---------------------------------------------------------------------------------
 (2) _SPI_Maestro_Init                                     4     3      1     120
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _SPI_Enviar                                           1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      44
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _SPI_Enviar
   _SPI_config
     _SPI_Maestro_Init
   _USART_config
     _USART_lib_config
   _interrup_config
   _lcd
     _Conversion1
       _Lcd_Write_Char
         _Lcd_Port
       ___awdiv
       ___awmod
       _virtual_display1
         _escribir_char
     _Conversion2
       _Lcd_Write_Char
         _Lcd_Port
       ___awdiv
       ___awmod
       _virtual_display2
         _escribir_char
       _virtual_display3
         _escribir_char
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_Char
       _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
   _osc_config
   _setup

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      27       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      9      1B       5       33.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      27      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Feb 14 23:57:53 2021

          SPI_Enviar@valor 0072                          _a 0023                          pc 0002  
              _SSPSTATbits 0094               ___awdiv@sign 0033                         _w1 0025  
                       _w2 0024                         _x1 007A                         _x2 002F  
                       _y1 0030                         _y2 002E                 _SPI_config 04C9  
   __size_of_escribir_char 000A                         fsr 0004                        l211 027E  
                      l131 014E                        l140 04C8                        l220 044B  
                      l205 0501                        l143 04DD                        l208 0482  
                      l161 01CE                        l137 0402                        l146 04F5  
                      l226 0427                        l251 002F                        l235 04AE  
                      l155 03B1                        l260 007A                        l252 0036  
                      l261 0080                        l253 003D                        l149 04D3  
                      l181 04E7                        l165 0373                        l262 00A2  
                      l254 0044                        l158 02D3                        l255 004B  
                      l175 03DB                        l257 006E                        l249 0028  
                      l169 0324                        l282 04FB                        l258 009C  
                      l194 0469                        l178 04E3                        l259 0074  
                      l524 010B                        l537 0227    __end_of_interrup_config 04C9  
                      u300 032D                        u301 032C                        u310 02DC  
                      u311 02DB                        u320 03BA                        u321 03B9  
                      u500 0219                        u501 0218                        u510 021E  
                      u430 01D4                        u511 021D                        u431 01D3  
                      u600 00D8                        u440 01DF                        u520 042E  
                      u601 00D7                        u441 01DE                        u521 042D  
                      u450 01EA                        u290 04E7                        u530 0440  
                      u451 01E9                        u291 04E6                        u531 043F  
                      u620 00E9                        u540 0427                        _ISR 04AF  
                      u621 00E8                        u541 0426                        u470 01FC  
                      u615 00D9                        u471 01FB                        u640 00FD  
                      u560 00AA                        u480 0206                        u641 00FC  
                      u625 00E5                        u561 00A9                        u481 0205  
                      u465 01EE                        u650 0102                        u570 00B5  
                      u707 0232                        u651 0101                        u635 00F1  
                      u571 00B4                        u580 00C6                        u660 014E  
                      u717 0245                        u581 00C5                        u485 0202  
                      u661 014D                        u727 0257                        u495 020D  
                      u737 047B                        u595 00CA                        u677 013C  
                      u687 0155                        u697 04A9           _USART_lib_config 044C  
                      _x1z 002B                        _x2z 0029                        _y1z 002A  
                      _y2z 0028                        _lcd 0374              ??_Conversion1 0079  
            ??_Conversion2 0079                        fsr0 0004                        indf 0000  
             ___awmod@sign 0078                       ?_ISR 0070                       l1301 049E  
                     l1303 04A4                       l1311 032D                       l1305 04A7  
                     l1401 01ED                       l1313 0370                       l1321 03B2  
                     l1331 046B                       l1307 04AB                       l1411 020C  
                     l1403 01F4                       l1315 02D4                       l1323 03BA  
                     l1333 046E                       l1413 0213                       l1405 01F8  
                     l1309 0325                       l1317 02DC                       l1325 03D8  
                     l1335 0474                       l1431 0453                       l1423 044C  
                     l1407 01FC                       l1415 0219                       l1319 0321  
                     l1337 0477                       l1441 0458                       l1433 0454  
                     l1425 0450                       l1417 021E                       l1409 0206  
                     l1339 047F                       l1451 045F                       l1443 045B  
                     l1435 0455                       l1427 0451                       l1419 0223  
                     l1461 0466                       l1453 0460                       l1445 045C  
                     l1437 0456                       l1429 0452                       l1701 00BE  
                     l1471 0086                       l1463 001F                       l1455 0461  
                     l1447 045D                       l1439 0457                       l1551 04BD  
                     l1711 00D4                       l1703 00C0                       l1391 01D9  
                     l1295 04DF                       l1543 03DC                       l1297 04FD  
                     l1561 023D                       l1457 0462                       l1449 045E  
                     l1553 04C5                       l1721 00F7                       l1713 00D8  
                     l1705 00C6                       l1393 01DB                       l1385 01CF  
                     l1481 0429                       l1545 03F1                       l1801 0120  
                     l1571 0253                       l1563 0240                       l1555 0228  
                     l1467 0052                       l1459 0463                       l1299 049B  
                     l1715 00E9                       l1707 00C9                       l1723 00FD  
                     l1395 01DF                       l1387 01D0                       l1731 027F  
                     l1491 0445                       l1483 042E                       l1547 03F2  
                     l1803 0125                       l1573 0262                       l1565 0249  
                     l1557 022E                       l1581 04F7                       l1725 0102  
                     l1717 00EF                       l1709 00D0                       l1397 01E4  
                     l1389 01D4                       l1741 02B0                       l1733 0281  
                     l1485 0433                       l1493 0404                       l1549 04D4  
                     l1821 014F                       l1813 012E                       l1805 012A  
                     l1575 0265                       l1567 024F                       l1559 0237  
                     l1727 0107                       l1719 00F0                       l1399 01EA  
                     l1743 02B6                       l1735 0293                       l1751 0173  
                     l1487 043A                       l1495 0407                       l1823 0159  
                     l1815 0134                       l1807 012D                       l1569 0252  
                     l1577 04F0                       l1745 02BF                       l1737 02A5  
                     l1761 01A6                       l1753 0177                       l1489 0440  
                     l1497 0414                       l1825 015E                       l1817 0142  
                     ?_lcd 0070                       l1579 04C9                       l1691 00AA  
                     l1747 02C8                       l1739 02A9                       l1771 01C9  
                     l1763 01AC                       l1755 0189                       l1499 041A  
                     l1827 0165                       l1819 0148                       l1693 00AF  
                     l1749 02CE                       l1765 01B5                       l1757 019B  
                     l1781 038E                       l1773 0374                       l1829 016A  
                     l1871 005A                       l1695 00B1                       l1687 00A3  
                     l1767 01BE                       l1759 019F                       l1783 039A  
                     l1775 037C                       l1873 008E                       l1697 00B5  
                     l1689 00A6                       l1769 01C4                       l1785 039F  
                     l1777 0382                       l1699 00BA                       l1787 03AB  
                     l1779 0389                       l1797 010C                       l1799 011B  
                     STR_1 0489                       _IOCB 0096          ?_Lcd_Write_String 0070  
                     _main 010C                       _leer 0027                       btemp 007E  
                     start 000C         ??_Lcd_Write_String 0075            __end_of_Lcd_Cmd 0483  
                    ??_ISR 0070                      ??_lcd 0036                      ?_main 0070  
          __end_of___awdiv 010C            __end_of___awmod 0228                      _ANSEL 0188  
          ___awdiv@divisor 0072                      i1l124 04B6            ___awdiv@counter 0032  
                    _SPBRG 0099                      u27_20 04B5                      u27_21 04B4  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009    __size_of_Lcd_Set_Cursor 0024  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _TRISE 0089                      _TXREG 0019  
                    _setup 03DC                      main@j 003A        __end_of_Conversion1 02D4  
      __end_of_Conversion2 01CF              _escribir_char 04DE                      pclath 000A  
                    status 0003                      wtemp0 007E           __end_of_Lcd_Init 027F  
         __end_of_Lcd_Port 0502                ?_SPI_Enviar 0070            __initialization 000F  
             __end_of_main 0173        SPI_Maestro_Init@SCK 0072                ?_SPI_config 0070  
                   ??_main 0037           ?_interrup_config 0070   __end_of_virtual_display1 0374  
 __end_of_virtual_display2 0325   __end_of_virtual_display3 03DC   __end_of_SPI_Maestro_Init 00A3  
         ___awdiv@dividend 0074             ?_escribir_char 0070                     ?_setup 0070  
                   _ANSELH 0189                     i1l1191 04B5                     i1l1189 04AF  
                ??_Lcd_Cmd 0073    __size_of_Lcd_Write_Char 0015                     _SSPBUF 0013  
                ??___awdiv 0076                  ??___awmod 0076           ___awdiv@quotient 0034  
          ___awmod@divisor 0072            ___awmod@counter 0077                     _unidad 007B  
              _Conversion1 027F                _Conversion2 0173                     saved_w 007E  
      __size_of_SPI_Enviar 0006            Lcd_Set_Cursor@a 0078            Lcd_Set_Cursor@b 0076  
  __end_of__initialization 001A        __size_of_SPI_config 000B   __end_of_USART_lib_config 046A  
           __pcstackCOMMON 0070              __end_of_setup 0403             _Lcd_Set_Cursor 0428  
          ??_escribir_char 0072                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
                  ??_setup 0072                 __pbssBANK0 0020                 __pmaintext 010C  
               __pintentry 0004  __size_of_Lcd_Write_String 0025     __end_of_Lcd_Set_Cursor 044C  
               ??_Lcd_Init 0076                 ??_Lcd_Port 0072                 __stringtab 0483  
           _Lcd_Write_Char 049A                    _Lcd_Cmd 046A               ??_SPI_Enviar 0072  
                  ___awdiv 00A3                    ___awmod 01CF               ??_SPI_config 0076  
          ?_Lcd_Set_Cursor 0076                    __ptext1 03DC                    __ptext2 04D4  
                  __ptext3 0374                    __ptext4 0403                    __ptext5 0428  
                  __ptext6 0173                    __ptext7 03B2                    __ptext8 02D4  
                  __ptext9 027F               __size_of_ISR 000E               __size_of_lcd 003E  
         ___awmod@dividend 0074          ?_virtual_display1 0070          ?_virtual_display2 0070  
        ?_virtual_display3 0070          ?_SPI_Maestro_Init 0072                    _unidadz 002C  
       __end_of_SPI_Enviar 04FC         ??_virtual_display1 0073         ??_virtual_display2 0073  
       ??_virtual_display3 0073                    clrloop0 04E9         ??_SPI_Maestro_Init 0073  
                  _voltaje 0031     __end_of_Lcd_Write_Char 04AF       end_of_initialization 001A  
               _osc_config 04D4         __end_of_SPI_config 04D4                  _RCSTAbits 0018  
                Lcd_Port@a 0072                  _PORTAbits 0005                 _velocidad1 0022  
               _velocidad2 0021                 _velocidad3 0020                  _PORTCbits 0007  
             ?_Conversion1 0070               ?_Conversion2 0070                  _TRISAbits 0085  
                _TRISCbits 0087            ?_Lcd_Write_Char 0070   __size_of_interrup_config 000C  
        Lcd_Write_String@a 0077          Lcd_Write_String@i 0075                  _TXSTAbits 0098  
        ?_USART_lib_config 0070              ?_USART_config 0070         ??_USART_lib_config 0072  
         _Lcd_Write_String 0403        start_initialization 000F                __end_of_ISR 04BD  
              __end_of_lcd 03B2          __size_of_Lcd_Init 0057          __size_of_Lcd_Port 0006  
              ?_osc_config 0070             ??_USART_config 0072            Lcd_Write_Char@a 0074  
              __pbssCOMMON 007A                  ___latbits 0002              __pcstackBANK0 0032  
    __end_of_escribir_char 04E8                   ?_Lcd_Cmd 0070          ??_interrup_config 0072  
         ??_Lcd_Set_Cursor 0077                   ?___awdiv 0072                   ?___awmod 0072  
                __pstrings 0483        __size_of_osc_config 000A       __size_of_Conversion1 0055  
     __size_of_Conversion2 005C             __size_of_setup 0027          interrupt_function 0004  
                clear_ram0 04E8                   _PIE1bits 008C  __size_of_virtual_display1 004F  
__size_of_virtual_display2 0051  __size_of_virtual_display3 002A  __size_of_SPI_Maestro_Init 0085  
                 Lcd_Cmd@a 0075                   _PIR1bits 000C                __stringbase 0488  
         ??_Lcd_Write_Char 0073       __end_of_USART_config 04F6                   _Lcd_Init 0228  
                 _Lcd_Port 04FC   __end_of_Lcd_Write_String 0428           __size_of_Lcd_Cmd 0019  
         __size_of___awdiv 0069           __size_of___awmod 0059         __end_of__stringtab 0489  
__size_of_USART_lib_config 001E                   __ptext10 0325                   __ptext11 04DE  
                 __ptext20 04F6                   __ptext12 01CF                   __ptext21 0228  
                 __ptext13 00A3                   __ptext22 046A                   __ptext14 049A  
                 __ptext23 04FC                   __ptext15 04BD                   __ptext24 04AF  
                 __ptext16 04F0                   __ptext17 044C                   __ptext18 04C9  
                 __ptext19 001E         escribir_char@valor 0072                   _contador 0026  
             ??_osc_config 0072              __size_of_main 0067                   _voltajez 002D  
               _INTCONbits 000B         __end_of_osc_config 04DE            _interrup_config 04BD  
                 intlevel1 0000           _virtual_display1 0325           _virtual_display2 02D4  
         _virtual_display3 03B2           _SPI_Maestro_Init 001E                  stringcode 0483  
               _OSCCONbits 008F         Lcd_Set_Cursor@temp 0079  SPI_Maestro_Init@port_mode 0075  
    __size_of_USART_config 0006                   stringdir 0483                   stringtab 0483  
               _SSPCONbits 0014                 _SPI_Enviar 04F6               _USART_config 04F0  
