

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Feb 18 00:40:09 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    41                           	dabs	1,0x7E,2
    42  0000                     
    43                           ; Version 2.20
    44                           ; Generated 12/02/2020 GMT
    45                           ; 
    46                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F887 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     	;# 
    78  0001                     	;# 
    79  0002                     	;# 
    80  0003                     	;# 
    81  0004                     	;# 
    82  0005                     	;# 
    83  0006                     	;# 
    84  0007                     	;# 
    85  0008                     	;# 
    86  0009                     	;# 
    87  000A                     	;# 
    88  000B                     	;# 
    89  000C                     	;# 
    90  000D                     	;# 
    91  000E                     	;# 
    92  000E                     	;# 
    93  000F                     	;# 
    94  0010                     	;# 
    95  0011                     	;# 
    96  0012                     	;# 
    97  0013                     	;# 
    98  0014                     	;# 
    99  0015                     	;# 
   100  0015                     	;# 
   101  0016                     	;# 
   102  0017                     	;# 
   103  0018                     	;# 
   104  0019                     	;# 
   105  001A                     	;# 
   106  001B                     	;# 
   107  001B                     	;# 
   108  001C                     	;# 
   109  001D                     	;# 
   110  001E                     	;# 
   111  001F                     	;# 
   112  0081                     	;# 
   113  0085                     	;# 
   114  0086                     	;# 
   115  0087                     	;# 
   116  0088                     	;# 
   117  0089                     	;# 
   118  008C                     	;# 
   119  008D                     	;# 
   120  008E                     	;# 
   121  008F                     	;# 
   122  0090                     	;# 
   123  0091                     	;# 
   124  0092                     	;# 
   125  0093                     	;# 
   126  0093                     	;# 
   127  0093                     	;# 
   128  0094                     	;# 
   129  0095                     	;# 
   130  0096                     	;# 
   131  0097                     	;# 
   132  0098                     	;# 
   133  0099                     	;# 
   134  009A                     	;# 
   135  009B                     	;# 
   136  009C                     	;# 
   137  009D                     	;# 
   138  009E                     	;# 
   139  009F                     	;# 
   140  0105                     	;# 
   141  0107                     	;# 
   142  0108                     	;# 
   143  0109                     	;# 
   144  010C                     	;# 
   145  010C                     	;# 
   146  010D                     	;# 
   147  010E                     	;# 
   148  010F                     	;# 
   149  0185                     	;# 
   150  0187                     	;# 
   151  0188                     	;# 
   152  0189                     	;# 
   153  018C                     	;# 
   154  018D                     	;# 
   155  0000                     	;# 
   156  0001                     	;# 
   157  0002                     	;# 
   158  0003                     	;# 
   159  0004                     	;# 
   160  0005                     	;# 
   161  0006                     	;# 
   162  0007                     	;# 
   163  0008                     	;# 
   164  0009                     	;# 
   165  000A                     	;# 
   166  000B                     	;# 
   167  000C                     	;# 
   168  000D                     	;# 
   169  000E                     	;# 
   170  000E                     	;# 
   171  000F                     	;# 
   172  0010                     	;# 
   173  0011                     	;# 
   174  0012                     	;# 
   175  0013                     	;# 
   176  0014                     	;# 
   177  0015                     	;# 
   178  0015                     	;# 
   179  0016                     	;# 
   180  0017                     	;# 
   181  0018                     	;# 
   182  0019                     	;# 
   183  001A                     	;# 
   184  001B                     	;# 
   185  001B                     	;# 
   186  001C                     	;# 
   187  001D                     	;# 
   188  001E                     	;# 
   189  001F                     	;# 
   190  0081                     	;# 
   191  0085                     	;# 
   192  0086                     	;# 
   193  0087                     	;# 
   194  0088                     	;# 
   195  0089                     	;# 
   196  008C                     	;# 
   197  008D                     	;# 
   198  008E                     	;# 
   199  008F                     	;# 
   200  0090                     	;# 
   201  0091                     	;# 
   202  0092                     	;# 
   203  0093                     	;# 
   204  0093                     	;# 
   205  0093                     	;# 
   206  0094                     	;# 
   207  0095                     	;# 
   208  0096                     	;# 
   209  0097                     	;# 
   210  0098                     	;# 
   211  0099                     	;# 
   212  009A                     	;# 
   213  009B                     	;# 
   214  009C                     	;# 
   215  009D                     	;# 
   216  009E                     	;# 
   217  009F                     	;# 
   218  0105                     	;# 
   219  0107                     	;# 
   220  0108                     	;# 
   221  0109                     	;# 
   222  010C                     	;# 
   223  010C                     	;# 
   224  010D                     	;# 
   225  010E                     	;# 
   226  010F                     	;# 
   227  0185                     	;# 
   228  0187                     	;# 
   229  0188                     	;# 
   230  0189                     	;# 
   231  018C                     	;# 
   232  018D                     	;# 
   233  0000                     	;# 
   234  0001                     	;# 
   235  0002                     	;# 
   236  0003                     	;# 
   237  0004                     	;# 
   238  0005                     	;# 
   239  0006                     	;# 
   240  0007                     	;# 
   241  0008                     	;# 
   242  0009                     	;# 
   243  000A                     	;# 
   244  000B                     	;# 
   245  000C                     	;# 
   246  000D                     	;# 
   247  000E                     	;# 
   248  000E                     	;# 
   249  000F                     	;# 
   250  0010                     	;# 
   251  0011                     	;# 
   252  0012                     	;# 
   253  0013                     	;# 
   254  0014                     	;# 
   255  0015                     	;# 
   256  0015                     	;# 
   257  0016                     	;# 
   258  0017                     	;# 
   259  0018                     	;# 
   260  0019                     	;# 
   261  001A                     	;# 
   262  001B                     	;# 
   263  001B                     	;# 
   264  001C                     	;# 
   265  001D                     	;# 
   266  001E                     	;# 
   267  001F                     	;# 
   268  0081                     	;# 
   269  0085                     	;# 
   270  0086                     	;# 
   271  0087                     	;# 
   272  0088                     	;# 
   273  0089                     	;# 
   274  008C                     	;# 
   275  008D                     	;# 
   276  008E                     	;# 
   277  008F                     	;# 
   278  0090                     	;# 
   279  0091                     	;# 
   280  0092                     	;# 
   281  0093                     	;# 
   282  0093                     	;# 
   283  0093                     	;# 
   284  0094                     	;# 
   285  0095                     	;# 
   286  0096                     	;# 
   287  0097                     	;# 
   288  0098                     	;# 
   289  0099                     	;# 
   290  009A                     	;# 
   291  009B                     	;# 
   292  009C                     	;# 
   293  009D                     	;# 
   294  009E                     	;# 
   295  009F                     	;# 
   296  0105                     	;# 
   297  0107                     	;# 
   298  0108                     	;# 
   299  0109                     	;# 
   300  010C                     	;# 
   301  010C                     	;# 
   302  010D                     	;# 
   303  010E                     	;# 
   304  010F                     	;# 
   305  0185                     	;# 
   306  0187                     	;# 
   307  0188                     	;# 
   308  0189                     	;# 
   309  018C                     	;# 
   310  018D                     	;# 
   311  0000                     	;# 
   312  0001                     	;# 
   313  0002                     	;# 
   314  0003                     	;# 
   315  0004                     	;# 
   316  0005                     	;# 
   317  0006                     	;# 
   318  0007                     	;# 
   319  0008                     	;# 
   320  0009                     	;# 
   321  000A                     	;# 
   322  000B                     	;# 
   323  000C                     	;# 
   324  000D                     	;# 
   325  000E                     	;# 
   326  000E                     	;# 
   327  000F                     	;# 
   328  0010                     	;# 
   329  0011                     	;# 
   330  0012                     	;# 
   331  0013                     	;# 
   332  0014                     	;# 
   333  0015                     	;# 
   334  0015                     	;# 
   335  0016                     	;# 
   336  0017                     	;# 
   337  0018                     	;# 
   338  0019                     	;# 
   339  001A                     	;# 
   340  001B                     	;# 
   341  001B                     	;# 
   342  001C                     	;# 
   343  001D                     	;# 
   344  001E                     	;# 
   345  001F                     	;# 
   346  0081                     	;# 
   347  0085                     	;# 
   348  0086                     	;# 
   349  0087                     	;# 
   350  0088                     	;# 
   351  0089                     	;# 
   352  008C                     	;# 
   353  008D                     	;# 
   354  008E                     	;# 
   355  008F                     	;# 
   356  0090                     	;# 
   357  0091                     	;# 
   358  0092                     	;# 
   359  0093                     	;# 
   360  0093                     	;# 
   361  0093                     	;# 
   362  0094                     	;# 
   363  0095                     	;# 
   364  0096                     	;# 
   365  0097                     	;# 
   366  0098                     	;# 
   367  0099                     	;# 
   368  009A                     	;# 
   369  009B                     	;# 
   370  009C                     	;# 
   371  009D                     	;# 
   372  009E                     	;# 
   373  009F                     	;# 
   374  0105                     	;# 
   375  0107                     	;# 
   376  0108                     	;# 
   377  0109                     	;# 
   378  010C                     	;# 
   379  010C                     	;# 
   380  010D                     	;# 
   381  010E                     	;# 
   382  010F                     	;# 
   383  0185                     	;# 
   384  0187                     	;# 
   385  0188                     	;# 
   386  0189                     	;# 
   387  018C                     	;# 
   388  018D                     	;# 
   389  0000                     	;# 
   390  0001                     	;# 
   391  0002                     	;# 
   392  0003                     	;# 
   393  0004                     	;# 
   394  0005                     	;# 
   395  0006                     	;# 
   396  0007                     	;# 
   397  0008                     	;# 
   398  0009                     	;# 
   399  000A                     	;# 
   400  000B                     	;# 
   401  000C                     	;# 
   402  000D                     	;# 
   403  000E                     	;# 
   404  000E                     	;# 
   405  000F                     	;# 
   406  0010                     	;# 
   407  0011                     	;# 
   408  0012                     	;# 
   409  0013                     	;# 
   410  0014                     	;# 
   411  0015                     	;# 
   412  0015                     	;# 
   413  0016                     	;# 
   414  0017                     	;# 
   415  0018                     	;# 
   416  0019                     	;# 
   417  001A                     	;# 
   418  001B                     	;# 
   419  001B                     	;# 
   420  001C                     	;# 
   421  001D                     	;# 
   422  001E                     	;# 
   423  001F                     	;# 
   424  0081                     	;# 
   425  0085                     	;# 
   426  0086                     	;# 
   427  0087                     	;# 
   428  0088                     	;# 
   429  0089                     	;# 
   430  008C                     	;# 
   431  008D                     	;# 
   432  008E                     	;# 
   433  008F                     	;# 
   434  0090                     	;# 
   435  0091                     	;# 
   436  0092                     	;# 
   437  0093                     	;# 
   438  0093                     	;# 
   439  0093                     	;# 
   440  0094                     	;# 
   441  0095                     	;# 
   442  0096                     	;# 
   443  0097                     	;# 
   444  0098                     	;# 
   445  0099                     	;# 
   446  009A                     	;# 
   447  009B                     	;# 
   448  009C                     	;# 
   449  009D                     	;# 
   450  009E                     	;# 
   451  009F                     	;# 
   452  0105                     	;# 
   453  0107                     	;# 
   454  0108                     	;# 
   455  0109                     	;# 
   456  010C                     	;# 
   457  010C                     	;# 
   458  010D                     	;# 
   459  010E                     	;# 
   460  010F                     	;# 
   461  0185                     	;# 
   462  0187                     	;# 
   463  0188                     	;# 
   464  0189                     	;# 
   465  018C                     	;# 
   466  018D                     	;# 
   467  0013                     _SSPBUF	set	19
   468  0014                     _SSPCONbits	set	20
   469  0009                     _PORTEbits	set	9
   470  0018                     _RCSTAbits	set	24
   471  000C                     _PIR1bits	set	12
   472  0019                     _TXREG	set	25
   473  0009                     _PORTE	set	9
   474  0008                     _PORTD	set	8
   475  0007                     _PORTC	set	7
   476  0006                     _PORTB	set	6
   477  0005                     _PORTA	set	5
   478  0007                     _PORTCbits	set	7
   479  0001                     _TMR0	set	1
   480  000B                     _INTCONbits	set	11
   481  0085                     _TRISAbits	set	133
   482  0094                     _SSPSTATbits	set	148
   483  008C                     _PIE1bits	set	140
   484  0098                     _TXSTAbits	set	152
   485  0099                     _SPBRG	set	153
   486  0081                     _OPTION_REGbits	set	129
   487  008F                     _OSCCONbits	set	143
   488  0096                     _IOCB	set	150
   489  0089                     _TRISE	set	137
   490  0088                     _TRISD	set	136
   491  0087                     _TRISCbits	set	135
   492  0087                     _TRISC	set	135
   493  0086                     _TRISB	set	134
   494  0085                     _TRISA	set	133
   495  0189                     _ANSELH	set	393
   496  0188                     _ANSEL	set	392
   497                           
   498                           	psect	strings
   499  0600                     __pstrings:
   500  0600                     stringtab:
   501  0600                     __stringtab:
   502  0600                     stringcode:	
   503                           ;	String table - string pointers are 1 byte each
   504                           
   505  0600                     stringdir:
   506  0600  3006               	movlw	high stringdir
   507  0601  008A               	movwf	10
   508  0602  0804               	movf	4,w
   509  0603  0A84               	incf	4,f
   510  0604  0782               	addwf	2,f
   511  0605                     __stringbase:
   512  0605  3400               	retlw	0
   513  0606                     __end_of__stringtab:
   514  0606                     STR_1:
   515  0606  3441               	retlw	65	;'A'
   516  0607  3444               	retlw	68	;'D'
   517  0608  3443               	retlw	67	;'C'
   518  0609  343A               	retlw	58	;':'
   519  060A  3420               	retlw	32	;' '
   520  060B  3420               	retlw	32	;' '
   521  060C  3442               	retlw	66	;'B'
   522  060D  3454               	retlw	84	;'T'
   523  060E  344E               	retlw	78	;'N'
   524  060F  343A               	retlw	58	;':'
   525  0610  3420               	retlw	32	;' '
   526  0611  3454               	retlw	84	;'T'
   527  0612  3445               	retlw	69	;'E'
   528  0613  344D               	retlw	77	;'M'
   529  0614  3450               	retlw	80	;'P'
   530  0615  343A               	retlw	58	;':'
   531  0616  3400               	retlw	0
   532                           
   533                           	psect	cinit
   534  000F                     start_initialization:	
   535                           ; #config settings
   536                           
   537  000F                     __initialization:
   538                           
   539                           ; Clear objects allocated to COMMON
   540  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   541  0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   542                           
   543                           ; Clear objects allocated to BANK0
   544  0011  1383               	bcf	3,7	;select IRP bank0
   545  0012  3020               	movlw	low __pbssBANK0
   546  0013  0084               	movwf	4
   547  0014  303D               	movlw	low (__pbssBANK0+29)
   548  0015  120A  118A  2675  120A  118A  	fcall	clear_ram0
   549  001A                     end_of_initialization:	
   550                           ;End of C runtime variable initialization code
   551                           
   552  001A                     __end_of__initialization:
   553  001A  0183               	clrf	3
   554  001B  120A  118A  281E   	ljmp	_main	;jump to C main() function
   555                           
   556                           	psect	bssCOMMON
   557  007A                     __pbssCOMMON:
   558  007A                     _dato_push:
   559  007A                     	ds	1
   560  007B                     _voltaje:
   561  007B                     	ds	1
   562                           
   563                           	psect	bssBANK0
   564  0020                     __pbssBANK0:
   565  0020                     _dato_semaforo:
   566  0020                     	ds	1
   567  0021                     _dato_push1:
   568  0021                     	ds	1
   569  0022                     _dato_pot:
   570  0022                     	ds	1
   571  0023                     _velocidad3:
   572  0023                     	ds	1
   573  0024                     _velocidad2:
   574  0024                     	ds	1
   575  0025                     _velocidad1:
   576  0025                     	ds	1
   577  0026                     _a:
   578  0026                     	ds	1
   579  0027                     _w2:
   580  0027                     	ds	1
   581  0028                     _w1:
   582  0028                     	ds	1
   583  0029                     _contador:
   584  0029                     	ds	1
   585  002A                     _leer:
   586  002A                     	ds	1
   587  002B                     _y2y:
   588  002B                     	ds	1
   589  002C                     _x2y:
   590  002C                     	ds	1
   591  002D                     _y1y:
   592  002D                     	ds	1
   593  002E                     _x1y:
   594  002E                     	ds	1
   595  002F                     _unidady:
   596  002F                     	ds	1
   597  0030                     _voltajey:
   598  0030                     	ds	1
   599  0031                     _decenay:
   600  0031                     	ds	1
   601  0032                     _y2z:
   602  0032                     	ds	1
   603  0033                     _x2z:
   604  0033                     	ds	1
   605  0034                     _y1z:
   606  0034                     	ds	1
   607  0035                     _x1z:
   608  0035                     	ds	1
   609  0036                     _unidadz:
   610  0036                     	ds	1
   611  0037                     _voltajez:
   612  0037                     	ds	1
   613  0038                     _y2:
   614  0038                     	ds	1
   615  0039                     _x2:
   616  0039                     	ds	1
   617  003A                     _y1:
   618  003A                     	ds	1
   619  003B                     _x1:
   620  003B                     	ds	1
   621  003C                     _unidad:
   622  003C                     	ds	1
   623                           
   624                           	psect	clrtext
   625  0675                     clear_ram0:	
   626                           ;	Called with FSR containing the base address, and
   627                           ;	W with the last address+1
   628                           
   629  0675  0064               	clrwdt	;clear the watchdog before getting into this loop
   630  0676                     clrloop0:
   631  0676  0180               	clrf	0	;clear RAM location pointed to by FSR
   632  0677  0A84               	incf	4,f	;increment pointer
   633  0678  0604               	xorwf	4,w	;XOR with final address
   634  0679  1903               	btfsc	3,2	;have we reached the end yet?
   635  067A  3400               	retlw	0	;all done for this memory range, return
   636  067B  0604               	xorwf	4,w	;XOR again to restore value
   637  067C  2E76               	goto	clrloop0	;do the next byte
   638                           
   639                           	psect	cstackCOMMON
   640  0070                     __pcstackCOMMON:
   641  0070                     ?_setup:
   642  0070                     ?_osc_config:	
   643                           ; 1 bytes @ 0x0
   644                           
   645  0070                     ?_interrup_config:	
   646                           ; 1 bytes @ 0x0
   647                           
   648  0070                     ?_tmr0_config:	
   649                           ; 1 bytes @ 0x0
   650                           
   651  0070                     ?_Lcd_Init:	
   652                           ; 1 bytes @ 0x0
   653                           
   654  0070                     ?_USART_config:	
   655                           ; 1 bytes @ 0x0
   656                           
   657  0070                     ?_SPI_config:	
   658                           ; 1 bytes @ 0x0
   659                           
   660  0070                     ?_SPI_Enviar:	
   661                           ; 1 bytes @ 0x0
   662                           
   663  0070                     ?_SPI_Recibir:	
   664                           ; 1 bytes @ 0x0
   665                           
   666  0070                     ?_lcd:	
   667                           ; 1 bytes @ 0x0
   668                           
   669  0070                     ?_USART_lib_config:	
   670                           ; 1 bytes @ 0x0
   671                           
   672  0070                     ?_Lcd_Write_String:	
   673                           ; 1 bytes @ 0x0
   674                           
   675  0070                     ?_Conversion1:	
   676                           ; 1 bytes @ 0x0
   677                           
   678  0070                     ?_Conversion2:	
   679                           ; 1 bytes @ 0x0
   680                           
   681  0070                     ?_Conversion3:	
   682                           ; 1 bytes @ 0x0
   683                           
   684  0070                     ?_Lcd_Write_Char:	
   685                           ; 1 bytes @ 0x0
   686                           
   687  0070                     ?_virtual_display1:	
   688                           ; 1 bytes @ 0x0
   689                           
   690  0070                     ?_virtual_display2:	
   691                           ; 1 bytes @ 0x0
   692                           
   693  0070                     ?_virtual_display3:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0070                     ?_escribir_char:	
   697                           ; 1 bytes @ 0x0
   698                           
   699  0070                     ?_ISR:	
   700                           ; 1 bytes @ 0x0
   701                           
   702  0070                     ??_ISR:	
   703                           ; 1 bytes @ 0x0
   704                           
   705  0070                     ?_main:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  0070                     ?_Lcd_Port:	
   709                           ; 1 bytes @ 0x0
   710                           
   711  0070                     ?_Lcd_Cmd:	
   712                           ; 1 bytes @ 0x0
   713                           
   714                           
   715                           ; 1 bytes @ 0x0
   716  0070                     	ds	2
   717  0072                     ??_setup:
   718  0072                     ??_osc_config:	
   719                           ; 1 bytes @ 0x2
   720                           
   721  0072                     ??_interrup_config:	
   722                           ; 1 bytes @ 0x2
   723                           
   724  0072                     ??_tmr0_config:	
   725                           ; 1 bytes @ 0x2
   726                           
   727  0072                     ??_USART_config:	
   728                           ; 1 bytes @ 0x2
   729                           
   730  0072                     ??_SPI_Enviar:	
   731                           ; 1 bytes @ 0x2
   732                           
   733  0072                     ??_SPI_Recibir:	
   734                           ; 1 bytes @ 0x2
   735                           
   736  0072                     ??_USART_lib_config:	
   737                           ; 1 bytes @ 0x2
   738                           
   739  0072                     ?_SPI_Maestro_Init:	
   740                           ; 1 bytes @ 0x2
   741                           
   742  0072                     ??_escribir_char:	
   743                           ; 1 bytes @ 0x2
   744                           
   745  0072                     ??_Lcd_Port:	
   746                           ; 1 bytes @ 0x2
   747                           
   748  0072                     ?___awdiv:	
   749                           ; 1 bytes @ 0x2
   750                           
   751  0072                     ?___awmod:	
   752                           ; 2 bytes @ 0x2
   753                           
   754  0072                     escribir_char@valor:	
   755                           ; 2 bytes @ 0x2
   756                           
   757  0072                     Lcd_Port@a:	
   758                           ; 1 bytes @ 0x2
   759                           
   760  0072                     SPI_Maestro_Init@SCK:	
   761                           ; 1 bytes @ 0x2
   762                           
   763  0072                     SPI_Enviar@valor:	
   764                           ; 1 bytes @ 0x2
   765                           
   766  0072                     ___awdiv@divisor:	
   767                           ; 1 bytes @ 0x2
   768                           
   769  0072                     ___awmod@divisor:	
   770                           ; 2 bytes @ 0x2
   771                           
   772                           
   773                           ; 2 bytes @ 0x2
   774  0072                     	ds	1
   775  0073                     ??_SPI_Maestro_Init:
   776  0073                     ??_Lcd_Write_Char:	
   777                           ; 1 bytes @ 0x3
   778                           
   779  0073                     ??_virtual_display1:	
   780                           ; 1 bytes @ 0x3
   781                           
   782  0073                     ??_virtual_display2:	
   783                           ; 1 bytes @ 0x3
   784                           
   785  0073                     ??_virtual_display3:	
   786                           ; 1 bytes @ 0x3
   787                           
   788  0073                     ??_Lcd_Cmd:	
   789                           ; 1 bytes @ 0x3
   790                           
   791                           
   792                           ; 1 bytes @ 0x3
   793  0073                     	ds	1
   794  0074                     Lcd_Write_Char@a:
   795  0074                     ___awdiv@dividend:	
   796                           ; 1 bytes @ 0x4
   797                           
   798  0074                     ___awmod@dividend:	
   799                           ; 2 bytes @ 0x4
   800                           
   801                           
   802                           ; 2 bytes @ 0x4
   803  0074                     	ds	1
   804  0075                     ??_Lcd_Write_String:
   805  0075                     Lcd_Cmd@a:	
   806                           ; 1 bytes @ 0x5
   807                           
   808  0075                     SPI_Maestro_Init@port_mode:	
   809                           ; 1 bytes @ 0x5
   810                           
   811  0075                     Lcd_Write_String@i:	
   812                           ; 1 bytes @ 0x5
   813                           
   814                           
   815                           ; 2 bytes @ 0x5
   816  0075                     	ds	1
   817  0076                     ??_Lcd_Init:
   818  0076                     ??_SPI_config:	
   819                           ; 1 bytes @ 0x6
   820                           
   821  0076                     ?_Lcd_Set_Cursor:	
   822                           ; 1 bytes @ 0x6
   823                           
   824  0076                     ??___awdiv:	
   825                           ; 1 bytes @ 0x6
   826                           
   827  0076                     ??___awmod:	
   828                           ; 1 bytes @ 0x6
   829                           
   830  0076                     Lcd_Set_Cursor@b:	
   831                           ; 1 bytes @ 0x6
   832                           
   833                           
   834                           ; 1 bytes @ 0x6
   835  0076                     	ds	1
   836  0077                     ??_Lcd_Set_Cursor:
   837  0077                     Lcd_Write_String@a:	
   838                           ; 1 bytes @ 0x7
   839                           
   840  0077                     ___awmod@counter:	
   841                           ; 1 bytes @ 0x7
   842                           
   843                           
   844                           ; 1 bytes @ 0x7
   845  0077                     	ds	1
   846  0078                     Lcd_Set_Cursor@a:
   847  0078                     ___awmod@sign:	
   848                           ; 1 bytes @ 0x8
   849                           
   850                           
   851                           ; 1 bytes @ 0x8
   852  0078                     	ds	1
   853  0079                     Lcd_Set_Cursor@temp:
   854                           
   855                           ; 1 bytes @ 0x9
   856  0079                     	ds	1
   857                           
   858                           	psect	cstackBANK0
   859  003D                     __pcstackBANK0:
   860  003D                     ___awdiv@counter:
   861                           
   862                           ; 1 bytes @ 0x0
   863  003D                     	ds	1
   864  003E                     ___awdiv@sign:
   865                           
   866                           ; 1 bytes @ 0x1
   867  003E                     	ds	1
   868  003F                     ___awdiv@quotient:
   869                           
   870                           ; 2 bytes @ 0x2
   871  003F                     	ds	2
   872  0041                     ??_Conversion1:
   873  0041                     ??_Conversion2:	
   874                           ; 1 bytes @ 0x4
   875                           
   876  0041                     ??_Conversion3:	
   877                           ; 1 bytes @ 0x4
   878                           
   879                           
   880                           ; 1 bytes @ 0x4
   881  0041                     	ds	3
   882  0044                     ??_lcd:
   883                           
   884                           ; 1 bytes @ 0x7
   885  0044                     	ds	1
   886  0045                     ??_main:
   887                           
   888                           ; 1 bytes @ 0x8
   889  0045                     	ds	2
   890                           
   891                           	psect	maintext
   892  001E                     __pmaintext:	
   893 ;;
   894 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   895 ;;
   896 ;; *************** function _main *****************
   897 ;; Defined at:
   898 ;;		line 125 in file "MAESTRO_SPI.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;		None
   901 ;; Auto vars:     Size  Location     Type
   902 ;;		None
   903 ;; Return value:  Size  Location     Type
   904 ;;                  1    wreg      void 
   905 ;; Registers used:
   906 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   907 ;; Tracked objects:
   908 ;;		On entry : B00/0
   909 ;;		On exit  : 0/0
   910 ;;		Unchanged: 0/0
   911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   912 ;;      Params:         0       0       0       0       0
   913 ;;      Locals:         0       0       0       0       0
   914 ;;      Temps:          0       2       0       0       0
   915 ;;      Totals:         0       2       0       0       0
   916 ;;Total ram usage:        2 bytes
   917 ;; Hardware stack levels required when called:    5
   918 ;; This function calls:
   919 ;;		_Lcd_Init
   920 ;;		_SPI_Enviar
   921 ;;		_SPI_Recibir
   922 ;;		_SPI_config
   923 ;;		_USART_config
   924 ;;		_interrup_config
   925 ;;		_lcd
   926 ;;		_osc_config
   927 ;;		_setup
   928 ;;		_tmr0_config
   929 ;; This function is called by:
   930 ;;		Startup code after reset
   931 ;; This function uses a non-reentrant model
   932 ;;
   933                           
   934                           
   935                           ;psect for function _main
   936  001E                     _main:
   937  001E                     l1885:	
   938                           ;incstack = 0
   939                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   940                           
   941                           
   942                           ;MAESTRO_SPI.c: 127:     setup();
   943  001E  120A  118A  254C  120A  118A  	fcall	_setup
   944                           
   945                           ;MAESTRO_SPI.c: 128:     osc_config();
   946  0023  120A  118A  2661  120A  118A  	fcall	_osc_config
   947                           
   948                           ;MAESTRO_SPI.c: 129:     interrup_config();
   949  0028  120A  118A  264A  120A  118A  	fcall	_interrup_config
   950  002D                     l1887:
   951                           
   952                           ;MAESTRO_SPI.c: 130:     tmr0_config ();
   953  002D  120A  118A  263D  120A  118A  	fcall	_tmr0_config
   954  0032                     l1889:
   955                           
   956                           ;MAESTRO_SPI.c: 131:     Lcd_Init();
   957  0032  120A  118A  2414  120A  118A  	fcall	_Lcd_Init
   958  0037                     l1891:
   959                           
   960                           ;MAESTRO_SPI.c: 132:     USART_config();
   961  0037  120A  118A  267D  120A  118A  	fcall	_USART_config
   962  003C                     l1893:
   963                           
   964                           ;MAESTRO_SPI.c: 133:     SPI_config ();
   965  003C  120A  118A  2656  120A  118A  	fcall	_SPI_config
   966  0041                     l1895:
   967                           
   968                           ;MAESTRO_SPI.c: 135:     {;MAESTRO_SPI.c: 137:         PORTCbits.RC0 = 0;
   969  0041  1283               	bcf	3,5	;RP0=0, select bank0
   970  0042  1303               	bcf	3,6	;RP1=0, select bank0
   971  0043  1007               	bcf	7,0	;volatile
   972  0044                     l1897:
   973                           
   974                           ;MAESTRO_SPI.c: 138:         _delay((unsigned long)((1)*(8000000/4000.0)));
   975  0044  3003               	movlw	3
   976  0045  1283               	bcf	3,5	;RP0=0, select bank0
   977  0046  1303               	bcf	3,6	;RP1=0, select bank0
   978  0047  00C6               	movwf	??_main+1
   979  0048  3097               	movlw	151
   980  0049  00C5               	movwf	??_main
   981  004A                     u727:
   982  004A  0BC5               	decfsz	??_main,f
   983  004B  284A               	goto	u727
   984  004C  0BC6               	decfsz	??_main+1,f
   985  004D  284A               	goto	u727
   986  004E                     l1899:
   987                           
   988                           ;MAESTRO_SPI.c: 140:         SPI_Enviar (dato_pot);
   989  004E  1283               	bcf	3,5	;RP0=0, select bank0
   990  004F  1303               	bcf	3,6	;RP1=0, select bank0
   991  0050  0822               	movf	_dato_pot,w
   992  0051  120A  118A  2683  120A  118A  	fcall	_SPI_Enviar
   993  0056                     l1901:
   994                           
   995                           ;MAESTRO_SPI.c: 141:         dato_pot = SPI_Recibir();
   996  0056  120A  118A  268F  120A  118A  	fcall	_SPI_Recibir
   997  005B  1283               	bcf	3,5	;RP0=0, select bank0
   998  005C  1303               	bcf	3,6	;RP1=0, select bank0
   999  005D  00C5               	movwf	??_main
  1000  005E  0845               	movf	??_main,w
  1001  005F  00A2               	movwf	_dato_pot
  1002  0060                     l1903:
  1003                           
  1004                           ;MAESTRO_SPI.c: 143:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1005  0060  3003               	movlw	3
  1006  0061  1283               	bcf	3,5	;RP0=0, select bank0
  1007  0062  1303               	bcf	3,6	;RP1=0, select bank0
  1008  0063  00C6               	movwf	??_main+1
  1009  0064  3097               	movlw	151
  1010  0065  00C5               	movwf	??_main
  1011  0066                     u737:
  1012  0066  0BC5               	decfsz	??_main,f
  1013  0067  2866               	goto	u737
  1014  0068  0BC6               	decfsz	??_main+1,f
  1015  0069  2866               	goto	u737
  1016  006A                     l1905:
  1017                           
  1018                           ;MAESTRO_SPI.c: 144:         PORTCbits.RC0 = 1;
  1019  006A  1283               	bcf	3,5	;RP0=0, select bank0
  1020  006B  1303               	bcf	3,6	;RP1=0, select bank0
  1021  006C  1407               	bsf	7,0	;volatile
  1022  006D                     l1907:
  1023                           
  1024                           ;MAESTRO_SPI.c: 148:         PORTCbits.RC1 = 0;
  1025  006D  1087               	bcf	7,1	;volatile
  1026  006E                     l1909:
  1027                           
  1028                           ;MAESTRO_SPI.c: 149:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1029  006E  3003               	movlw	3
  1030  006F  1283               	bcf	3,5	;RP0=0, select bank0
  1031  0070  1303               	bcf	3,6	;RP1=0, select bank0
  1032  0071  00C6               	movwf	??_main+1
  1033  0072  3097               	movlw	151
  1034  0073  00C5               	movwf	??_main
  1035  0074                     u747:
  1036  0074  0BC5               	decfsz	??_main,f
  1037  0075  2874               	goto	u747
  1038  0076  0BC6               	decfsz	??_main+1,f
  1039  0077  2874               	goto	u747
  1040  0078                     l1911:
  1041                           
  1042                           ;MAESTRO_SPI.c: 151:         SPI_Enviar (dato_push);
  1043  0078  087A               	movf	_dato_push,w
  1044  0079  120A  118A  2683  120A  118A  	fcall	_SPI_Enviar
  1045  007E                     l1913:
  1046                           
  1047                           ;MAESTRO_SPI.c: 152:         dato_push = SPI_Recibir();
  1048  007E  120A  118A  268F  120A  118A  	fcall	_SPI_Recibir
  1049  0083  1283               	bcf	3,5	;RP0=0, select bank0
  1050  0084  1303               	bcf	3,6	;RP1=0, select bank0
  1051  0085  00C5               	movwf	??_main
  1052  0086  0845               	movf	??_main,w
  1053  0087  00FA               	movwf	_dato_push
  1054  0088                     l1915:
  1055                           
  1056                           ;MAESTRO_SPI.c: 154:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1057  0088  3003               	movlw	3
  1058  0089  1283               	bcf	3,5	;RP0=0, select bank0
  1059  008A  1303               	bcf	3,6	;RP1=0, select bank0
  1060  008B  00C6               	movwf	??_main+1
  1061  008C  3097               	movlw	151
  1062  008D  00C5               	movwf	??_main
  1063  008E                     u757:
  1064  008E  0BC5               	decfsz	??_main,f
  1065  008F  288E               	goto	u757
  1066  0090  0BC6               	decfsz	??_main+1,f
  1067  0091  288E               	goto	u757
  1068  0092                     l1917:
  1069                           
  1070                           ;MAESTRO_SPI.c: 155:         PORTCbits.RC1 = 1;
  1071  0092  1283               	bcf	3,5	;RP0=0, select bank0
  1072  0093  1303               	bcf	3,6	;RP1=0, select bank0
  1073  0094  1487               	bsf	7,1	;volatile
  1074  0095                     l1919:
  1075                           
  1076                           ;MAESTRO_SPI.c: 159:         PORTCbits.RC2 = 0;
  1077  0095  1107               	bcf	7,2	;volatile
  1078  0096                     l1921:
  1079                           
  1080                           ;MAESTRO_SPI.c: 160:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1081  0096  3003               	movlw	3
  1082  0097  1283               	bcf	3,5	;RP0=0, select bank0
  1083  0098  1303               	bcf	3,6	;RP1=0, select bank0
  1084  0099  00C6               	movwf	??_main+1
  1085  009A  3097               	movlw	151
  1086  009B  00C5               	movwf	??_main
  1087  009C                     u767:
  1088  009C  0BC5               	decfsz	??_main,f
  1089  009D  289C               	goto	u767
  1090  009E  0BC6               	decfsz	??_main+1,f
  1091  009F  289C               	goto	u767
  1092  00A0                     l1923:
  1093                           
  1094                           ;MAESTRO_SPI.c: 163:         SPI_Enviar (dato_semaforo);
  1095  00A0  1283               	bcf	3,5	;RP0=0, select bank0
  1096  00A1  1303               	bcf	3,6	;RP1=0, select bank0
  1097  00A2  0820               	movf	_dato_semaforo,w
  1098  00A3  120A  118A  2683  120A  118A  	fcall	_SPI_Enviar
  1099  00A8                     l1925:
  1100                           
  1101                           ;MAESTRO_SPI.c: 164:         dato_semaforo = SPI_Recibir();
  1102  00A8  120A  118A  268F  120A  118A  	fcall	_SPI_Recibir
  1103  00AD  1283               	bcf	3,5	;RP0=0, select bank0
  1104  00AE  1303               	bcf	3,6	;RP1=0, select bank0
  1105  00AF  00C5               	movwf	??_main
  1106  00B0  0845               	movf	??_main,w
  1107  00B1  00A0               	movwf	_dato_semaforo
  1108  00B2                     l1927:
  1109                           
  1110                           ;MAESTRO_SPI.c: 166:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1111  00B2  3003               	movlw	3
  1112  00B3  1283               	bcf	3,5	;RP0=0, select bank0
  1113  00B4  1303               	bcf	3,6	;RP1=0, select bank0
  1114  00B5  00C6               	movwf	??_main+1
  1115  00B6  3097               	movlw	151
  1116  00B7  00C5               	movwf	??_main
  1117  00B8                     u777:
  1118  00B8  0BC5               	decfsz	??_main,f
  1119  00B9  28B8               	goto	u777
  1120  00BA  0BC6               	decfsz	??_main+1,f
  1121  00BB  28B8               	goto	u777
  1122  00BC                     l1929:
  1123                           
  1124                           ;MAESTRO_SPI.c: 167:         PORTCbits.RC2 = 1;
  1125  00BC  1283               	bcf	3,5	;RP0=0, select bank0
  1126  00BD  1303               	bcf	3,6	;RP1=0, select bank0
  1127  00BE  1507               	bsf	7,2	;volatile
  1128  00BF                     l1931:
  1129                           
  1130                           ;MAESTRO_SPI.c: 173:         lcd ();
  1131  00BF  120A  118A  250F  120A  118A  	fcall	_lcd
  1132                           
  1133                           ;MAESTRO_SPI.c: 174:         velocidad1 = velocidad1 + 1;
  1134  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  1135  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  1136  00C6  0825               	movf	_velocidad1,w
  1137  00C7  3E01               	addlw	1
  1138  00C8  00C5               	movwf	??_main
  1139  00C9  0845               	movf	??_main,w
  1140  00CA  00A5               	movwf	_velocidad1
  1141                           
  1142                           ;MAESTRO_SPI.c: 175:         velocidad2 = velocidad2 + 1;
  1143  00CB  0824               	movf	_velocidad2,w
  1144  00CC  3E01               	addlw	1
  1145  00CD  00C5               	movwf	??_main
  1146  00CE  0845               	movf	??_main,w
  1147  00CF  00A4               	movwf	_velocidad2
  1148                           
  1149                           ;MAESTRO_SPI.c: 176:         velocidad3 = velocidad3 + 1;
  1150  00D0  0823               	movf	_velocidad3,w
  1151  00D1  3E01               	addlw	1
  1152  00D2  00C5               	movwf	??_main
  1153  00D3  0845               	movf	??_main,w
  1154  00D4  00A3               	movwf	_velocidad3
  1155  00D5  2841               	goto	l1895
  1156  00D6  120A  118A  280C   	ljmp	start
  1157  00D9                     __end_of_main:
  1158                           
  1159                           	psect	text1
  1160  063D                     __ptext1:	
  1161 ;; *************** function _tmr0_config *****************
  1162 ;; Defined at:
  1163 ;;		line 231 in file "MAESTRO_SPI.c"
  1164 ;; Parameters:    Size  Location     Type
  1165 ;;		None
  1166 ;; Auto vars:     Size  Location     Type
  1167 ;;		None
  1168 ;; Return value:  Size  Location     Type
  1169 ;;                  1    wreg      void 
  1170 ;; Registers used:
  1171 ;;		wreg
  1172 ;; Tracked objects:
  1173 ;;		On entry : 0/0
  1174 ;;		On exit  : 0/0
  1175 ;;		Unchanged: 0/0
  1176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1177 ;;      Params:         0       0       0       0       0
  1178 ;;      Locals:         0       0       0       0       0
  1179 ;;      Temps:          0       0       0       0       0
  1180 ;;      Totals:         0       0       0       0       0
  1181 ;;Total ram usage:        0 bytes
  1182 ;; Hardware stack levels used:    1
  1183 ;; Hardware stack levels required when called:    1
  1184 ;; This function calls:
  1185 ;;		Nothing
  1186 ;; This function is called by:
  1187 ;;		_main
  1188 ;; This function uses a non-reentrant model
  1189 ;;
  1190                           
  1191                           
  1192                           ;psect for function _tmr0_config
  1193  063D                     _tmr0_config:
  1194  063D                     l1631:	
  1195                           ;incstack = 0
  1196                           ; Regs used in _tmr0_config: [wreg]
  1197                           
  1198                           
  1199                           ;MAESTRO_SPI.c: 233:     OPTION_REGbits.nRBPU = 0;
  1200  063D  1683               	bsf	3,5	;RP0=1, select bank1
  1201  063E  1303               	bcf	3,6	;RP1=0, select bank1
  1202  063F  1381               	bcf	1,7	;volatile
  1203                           
  1204                           ;MAESTRO_SPI.c: 234:     OPTION_REGbits.T0CS = 0;
  1205  0640  1281               	bcf	1,5	;volatile
  1206                           
  1207                           ;MAESTRO_SPI.c: 235:     OPTION_REGbits.PSA = 0;
  1208  0641  1181               	bcf	1,3	;volatile
  1209                           
  1210                           ;MAESTRO_SPI.c: 236:     OPTION_REGbits.PS2 = 0;
  1211  0642  1101               	bcf	1,2	;volatile
  1212                           
  1213                           ;MAESTRO_SPI.c: 237:     OPTION_REGbits.PS1 = 1;
  1214  0643  1481               	bsf	1,1	;volatile
  1215                           
  1216                           ;MAESTRO_SPI.c: 238:     OPTION_REGbits.PS0 = 0;
  1217  0644  1001               	bcf	1,0	;volatile
  1218  0645                     l1633:
  1219                           
  1220                           ;MAESTRO_SPI.c: 239:     TMR0 = 100;
  1221  0645  3064               	movlw	100
  1222  0646  1283               	bcf	3,5	;RP0=0, select bank0
  1223  0647  1303               	bcf	3,6	;RP1=0, select bank0
  1224  0648  0081               	movwf	1	;volatile
  1225  0649                     l176:
  1226  0649  0008               	return
  1227  064A                     __end_of_tmr0_config:
  1228                           
  1229                           	psect	text2
  1230  054C                     __ptext2:	
  1231 ;; *************** function _setup *****************
  1232 ;; Defined at:
  1233 ;;		line 186 in file "MAESTRO_SPI.c"
  1234 ;; Parameters:    Size  Location     Type
  1235 ;;		None
  1236 ;; Auto vars:     Size  Location     Type
  1237 ;;		None
  1238 ;; Return value:  Size  Location     Type
  1239 ;;                  1    wreg      void 
  1240 ;; Registers used:
  1241 ;;		status,2
  1242 ;; Tracked objects:
  1243 ;;		On entry : 0/0
  1244 ;;		On exit  : 0/0
  1245 ;;		Unchanged: 0/0
  1246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1247 ;;      Params:         0       0       0       0       0
  1248 ;;      Locals:         0       0       0       0       0
  1249 ;;      Temps:          0       0       0       0       0
  1250 ;;      Totals:         0       0       0       0       0
  1251 ;;Total ram usage:        0 bytes
  1252 ;; Hardware stack levels used:    1
  1253 ;; Hardware stack levels required when called:    1
  1254 ;; This function calls:
  1255 ;;		Nothing
  1256 ;; This function is called by:
  1257 ;;		_main
  1258 ;; This function uses a non-reentrant model
  1259 ;;
  1260                           
  1261                           
  1262                           ;psect for function _setup
  1263  054C                     _setup:
  1264  054C                     l1613:	
  1265                           ;incstack = 0
  1266                           ; Regs used in _setup: [status,2]
  1267                           
  1268                           
  1269                           ;MAESTRO_SPI.c: 188:     ANSEL = 0;
  1270  054C  1683               	bsf	3,5	;RP0=1, select bank3
  1271  054D  1703               	bsf	3,6	;RP1=1, select bank3
  1272  054E  0188               	clrf	8	;volatile
  1273                           
  1274                           ;MAESTRO_SPI.c: 189:     TRISA = 0;
  1275  054F  1683               	bsf	3,5	;RP0=1, select bank1
  1276  0550  1303               	bcf	3,6	;RP1=0, select bank1
  1277  0551  0185               	clrf	5	;volatile
  1278                           
  1279                           ;MAESTRO_SPI.c: 190:     PORTA = 0;
  1280  0552  1283               	bcf	3,5	;RP0=0, select bank0
  1281  0553  1303               	bcf	3,6	;RP1=0, select bank0
  1282  0554  0185               	clrf	5	;volatile
  1283                           
  1284                           ;MAESTRO_SPI.c: 191:     ANSELH = 0;
  1285  0555  1683               	bsf	3,5	;RP0=1, select bank3
  1286  0556  1703               	bsf	3,6	;RP1=1, select bank3
  1287  0557  0189               	clrf	9	;volatile
  1288                           
  1289                           ;MAESTRO_SPI.c: 192:     TRISB = 0;
  1290  0558  1683               	bsf	3,5	;RP0=1, select bank1
  1291  0559  1303               	bcf	3,6	;RP1=0, select bank1
  1292  055A  0186               	clrf	6	;volatile
  1293                           
  1294                           ;MAESTRO_SPI.c: 193:     PORTB = 0;
  1295  055B  1283               	bcf	3,5	;RP0=0, select bank0
  1296  055C  1303               	bcf	3,6	;RP1=0, select bank0
  1297  055D  0186               	clrf	6	;volatile
  1298                           
  1299                           ;MAESTRO_SPI.c: 194:     TRISC = 0;
  1300  055E  1683               	bsf	3,5	;RP0=1, select bank1
  1301  055F  1303               	bcf	3,6	;RP1=0, select bank1
  1302  0560  0187               	clrf	7	;volatile
  1303                           
  1304                           ;MAESTRO_SPI.c: 195:     PORTC = 0;
  1305  0561  1283               	bcf	3,5	;RP0=0, select bank0
  1306  0562  1303               	bcf	3,6	;RP1=0, select bank0
  1307  0563  0187               	clrf	7	;volatile
  1308  0564                     l1615:
  1309                           
  1310                           ;MAESTRO_SPI.c: 196:     TRISCbits.TRISC6 = 0;
  1311  0564  1683               	bsf	3,5	;RP0=1, select bank1
  1312  0565  1303               	bcf	3,6	;RP1=0, select bank1
  1313  0566  1307               	bcf	7,6	;volatile
  1314  0567                     l1617:
  1315                           
  1316                           ;MAESTRO_SPI.c: 197:     TRISCbits.TRISC4 = 1;
  1317  0567  1607               	bsf	7,4	;volatile
  1318  0568                     l1619:
  1319                           
  1320                           ;MAESTRO_SPI.c: 198:     PORTCbits.RC0 = 1;
  1321  0568  1283               	bcf	3,5	;RP0=0, select bank0
  1322  0569  1303               	bcf	3,6	;RP1=0, select bank0
  1323  056A  1407               	bsf	7,0	;volatile
  1324  056B                     l1621:
  1325                           
  1326                           ;MAESTRO_SPI.c: 199:     PORTCbits.RC1 = 1;
  1327  056B  1487               	bsf	7,1	;volatile
  1328  056C                     l1623:
  1329                           
  1330                           ;MAESTRO_SPI.c: 200:     PORTCbits.RC2 = 1;
  1331  056C  1507               	bsf	7,2	;volatile
  1332                           
  1333                           ;MAESTRO_SPI.c: 201:     TRISD = 0;
  1334  056D  1683               	bsf	3,5	;RP0=1, select bank1
  1335  056E  1303               	bcf	3,6	;RP1=0, select bank1
  1336  056F  0188               	clrf	8	;volatile
  1337                           
  1338                           ;MAESTRO_SPI.c: 202:     PORTD = 0;
  1339  0570  1283               	bcf	3,5	;RP0=0, select bank0
  1340  0571  1303               	bcf	3,6	;RP1=0, select bank0
  1341  0572  0188               	clrf	8	;volatile
  1342                           
  1343                           ;MAESTRO_SPI.c: 203:     TRISE = 0;
  1344  0573  1683               	bsf	3,5	;RP0=1, select bank1
  1345  0574  1303               	bcf	3,6	;RP1=0, select bank1
  1346  0575  0189               	clrf	9	;volatile
  1347                           
  1348                           ;MAESTRO_SPI.c: 204:     PORTE = 0;
  1349  0576  1283               	bcf	3,5	;RP0=0, select bank0
  1350  0577  1303               	bcf	3,6	;RP1=0, select bank0
  1351  0578  0189               	clrf	9	;volatile
  1352  0579                     l167:
  1353  0579  0008               	return
  1354  057A                     __end_of_setup:
  1355                           
  1356                           	psect	text3
  1357  0661                     __ptext3:	
  1358 ;; *************** function _osc_config *****************
  1359 ;; Defined at:
  1360 ;;		line 220 in file "MAESTRO_SPI.c"
  1361 ;; Parameters:    Size  Location     Type
  1362 ;;		None
  1363 ;; Auto vars:     Size  Location     Type
  1364 ;;		None
  1365 ;; Return value:  Size  Location     Type
  1366 ;;                  1    wreg      void 
  1367 ;; Registers used:
  1368 ;;		None
  1369 ;; Tracked objects:
  1370 ;;		On entry : 0/0
  1371 ;;		On exit  : 0/0
  1372 ;;		Unchanged: 0/0
  1373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1374 ;;      Params:         0       0       0       0       0
  1375 ;;      Locals:         0       0       0       0       0
  1376 ;;      Temps:          0       0       0       0       0
  1377 ;;      Totals:         0       0       0       0       0
  1378 ;;Total ram usage:        0 bytes
  1379 ;; Hardware stack levels used:    1
  1380 ;; Hardware stack levels required when called:    1
  1381 ;; This function calls:
  1382 ;;		Nothing
  1383 ;; This function is called by:
  1384 ;;		_main
  1385 ;; This function uses a non-reentrant model
  1386 ;;
  1387                           
  1388                           
  1389                           ;psect for function _osc_config
  1390  0661                     _osc_config:
  1391  0661                     l1625:	
  1392                           ;incstack = 0
  1393                           ; Regs used in _osc_config: []
  1394                           
  1395                           
  1396                           ;MAESTRO_SPI.c: 222:     OSCCONbits.IRCF2 = 1;
  1397  0661  1683               	bsf	3,5	;RP0=1, select bank1
  1398  0662  1303               	bcf	3,6	;RP1=0, select bank1
  1399  0663  170F               	bsf	15,6	;volatile
  1400                           
  1401                           ;MAESTRO_SPI.c: 223:     OSCCONbits.IRCF1 = 1;
  1402  0664  168F               	bsf	15,5	;volatile
  1403                           
  1404                           ;MAESTRO_SPI.c: 224:     OSCCONbits.IRCF0 = 0;
  1405  0665  120F               	bcf	15,4	;volatile
  1406                           
  1407                           ;MAESTRO_SPI.c: 225:     OSCCONbits.OSTS = 0;
  1408  0666  118F               	bcf	15,3	;volatile
  1409                           
  1410                           ;MAESTRO_SPI.c: 226:     OSCCONbits.HTS = 0;
  1411  0667  110F               	bcf	15,2	;volatile
  1412                           
  1413                           ;MAESTRO_SPI.c: 227:     OSCCONbits.LTS = 1;
  1414  0668  148F               	bsf	15,1	;volatile
  1415                           
  1416                           ;MAESTRO_SPI.c: 228:     OSCCONbits.SCS = 0;
  1417  0669  100F               	bcf	15,0	;volatile
  1418  066A                     l173:
  1419  066A  0008               	return
  1420  066B                     __end_of_osc_config:
  1421                           
  1422                           	psect	text4
  1423  050F                     __ptext4:	
  1424 ;; *************** function _lcd *****************
  1425 ;; Defined at:
  1426 ;;		line 260 in file "MAESTRO_SPI.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;		None
  1429 ;; Auto vars:     Size  Location     Type
  1430 ;;		None
  1431 ;; Return value:  Size  Location     Type
  1432 ;;                  1    wreg      void 
  1433 ;; Registers used:
  1434 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1435 ;; Tracked objects:
  1436 ;;		On entry : 0/0
  1437 ;;		On exit  : 0/0
  1438 ;;		Unchanged: 0/0
  1439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1440 ;;      Params:         0       0       0       0       0
  1441 ;;      Locals:         0       0       0       0       0
  1442 ;;      Temps:          0       1       0       0       0
  1443 ;;      Totals:         0       1       0       0       0
  1444 ;;Total ram usage:        1 bytes
  1445 ;; Hardware stack levels used:    1
  1446 ;; Hardware stack levels required when called:    4
  1447 ;; This function calls:
  1448 ;;		_Conversion1
  1449 ;;		_Conversion2
  1450 ;;		_Conversion3
  1451 ;;		_Lcd_Set_Cursor
  1452 ;;		_Lcd_Write_String
  1453 ;; This function is called by:
  1454 ;;		_main
  1455 ;; This function uses a non-reentrant model
  1456 ;;
  1457                           
  1458                           
  1459                           ;psect for function _lcd
  1460  050F                     _lcd:
  1461  050F                     l1869:	
  1462                           ;incstack = 0
  1463                           ; Regs used in _lcd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1464                           
  1465                           
  1466                           ;MAESTRO_SPI.c: 262:     Lcd_Set_Cursor(0,1);
  1467  050F  01F6               	clrf	Lcd_Set_Cursor@b
  1468  0510  0AF6               	incf	Lcd_Set_Cursor@b,f
  1469  0511  3000               	movlw	0
  1470  0512  120A  118A  259F  120A  118A  	fcall	_Lcd_Set_Cursor
  1471  0517                     l1871:
  1472                           
  1473                           ;MAESTRO_SPI.c: 263:     Lcd_Write_String("ADC:  BTN: TEMP:");
  1474  0517  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1475  0518  120A  118A  257A  120A  118A  	fcall	_Lcd_Write_String
  1476  051D                     l1873:
  1477                           
  1478                           ;MAESTRO_SPI.c: 264:     Lcd_Set_Cursor(2,0);
  1479  051D  01F6               	clrf	Lcd_Set_Cursor@b
  1480  051E  3002               	movlw	2
  1481  051F  120A  118A  259F  120A  118A  	fcall	_Lcd_Set_Cursor
  1482  0524                     l1875:
  1483                           
  1484                           ;MAESTRO_SPI.c: 265:     Conversion1 ();
  1485  0524  120A  118A  2178  120A  118A  	fcall	_Conversion1
  1486  0529                     l1877:
  1487                           
  1488                           ;MAESTRO_SPI.c: 266:     Lcd_Set_Cursor(2,7);
  1489  0529  3007               	movlw	7
  1490  052A  1283               	bcf	3,5	;RP0=0, select bank0
  1491  052B  1303               	bcf	3,6	;RP1=0, select bank0
  1492  052C  00C4               	movwf	??_lcd
  1493  052D  0844               	movf	??_lcd,w
  1494  052E  00F6               	movwf	Lcd_Set_Cursor@b
  1495  052F  3002               	movlw	2
  1496  0530  120A  118A  259F  120A  118A  	fcall	_Lcd_Set_Cursor
  1497  0535                     l1879:
  1498                           
  1499                           ;MAESTRO_SPI.c: 267:     Conversion2 ();
  1500  0535  120A  118A  22F5  120A  118A  	fcall	_Conversion2
  1501  053A                     l1881:
  1502                           
  1503                           ;MAESTRO_SPI.c: 268:     Lcd_Set_Cursor(2,12);
  1504  053A  300C               	movlw	12
  1505  053B  1283               	bcf	3,5	;RP0=0, select bank0
  1506  053C  1303               	bcf	3,6	;RP1=0, select bank0
  1507  053D  00C4               	movwf	??_lcd
  1508  053E  0844               	movf	??_lcd,w
  1509  053F  00F6               	movwf	Lcd_Set_Cursor@b
  1510  0540  3002               	movlw	2
  1511  0541  120A  118A  259F  120A  118A  	fcall	_Lcd_Set_Cursor
  1512  0546                     l1883:
  1513                           
  1514                           ;MAESTRO_SPI.c: 269:     Conversion3 ();
  1515  0546  120A  118A  246B  120A  118A  	fcall	_Conversion3
  1516  054B                     l185:
  1517  054B  0008               	return
  1518  054C                     __end_of_lcd:
  1519                           
  1520                           	psect	text5
  1521  057A                     __ptext5:	
  1522 ;; *************** function _Lcd_Write_String *****************
  1523 ;; Defined at:
  1524 ;;		line 78 in file "LCD_SPI.c"
  1525 ;; Parameters:    Size  Location     Type
  1526 ;;  a               1    wreg     PTR unsigned char 
  1527 ;;		 -> STR_1(17), 
  1528 ;; Auto vars:     Size  Location     Type
  1529 ;;  a               1    7[COMMON] PTR unsigned char 
  1530 ;;		 -> STR_1(17), 
  1531 ;;  i               2    5[COMMON] int 
  1532 ;; Return value:  Size  Location     Type
  1533 ;;                  1    wreg      void 
  1534 ;; Registers used:
  1535 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1536 ;; Tracked objects:
  1537 ;;		On entry : 0/0
  1538 ;;		On exit  : 0/0
  1539 ;;		Unchanged: 0/0
  1540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1541 ;;      Params:         0       0       0       0       0
  1542 ;;      Locals:         3       0       0       0       0
  1543 ;;      Temps:          0       0       0       0       0
  1544 ;;      Totals:         3       0       0       0       0
  1545 ;;Total ram usage:        3 bytes
  1546 ;; Hardware stack levels used:    1
  1547 ;; Hardware stack levels required when called:    3
  1548 ;; This function calls:
  1549 ;;		_Lcd_Write_Char
  1550 ;; This function is called by:
  1551 ;;		_lcd
  1552 ;; This function uses a non-reentrant model
  1553 ;;
  1554                           
  1555                           
  1556                           ;psect for function _Lcd_Write_String
  1557  057A                     _Lcd_Write_String:
  1558                           
  1559                           ;incstack = 0
  1560                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1561                           ;Lcd_Write_String@a stored from wreg
  1562  057A  00F7               	movwf	Lcd_Write_String@a
  1563  057B                     l1557:
  1564                           
  1565                           ;LCD_SPI.c: 78: void Lcd_Write_String(char *a);LCD_SPI.c: 79: {;LCD_SPI.c: 80:     int i
      +                          ;;LCD_SPI.c: 81:     for (i = 0; a[i] != '\0'; i++)
  1566  057B  01F5               	clrf	Lcd_Write_String@i
  1567  057C  01F6               	clrf	Lcd_Write_String@i+1
  1568  057D  2D91               	goto	l1563
  1569  057E                     l1559:
  1570                           
  1571                           ;LCD_SPI.c: 82:         Lcd_Write_Char(a[i]);
  1572  057E  0875               	movf	Lcd_Write_String@i,w
  1573  057F  0777               	addwf	Lcd_Write_String@a,w
  1574  0580  0084               	movwf	4
  1575  0581  120A  118A  2600  120A  118A  	fcall	stringdir
  1576  0586  120A  118A  2617  120A  118A  	fcall	_Lcd_Write_Char
  1577  058B                     l1561:
  1578  058B  3001               	movlw	1
  1579  058C  07F5               	addwf	Lcd_Write_String@i,f
  1580  058D  1803               	skipnc
  1581  058E  0AF6               	incf	Lcd_Write_String@i+1,f
  1582  058F  3000               	movlw	0
  1583  0590  07F6               	addwf	Lcd_Write_String@i+1,f
  1584  0591                     l1563:
  1585  0591  0875               	movf	Lcd_Write_String@i,w
  1586  0592  0777               	addwf	Lcd_Write_String@a,w
  1587  0593  0084               	movwf	4
  1588  0594  120A  118A  2600  120A  118A  	fcall	stringdir
  1589  0599  3A00               	xorlw	0
  1590  059A  1D03               	skipz
  1591  059B  2D9D               	goto	u571
  1592  059C  2D9E               	goto	u570
  1593  059D                     u571:
  1594  059D  2D7E               	goto	l1559
  1595  059E                     u570:
  1596  059E                     l262:
  1597  059E  0008               	return
  1598  059F                     __end_of_Lcd_Write_String:
  1599                           
  1600                           	psect	text6
  1601  059F                     __ptext6:	
  1602 ;; *************** function _Lcd_Set_Cursor *****************
  1603 ;; Defined at:
  1604 ;;		line 63 in file "LCD_SPI.c"
  1605 ;; Parameters:    Size  Location     Type
  1606 ;;  a               1    wreg     unsigned char 
  1607 ;;  b               1    6[COMMON] unsigned char 
  1608 ;; Auto vars:     Size  Location     Type
  1609 ;;  a               1    8[COMMON] unsigned char 
  1610 ;;  temp            1    9[COMMON] unsigned char 
  1611 ;; Return value:  Size  Location     Type
  1612 ;;                  1    wreg      void 
  1613 ;; Registers used:
  1614 ;;		wreg, status,2, status,0, pclath, cstack
  1615 ;; Tracked objects:
  1616 ;;		On entry : 0/0
  1617 ;;		On exit  : 0/0
  1618 ;;		Unchanged: 0/0
  1619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1620 ;;      Params:         1       0       0       0       0
  1621 ;;      Locals:         2       0       0       0       0
  1622 ;;      Temps:          1       0       0       0       0
  1623 ;;      Totals:         4       0       0       0       0
  1624 ;;Total ram usage:        4 bytes
  1625 ;; Hardware stack levels used:    1
  1626 ;; Hardware stack levels required when called:    3
  1627 ;; This function calls:
  1628 ;;		_Lcd_Cmd
  1629 ;; This function is called by:
  1630 ;;		_lcd
  1631 ;; This function uses a non-reentrant model
  1632 ;;
  1633                           
  1634                           
  1635                           ;psect for function _Lcd_Set_Cursor
  1636  059F                     _Lcd_Set_Cursor:
  1637                           
  1638                           ;incstack = 0
  1639                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1640                           ;Lcd_Set_Cursor@a stored from wreg
  1641  059F  00F8               	movwf	Lcd_Set_Cursor@a
  1642  05A0                     l1545:
  1643                           
  1644                           ;LCD_SPI.c: 63: void Lcd_Set_Cursor(char a, char b);LCD_SPI.c: 64: {;LCD_SPI.c: 65:     
      +                          char temp;;LCD_SPI.c: 66:     if (a == 1)
  1645  05A0  0378               	decf	Lcd_Set_Cursor@a,w
  1646  05A1  1D03               	btfss	3,2
  1647  05A2  2DA4               	goto	u551
  1648  05A3  2DA5               	goto	u550
  1649  05A4                     u551:
  1650  05A4  2DB1               	goto	l1551
  1651  05A5                     u550:
  1652  05A5                     l1547:
  1653                           
  1654                           ;LCD_SPI.c: 67:     {;LCD_SPI.c: 68:         temp = 0x80 + b;
  1655  05A5  0876               	movf	Lcd_Set_Cursor@b,w
  1656  05A6  3E80               	addlw	128
  1657  05A7  00F7               	movwf	??_Lcd_Set_Cursor
  1658  05A8  0877               	movf	??_Lcd_Set_Cursor,w
  1659  05A9  00F9               	movwf	Lcd_Set_Cursor@temp
  1660  05AA                     l1549:
  1661                           
  1662                           ;LCD_SPI.c: 69:         Lcd_Cmd(temp);
  1663  05AA  0879               	movf	Lcd_Set_Cursor@temp,w
  1664  05AB  120A  118A  25E1  120A  118A  	fcall	_Lcd_Cmd
  1665                           
  1666                           ;LCD_SPI.c: 70:     }
  1667  05B0  2DC2               	goto	l256
  1668  05B1                     l1551:
  1669  05B1  3002               	movlw	2
  1670  05B2  0678               	xorwf	Lcd_Set_Cursor@a,w
  1671  05B3  1D03               	btfss	3,2
  1672  05B4  2DB6               	goto	u561
  1673  05B5  2DB7               	goto	u560
  1674  05B6                     u561:
  1675  05B6  2DC2               	goto	l256
  1676  05B7                     u560:
  1677  05B7                     l1553:
  1678                           
  1679                           ;LCD_SPI.c: 72:     {;LCD_SPI.c: 73:         temp = 0xC0 + b;
  1680  05B7  0876               	movf	Lcd_Set_Cursor@b,w
  1681  05B8  3EC0               	addlw	192
  1682  05B9  00F7               	movwf	??_Lcd_Set_Cursor
  1683  05BA  0877               	movf	??_Lcd_Set_Cursor,w
  1684  05BB  00F9               	movwf	Lcd_Set_Cursor@temp
  1685  05BC                     l1555:
  1686                           
  1687                           ;LCD_SPI.c: 74:         Lcd_Cmd(temp);
  1688  05BC  0879               	movf	Lcd_Set_Cursor@temp,w
  1689  05BD  120A  118A  25E1  120A  118A  	fcall	_Lcd_Cmd
  1690  05C2                     l256:
  1691  05C2  0008               	return
  1692  05C3                     __end_of_Lcd_Set_Cursor:
  1693                           
  1694                           	psect	text7
  1695  046B                     __ptext7:	
  1696 ;; *************** function _Conversion3 *****************
  1697 ;; Defined at:
  1698 ;;		line 307 in file "MAESTRO_SPI.c"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;		None
  1701 ;; Auto vars:     Size  Location     Type
  1702 ;;		None
  1703 ;; Return value:  Size  Location     Type
  1704 ;;                  1    wreg      void 
  1705 ;; Registers used:
  1706 ;;		wreg, status,2, status,0, pclath, cstack
  1707 ;; Tracked objects:
  1708 ;;		On entry : 0/0
  1709 ;;		On exit  : 0/0
  1710 ;;		Unchanged: 0/0
  1711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1712 ;;      Params:         0       0       0       0       0
  1713 ;;      Locals:         0       0       0       0       0
  1714 ;;      Temps:          0       3       0       0       0
  1715 ;;      Totals:         0       3       0       0       0
  1716 ;;Total ram usage:        3 bytes
  1717 ;; Hardware stack levels used:    1
  1718 ;; Hardware stack levels required when called:    3
  1719 ;; This function calls:
  1720 ;;		_Lcd_Write_Char
  1721 ;;		___awdiv
  1722 ;;		___awmod
  1723 ;;		_virtual_display3
  1724 ;; This function is called by:
  1725 ;;		_lcd
  1726 ;; This function uses a non-reentrant model
  1727 ;;
  1728                           
  1729                           
  1730                           ;psect for function _Conversion3
  1731  046B                     _Conversion3:
  1732  046B                     l1853:	
  1733                           ;incstack = 0
  1734                           ; Regs used in _Conversion3: [wreg+status,2+status,0+pclath+cstack]
  1735                           
  1736                           
  1737                           ;MAESTRO_SPI.c: 309:     voltajey = dato_semaforo * 2;
  1738  046B  1283               	bcf	3,5	;RP0=0, select bank0
  1739  046C  1303               	bcf	3,6	;RP1=0, select bank0
  1740  046D  0820               	movf	_dato_semaforo,w
  1741  046E  00C1               	movwf	??_Conversion3
  1742  046F  0741               	addwf	??_Conversion3,w
  1743  0470  00C2               	movwf	??_Conversion3+1
  1744  0471  0842               	movf	??_Conversion3+1,w
  1745  0472  00B0               	movwf	_voltajey
  1746  0473                     l1855:
  1747                           
  1748                           ;MAESTRO_SPI.c: 310:     decenay = voltajey / 10;
  1749  0473  300A               	movlw	10
  1750  0474  00F2               	movwf	___awdiv@divisor
  1751  0475  3000               	movlw	0
  1752  0476  00F3               	movwf	___awdiv@divisor+1
  1753  0477  0830               	movf	_voltajey,w
  1754  0478  00C1               	movwf	??_Conversion3
  1755  0479  01C2               	clrf	??_Conversion3+1
  1756  047A  0841               	movf	??_Conversion3,w
  1757  047B  00F4               	movwf	___awdiv@dividend
  1758  047C  0842               	movf	??_Conversion3+1,w
  1759  047D  00F5               	movwf	___awdiv@dividend+1
  1760  047E  120A  118A  228C  120A  118A  	fcall	___awdiv
  1761  0483  0872               	movf	?___awdiv,w
  1762  0484  1283               	bcf	3,5	;RP0=0, select bank0
  1763  0485  1303               	bcf	3,6	;RP1=0, select bank0
  1764  0486  00C3               	movwf	??_Conversion3+2
  1765  0487  0843               	movf	??_Conversion3+2,w
  1766  0488  00B1               	movwf	_decenay
  1767  0489                     l1857:
  1768                           
  1769                           ;MAESTRO_SPI.c: 311:     unidady = voltajey % 10;
  1770  0489  300A               	movlw	10
  1771  048A  00F2               	movwf	___awmod@divisor
  1772  048B  3000               	movlw	0
  1773  048C  00F3               	movwf	___awmod@divisor+1
  1774  048D  0830               	movf	_voltajey,w
  1775  048E  00C1               	movwf	??_Conversion3
  1776  048F  01C2               	clrf	??_Conversion3+1
  1777  0490  0841               	movf	??_Conversion3,w
  1778  0491  00F4               	movwf	___awmod@dividend
  1779  0492  0842               	movf	??_Conversion3+1,w
  1780  0493  00F5               	movwf	___awmod@dividend+1
  1781  0494  120A  118A  23BB  120A  118A  	fcall	___awmod
  1782  0499  0872               	movf	?___awmod,w
  1783  049A  1283               	bcf	3,5	;RP0=0, select bank0
  1784  049B  1303               	bcf	3,6	;RP1=0, select bank0
  1785  049C  00C3               	movwf	??_Conversion3+2
  1786  049D  0843               	movf	??_Conversion3+2,w
  1787  049E  00AF               	movwf	_unidady
  1788  049F                     l1859:
  1789                           
  1790                           ;MAESTRO_SPI.c: 312:     Lcd_Write_Char(decenay+48);
  1791  049F  0831               	movf	_decenay,w
  1792  04A0  3E30               	addlw	48
  1793  04A1  120A  118A  2617  120A  118A  	fcall	_Lcd_Write_Char
  1794  04A6                     l1861:
  1795                           
  1796                           ;MAESTRO_SPI.c: 313:     Lcd_Write_Char(unidady+48);
  1797  04A6  1283               	bcf	3,5	;RP0=0, select bank0
  1798  04A7  1303               	bcf	3,6	;RP1=0, select bank0
  1799  04A8  082F               	movf	_unidady,w
  1800  04A9  3E30               	addlw	48
  1801  04AA  120A  118A  2617  120A  118A  	fcall	_Lcd_Write_Char
  1802  04AF                     l1863:
  1803                           
  1804                           ;MAESTRO_SPI.c: 314:     Lcd_Write_Char(223);
  1805  04AF  30DF               	movlw	223
  1806  04B0  120A  118A  2617  120A  118A  	fcall	_Lcd_Write_Char
  1807  04B5                     l1865:
  1808                           
  1809                           ;MAESTRO_SPI.c: 315:     Lcd_Write_Char(67);
  1810  04B5  3043               	movlw	67
  1811  04B6  120A  118A  2617  120A  118A  	fcall	_Lcd_Write_Char
  1812  04BB                     l1867:
  1813                           
  1814                           ;MAESTRO_SPI.c: 316:     virtual_display3();
  1815  04BB  120A  118A  24C1  120A  118A  	fcall	_virtual_display3
  1816  04C0                     l197:
  1817  04C0  0008               	return
  1818  04C1                     __end_of_Conversion3:
  1819                           
  1820                           	psect	text8
  1821  04C1                     __ptext8:	
  1822 ;; *************** function _virtual_display3 *****************
  1823 ;; Defined at:
  1824 ;;		line 379 in file "MAESTRO_SPI.c"
  1825 ;; Parameters:    Size  Location     Type
  1826 ;;		None
  1827 ;; Auto vars:     Size  Location     Type
  1828 ;;		None
  1829 ;; Return value:  Size  Location     Type
  1830 ;;                  1    wreg      void 
  1831 ;; Registers used:
  1832 ;;		wreg, status,2, status,0, pclath, cstack
  1833 ;; Tracked objects:
  1834 ;;		On entry : 0/0
  1835 ;;		On exit  : 0/0
  1836 ;;		Unchanged: 0/0
  1837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1838 ;;      Params:         0       0       0       0       0
  1839 ;;      Locals:         0       0       0       0       0
  1840 ;;      Temps:          0       0       0       0       0
  1841 ;;      Totals:         0       0       0       0       0
  1842 ;;Total ram usage:        0 bytes
  1843 ;; Hardware stack levels used:    1
  1844 ;; Hardware stack levels required when called:    2
  1845 ;; This function calls:
  1846 ;;		_escribir_char
  1847 ;; This function is called by:
  1848 ;;		_Conversion3
  1849 ;; This function uses a non-reentrant model
  1850 ;;
  1851                           
  1852                           
  1853                           ;psect for function _virtual_display3
  1854  04C1                     _virtual_display3:
  1855  04C1                     l1389:	
  1856                           ;incstack = 0
  1857                           ; Regs used in _virtual_display3: [wreg+status,2+status,0+pclath+cstack]
  1858                           
  1859                           
  1860                           ;MAESTRO_SPI.c: 381:     if (velocidad3 > 15)
  1861  04C1  3010               	movlw	16
  1862  04C2  1283               	bcf	3,5	;RP0=0, select bank0
  1863  04C3  1303               	bcf	3,6	;RP1=0, select bank0
  1864  04C4  0223               	subwf	_velocidad3,w
  1865  04C5  1C03               	skipc
  1866  04C6  2CC8               	goto	u351
  1867  04C7  2CC9               	goto	u350
  1868  04C8                     u351:
  1869  04C8  2D0E               	goto	l211
  1870  04C9                     u350:
  1871  04C9                     l1391:
  1872                           
  1873                           ;MAESTRO_SPI.c: 382:     {;MAESTRO_SPI.c: 383:         escribir_char (84);
  1874  04C9  3054               	movlw	84
  1875  04CA  120A  118A  266B  120A  118A  	fcall	_escribir_char
  1876                           
  1877                           ;MAESTRO_SPI.c: 384:         escribir_char (69);
  1878  04CF  3045               	movlw	69
  1879  04D0  120A  118A  266B  120A  118A  	fcall	_escribir_char
  1880                           
  1881                           ;MAESTRO_SPI.c: 385:         escribir_char (77);
  1882  04D5  304D               	movlw	77
  1883  04D6  120A  118A  266B  120A  118A  	fcall	_escribir_char
  1884                           
  1885                           ;MAESTRO_SPI.c: 386:         escribir_char (80);
  1886  04DB  3050               	movlw	80
  1887  04DC  120A  118A  266B  120A  118A  	fcall	_escribir_char
  1888                           
  1889                           ;MAESTRO_SPI.c: 387:         escribir_char (58);
  1890  04E1  303A               	movlw	58
  1891  04E2  120A  118A  266B  120A  118A  	fcall	_escribir_char
  1892                           
  1893                           ;MAESTRO_SPI.c: 388:         escribir_char (decenay+48);
  1894  04E7  1283               	bcf	3,5	;RP0=0, select bank0
  1895  04E8  1303               	bcf	3,6	;RP1=0, select bank0
  1896  04E9  0831               	movf	_decenay,w
  1897  04EA  3E30               	addlw	48
  1898  04EB  120A  118A  266B  120A  118A  	fcall	_escribir_char
  1899                           
  1900                           ;MAESTRO_SPI.c: 389:         escribir_char (unidady+48);
  1901  04F0  1283               	bcf	3,5	;RP0=0, select bank0
  1902  04F1  1303               	bcf	3,6	;RP1=0, select bank0
  1903  04F2  082F               	movf	_unidady,w
  1904  04F3  3E30               	addlw	48
  1905  04F4  120A  118A  266B  120A  118A  	fcall	_escribir_char
  1906                           
  1907                           ;MAESTRO_SPI.c: 390:         escribir_char (176);
  1908  04F9  30B0               	movlw	176
  1909  04FA  120A  118A  266B  120A  118A  	fcall	_escribir_char
  1910                           
  1911                           ;MAESTRO_SPI.c: 391:         escribir_char (67);
  1912  04FF  3043               	movlw	67
  1913  0500  120A  118A  266B  120A  118A  	fcall	_escribir_char
  1914                           
  1915                           ;MAESTRO_SPI.c: 392:         escribir_char ('\r');
  1916  0505  300D               	movlw	13
  1917  0506  120A  118A  266B  120A  118A  	fcall	_escribir_char
  1918  050B                     l1393:
  1919                           
  1920                           ;MAESTRO_SPI.c: 393:         velocidad3 = 0;
  1921  050B  1283               	bcf	3,5	;RP0=0, select bank0
  1922  050C  1303               	bcf	3,6	;RP1=0, select bank0
  1923  050D  01A3               	clrf	_velocidad3
  1924  050E                     l211:
  1925  050E  0008               	return
  1926  050F                     __end_of_virtual_display3:
  1927                           
  1928                           	psect	text9
  1929  02F5                     __ptext9:	
  1930 ;; *************** function _Conversion2 *****************
  1931 ;; Defined at:
  1932 ;;		line 289 in file "MAESTRO_SPI.c"
  1933 ;; Parameters:    Size  Location     Type
  1934 ;;		None
  1935 ;; Auto vars:     Size  Location     Type
  1936 ;;		None
  1937 ;; Return value:  Size  Location     Type
  1938 ;;                  1    wreg      void 
  1939 ;; Registers used:
  1940 ;;		wreg, status,2, status,0, pclath, cstack
  1941 ;; Tracked objects:
  1942 ;;		On entry : 0/0
  1943 ;;		On exit  : 0/0
  1944 ;;		Unchanged: 0/0
  1945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1946 ;;      Params:         0       0       0       0       0
  1947 ;;      Locals:         0       0       0       0       0
  1948 ;;      Temps:          0       3       0       0       0
  1949 ;;      Totals:         0       3       0       0       0
  1950 ;;Total ram usage:        3 bytes
  1951 ;; Hardware stack levels used:    1
  1952 ;; Hardware stack levels required when called:    3
  1953 ;; This function calls:
  1954 ;;		_Lcd_Write_Char
  1955 ;;		___awdiv
  1956 ;;		___awmod
  1957 ;;		_virtual_display2
  1958 ;; This function is called by:
  1959 ;;		_lcd
  1960 ;; This function uses a non-reentrant model
  1961 ;;
  1962                           
  1963                           
  1964                           ;psect for function _Conversion2
  1965  02F5                     _Conversion2:
  1966  02F5                     l1845:	
  1967                           ;incstack = 0
  1968                           ; Regs used in _Conversion2: [wreg+status,2+status,0+pclath+cstack]
  1969                           
  1970                           
  1971                           ;MAESTRO_SPI.c: 291:     if (dato_push < 10)
  1972  02F5  300A               	movlw	10
  1973  02F6  027A               	subwf	_dato_push,w
  1974  02F7  1803               	skipnc
  1975  02F8  2AFA               	goto	u701
  1976  02F9  2AFB               	goto	u700
  1977  02FA                     u701:
  1978  02FA  2B0E               	goto	l1849
  1979  02FB                     u700:
  1980  02FB                     l1847:
  1981                           
  1982                           ;MAESTRO_SPI.c: 292:     {;MAESTRO_SPI.c: 293:         Lcd_Write_Char(48);
  1983  02FB  3030               	movlw	48
  1984  02FC  120A  118A  2617  120A  118A  	fcall	_Lcd_Write_Char
  1985                           
  1986                           ;MAESTRO_SPI.c: 294:         Lcd_Write_Char(dato_push+ 48);
  1987  0301  087A               	movf	_dato_push,w
  1988  0302  3E30               	addlw	48
  1989  0303  120A  118A  2617  120A  118A  	fcall	_Lcd_Write_Char
  1990                           
  1991                           ;MAESTRO_SPI.c: 295:         virtual_display2();
  1992  0308  120A  118A  20D9  120A  118A  	fcall	_virtual_display2
  1993                           
  1994                           ;MAESTRO_SPI.c: 296:     }
  1995  030D  2B57               	goto	l194
  1996  030E                     l1849:
  1997  030E  300A               	movlw	10
  1998  030F  027A               	subwf	_dato_push,w
  1999  0310  1C03               	skipc
  2000  0311  2B13               	goto	u711
  2001  0312  2B14               	goto	u710
  2002  0313                     u711:
  2003  0313  2B57               	goto	l194
  2004  0314                     u710:
  2005  0314                     l1851:
  2006                           
  2007                           ;MAESTRO_SPI.c: 298:     {;MAESTRO_SPI.c: 299:         w1 = dato_push/10;
  2008  0314  300A               	movlw	10
  2009  0315  00F2               	movwf	___awdiv@divisor
  2010  0316  3000               	movlw	0
  2011  0317  00F3               	movwf	___awdiv@divisor+1
  2012  0318  087A               	movf	_dato_push,w
  2013  0319  1283               	bcf	3,5	;RP0=0, select bank0
  2014  031A  1303               	bcf	3,6	;RP1=0, select bank0
  2015  031B  00C1               	movwf	??_Conversion2
  2016  031C  01C2               	clrf	??_Conversion2+1
  2017  031D  0841               	movf	??_Conversion2,w
  2018  031E  00F4               	movwf	___awdiv@dividend
  2019  031F  0842               	movf	??_Conversion2+1,w
  2020  0320  00F5               	movwf	___awdiv@dividend+1
  2021  0321  120A  118A  228C  120A  118A  	fcall	___awdiv
  2022  0326  0872               	movf	?___awdiv,w
  2023  0327  1283               	bcf	3,5	;RP0=0, select bank0
  2024  0328  1303               	bcf	3,6	;RP1=0, select bank0
  2025  0329  00C3               	movwf	??_Conversion2+2
  2026  032A  0843               	movf	??_Conversion2+2,w
  2027  032B  00A8               	movwf	_w1
  2028                           
  2029                           ;MAESTRO_SPI.c: 300:         w2 = dato_push % 10;
  2030  032C  300A               	movlw	10
  2031  032D  00F2               	movwf	___awmod@divisor
  2032  032E  3000               	movlw	0
  2033  032F  00F3               	movwf	___awmod@divisor+1
  2034  0330  087A               	movf	_dato_push,w
  2035  0331  00C1               	movwf	??_Conversion2
  2036  0332  01C2               	clrf	??_Conversion2+1
  2037  0333  0841               	movf	??_Conversion2,w
  2038  0334  00F4               	movwf	___awmod@dividend
  2039  0335  0842               	movf	??_Conversion2+1,w
  2040  0336  00F5               	movwf	___awmod@dividend+1
  2041  0337  120A  118A  23BB  120A  118A  	fcall	___awmod
  2042  033C  0872               	movf	?___awmod,w
  2043  033D  1283               	bcf	3,5	;RP0=0, select bank0
  2044  033E  1303               	bcf	3,6	;RP1=0, select bank0
  2045  033F  00C3               	movwf	??_Conversion2+2
  2046  0340  0843               	movf	??_Conversion2+2,w
  2047  0341  00A7               	movwf	_w2
  2048                           
  2049                           ;MAESTRO_SPI.c: 301:         Lcd_Write_Char(w1+48);
  2050  0342  0828               	movf	_w1,w
  2051  0343  3E30               	addlw	48
  2052  0344  120A  118A  2617  120A  118A  	fcall	_Lcd_Write_Char
  2053                           
  2054                           ;MAESTRO_SPI.c: 302:         Lcd_Write_Char(w2+48);
  2055  0349  1283               	bcf	3,5	;RP0=0, select bank0
  2056  034A  1303               	bcf	3,6	;RP1=0, select bank0
  2057  034B  0827               	movf	_w2,w
  2058  034C  3E30               	addlw	48
  2059  034D  120A  118A  2617  120A  118A  	fcall	_Lcd_Write_Char
  2060                           
  2061                           ;MAESTRO_SPI.c: 303:         virtual_display2();
  2062  0352  120A  118A  20D9  120A  118A  	fcall	_virtual_display2
  2063  0357                     l194:
  2064  0357  0008               	return
  2065  0358                     __end_of_Conversion2:
  2066                           
  2067                           	psect	text10
  2068  00D9                     __ptext10:	
  2069 ;; *************** function _virtual_display2 *****************
  2070 ;; Defined at:
  2071 ;;		line 340 in file "MAESTRO_SPI.c"
  2072 ;; Parameters:    Size  Location     Type
  2073 ;;		None
  2074 ;; Auto vars:     Size  Location     Type
  2075 ;;		None
  2076 ;; Return value:  Size  Location     Type
  2077 ;;                  1    wreg      void 
  2078 ;; Registers used:
  2079 ;;		wreg, status,2, status,0, pclath, cstack
  2080 ;; Tracked objects:
  2081 ;;		On entry : 0/0
  2082 ;;		On exit  : 0/0
  2083 ;;		Unchanged: 0/0
  2084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2085 ;;      Params:         0       0       0       0       0
  2086 ;;      Locals:         0       0       0       0       0
  2087 ;;      Temps:          0       0       0       0       0
  2088 ;;      Totals:         0       0       0       0       0
  2089 ;;Total ram usage:        0 bytes
  2090 ;; Hardware stack levels used:    1
  2091 ;; Hardware stack levels required when called:    2
  2092 ;; This function calls:
  2093 ;;		_escribir_char
  2094 ;; This function is called by:
  2095 ;;		_Conversion2
  2096 ;; This function uses a non-reentrant model
  2097 ;;
  2098                           
  2099                           
  2100                           ;psect for function _virtual_display2
  2101  00D9                     _virtual_display2:
  2102  00D9                     l1377:	
  2103                           ;incstack = 0
  2104                           ; Regs used in _virtual_display2: [wreg+status,2+status,0+pclath+cstack]
  2105                           
  2106                           
  2107                           ;MAESTRO_SPI.c: 342:     if (velocidad2 > 15)
  2108  00D9  3010               	movlw	16
  2109  00DA  1283               	bcf	3,5	;RP0=0, select bank0
  2110  00DB  1303               	bcf	3,6	;RP1=0, select bank0
  2111  00DC  0224               	subwf	_velocidad2,w
  2112  00DD  1C03               	skipc
  2113  00DE  28E0               	goto	u331
  2114  00DF  28E1               	goto	u330
  2115  00E0                     u331:
  2116  00E0  2977               	goto	l207
  2117  00E1                     u330:
  2118  00E1                     l1379:
  2119                           
  2120                           ;MAESTRO_SPI.c: 343:     {;MAESTRO_SPI.c: 344:         if (dato_push < 10)
  2121  00E1  300A               	movlw	10
  2122  00E2  027A               	subwf	_dato_push,w
  2123  00E3  1803               	skipnc
  2124  00E4  28E6               	goto	u341
  2125  00E5  28E7               	goto	u340
  2126  00E6                     u341:
  2127  00E6  292E               	goto	l1385
  2128  00E7                     u340:
  2129  00E7                     l1381:
  2130                           
  2131                           ;MAESTRO_SPI.c: 345:         {;MAESTRO_SPI.c: 346:             escribir_char (67);
  2132  00E7  3043               	movlw	67
  2133  00E8  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2134                           
  2135                           ;MAESTRO_SPI.c: 347:             escribir_char (79);
  2136  00ED  304F               	movlw	79
  2137  00EE  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2138                           
  2139                           ;MAESTRO_SPI.c: 348:             escribir_char (78);
  2140  00F3  304E               	movlw	78
  2141  00F4  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2142                           
  2143                           ;MAESTRO_SPI.c: 349:             escribir_char (84);
  2144  00F9  3054               	movlw	84
  2145  00FA  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2146                           
  2147                           ;MAESTRO_SPI.c: 350:             escribir_char (58);
  2148  00FF  303A               	movlw	58
  2149  0100  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2150                           
  2151                           ;MAESTRO_SPI.c: 351:             escribir_char (48);
  2152  0105  3030               	movlw	48
  2153  0106  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2154                           
  2155                           ;MAESTRO_SPI.c: 352:             escribir_char (dato_push+48);
  2156  010B  087A               	movf	_dato_push,w
  2157  010C  3E30               	addlw	48
  2158  010D  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2159                           
  2160                           ;MAESTRO_SPI.c: 353:             escribir_char (32);
  2161  0112  3020               	movlw	32
  2162  0113  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2163                           
  2164                           ;MAESTRO_SPI.c: 354:             escribir_char (32);
  2165  0118  3020               	movlw	32
  2166  0119  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2167                           
  2168                           ;MAESTRO_SPI.c: 355:             escribir_char (32);
  2169  011E  3020               	movlw	32
  2170  011F  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2171                           
  2172                           ;MAESTRO_SPI.c: 356:             escribir_char (32);
  2173  0124  3020               	movlw	32
  2174  0125  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2175  012A                     l1383:
  2176                           
  2177                           ;MAESTRO_SPI.c: 358:             velocidad2 = 0;
  2178  012A  1283               	bcf	3,5	;RP0=0, select bank0
  2179  012B  1303               	bcf	3,6	;RP1=0, select bank0
  2180  012C  01A4               	clrf	_velocidad2
  2181                           
  2182                           ;MAESTRO_SPI.c: 359:         }
  2183  012D  2977               	goto	l207
  2184  012E                     l1385:
  2185                           
  2186                           ;MAESTRO_SPI.c: 361:         {;MAESTRO_SPI.c: 362:             escribir_char (67);
  2187  012E  3043               	movlw	67
  2188  012F  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2189                           
  2190                           ;MAESTRO_SPI.c: 363:             escribir_char (79);
  2191  0134  304F               	movlw	79
  2192  0135  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2193                           
  2194                           ;MAESTRO_SPI.c: 364:             escribir_char (78);
  2195  013A  304E               	movlw	78
  2196  013B  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2197                           
  2198                           ;MAESTRO_SPI.c: 365:             escribir_char (84);
  2199  0140  3054               	movlw	84
  2200  0141  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2201                           
  2202                           ;MAESTRO_SPI.c: 366:             escribir_char (58);
  2203  0146  303A               	movlw	58
  2204  0147  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2205                           
  2206                           ;MAESTRO_SPI.c: 367:             escribir_char (w1+48);
  2207  014C  1283               	bcf	3,5	;RP0=0, select bank0
  2208  014D  1303               	bcf	3,6	;RP1=0, select bank0
  2209  014E  0828               	movf	_w1,w
  2210  014F  3E30               	addlw	48
  2211  0150  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2212                           
  2213                           ;MAESTRO_SPI.c: 368:             escribir_char (w2+48);
  2214  0155  1283               	bcf	3,5	;RP0=0, select bank0
  2215  0156  1303               	bcf	3,6	;RP1=0, select bank0
  2216  0157  0827               	movf	_w2,w
  2217  0158  3E30               	addlw	48
  2218  0159  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2219                           
  2220                           ;MAESTRO_SPI.c: 369:             escribir_char (32);
  2221  015E  3020               	movlw	32
  2222  015F  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2223                           
  2224                           ;MAESTRO_SPI.c: 370:             escribir_char (32);
  2225  0164  3020               	movlw	32
  2226  0165  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2227                           
  2228                           ;MAESTRO_SPI.c: 371:             escribir_char (32);
  2229  016A  3020               	movlw	32
  2230  016B  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2231                           
  2232                           ;MAESTRO_SPI.c: 372:             escribir_char (32);
  2233  0170  3020               	movlw	32
  2234  0171  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2235  0176  292A               	goto	l1383
  2236  0177                     l207:
  2237  0177  0008               	return
  2238  0178                     __end_of_virtual_display2:
  2239                           
  2240                           	psect	text11
  2241  0178                     __ptext11:	
  2242 ;; *************** function _Conversion1 *****************
  2243 ;; Defined at:
  2244 ;;		line 273 in file "MAESTRO_SPI.c"
  2245 ;; Parameters:    Size  Location     Type
  2246 ;;		None
  2247 ;; Auto vars:     Size  Location     Type
  2248 ;;		None
  2249 ;; Return value:  Size  Location     Type
  2250 ;;                  1    wreg      void 
  2251 ;; Registers used:
  2252 ;;		wreg, status,2, status,0, pclath, cstack
  2253 ;; Tracked objects:
  2254 ;;		On entry : 0/0
  2255 ;;		On exit  : 0/0
  2256 ;;		Unchanged: 0/0
  2257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2258 ;;      Params:         0       0       0       0       0
  2259 ;;      Locals:         0       0       0       0       0
  2260 ;;      Temps:          0       3       0       0       0
  2261 ;;      Totals:         0       3       0       0       0
  2262 ;;Total ram usage:        3 bytes
  2263 ;; Hardware stack levels used:    1
  2264 ;; Hardware stack levels required when called:    3
  2265 ;; This function calls:
  2266 ;;		_Lcd_Write_Char
  2267 ;;		___awdiv
  2268 ;;		___awmod
  2269 ;;		_virtual_display1
  2270 ;; This function is called by:
  2271 ;;		_lcd
  2272 ;; This function uses a non-reentrant model
  2273 ;;
  2274                           
  2275                           
  2276                           ;psect for function _Conversion1
  2277  0178                     _Conversion1:
  2278  0178                     l1821:	
  2279                           ;incstack = 0
  2280                           ; Regs used in _Conversion1: [wreg+status,2+status,0+pclath+cstack]
  2281                           
  2282                           
  2283                           ;MAESTRO_SPI.c: 275:     voltaje = dato_pot * 2;
  2284  0178  1283               	bcf	3,5	;RP0=0, select bank0
  2285  0179  1303               	bcf	3,6	;RP1=0, select bank0
  2286  017A  0822               	movf	_dato_pot,w
  2287  017B  00C1               	movwf	??_Conversion1
  2288  017C  0741               	addwf	??_Conversion1,w
  2289  017D  00C2               	movwf	??_Conversion1+1
  2290  017E  0842               	movf	??_Conversion1+1,w
  2291  017F  00FB               	movwf	_voltaje
  2292  0180                     l1823:
  2293                           
  2294                           ;MAESTRO_SPI.c: 276:     unidad = voltaje / 100;
  2295  0180  3064               	movlw	100
  2296  0181  00F2               	movwf	___awdiv@divisor
  2297  0182  3000               	movlw	0
  2298  0183  00F3               	movwf	___awdiv@divisor+1
  2299  0184  087B               	movf	_voltaje,w
  2300  0185  00C1               	movwf	??_Conversion1
  2301  0186  01C2               	clrf	??_Conversion1+1
  2302  0187  0841               	movf	??_Conversion1,w
  2303  0188  00F4               	movwf	___awdiv@dividend
  2304  0189  0842               	movf	??_Conversion1+1,w
  2305  018A  00F5               	movwf	___awdiv@dividend+1
  2306  018B  120A  118A  228C  120A  118A  	fcall	___awdiv
  2307  0190  0872               	movf	?___awdiv,w
  2308  0191  1283               	bcf	3,5	;RP0=0, select bank0
  2309  0192  1303               	bcf	3,6	;RP1=0, select bank0
  2310  0193  00C3               	movwf	??_Conversion1+2
  2311  0194  0843               	movf	??_Conversion1+2,w
  2312  0195  00BC               	movwf	_unidad
  2313  0196                     l1825:
  2314                           
  2315                           ;MAESTRO_SPI.c: 277:     x1 = voltaje % 100;
  2316  0196  3064               	movlw	100
  2317  0197  00F2               	movwf	___awmod@divisor
  2318  0198  3000               	movlw	0
  2319  0199  00F3               	movwf	___awmod@divisor+1
  2320  019A  087B               	movf	_voltaje,w
  2321  019B  00C1               	movwf	??_Conversion1
  2322  019C  01C2               	clrf	??_Conversion1+1
  2323  019D  0841               	movf	??_Conversion1,w
  2324  019E  00F4               	movwf	___awmod@dividend
  2325  019F  0842               	movf	??_Conversion1+1,w
  2326  01A0  00F5               	movwf	___awmod@dividend+1
  2327  01A1  120A  118A  23BB  120A  118A  	fcall	___awmod
  2328  01A6  0872               	movf	?___awmod,w
  2329  01A7  1283               	bcf	3,5	;RP0=0, select bank0
  2330  01A8  1303               	bcf	3,6	;RP1=0, select bank0
  2331  01A9  00C3               	movwf	??_Conversion1+2
  2332  01AA  0843               	movf	??_Conversion1+2,w
  2333  01AB  00BB               	movwf	_x1
  2334  01AC                     l1827:
  2335                           
  2336                           ;MAESTRO_SPI.c: 278:     x2 = x1 / 10;
  2337  01AC  300A               	movlw	10
  2338  01AD  00F2               	movwf	___awdiv@divisor
  2339  01AE  3000               	movlw	0
  2340  01AF  00F3               	movwf	___awdiv@divisor+1
  2341  01B0  083B               	movf	_x1,w
  2342  01B1  00C1               	movwf	??_Conversion1
  2343  01B2  01C2               	clrf	??_Conversion1+1
  2344  01B3  0841               	movf	??_Conversion1,w
  2345  01B4  00F4               	movwf	___awdiv@dividend
  2346  01B5  0842               	movf	??_Conversion1+1,w
  2347  01B6  00F5               	movwf	___awdiv@dividend+1
  2348  01B7  120A  118A  228C  120A  118A  	fcall	___awdiv
  2349  01BC  0872               	movf	?___awdiv,w
  2350  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  2351  01BE  1303               	bcf	3,6	;RP1=0, select bank0
  2352  01BF  00C3               	movwf	??_Conversion1+2
  2353  01C0  0843               	movf	??_Conversion1+2,w
  2354  01C1  00B9               	movwf	_x2
  2355  01C2                     l1829:
  2356                           
  2357                           ;MAESTRO_SPI.c: 279:     y1 = x1 % 10;
  2358  01C2  300A               	movlw	10
  2359  01C3  00F2               	movwf	___awmod@divisor
  2360  01C4  3000               	movlw	0
  2361  01C5  00F3               	movwf	___awmod@divisor+1
  2362  01C6  083B               	movf	_x1,w
  2363  01C7  00C1               	movwf	??_Conversion1
  2364  01C8  01C2               	clrf	??_Conversion1+1
  2365  01C9  0841               	movf	??_Conversion1,w
  2366  01CA  00F4               	movwf	___awmod@dividend
  2367  01CB  0842               	movf	??_Conversion1+1,w
  2368  01CC  00F5               	movwf	___awmod@dividend+1
  2369  01CD  120A  118A  23BB  120A  118A  	fcall	___awmod
  2370  01D2  0872               	movf	?___awmod,w
  2371  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  2372  01D4  1303               	bcf	3,6	;RP1=0, select bank0
  2373  01D5  00C3               	movwf	??_Conversion1+2
  2374  01D6  0843               	movf	??_Conversion1+2,w
  2375  01D7  00BA               	movwf	_y1
  2376  01D8                     l1831:
  2377                           
  2378                           ;MAESTRO_SPI.c: 280:     y2 = y1 / 1;
  2379  01D8  083A               	movf	_y1,w
  2380  01D9  00C1               	movwf	??_Conversion1
  2381  01DA  0841               	movf	??_Conversion1,w
  2382  01DB  00B8               	movwf	_y2
  2383  01DC                     l1833:
  2384                           
  2385                           ;MAESTRO_SPI.c: 281:     Lcd_Write_Char(unidad+48);
  2386  01DC  083C               	movf	_unidad,w
  2387  01DD  3E30               	addlw	48
  2388  01DE  120A  118A  2617  120A  118A  	fcall	_Lcd_Write_Char
  2389  01E3                     l1835:
  2390                           
  2391                           ;MAESTRO_SPI.c: 282:     Lcd_Write_Char(46);
  2392  01E3  302E               	movlw	46
  2393  01E4  120A  118A  2617  120A  118A  	fcall	_Lcd_Write_Char
  2394  01E9                     l1837:
  2395                           
  2396                           ;MAESTRO_SPI.c: 283:     Lcd_Write_Char(x2+48);
  2397  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  2398  01EA  1303               	bcf	3,6	;RP1=0, select bank0
  2399  01EB  0839               	movf	_x2,w
  2400  01EC  3E30               	addlw	48
  2401  01ED  120A  118A  2617  120A  118A  	fcall	_Lcd_Write_Char
  2402  01F2                     l1839:
  2403                           
  2404                           ;MAESTRO_SPI.c: 284:     Lcd_Write_Char(y2+48);
  2405  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  2406  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  2407  01F4  0838               	movf	_y2,w
  2408  01F5  3E30               	addlw	48
  2409  01F6  120A  118A  2617  120A  118A  	fcall	_Lcd_Write_Char
  2410  01FB                     l1841:
  2411                           
  2412                           ;MAESTRO_SPI.c: 285:     Lcd_Write_Char(86);
  2413  01FB  3056               	movlw	86
  2414  01FC  120A  118A  2617  120A  118A  	fcall	_Lcd_Write_Char
  2415  0201                     l1843:
  2416                           
  2417                           ;MAESTRO_SPI.c: 286:     virtual_display1();
  2418  0201  120A  118A  2358  120A  118A  	fcall	_virtual_display1
  2419  0206                     l188:
  2420  0206  0008               	return
  2421  0207                     __end_of_Conversion1:
  2422                           
  2423                           	psect	text12
  2424  0358                     __ptext12:	
  2425 ;; *************** function _virtual_display1 *****************
  2426 ;; Defined at:
  2427 ;;		line 319 in file "MAESTRO_SPI.c"
  2428 ;; Parameters:    Size  Location     Type
  2429 ;;		None
  2430 ;; Auto vars:     Size  Location     Type
  2431 ;;		None
  2432 ;; Return value:  Size  Location     Type
  2433 ;;                  1    wreg      void 
  2434 ;; Registers used:
  2435 ;;		wreg, status,2, status,0, pclath, cstack
  2436 ;; Tracked objects:
  2437 ;;		On entry : 0/0
  2438 ;;		On exit  : 0/0
  2439 ;;		Unchanged: 0/0
  2440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2441 ;;      Params:         0       0       0       0       0
  2442 ;;      Locals:         0       0       0       0       0
  2443 ;;      Temps:          0       0       0       0       0
  2444 ;;      Totals:         0       0       0       0       0
  2445 ;;Total ram usage:        0 bytes
  2446 ;; Hardware stack levels used:    1
  2447 ;; Hardware stack levels required when called:    2
  2448 ;; This function calls:
  2449 ;;		_escribir_char
  2450 ;; This function is called by:
  2451 ;;		_Conversion1
  2452 ;; This function uses a non-reentrant model
  2453 ;;
  2454                           
  2455                           
  2456                           ;psect for function _virtual_display1
  2457  0358                     _virtual_display1:
  2458  0358                     l1371:	
  2459                           ;incstack = 0
  2460                           ; Regs used in _virtual_display1: [wreg+status,2+status,0+pclath+cstack]
  2461                           
  2462                           
  2463                           ;MAESTRO_SPI.c: 321:     if (velocidad1 > 15)
  2464  0358  3010               	movlw	16
  2465  0359  1283               	bcf	3,5	;RP0=0, select bank0
  2466  035A  1303               	bcf	3,6	;RP1=0, select bank0
  2467  035B  0225               	subwf	_velocidad1,w
  2468  035C  1C03               	skipc
  2469  035D  2B5F               	goto	u321
  2470  035E  2B60               	goto	u320
  2471  035F                     u321:
  2472  035F  2BBA               	goto	l201
  2473  0360                     u320:
  2474  0360                     l1373:
  2475                           
  2476                           ;MAESTRO_SPI.c: 322:     {;MAESTRO_SPI.c: 323:         escribir_char (65);
  2477  0360  3041               	movlw	65
  2478  0361  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2479                           
  2480                           ;MAESTRO_SPI.c: 324:         escribir_char (68);
  2481  0366  3044               	movlw	68
  2482  0367  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2483                           
  2484                           ;MAESTRO_SPI.c: 325:         escribir_char (67);
  2485  036C  3043               	movlw	67
  2486  036D  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2487                           
  2488                           ;MAESTRO_SPI.c: 326:         escribir_char (58);
  2489  0372  303A               	movlw	58
  2490  0373  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2491                           
  2492                           ;MAESTRO_SPI.c: 327:         escribir_char (unidad+48);
  2493  0378  1283               	bcf	3,5	;RP0=0, select bank0
  2494  0379  1303               	bcf	3,6	;RP1=0, select bank0
  2495  037A  083C               	movf	_unidad,w
  2496  037B  3E30               	addlw	48
  2497  037C  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2498                           
  2499                           ;MAESTRO_SPI.c: 328:         escribir_char (46);
  2500  0381  302E               	movlw	46
  2501  0382  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2502                           
  2503                           ;MAESTRO_SPI.c: 329:         escribir_char (x2+48);
  2504  0387  1283               	bcf	3,5	;RP0=0, select bank0
  2505  0388  1303               	bcf	3,6	;RP1=0, select bank0
  2506  0389  0839               	movf	_x2,w
  2507  038A  3E30               	addlw	48
  2508  038B  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2509                           
  2510                           ;MAESTRO_SPI.c: 330:         escribir_char (y2+48);
  2511  0390  1283               	bcf	3,5	;RP0=0, select bank0
  2512  0391  1303               	bcf	3,6	;RP1=0, select bank0
  2513  0392  0838               	movf	_y2,w
  2514  0393  3E30               	addlw	48
  2515  0394  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2516                           
  2517                           ;MAESTRO_SPI.c: 331:         escribir_char (86);
  2518  0399  3056               	movlw	86
  2519  039A  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2520                           
  2521                           ;MAESTRO_SPI.c: 332:         escribir_char (32);
  2522  039F  3020               	movlw	32
  2523  03A0  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2524                           
  2525                           ;MAESTRO_SPI.c: 333:         escribir_char (32);
  2526  03A5  3020               	movlw	32
  2527  03A6  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2528                           
  2529                           ;MAESTRO_SPI.c: 334:         escribir_char (32);
  2530  03AB  3020               	movlw	32
  2531  03AC  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2532                           
  2533                           ;MAESTRO_SPI.c: 335:         escribir_char (32);
  2534  03B1  3020               	movlw	32
  2535  03B2  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2536  03B7                     l1375:
  2537                           
  2538                           ;MAESTRO_SPI.c: 336:         velocidad1 = 0;
  2539  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  2540  03B8  1303               	bcf	3,6	;RP1=0, select bank0
  2541  03B9  01A5               	clrf	_velocidad1
  2542  03BA                     l201:
  2543  03BA  0008               	return
  2544  03BB                     __end_of_virtual_display1:
  2545                           
  2546                           	psect	text13
  2547  066B                     __ptext13:	
  2548 ;; *************** function _escribir_char *****************
  2549 ;; Defined at:
  2550 ;;		line 397 in file "MAESTRO_SPI.c"
  2551 ;; Parameters:    Size  Location     Type
  2552 ;;  valor           1    wreg     unsigned char 
  2553 ;; Auto vars:     Size  Location     Type
  2554 ;;  valor           1    2[COMMON] unsigned char 
  2555 ;; Return value:  Size  Location     Type
  2556 ;;                  1    wreg      void 
  2557 ;; Registers used:
  2558 ;;		wreg
  2559 ;; Tracked objects:
  2560 ;;		On entry : 0/0
  2561 ;;		On exit  : 0/0
  2562 ;;		Unchanged: 0/0
  2563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2564 ;;      Params:         0       0       0       0       0
  2565 ;;      Locals:         1       0       0       0       0
  2566 ;;      Temps:          0       0       0       0       0
  2567 ;;      Totals:         1       0       0       0       0
  2568 ;;Total ram usage:        1 bytes
  2569 ;; Hardware stack levels used:    1
  2570 ;; Hardware stack levels required when called:    1
  2571 ;; This function calls:
  2572 ;;		Nothing
  2573 ;; This function is called by:
  2574 ;;		_virtual_display1
  2575 ;;		_virtual_display2
  2576 ;;		_virtual_display3
  2577 ;; This function uses a non-reentrant model
  2578 ;;
  2579                           
  2580                           
  2581                           ;psect for function _escribir_char
  2582  066B                     _escribir_char:
  2583                           
  2584                           ;incstack = 0
  2585                           ; Regs used in _escribir_char: [wreg]
  2586                           ;escribir_char@valor stored from wreg
  2587  066B  00F2               	movwf	escribir_char@valor
  2588  066C                     l1357:
  2589                           
  2590                           ;MAESTRO_SPI.c: 397: void escribir_char (uint8_t valor);MAESTRO_SPI.c: 398: {;MAESTRO_SP
      +                          I.c: 399:     TXREG = valor;
  2591  066C  0872               	movf	escribir_char@valor,w
  2592  066D  1283               	bcf	3,5	;RP0=0, select bank0
  2593  066E  1303               	bcf	3,6	;RP1=0, select bank0
  2594  066F  0099               	movwf	25	;volatile
  2595  0670                     l214:	
  2596                           ;MAESTRO_SPI.c: 400:     while (PIR1bits.TXIF == 0);
  2597                           
  2598  0670  1E0C               	btfss	12,4	;volatile
  2599  0671  2E73               	goto	u311
  2600  0672  2E74               	goto	u310
  2601  0673                     u311:
  2602  0673  2E70               	goto	l214
  2603  0674                     u310:
  2604  0674                     l217:
  2605  0674  0008               	return
  2606  0675                     __end_of_escribir_char:
  2607                           
  2608                           	psect	text14
  2609  03BB                     __ptext14:	
  2610 ;; *************** function ___awmod *****************
  2611 ;; Defined at:
  2612 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  2613 ;; Parameters:    Size  Location     Type
  2614 ;;  divisor         2    2[COMMON] int 
  2615 ;;  dividend        2    4[COMMON] int 
  2616 ;; Auto vars:     Size  Location     Type
  2617 ;;  sign            1    8[COMMON] unsigned char 
  2618 ;;  counter         1    7[COMMON] unsigned char 
  2619 ;; Return value:  Size  Location     Type
  2620 ;;                  2    2[COMMON] int 
  2621 ;; Registers used:
  2622 ;;		wreg, status,2, status,0
  2623 ;; Tracked objects:
  2624 ;;		On entry : 0/0
  2625 ;;		On exit  : 0/0
  2626 ;;		Unchanged: 0/0
  2627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2628 ;;      Params:         4       0       0       0       0
  2629 ;;      Locals:         2       0       0       0       0
  2630 ;;      Temps:          1       0       0       0       0
  2631 ;;      Totals:         7       0       0       0       0
  2632 ;;Total ram usage:        7 bytes
  2633 ;; Hardware stack levels used:    1
  2634 ;; Hardware stack levels required when called:    1
  2635 ;; This function calls:
  2636 ;;		Nothing
  2637 ;; This function is called by:
  2638 ;;		_Conversion1
  2639 ;;		_Conversion2
  2640 ;;		_Conversion3
  2641 ;; This function uses a non-reentrant model
  2642 ;;
  2643                           
  2644                           
  2645                           ;psect for function ___awmod
  2646  03BB                     ___awmod:
  2647  03BB                     l1449:	
  2648                           ;incstack = 0
  2649                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2650                           
  2651  03BB  01F8               	clrf	___awmod@sign
  2652  03BC                     l1451:
  2653  03BC  1FF5               	btfss	___awmod@dividend+1,7
  2654  03BD  2BBF               	goto	u461
  2655  03BE  2BC0               	goto	u460
  2656  03BF                     u461:
  2657  03BF  2BC7               	goto	l1457
  2658  03C0                     u460:
  2659  03C0                     l1453:
  2660  03C0  09F4               	comf	___awmod@dividend,f
  2661  03C1  09F5               	comf	___awmod@dividend+1,f
  2662  03C2  0AF4               	incf	___awmod@dividend,f
  2663  03C3  1903               	skipnz
  2664  03C4  0AF5               	incf	___awmod@dividend+1,f
  2665  03C5                     l1455:
  2666  03C5  01F8               	clrf	___awmod@sign
  2667  03C6  0AF8               	incf	___awmod@sign,f
  2668  03C7                     l1457:
  2669  03C7  1FF3               	btfss	___awmod@divisor+1,7
  2670  03C8  2BCA               	goto	u471
  2671  03C9  2BCB               	goto	u470
  2672  03CA                     u471:
  2673  03CA  2BD0               	goto	l1461
  2674  03CB                     u470:
  2675  03CB                     l1459:
  2676  03CB  09F2               	comf	___awmod@divisor,f
  2677  03CC  09F3               	comf	___awmod@divisor+1,f
  2678  03CD  0AF2               	incf	___awmod@divisor,f
  2679  03CE  1903               	skipnz
  2680  03CF  0AF3               	incf	___awmod@divisor+1,f
  2681  03D0                     l1461:
  2682  03D0  0872               	movf	___awmod@divisor,w
  2683  03D1  0473               	iorwf	___awmod@divisor+1,w
  2684  03D2  1903               	btfsc	3,2
  2685  03D3  2BD5               	goto	u481
  2686  03D4  2BD6               	goto	u480
  2687  03D5                     u481:
  2688  03D5  2C05               	goto	l1479
  2689  03D6                     u480:
  2690  03D6                     l1463:
  2691  03D6  01F7               	clrf	___awmod@counter
  2692  03D7  0AF7               	incf	___awmod@counter,f
  2693  03D8  2BE4               	goto	l1469
  2694  03D9                     l1465:
  2695  03D9  3001               	movlw	1
  2696  03DA                     u495:
  2697  03DA  1003               	clrc
  2698  03DB  0DF2               	rlf	___awmod@divisor,f
  2699  03DC  0DF3               	rlf	___awmod@divisor+1,f
  2700  03DD  3EFF               	addlw	-1
  2701  03DE  1D03               	skipz
  2702  03DF  2BDA               	goto	u495
  2703  03E0                     l1467:
  2704  03E0  3001               	movlw	1
  2705  03E1  00F6               	movwf	??___awmod
  2706  03E2  0876               	movf	??___awmod,w
  2707  03E3  07F7               	addwf	___awmod@counter,f
  2708  03E4                     l1469:
  2709  03E4  1FF3               	btfss	___awmod@divisor+1,7
  2710  03E5  2BE7               	goto	u501
  2711  03E6  2BE8               	goto	u500
  2712  03E7                     u501:
  2713  03E7  2BD9               	goto	l1465
  2714  03E8                     u500:
  2715  03E8                     l1471:
  2716  03E8  0873               	movf	___awmod@divisor+1,w
  2717  03E9  0275               	subwf	___awmod@dividend+1,w
  2718  03EA  1D03               	skipz
  2719  03EB  2BEE               	goto	u515
  2720  03EC  0872               	movf	___awmod@divisor,w
  2721  03ED  0274               	subwf	___awmod@dividend,w
  2722  03EE                     u515:
  2723  03EE  1C03               	skipc
  2724  03EF  2BF1               	goto	u511
  2725  03F0  2BF2               	goto	u510
  2726  03F1                     u511:
  2727  03F1  2BF8               	goto	l1475
  2728  03F2                     u510:
  2729  03F2                     l1473:
  2730  03F2  0872               	movf	___awmod@divisor,w
  2731  03F3  02F4               	subwf	___awmod@dividend,f
  2732  03F4  0873               	movf	___awmod@divisor+1,w
  2733  03F5  1C03               	skipc
  2734  03F6  03F5               	decf	___awmod@dividend+1,f
  2735  03F7  02F5               	subwf	___awmod@dividend+1,f
  2736  03F8                     l1475:
  2737  03F8  3001               	movlw	1
  2738  03F9                     u525:
  2739  03F9  1003               	clrc
  2740  03FA  0CF3               	rrf	___awmod@divisor+1,f
  2741  03FB  0CF2               	rrf	___awmod@divisor,f
  2742  03FC  3EFF               	addlw	-1
  2743  03FD  1D03               	skipz
  2744  03FE  2BF9               	goto	u525
  2745  03FF                     l1477:
  2746  03FF  3001               	movlw	1
  2747  0400  02F7               	subwf	___awmod@counter,f
  2748  0401  1D03               	btfss	3,2
  2749  0402  2C04               	goto	u531
  2750  0403  2C05               	goto	u530
  2751  0404                     u531:
  2752  0404  2BE8               	goto	l1471
  2753  0405                     u530:
  2754  0405                     l1479:
  2755  0405  0878               	movf	___awmod@sign,w
  2756  0406  1903               	btfsc	3,2
  2757  0407  2C09               	goto	u541
  2758  0408  2C0A               	goto	u540
  2759  0409                     u541:
  2760  0409  2C0F               	goto	l1483
  2761  040A                     u540:
  2762  040A                     l1481:
  2763  040A  09F4               	comf	___awmod@dividend,f
  2764  040B  09F5               	comf	___awmod@dividend+1,f
  2765  040C  0AF4               	incf	___awmod@dividend,f
  2766  040D  1903               	skipnz
  2767  040E  0AF5               	incf	___awmod@dividend+1,f
  2768  040F                     l1483:
  2769  040F  0875               	movf	___awmod@dividend+1,w
  2770  0410  00F3               	movwf	?___awmod+1
  2771  0411  0874               	movf	___awmod@dividend,w
  2772  0412  00F2               	movwf	?___awmod
  2773  0413                     l573:
  2774  0413  0008               	return
  2775  0414                     __end_of___awmod:
  2776                           
  2777                           	psect	text15
  2778  028C                     __ptext15:	
  2779 ;; *************** function ___awdiv *****************
  2780 ;; Defined at:
  2781 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2782 ;; Parameters:    Size  Location     Type
  2783 ;;  divisor         2    2[COMMON] int 
  2784 ;;  dividend        2    4[COMMON] int 
  2785 ;; Auto vars:     Size  Location     Type
  2786 ;;  quotient        2    2[BANK0 ] int 
  2787 ;;  sign            1    1[BANK0 ] unsigned char 
  2788 ;;  counter         1    0[BANK0 ] unsigned char 
  2789 ;; Return value:  Size  Location     Type
  2790 ;;                  2    2[COMMON] int 
  2791 ;; Registers used:
  2792 ;;		wreg, status,2, status,0
  2793 ;; Tracked objects:
  2794 ;;		On entry : 0/0
  2795 ;;		On exit  : 0/0
  2796 ;;		Unchanged: 0/0
  2797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2798 ;;      Params:         4       0       0       0       0
  2799 ;;      Locals:         0       4       0       0       0
  2800 ;;      Temps:          1       0       0       0       0
  2801 ;;      Totals:         5       4       0       0       0
  2802 ;;Total ram usage:        9 bytes
  2803 ;; Hardware stack levels used:    1
  2804 ;; Hardware stack levels required when called:    1
  2805 ;; This function calls:
  2806 ;;		Nothing
  2807 ;; This function is called by:
  2808 ;;		_Conversion1
  2809 ;;		_Conversion2
  2810 ;;		_Conversion3
  2811 ;; This function uses a non-reentrant model
  2812 ;;
  2813                           
  2814                           
  2815                           ;psect for function ___awdiv
  2816  028C                     ___awdiv:
  2817  028C                     l1777:	
  2818                           ;incstack = 0
  2819                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2820                           
  2821  028C  1283               	bcf	3,5	;RP0=0, select bank0
  2822  028D  1303               	bcf	3,6	;RP1=0, select bank0
  2823  028E  01BE               	clrf	___awdiv@sign
  2824  028F                     l1779:
  2825  028F  1FF3               	btfss	___awdiv@divisor+1,7
  2826  0290  2A92               	goto	u601
  2827  0291  2A93               	goto	u600
  2828  0292                     u601:
  2829  0292  2A9A               	goto	l1785
  2830  0293                     u600:
  2831  0293                     l1781:
  2832  0293  09F2               	comf	___awdiv@divisor,f
  2833  0294  09F3               	comf	___awdiv@divisor+1,f
  2834  0295  0AF2               	incf	___awdiv@divisor,f
  2835  0296  1903               	skipnz
  2836  0297  0AF3               	incf	___awdiv@divisor+1,f
  2837  0298                     l1783:
  2838  0298  01BE               	clrf	___awdiv@sign
  2839  0299  0ABE               	incf	___awdiv@sign,f
  2840  029A                     l1785:
  2841  029A  1FF5               	btfss	___awdiv@dividend+1,7
  2842  029B  2A9D               	goto	u611
  2843  029C  2A9E               	goto	u610
  2844  029D                     u611:
  2845  029D  2AA7               	goto	l1791
  2846  029E                     u610:
  2847  029E                     l1787:
  2848  029E  09F4               	comf	___awdiv@dividend,f
  2849  029F  09F5               	comf	___awdiv@dividend+1,f
  2850  02A0  0AF4               	incf	___awdiv@dividend,f
  2851  02A1  1903               	skipnz
  2852  02A2  0AF5               	incf	___awdiv@dividend+1,f
  2853  02A3                     l1789:
  2854  02A3  3001               	movlw	1
  2855  02A4  00F6               	movwf	??___awdiv
  2856  02A5  0876               	movf	??___awdiv,w
  2857  02A6  06BE               	xorwf	___awdiv@sign,f
  2858  02A7                     l1791:
  2859  02A7  01BF               	clrf	___awdiv@quotient
  2860  02A8  01C0               	clrf	___awdiv@quotient+1
  2861  02A9                     l1793:
  2862  02A9  0872               	movf	___awdiv@divisor,w
  2863  02AA  0473               	iorwf	___awdiv@divisor+1,w
  2864  02AB  1903               	btfsc	3,2
  2865  02AC  2AAE               	goto	u621
  2866  02AD  2AAF               	goto	u620
  2867  02AE                     u621:
  2868  02AE  2AE6               	goto	l1813
  2869  02AF                     u620:
  2870  02AF                     l1795:
  2871  02AF  01BD               	clrf	___awdiv@counter
  2872  02B0  0ABD               	incf	___awdiv@counter,f
  2873  02B1  2ABD               	goto	l1801
  2874  02B2                     l1797:
  2875  02B2  3001               	movlw	1
  2876  02B3                     u635:
  2877  02B3  1003               	clrc
  2878  02B4  0DF2               	rlf	___awdiv@divisor,f
  2879  02B5  0DF3               	rlf	___awdiv@divisor+1,f
  2880  02B6  3EFF               	addlw	-1
  2881  02B7  1D03               	skipz
  2882  02B8  2AB3               	goto	u635
  2883  02B9                     l1799:
  2884  02B9  3001               	movlw	1
  2885  02BA  00F6               	movwf	??___awdiv
  2886  02BB  0876               	movf	??___awdiv,w
  2887  02BC  07BD               	addwf	___awdiv@counter,f
  2888  02BD                     l1801:
  2889  02BD  1FF3               	btfss	___awdiv@divisor+1,7
  2890  02BE  2AC0               	goto	u641
  2891  02BF  2AC1               	goto	u640
  2892  02C0                     u641:
  2893  02C0  2AB2               	goto	l1797
  2894  02C1                     u640:
  2895  02C1                     l1803:
  2896  02C1  3001               	movlw	1
  2897  02C2                     u655:
  2898  02C2  1003               	clrc
  2899  02C3  0DBF               	rlf	___awdiv@quotient,f
  2900  02C4  0DC0               	rlf	___awdiv@quotient+1,f
  2901  02C5  3EFF               	addlw	-1
  2902  02C6  1D03               	skipz
  2903  02C7  2AC2               	goto	u655
  2904  02C8  0873               	movf	___awdiv@divisor+1,w
  2905  02C9  0275               	subwf	___awdiv@dividend+1,w
  2906  02CA  1D03               	skipz
  2907  02CB  2ACE               	goto	u665
  2908  02CC  0872               	movf	___awdiv@divisor,w
  2909  02CD  0274               	subwf	___awdiv@dividend,w
  2910  02CE                     u665:
  2911  02CE  1C03               	skipc
  2912  02CF  2AD1               	goto	u661
  2913  02D0  2AD2               	goto	u660
  2914  02D1                     u661:
  2915  02D1  2AD9               	goto	l1809
  2916  02D2                     u660:
  2917  02D2                     l1805:
  2918  02D2  0872               	movf	___awdiv@divisor,w
  2919  02D3  02F4               	subwf	___awdiv@dividend,f
  2920  02D4  0873               	movf	___awdiv@divisor+1,w
  2921  02D5  1C03               	skipc
  2922  02D6  03F5               	decf	___awdiv@dividend+1,f
  2923  02D7  02F5               	subwf	___awdiv@dividend+1,f
  2924  02D8                     l1807:
  2925  02D8  143F               	bsf	___awdiv@quotient,0
  2926  02D9                     l1809:
  2927  02D9  3001               	movlw	1
  2928  02DA                     u675:
  2929  02DA  1003               	clrc
  2930  02DB  0CF3               	rrf	___awdiv@divisor+1,f
  2931  02DC  0CF2               	rrf	___awdiv@divisor,f
  2932  02DD  3EFF               	addlw	-1
  2933  02DE  1D03               	skipz
  2934  02DF  2ADA               	goto	u675
  2935  02E0                     l1811:
  2936  02E0  3001               	movlw	1
  2937  02E1  02BD               	subwf	___awdiv@counter,f
  2938  02E2  1D03               	btfss	3,2
  2939  02E3  2AE5               	goto	u681
  2940  02E4  2AE6               	goto	u680
  2941  02E5                     u681:
  2942  02E5  2AC1               	goto	l1803
  2943  02E6                     u680:
  2944  02E6                     l1813:
  2945  02E6  083E               	movf	___awdiv@sign,w
  2946  02E7  1903               	btfsc	3,2
  2947  02E8  2AEA               	goto	u691
  2948  02E9  2AEB               	goto	u690
  2949  02EA                     u691:
  2950  02EA  2AF0               	goto	l1817
  2951  02EB                     u690:
  2952  02EB                     l1815:
  2953  02EB  09BF               	comf	___awdiv@quotient,f
  2954  02EC  09C0               	comf	___awdiv@quotient+1,f
  2955  02ED  0ABF               	incf	___awdiv@quotient,f
  2956  02EE  1903               	skipnz
  2957  02EF  0AC0               	incf	___awdiv@quotient+1,f
  2958  02F0                     l1817:
  2959  02F0  0840               	movf	___awdiv@quotient+1,w
  2960  02F1  00F3               	movwf	?___awdiv+1
  2961  02F2  083F               	movf	___awdiv@quotient,w
  2962  02F3  00F2               	movwf	?___awdiv
  2963  02F4                     l560:
  2964  02F4  0008               	return
  2965  02F5                     __end_of___awdiv:
  2966                           
  2967                           	psect	text16
  2968  0617                     __ptext16:	
  2969 ;; *************** function _Lcd_Write_Char *****************
  2970 ;; Defined at:
  2971 ;;		line 95 in file "LCD_SPI.c"
  2972 ;; Parameters:    Size  Location     Type
  2973 ;;  a               1    wreg     unsigned char 
  2974 ;; Auto vars:     Size  Location     Type
  2975 ;;  a               1    4[COMMON] unsigned char 
  2976 ;; Return value:  Size  Location     Type
  2977 ;;                  1    wreg      void 
  2978 ;; Registers used:
  2979 ;;		wreg, status,2, status,0, pclath, cstack
  2980 ;; Tracked objects:
  2981 ;;		On entry : 0/0
  2982 ;;		On exit  : 0/0
  2983 ;;		Unchanged: 0/0
  2984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2985 ;;      Params:         0       0       0       0       0
  2986 ;;      Locals:         1       0       0       0       0
  2987 ;;      Temps:          1       0       0       0       0
  2988 ;;      Totals:         2       0       0       0       0
  2989 ;;Total ram usage:        2 bytes
  2990 ;; Hardware stack levels used:    1
  2991 ;; Hardware stack levels required when called:    2
  2992 ;; This function calls:
  2993 ;;		_Lcd_Port
  2994 ;; This function is called by:
  2995 ;;		_Conversion1
  2996 ;;		_Conversion2
  2997 ;;		_Conversion3
  2998 ;;		_Lcd_Write_String
  2999 ;; This function uses a non-reentrant model
  3000 ;;
  3001                           
  3002                           
  3003                           ;psect for function _Lcd_Write_Char
  3004  0617                     _Lcd_Write_Char:
  3005                           
  3006                           ;incstack = 0
  3007                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3008                           ;Lcd_Write_Char@a stored from wreg
  3009  0617  00F4               	movwf	Lcd_Write_Char@a
  3010  0618                     l1361:
  3011                           
  3012                           ;LCD_SPI.c: 95: void Lcd_Write_Char(char a);LCD_SPI.c: 96: {;LCD_SPI.c: 97:     PORTEbit
      +                          s.RE0 = 1;
  3013  0618  1283               	bcf	3,5	;RP0=0, select bank0
  3014  0619  1303               	bcf	3,6	;RP1=0, select bank0
  3015  061A  1409               	bsf	9,0	;volatile
  3016  061B                     l1363:
  3017                           
  3018                           ;LCD_SPI.c: 98:     Lcd_Port(a);
  3019  061B  0874               	movf	Lcd_Write_Char@a,w
  3020  061C  120A  118A  2689  120A  118A  	fcall	_Lcd_Port
  3021  0621                     l1365:
  3022                           
  3023                           ;LCD_SPI.c: 99:     PORTEbits.RE1 = 1;
  3024  0621  1283               	bcf	3,5	;RP0=0, select bank0
  3025  0622  1303               	bcf	3,6	;RP1=0, select bank0
  3026  0623  1489               	bsf	9,1	;volatile
  3027  0624                     l1367:
  3028                           
  3029                           ;LCD_SPI.c: 100:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3030  0624  301A               	movlw	26
  3031  0625  00F3               	movwf	??_Lcd_Write_Char
  3032  0626                     u787:
  3033  0626  0BF3               	decfsz	??_Lcd_Write_Char,f
  3034  0627  2E26               	goto	u787
  3035  0628  0000               	nop
  3036  0629                     l1369:
  3037                           
  3038                           ;LCD_SPI.c: 101:     PORTEbits.RE1 = 0;
  3039  0629  1283               	bcf	3,5	;RP0=0, select bank0
  3040  062A  1303               	bcf	3,6	;RP1=0, select bank0
  3041  062B  1089               	bcf	9,1	;volatile
  3042  062C                     l271:
  3043  062C  0008               	return
  3044  062D                     __end_of_Lcd_Write_Char:
  3045                           
  3046                           	psect	text17
  3047  064A                     __ptext17:	
  3048 ;; *************** function _interrup_config *****************
  3049 ;; Defined at:
  3050 ;;		line 207 in file "MAESTRO_SPI.c"
  3051 ;; Parameters:    Size  Location     Type
  3052 ;;		None
  3053 ;; Auto vars:     Size  Location     Type
  3054 ;;		None
  3055 ;; Return value:  Size  Location     Type
  3056 ;;                  1    wreg      void 
  3057 ;; Registers used:
  3058 ;;		status,2
  3059 ;; Tracked objects:
  3060 ;;		On entry : 0/0
  3061 ;;		On exit  : 0/0
  3062 ;;		Unchanged: 0/0
  3063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3064 ;;      Params:         0       0       0       0       0
  3065 ;;      Locals:         0       0       0       0       0
  3066 ;;      Temps:          0       0       0       0       0
  3067 ;;      Totals:         0       0       0       0       0
  3068 ;;Total ram usage:        0 bytes
  3069 ;; Hardware stack levels used:    1
  3070 ;; Hardware stack levels required when called:    1
  3071 ;; This function calls:
  3072 ;;		Nothing
  3073 ;; This function is called by:
  3074 ;;		_main
  3075 ;; This function uses a non-reentrant model
  3076 ;;
  3077                           
  3078                           
  3079                           ;psect for function _interrup_config
  3080  064A                     _interrup_config:
  3081  064A                     l1627:	
  3082                           ;incstack = 0
  3083                           ; Regs used in _interrup_config: [status,2]
  3084                           
  3085                           
  3086                           ;MAESTRO_SPI.c: 209:     INTCONbits.GIE = 1;
  3087  064A  178B               	bsf	11,7	;volatile
  3088                           
  3089                           ;MAESTRO_SPI.c: 210:     INTCONbits.PEIE = 1;
  3090  064B  170B               	bsf	11,6	;volatile
  3091                           
  3092                           ;MAESTRO_SPI.c: 211:     INTCONbits.T0IE = 1;
  3093  064C  168B               	bsf	11,5	;volatile
  3094                           
  3095                           ;MAESTRO_SPI.c: 212:     INTCONbits.INTE = 0;
  3096  064D  120B               	bcf	11,4	;volatile
  3097                           
  3098                           ;MAESTRO_SPI.c: 213:     INTCONbits.RBIE = 0;
  3099  064E  118B               	bcf	11,3	;volatile
  3100                           
  3101                           ;MAESTRO_SPI.c: 214:     INTCONbits.T0IF = 0;
  3102  064F  110B               	bcf	11,2	;volatile
  3103                           
  3104                           ;MAESTRO_SPI.c: 215:     INTCONbits.INTF = 0;
  3105  0650  108B               	bcf	11,1	;volatile
  3106                           
  3107                           ;MAESTRO_SPI.c: 216:     INTCONbits.RBIF = 0;
  3108  0651  100B               	bcf	11,0	;volatile
  3109  0652                     l1629:
  3110                           
  3111                           ;MAESTRO_SPI.c: 217:     IOCB = 0b00000000;
  3112  0652  1683               	bsf	3,5	;RP0=1, select bank1
  3113  0653  1303               	bcf	3,6	;RP1=0, select bank1
  3114  0654  0196               	clrf	22	;volatile
  3115  0655                     l170:
  3116  0655  0008               	return
  3117  0656                     __end_of_interrup_config:
  3118                           
  3119                           	psect	text18
  3120  067D                     __ptext18:	
  3121 ;; *************** function _USART_config *****************
  3122 ;; Defined at:
  3123 ;;		line 246 in file "MAESTRO_SPI.c"
  3124 ;; Parameters:    Size  Location     Type
  3125 ;;		None
  3126 ;; Auto vars:     Size  Location     Type
  3127 ;;		None
  3128 ;; Return value:  Size  Location     Type
  3129 ;;                  1    wreg      void 
  3130 ;; Registers used:
  3131 ;;		wreg, status,2, status,0, pclath, cstack
  3132 ;; Tracked objects:
  3133 ;;		On entry : 0/0
  3134 ;;		On exit  : 0/0
  3135 ;;		Unchanged: 0/0
  3136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3137 ;;      Params:         0       0       0       0       0
  3138 ;;      Locals:         0       0       0       0       0
  3139 ;;      Temps:          0       0       0       0       0
  3140 ;;      Totals:         0       0       0       0       0
  3141 ;;Total ram usage:        0 bytes
  3142 ;; Hardware stack levels used:    1
  3143 ;; Hardware stack levels required when called:    2
  3144 ;; This function calls:
  3145 ;;		_USART_lib_config
  3146 ;; This function is called by:
  3147 ;;		_main
  3148 ;; This function uses a non-reentrant model
  3149 ;;
  3150                           
  3151                           
  3152                           ;psect for function _USART_config
  3153  067D                     _USART_config:
  3154  067D                     l1657:	
  3155                           ;incstack = 0
  3156                           ; Regs used in _USART_config: [wreg+status,2+status,0+pclath+cstack]
  3157                           
  3158                           
  3159                           ;MAESTRO_SPI.c: 248:     USART_lib_config();
  3160  067D  120A  118A  25C3  120A  118A  	fcall	_USART_lib_config
  3161  0682                     l179:
  3162  0682  0008               	return
  3163  0683                     __end_of_USART_config:
  3164                           
  3165                           	psect	text19
  3166  05C3                     __ptext19:	
  3167 ;; *************** function _USART_lib_config *****************
  3168 ;; Defined at:
  3169 ;;		line 19 in file "USART_SPI.c"
  3170 ;; Parameters:    Size  Location     Type
  3171 ;;		None
  3172 ;; Auto vars:     Size  Location     Type
  3173 ;;		None
  3174 ;; Return value:  Size  Location     Type
  3175 ;;                  1    wreg      void 
  3176 ;; Registers used:
  3177 ;;		wreg
  3178 ;; Tracked objects:
  3179 ;;		On entry : 0/0
  3180 ;;		On exit  : 0/0
  3181 ;;		Unchanged: 0/0
  3182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3183 ;;      Params:         0       0       0       0       0
  3184 ;;      Locals:         0       0       0       0       0
  3185 ;;      Temps:          0       0       0       0       0
  3186 ;;      Totals:         0       0       0       0       0
  3187 ;;Total ram usage:        0 bytes
  3188 ;; Hardware stack levels used:    1
  3189 ;; Hardware stack levels required when called:    1
  3190 ;; This function calls:
  3191 ;;		Nothing
  3192 ;; This function is called by:
  3193 ;;		_USART_config
  3194 ;; This function uses a non-reentrant model
  3195 ;;
  3196                           
  3197                           
  3198                           ;psect for function _USART_lib_config
  3199  05C3                     _USART_lib_config:
  3200  05C3                     l1487:	
  3201                           ;incstack = 0
  3202                           ; Regs used in _USART_lib_config: [wreg]
  3203                           
  3204                           
  3205                           ;USART_SPI.c: 21:     SPBRG = 25;
  3206  05C3  3019               	movlw	25
  3207  05C4  1683               	bsf	3,5	;RP0=1, select bank1
  3208  05C5  1303               	bcf	3,6	;RP1=0, select bank1
  3209  05C6  0099               	movwf	25	;volatile
  3210  05C7                     l1489:
  3211                           
  3212                           ;USART_SPI.c: 23:     TXSTAbits.CSRC = 0;
  3213  05C7  1398               	bcf	24,7	;volatile
  3214  05C8                     l1491:
  3215                           
  3216                           ;USART_SPI.c: 24:     TXSTAbits.TX9 = 0;
  3217  05C8  1318               	bcf	24,6	;volatile
  3218  05C9                     l1493:
  3219                           
  3220                           ;USART_SPI.c: 25:     TXSTAbits.TXEN = 1;
  3221  05C9  1698               	bsf	24,5	;volatile
  3222  05CA                     l1495:
  3223                           
  3224                           ;USART_SPI.c: 26:     TXSTAbits.SYNC = 0;
  3225  05CA  1218               	bcf	24,4	;volatile
  3226  05CB                     l1497:
  3227                           
  3228                           ;USART_SPI.c: 27:     TXSTAbits.SENDB= 0;
  3229  05CB  1198               	bcf	24,3	;volatile
  3230  05CC                     l1499:
  3231                           
  3232                           ;USART_SPI.c: 28:     TXSTAbits.BRGH = 1;
  3233  05CC  1518               	bsf	24,2	;volatile
  3234  05CD                     l1501:
  3235                           
  3236                           ;USART_SPI.c: 29:     TXSTAbits.TRMT = 0;
  3237  05CD  1098               	bcf	24,1	;volatile
  3238  05CE                     l1503:
  3239                           
  3240                           ;USART_SPI.c: 30:     TXSTAbits.TX9D = 0;
  3241  05CE  1018               	bcf	24,0	;volatile
  3242  05CF                     l1505:
  3243                           
  3244                           ;USART_SPI.c: 32:     RCSTAbits.SPEN = 1;
  3245  05CF  1283               	bcf	3,5	;RP0=0, select bank0
  3246  05D0  1303               	bcf	3,6	;RP1=0, select bank0
  3247  05D1  1798               	bsf	24,7	;volatile
  3248  05D2                     l1507:
  3249                           
  3250                           ;USART_SPI.c: 33:     RCSTAbits.RX9 = 0;
  3251  05D2  1318               	bcf	24,6	;volatile
  3252  05D3                     l1509:
  3253                           
  3254                           ;USART_SPI.c: 34:     RCSTAbits.SREN = 0;
  3255  05D3  1298               	bcf	24,5	;volatile
  3256  05D4                     l1511:
  3257                           
  3258                           ;USART_SPI.c: 35:     RCSTAbits.CREN = 1;
  3259  05D4  1618               	bsf	24,4	;volatile
  3260  05D5                     l1513:
  3261                           
  3262                           ;USART_SPI.c: 36:     RCSTAbits.ADDEN= 0;
  3263  05D5  1198               	bcf	24,3	;volatile
  3264  05D6                     l1515:
  3265                           
  3266                           ;USART_SPI.c: 37:     RCSTAbits.FERR = 0;
  3267  05D6  1118               	bcf	24,2	;volatile
  3268  05D7                     l1517:
  3269                           
  3270                           ;USART_SPI.c: 38:     RCSTAbits.OERR = 0;
  3271  05D7  1098               	bcf	24,1	;volatile
  3272  05D8                     l1519:
  3273                           
  3274                           ;USART_SPI.c: 39:     RCSTAbits.RX9D = 0;
  3275  05D8  1018               	bcf	24,0	;volatile
  3276  05D9                     l1521:
  3277                           
  3278                           ;USART_SPI.c: 41:     PIR1bits.RCIF = 0;
  3279  05D9  128C               	bcf	12,5	;volatile
  3280  05DA                     l1523:
  3281                           
  3282                           ;USART_SPI.c: 42:     PIE1bits.RCIE = 1;
  3283  05DA  1683               	bsf	3,5	;RP0=1, select bank1
  3284  05DB  1303               	bcf	3,6	;RP1=0, select bank1
  3285  05DC  168C               	bsf	12,5	;volatile
  3286  05DD                     l1525:
  3287                           
  3288                           ;USART_SPI.c: 43:     PIR1bits.TXIF = 0;
  3289  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  3290  05DE  1303               	bcf	3,6	;RP1=0, select bank0
  3291  05DF  120C               	bcf	12,4	;volatile
  3292  05E0                     l230:
  3293  05E0  0008               	return
  3294  05E1                     __end_of_USART_lib_config:
  3295                           
  3296                           	psect	text20
  3297  0656                     __ptext20:	
  3298 ;; *************** function _SPI_config *****************
  3299 ;; Defined at:
  3300 ;;		line 251 in file "MAESTRO_SPI.c"
  3301 ;; Parameters:    Size  Location     Type
  3302 ;;		None
  3303 ;; Auto vars:     Size  Location     Type
  3304 ;;		None
  3305 ;; Return value:  Size  Location     Type
  3306 ;;                  1    wreg      void 
  3307 ;; Registers used:
  3308 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3309 ;; Tracked objects:
  3310 ;;		On entry : 0/0
  3311 ;;		On exit  : 0/0
  3312 ;;		Unchanged: 0/0
  3313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3314 ;;      Params:         0       0       0       0       0
  3315 ;;      Locals:         0       0       0       0       0
  3316 ;;      Temps:          1       0       0       0       0
  3317 ;;      Totals:         1       0       0       0       0
  3318 ;;Total ram usage:        1 bytes
  3319 ;; Hardware stack levels used:    1
  3320 ;; Hardware stack levels required when called:    2
  3321 ;; This function calls:
  3322 ;;		_SPI_Maestro_Init
  3323 ;; This function is called by:
  3324 ;;		_main
  3325 ;; This function uses a non-reentrant model
  3326 ;;
  3327                           
  3328                           
  3329                           ;psect for function _SPI_config
  3330  0656                     _SPI_config:
  3331  0656                     l1659:	
  3332                           ;incstack = 0
  3333                           ; Regs used in _SPI_config: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3334                           
  3335                           
  3336                           ;MAESTRO_SPI.c: 253:     SPI_Maestro_Init (0, 2);
  3337  0656  3002               	movlw	2
  3338  0657  00F6               	movwf	??_SPI_config
  3339  0658  0876               	movf	??_SPI_config,w
  3340  0659  00F2               	movwf	SPI_Maestro_Init@SCK
  3341  065A  3000               	movlw	0
  3342  065B  120A  118A  2207  120A  118A  	fcall	_SPI_Maestro_Init
  3343  0660                     l182:
  3344  0660  0008               	return
  3345  0661                     __end_of_SPI_config:
  3346                           
  3347                           	psect	text21
  3348  0207                     __ptext21:	
  3349 ;; *************** function _SPI_Maestro_Init *****************
  3350 ;; Defined at:
  3351 ;;		line 4 in file "SPI_SPI.c"
  3352 ;; Parameters:    Size  Location     Type
  3353 ;;  port_mode       1    wreg     unsigned char 
  3354 ;;  SCK             1    2[COMMON] unsigned char 
  3355 ;; Auto vars:     Size  Location     Type
  3356 ;;  port_mode       1    5[COMMON] unsigned char 
  3357 ;; Return value:  Size  Location     Type
  3358 ;;                  1    wreg      void 
  3359 ;; Registers used:
  3360 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3361 ;; Tracked objects:
  3362 ;;		On entry : 0/0
  3363 ;;		On exit  : 0/0
  3364 ;;		Unchanged: 0/0
  3365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3366 ;;      Params:         1       0       0       0       0
  3367 ;;      Locals:         1       0       0       0       0
  3368 ;;      Temps:          2       0       0       0       0
  3369 ;;      Totals:         4       0       0       0       0
  3370 ;;Total ram usage:        4 bytes
  3371 ;; Hardware stack levels used:    1
  3372 ;; Hardware stack levels required when called:    1
  3373 ;; This function calls:
  3374 ;;		Nothing
  3375 ;; This function is called by:
  3376 ;;		_SPI_config
  3377 ;; This function uses a non-reentrant model
  3378 ;;
  3379                           
  3380                           
  3381                           ;psect for function _SPI_Maestro_Init
  3382  0207                     _SPI_Maestro_Init:
  3383                           
  3384                           ;incstack = 0
  3385                           ; Regs used in _SPI_Maestro_Init: [wreg-fsr0h+status,2+status,0]
  3386                           ;SPI_Maestro_Init@port_mode stored from wreg
  3387  0207  00F5               	movwf	SPI_Maestro_Init@port_mode
  3388  0208                     l1527:
  3389                           
  3390                           ;SPI_SPI.c: 4: void SPI_Maestro_Init (char port_mode, char SCK);SPI_SPI.c: 5: {;SPI_SPI.
      +                          c: 6:     TRISCbits.TRISC0 = 0;
  3391  0208  1683               	bsf	3,5	;RP0=1, select bank1
  3392  0209  1303               	bcf	3,6	;RP1=0, select bank1
  3393  020A  1007               	bcf	7,0	;volatile
  3394                           
  3395                           ;SPI_SPI.c: 7:     TRISCbits.TRISC1 = 0;
  3396  020B  1087               	bcf	7,1	;volatile
  3397                           
  3398                           ;SPI_SPI.c: 8:     TRISCbits.TRISC2 = 0;
  3399  020C  1107               	bcf	7,2	;volatile
  3400                           
  3401                           ;SPI_SPI.c: 9:     TRISCbits.TRISC5 = 0;
  3402  020D  1287               	bcf	7,5	;volatile
  3403                           
  3404                           ;SPI_SPI.c: 10:     TRISCbits.TRISC4 = 1;
  3405  020E  1607               	bsf	7,4	;volatile
  3406                           
  3407                           ;SPI_SPI.c: 11:     TRISCbits.TRISC3 = 0;
  3408  020F  1187               	bcf	7,3	;volatile
  3409                           
  3410                           ;SPI_SPI.c: 13:     switch (port_mode)
  3411  0210  2A3B               	goto	l1531
  3412  0211                     l285:	
  3413                           ;SPI_SPI.c: 14:     {;SPI_SPI.c: 15:         case 0:
  3414                           
  3415                           
  3416                           ;SPI_SPI.c: 16:             SSPCONbits.SSPM3 = 0;
  3417  0211  1283               	bcf	3,5	;RP0=0, select bank0
  3418  0212  1303               	bcf	3,6	;RP1=0, select bank0
  3419  0213  1194               	bcf	20,3	;volatile
  3420                           
  3421                           ;SPI_SPI.c: 17:             SSPCONbits.SSPM2 = 0;
  3422  0214  1114               	bcf	20,2	;volatile
  3423                           
  3424                           ;SPI_SPI.c: 18:             SSPCONbits.SSPM1 = 0;
  3425  0215  1094               	bcf	20,1	;volatile
  3426                           
  3427                           ;SPI_SPI.c: 19:             SSPCONbits.SSPM0 = 0;
  3428  0216  1014               	bcf	20,0	;volatile
  3429                           
  3430                           ;SPI_SPI.c: 21:             break;
  3431  0217  2A6F               	goto	l1535
  3432  0218                     l287:	
  3433                           ;SPI_SPI.c: 22:          case 1:
  3434                           
  3435                           
  3436                           ;SPI_SPI.c: 23:             SSPCONbits.SSPM3 = 0;
  3437  0218  1283               	bcf	3,5	;RP0=0, select bank0
  3438  0219  1303               	bcf	3,6	;RP1=0, select bank0
  3439  021A  1194               	bcf	20,3	;volatile
  3440                           
  3441                           ;SPI_SPI.c: 24:             SSPCONbits.SSPM2 = 0;
  3442  021B  1114               	bcf	20,2	;volatile
  3443                           
  3444                           ;SPI_SPI.c: 25:             SSPCONbits.SSPM1 = 0;
  3445  021C  1094               	bcf	20,1	;volatile
  3446                           
  3447                           ;SPI_SPI.c: 26:             SSPCONbits.SSPM0 = 1;
  3448  021D  1414               	bsf	20,0	;volatile
  3449                           
  3450                           ;SPI_SPI.c: 28:             break;
  3451  021E  2A6F               	goto	l1535
  3452  021F                     l288:	
  3453                           ;SPI_SPI.c: 29:          case 2:
  3454                           
  3455                           
  3456                           ;SPI_SPI.c: 30:             SSPCONbits.SSPM3 = 0;
  3457  021F  1283               	bcf	3,5	;RP0=0, select bank0
  3458  0220  1303               	bcf	3,6	;RP1=0, select bank0
  3459  0221  1194               	bcf	20,3	;volatile
  3460                           
  3461                           ;SPI_SPI.c: 31:             SSPCONbits.SSPM2 = 0;
  3462  0222  1114               	bcf	20,2	;volatile
  3463                           
  3464                           ;SPI_SPI.c: 32:             SSPCONbits.SSPM1 = 1;
  3465  0223  1494               	bsf	20,1	;volatile
  3466                           
  3467                           ;SPI_SPI.c: 33:             SSPCONbits.SSPM0 = 0;
  3468  0224  1014               	bcf	20,0	;volatile
  3469                           
  3470                           ;SPI_SPI.c: 35:             break;
  3471  0225  2A6F               	goto	l1535
  3472  0226                     l289:	
  3473                           ;SPI_SPI.c: 36:          case 3:
  3474                           
  3475                           
  3476                           ;SPI_SPI.c: 37:             SSPCONbits.SSPM3 = 0;
  3477  0226  1283               	bcf	3,5	;RP0=0, select bank0
  3478  0227  1303               	bcf	3,6	;RP1=0, select bank0
  3479  0228  1194               	bcf	20,3	;volatile
  3480                           
  3481                           ;SPI_SPI.c: 38:             SSPCONbits.SSPM2 = 0;
  3482  0229  1114               	bcf	20,2	;volatile
  3483                           
  3484                           ;SPI_SPI.c: 39:             SSPCONbits.SSPM1 = 1;
  3485  022A  1494               	bsf	20,1	;volatile
  3486                           
  3487                           ;SPI_SPI.c: 40:             SSPCONbits.SSPM0 = 1;
  3488  022B  1414               	bsf	20,0	;volatile
  3489                           
  3490                           ;SPI_SPI.c: 41:             break;
  3491  022C  2A6F               	goto	l1535
  3492  022D                     l290:	
  3493                           ;SPI_SPI.c: 42:          case 4:
  3494                           
  3495                           
  3496                           ;SPI_SPI.c: 43:             SSPCONbits.SSPM3 = 0;
  3497  022D  1283               	bcf	3,5	;RP0=0, select bank0
  3498  022E  1303               	bcf	3,6	;RP1=0, select bank0
  3499  022F  1194               	bcf	20,3	;volatile
  3500                           
  3501                           ;SPI_SPI.c: 44:             SSPCONbits.SSPM2 = 1;
  3502  0230  1514               	bsf	20,2	;volatile
  3503                           
  3504                           ;SPI_SPI.c: 45:             SSPCONbits.SSPM1 = 0;
  3505  0231  1094               	bcf	20,1	;volatile
  3506                           
  3507                           ;SPI_SPI.c: 46:             SSPCONbits.SSPM0 = 0;
  3508  0232  1014               	bcf	20,0	;volatile
  3509                           
  3510                           ;SPI_SPI.c: 48:             break;
  3511  0233  2A6F               	goto	l1535
  3512  0234                     l291:	
  3513                           ;SPI_SPI.c: 49:          case 5:
  3514                           
  3515                           
  3516                           ;SPI_SPI.c: 50:             SSPCONbits.SSPM3 = 0;
  3517  0234  1283               	bcf	3,5	;RP0=0, select bank0
  3518  0235  1303               	bcf	3,6	;RP1=0, select bank0
  3519  0236  1194               	bcf	20,3	;volatile
  3520                           
  3521                           ;SPI_SPI.c: 51:             SSPCONbits.SSPM2 = 1;
  3522  0237  1514               	bsf	20,2	;volatile
  3523                           
  3524                           ;SPI_SPI.c: 52:             SSPCONbits.SSPM1 = 0;
  3525  0238  1094               	bcf	20,1	;volatile
  3526                           
  3527                           ;SPI_SPI.c: 53:             SSPCONbits.SSPM0 = 1;
  3528  0239  1414               	bsf	20,0	;volatile
  3529                           
  3530                           ;SPI_SPI.c: 54:             break;
  3531  023A  2A6F               	goto	l1535
  3532  023B                     l1531:
  3533  023B  0875               	movf	SPI_Maestro_Init@port_mode,w
  3534  023C  00F3               	movwf	??_SPI_Maestro_Init
  3535  023D  01F4               	clrf	??_SPI_Maestro_Init+1
  3536                           
  3537                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3538                           ; Switch size 1, requested type "simple"
  3539                           ; Number of cases is 1, Range of values is 0 to 0
  3540                           ; switch strategies available:
  3541                           ; Name         Instructions Cycles
  3542                           ; simple_byte            4     3 (average)
  3543                           ; direct_byte           11     8 (fixed)
  3544                           ; jumptable            260     6 (fixed)
  3545                           ;	Chosen strategy is simple_byte
  3546  023E  0874               	movf	??_SPI_Maestro_Init+1,w
  3547  023F  3A00               	xorlw	0	; case 0
  3548  0240  1903               	skipnz
  3549  0241  2A43               	goto	l1973
  3550  0242  2A6F               	goto	l1535
  3551  0243                     l1973:
  3552                           
  3553                           ; Switch size 1, requested type "simple"
  3554                           ; Number of cases is 6, Range of values is 0 to 5
  3555                           ; switch strategies available:
  3556                           ; Name         Instructions Cycles
  3557                           ; simple_byte           19    10 (average)
  3558                           ; direct_byte           26     8 (fixed)
  3559                           ; jumptable            260     6 (fixed)
  3560                           ;	Chosen strategy is simple_byte
  3561  0243  0873               	movf	??_SPI_Maestro_Init,w
  3562  0244  3A00               	xorlw	0	; case 0
  3563  0245  1903               	skipnz
  3564  0246  2A11               	goto	l285
  3565  0247  3A01               	xorlw	1	; case 1
  3566  0248  1903               	skipnz
  3567  0249  2A18               	goto	l287
  3568  024A  3A03               	xorlw	3	; case 2
  3569  024B  1903               	skipnz
  3570  024C  2A1F               	goto	l288
  3571  024D  3A01               	xorlw	1	; case 3
  3572  024E  1903               	skipnz
  3573  024F  2A26               	goto	l289
  3574  0250  3A07               	xorlw	7	; case 4
  3575  0251  1903               	skipnz
  3576  0252  2A2D               	goto	l290
  3577  0253  3A01               	xorlw	1	; case 5
  3578  0254  1903               	skipnz
  3579  0255  2A34               	goto	l291
  3580  0256  2A6F               	goto	l1535
  3581  0257                     l293:	
  3582                           ;SPI_SPI.c: 58:     {;SPI_SPI.c: 59:         case 0:
  3583                           
  3584                           
  3585                           ;SPI_SPI.c: 60:             SSPCONbits.CKP = 0;
  3586  0257  1283               	bcf	3,5	;RP0=0, select bank0
  3587  0258  1214               	bcf	20,4	;volatile
  3588                           
  3589                           ;SPI_SPI.c: 61:             SSPSTATbits.CKE = 0;
  3590  0259  1683               	bsf	3,5	;RP0=1, select bank1
  3591  025A  1303               	bcf	3,6	;RP1=0, select bank1
  3592  025B  1314               	bcf	20,6	;volatile
  3593                           
  3594                           ;SPI_SPI.c: 63:             break;
  3595  025C  2A85               	goto	l294
  3596  025D                     l295:	
  3597                           ;SPI_SPI.c: 64:          case 1:
  3598                           
  3599                           
  3600                           ;SPI_SPI.c: 65:             SSPCONbits.CKP = 1;
  3601  025D  1283               	bcf	3,5	;RP0=0, select bank0
  3602  025E  1614               	bsf	20,4	;volatile
  3603                           
  3604                           ;SPI_SPI.c: 66:             SSPSTATbits.CKE = 0;
  3605  025F  1683               	bsf	3,5	;RP0=1, select bank1
  3606  0260  1303               	bcf	3,6	;RP1=0, select bank1
  3607  0261  1314               	bcf	20,6	;volatile
  3608                           
  3609                           ;SPI_SPI.c: 68:             break;
  3610  0262  2A85               	goto	l294
  3611  0263                     l296:	
  3612                           ;SPI_SPI.c: 69:          case 2:
  3613                           
  3614                           
  3615                           ;SPI_SPI.c: 70:             SSPCONbits.CKP = 0;
  3616  0263  1283               	bcf	3,5	;RP0=0, select bank0
  3617  0264  1214               	bcf	20,4	;volatile
  3618                           
  3619                           ;SPI_SPI.c: 71:             SSPSTATbits.CKE = 1;
  3620  0265  1683               	bsf	3,5	;RP0=1, select bank1
  3621  0266  1303               	bcf	3,6	;RP1=0, select bank1
  3622  0267  1714               	bsf	20,6	;volatile
  3623                           
  3624                           ;SPI_SPI.c: 73:             break;
  3625  0268  2A85               	goto	l294
  3626  0269                     l297:	
  3627                           ;SPI_SPI.c: 74:          case 3:
  3628                           
  3629                           
  3630                           ;SPI_SPI.c: 75:             SSPCONbits.CKP = 1;
  3631  0269  1283               	bcf	3,5	;RP0=0, select bank0
  3632  026A  1614               	bsf	20,4	;volatile
  3633                           
  3634                           ;SPI_SPI.c: 76:             SSPSTATbits.CKE = 1;
  3635  026B  1683               	bsf	3,5	;RP0=1, select bank1
  3636  026C  1303               	bcf	3,6	;RP1=0, select bank1
  3637  026D  1714               	bsf	20,6	;volatile
  3638                           
  3639                           ;SPI_SPI.c: 77:             break;
  3640  026E  2A85               	goto	l294
  3641  026F                     l1535:
  3642  026F  0872               	movf	SPI_Maestro_Init@SCK,w
  3643  0270  00F3               	movwf	??_SPI_Maestro_Init
  3644  0271  01F4               	clrf	??_SPI_Maestro_Init+1
  3645                           
  3646                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3647                           ; Switch size 1, requested type "simple"
  3648                           ; Number of cases is 1, Range of values is 0 to 0
  3649                           ; switch strategies available:
  3650                           ; Name         Instructions Cycles
  3651                           ; simple_byte            4     3 (average)
  3652                           ; direct_byte           11     8 (fixed)
  3653                           ; jumptable            260     6 (fixed)
  3654                           ;	Chosen strategy is simple_byte
  3655  0272  0874               	movf	??_SPI_Maestro_Init+1,w
  3656  0273  3A00               	xorlw	0	; case 0
  3657  0274  1903               	skipnz
  3658  0275  2A77               	goto	l1975
  3659  0276  2A85               	goto	l294
  3660  0277                     l1975:
  3661                           
  3662                           ; Switch size 1, requested type "simple"
  3663                           ; Number of cases is 4, Range of values is 0 to 3
  3664                           ; switch strategies available:
  3665                           ; Name         Instructions Cycles
  3666                           ; simple_byte           13     7 (average)
  3667                           ; direct_byte           20     8 (fixed)
  3668                           ; jumptable            260     6 (fixed)
  3669                           ;	Chosen strategy is simple_byte
  3670  0277  0873               	movf	??_SPI_Maestro_Init,w
  3671  0278  3A00               	xorlw	0	; case 0
  3672  0279  1903               	skipnz
  3673  027A  2A57               	goto	l293
  3674  027B  3A01               	xorlw	1	; case 1
  3675  027C  1903               	skipnz
  3676  027D  2A5D               	goto	l295
  3677  027E  3A03               	xorlw	3	; case 2
  3678  027F  1903               	skipnz
  3679  0280  2A63               	goto	l296
  3680  0281  3A01               	xorlw	1	; case 3
  3681  0282  1903               	skipnz
  3682  0283  2A69               	goto	l297
  3683  0284  2A85               	goto	l294
  3684  0285                     l294:
  3685                           
  3686                           ;SPI_SPI.c: 79:     SSPSTATbits.SMP = 0;
  3687  0285  1683               	bsf	3,5	;RP0=1, select bank1
  3688  0286  1303               	bcf	3,6	;RP1=0, select bank1
  3689  0287  1394               	bcf	20,7	;volatile
  3690                           
  3691                           ;SPI_SPI.c: 80:     SSPCONbits.SSPEN = 1;
  3692  0288  1283               	bcf	3,5	;RP0=0, select bank0
  3693  0289  1303               	bcf	3,6	;RP1=0, select bank0
  3694  028A  1694               	bsf	20,5	;volatile
  3695  028B                     l298:
  3696  028B  0008               	return
  3697  028C                     __end_of_SPI_Maestro_Init:
  3698                           
  3699                           	psect	text22
  3700  068F                     __ptext22:	
  3701 ;; *************** function _SPI_Recibir *****************
  3702 ;; Defined at:
  3703 ;;		line 167 in file "SPI_SPI.c"
  3704 ;; Parameters:    Size  Location     Type
  3705 ;;		None
  3706 ;; Auto vars:     Size  Location     Type
  3707 ;;		None
  3708 ;; Return value:  Size  Location     Type
  3709 ;;                  1    wreg      unsigned char 
  3710 ;; Registers used:
  3711 ;;		wreg
  3712 ;; Tracked objects:
  3713 ;;		On entry : 0/0
  3714 ;;		On exit  : 0/0
  3715 ;;		Unchanged: 0/0
  3716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3717 ;;      Params:         0       0       0       0       0
  3718 ;;      Locals:         0       0       0       0       0
  3719 ;;      Temps:          0       0       0       0       0
  3720 ;;      Totals:         0       0       0       0       0
  3721 ;;Total ram usage:        0 bytes
  3722 ;; Hardware stack levels used:    1
  3723 ;; Hardware stack levels required when called:    1
  3724 ;; This function calls:
  3725 ;;		Nothing
  3726 ;; This function is called by:
  3727 ;;		_main
  3728 ;; This function uses a non-reentrant model
  3729 ;;
  3730                           
  3731                           
  3732                           ;psect for function _SPI_Recibir
  3733  068F                     _SPI_Recibir:
  3734  068F                     l1663:	
  3735                           ;incstack = 0
  3736                           ; Regs used in _SPI_Recibir: [wreg]
  3737                           
  3738                           
  3739                           ;SPI_SPI.c: 169:     return SSPBUF;
  3740  068F  1283               	bcf	3,5	;RP0=0, select bank0
  3741  0690  1303               	bcf	3,6	;RP1=0, select bank0
  3742  0691  0813               	movf	19,w	;volatile
  3743  0692                     l321:
  3744  0692  0008               	return
  3745  0693                     __end_of_SPI_Recibir:
  3746                           
  3747                           	psect	text23
  3748  0683                     __ptext23:	
  3749 ;; *************** function _SPI_Enviar *****************
  3750 ;; Defined at:
  3751 ;;		line 161 in file "SPI_SPI.c"
  3752 ;; Parameters:    Size  Location     Type
  3753 ;;  valor           1    wreg     unsigned char 
  3754 ;; Auto vars:     Size  Location     Type
  3755 ;;  valor           1    2[COMMON] unsigned char 
  3756 ;; Return value:  Size  Location     Type
  3757 ;;                  1    wreg      void 
  3758 ;; Registers used:
  3759 ;;		wreg
  3760 ;; Tracked objects:
  3761 ;;		On entry : 0/0
  3762 ;;		On exit  : 0/0
  3763 ;;		Unchanged: 0/0
  3764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3765 ;;      Params:         0       0       0       0       0
  3766 ;;      Locals:         1       0       0       0       0
  3767 ;;      Temps:          0       0       0       0       0
  3768 ;;      Totals:         1       0       0       0       0
  3769 ;;Total ram usage:        1 bytes
  3770 ;; Hardware stack levels used:    1
  3771 ;; Hardware stack levels required when called:    1
  3772 ;; This function calls:
  3773 ;;		Nothing
  3774 ;; This function is called by:
  3775 ;;		_main
  3776 ;; This function uses a non-reentrant model
  3777 ;;
  3778                           
  3779                           
  3780                           ;psect for function _SPI_Enviar
  3781  0683                     _SPI_Enviar:
  3782                           
  3783                           ;incstack = 0
  3784                           ; Regs used in _SPI_Enviar: [wreg]
  3785                           ;SPI_Enviar@valor stored from wreg
  3786  0683  00F2               	movwf	SPI_Enviar@valor
  3787  0684                     l1661:
  3788                           
  3789                           ;SPI_SPI.c: 161: void SPI_Enviar (char valor);SPI_SPI.c: 162: {;SPI_SPI.c: 163:     SSPB
      +                          UF = valor;
  3790  0684  0872               	movf	SPI_Enviar@valor,w
  3791  0685  1283               	bcf	3,5	;RP0=0, select bank0
  3792  0686  1303               	bcf	3,6	;RP1=0, select bank0
  3793  0687  0093               	movwf	19	;volatile
  3794  0688                     l318:
  3795  0688  0008               	return
  3796  0689                     __end_of_SPI_Enviar:
  3797                           
  3798                           	psect	text24
  3799  0414                     __ptext24:	
  3800 ;; *************** function _Lcd_Init *****************
  3801 ;; Defined at:
  3802 ;;		line 37 in file "LCD_SPI.c"
  3803 ;; Parameters:    Size  Location     Type
  3804 ;;		None
  3805 ;; Auto vars:     Size  Location     Type
  3806 ;;		None
  3807 ;; Return value:  Size  Location     Type
  3808 ;;                  1    wreg      void 
  3809 ;; Registers used:
  3810 ;;		wreg, status,2, status,0, pclath, cstack
  3811 ;; Tracked objects:
  3812 ;;		On entry : 0/0
  3813 ;;		On exit  : 0/0
  3814 ;;		Unchanged: 0/0
  3815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3816 ;;      Params:         0       0       0       0       0
  3817 ;;      Locals:         0       0       0       0       0
  3818 ;;      Temps:          2       0       0       0       0
  3819 ;;      Totals:         2       0       0       0       0
  3820 ;;Total ram usage:        2 bytes
  3821 ;; Hardware stack levels used:    1
  3822 ;; Hardware stack levels required when called:    3
  3823 ;; This function calls:
  3824 ;;		_Lcd_Cmd
  3825 ;;		_Lcd_Port
  3826 ;; This function is called by:
  3827 ;;		_main
  3828 ;; This function uses a non-reentrant model
  3829 ;;
  3830                           
  3831                           
  3832                           ;psect for function _Lcd_Init
  3833  0414                     _Lcd_Init:
  3834  0414                     l1635:	
  3835                           ;incstack = 0
  3836                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3837                           
  3838                           
  3839                           ;LCD_SPI.c: 39:     Lcd_Port(0b0000000);
  3840  0414  3000               	movlw	0
  3841  0415  120A  118A  2689  120A  118A  	fcall	_Lcd_Port
  3842  041A                     l1637:
  3843                           
  3844                           ;LCD_SPI.c: 40:     _delay((unsigned long)((20)*(8000000/4000.0)));
  3845  041A  3034               	movlw	52
  3846  041B  00F7               	movwf	??_Lcd_Init+1
  3847  041C  30F1               	movlw	241
  3848  041D  00F6               	movwf	??_Lcd_Init
  3849  041E                     u797:
  3850  041E  0BF6               	decfsz	??_Lcd_Init,f
  3851  041F  2C1E               	goto	u797
  3852  0420  0BF7               	decfsz	??_Lcd_Init+1,f
  3853  0421  2C1E               	goto	u797
  3854  0422  2C23               	nop2
  3855  0423                     l1639:
  3856                           
  3857                           ;LCD_SPI.c: 41:     Lcd_Cmd(0b00110000);
  3858  0423  3030               	movlw	48
  3859  0424  120A  118A  25E1  120A  118A  	fcall	_Lcd_Cmd
  3860  0429                     l1641:
  3861                           
  3862                           ;LCD_SPI.c: 42:     PORTEbits.RE0 = 0;
  3863  0429  1283               	bcf	3,5	;RP0=0, select bank0
  3864  042A  1303               	bcf	3,6	;RP1=0, select bank0
  3865  042B  1009               	bcf	9,0	;volatile
  3866  042C                     l1643:
  3867                           
  3868                           ;LCD_SPI.c: 43:     PORTEbits.RE2 = 0;
  3869  042C  1109               	bcf	9,2	;volatile
  3870                           
  3871                           ;LCD_SPI.c: 44:     _delay((unsigned long)((5)*(8000000/4000.0)));
  3872  042D  300D               	movlw	13
  3873  042E  00F7               	movwf	??_Lcd_Init+1
  3874  042F  30FB               	movlw	251
  3875  0430  00F6               	movwf	??_Lcd_Init
  3876  0431                     u807:
  3877  0431  0BF6               	decfsz	??_Lcd_Init,f
  3878  0432  2C31               	goto	u807
  3879  0433  0BF7               	decfsz	??_Lcd_Init+1,f
  3880  0434  2C31               	goto	u807
  3881  0435  2C36               	nop2
  3882  0436                     l1645:
  3883                           
  3884                           ;LCD_SPI.c: 45:     Lcd_Cmd(0b00110000);
  3885  0436  3030               	movlw	48
  3886  0437  120A  118A  25E1  120A  118A  	fcall	_Lcd_Cmd
  3887  043C                     l1647:
  3888                           
  3889                           ;LCD_SPI.c: 46:      PORTEbits.RE0 = 0;
  3890  043C  1283               	bcf	3,5	;RP0=0, select bank0
  3891  043D  1303               	bcf	3,6	;RP1=0, select bank0
  3892  043E  1009               	bcf	9,0	;volatile
  3893  043F                     l1649:
  3894                           
  3895                           ;LCD_SPI.c: 47:     PORTEbits.RE2 = 0;
  3896  043F  1109               	bcf	9,2	;volatile
  3897  0440                     l1651:
  3898                           
  3899                           ;LCD_SPI.c: 48:     _delay((unsigned long)((11)*(8000000/4000.0)));
  3900  0440  301D               	movlw	29
  3901  0441  00F7               	movwf	??_Lcd_Init+1
  3902  0442  3091               	movlw	145
  3903  0443  00F6               	movwf	??_Lcd_Init
  3904  0444                     u817:
  3905  0444  0BF6               	decfsz	??_Lcd_Init,f
  3906  0445  2C44               	goto	u817
  3907  0446  0BF7               	decfsz	??_Lcd_Init+1,f
  3908  0447  2C44               	goto	u817
  3909                           
  3910                           ;LCD_SPI.c: 49:     Lcd_Cmd(0b00110000);
  3911  0448  3030               	movlw	48
  3912  0449  120A  118A  25E1  120A  118A  	fcall	_Lcd_Cmd
  3913  044E                     l1653:
  3914                           
  3915                           ;LCD_SPI.c: 50:     PORTEbits.RE0 = 0;
  3916  044E  1283               	bcf	3,5	;RP0=0, select bank0
  3917  044F  1303               	bcf	3,6	;RP1=0, select bank0
  3918  0450  1009               	bcf	9,0	;volatile
  3919  0451                     l1655:
  3920                           
  3921                           ;LCD_SPI.c: 51:     PORTEbits.RE2 = 0;
  3922  0451  1109               	bcf	9,2	;volatile
  3923                           
  3924                           ;LCD_SPI.c: 52:     Lcd_Cmd(0b00111000);
  3925  0452  3038               	movlw	56
  3926  0453  120A  118A  25E1  120A  118A  	fcall	_Lcd_Cmd
  3927                           
  3928                           ;LCD_SPI.c: 53:     Lcd_Cmd(0b00001100);
  3929  0458  300C               	movlw	12
  3930  0459  120A  118A  25E1  120A  118A  	fcall	_Lcd_Cmd
  3931                           
  3932                           ;LCD_SPI.c: 54:     Lcd_Cmd(0b00000001);
  3933  045E  3001               	movlw	1
  3934  045F  120A  118A  25E1  120A  118A  	fcall	_Lcd_Cmd
  3935                           
  3936                           ;LCD_SPI.c: 55:     Lcd_Cmd(0b00000110);
  3937  0464  3006               	movlw	6
  3938  0465  120A  118A  25E1  120A  118A  	fcall	_Lcd_Cmd
  3939  046A                     l247:
  3940  046A  0008               	return
  3941  046B                     __end_of_Lcd_Init:
  3942                           
  3943                           	psect	text25
  3944  05E1                     __ptext25:	
  3945 ;; *************** function _Lcd_Cmd *****************
  3946 ;; Defined at:
  3947 ;;		line 28 in file "LCD_SPI.c"
  3948 ;; Parameters:    Size  Location     Type
  3949 ;;  a               1    wreg     unsigned char 
  3950 ;; Auto vars:     Size  Location     Type
  3951 ;;  a               1    5[COMMON] unsigned char 
  3952 ;; Return value:  Size  Location     Type
  3953 ;;                  1    wreg      void 
  3954 ;; Registers used:
  3955 ;;		wreg, status,2, status,0, pclath, cstack
  3956 ;; Tracked objects:
  3957 ;;		On entry : 0/0
  3958 ;;		On exit  : 0/0
  3959 ;;		Unchanged: 0/0
  3960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3961 ;;      Params:         0       0       0       0       0
  3962 ;;      Locals:         1       0       0       0       0
  3963 ;;      Temps:          2       0       0       0       0
  3964 ;;      Totals:         3       0       0       0       0
  3965 ;;Total ram usage:        3 bytes
  3966 ;; Hardware stack levels used:    1
  3967 ;; Hardware stack levels required when called:    2
  3968 ;; This function calls:
  3969 ;;		_Lcd_Port
  3970 ;; This function is called by:
  3971 ;;		_Lcd_Init
  3972 ;;		_Lcd_Set_Cursor
  3973 ;;		_Lcd_Clear
  3974 ;;		_Lcd_Shift_Left
  3975 ;;		_Lcd_Shift_Right
  3976 ;; This function uses a non-reentrant model
  3977 ;;
  3978                           
  3979                           
  3980                           ;psect for function _Lcd_Cmd
  3981  05E1                     _Lcd_Cmd:
  3982                           
  3983                           ;incstack = 0
  3984                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3985                           ;Lcd_Cmd@a stored from wreg
  3986  05E1  00F5               	movwf	Lcd_Cmd@a
  3987  05E2                     l1395:
  3988                           
  3989                           ;LCD_SPI.c: 28: void Lcd_Cmd (char a);LCD_SPI.c: 29: {;LCD_SPI.c: 30:     PORTEbits.RE0 
      +                          = 0;
  3990  05E2  1283               	bcf	3,5	;RP0=0, select bank0
  3991  05E3  1303               	bcf	3,6	;RP1=0, select bank0
  3992  05E4  1009               	bcf	9,0	;volatile
  3993  05E5                     l1397:
  3994                           
  3995                           ;LCD_SPI.c: 31:     Lcd_Port(a);
  3996  05E5  0875               	movf	Lcd_Cmd@a,w
  3997  05E6  120A  118A  2689  120A  118A  	fcall	_Lcd_Port
  3998  05EB                     l1399:
  3999                           
  4000                           ;LCD_SPI.c: 32:     PORTEbits.RE1 = 1;
  4001  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  4002  05EC  1303               	bcf	3,6	;RP1=0, select bank0
  4003  05ED  1489               	bsf	9,1	;volatile
  4004  05EE                     l1401:
  4005                           
  4006                           ;LCD_SPI.c: 33:     _delay((unsigned long)((5)*(8000000/4000.0)));
  4007  05EE  300D               	movlw	13
  4008  05EF  00F4               	movwf	??_Lcd_Cmd+1
  4009  05F0  30FB               	movlw	251
  4010  05F1  00F3               	movwf	??_Lcd_Cmd
  4011  05F2                     u827:
  4012  05F2  0BF3               	decfsz	??_Lcd_Cmd,f
  4013  05F3  2DF2               	goto	u827
  4014  05F4  0BF4               	decfsz	??_Lcd_Cmd+1,f
  4015  05F5  2DF2               	goto	u827
  4016  05F6  2DF7               	nop2
  4017  05F7                     l1403:
  4018                           
  4019                           ;LCD_SPI.c: 34:     PORTEbits.RE1 = 0;
  4020  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  4021  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  4022  05F9  1089               	bcf	9,1	;volatile
  4023  05FA                     l244:
  4024  05FA  0008               	return
  4025  05FB                     __end_of_Lcd_Cmd:
  4026                           
  4027                           	psect	text26
  4028  0689                     __ptext26:	
  4029 ;; *************** function _Lcd_Port *****************
  4030 ;; Defined at:
  4031 ;;		line 23 in file "LCD_SPI.c"
  4032 ;; Parameters:    Size  Location     Type
  4033 ;;  a               1    wreg     unsigned char 
  4034 ;; Auto vars:     Size  Location     Type
  4035 ;;  a               1    2[COMMON] unsigned char 
  4036 ;; Return value:  Size  Location     Type
  4037 ;;                  1    wreg      void 
  4038 ;; Registers used:
  4039 ;;		wreg
  4040 ;; Tracked objects:
  4041 ;;		On entry : 0/0
  4042 ;;		On exit  : 0/0
  4043 ;;		Unchanged: 0/0
  4044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4045 ;;      Params:         0       0       0       0       0
  4046 ;;      Locals:         1       0       0       0       0
  4047 ;;      Temps:          0       0       0       0       0
  4048 ;;      Totals:         1       0       0       0       0
  4049 ;;Total ram usage:        1 bytes
  4050 ;; Hardware stack levels used:    1
  4051 ;; Hardware stack levels required when called:    1
  4052 ;; This function calls:
  4053 ;;		Nothing
  4054 ;; This function is called by:
  4055 ;;		_Lcd_Cmd
  4056 ;;		_Lcd_Init
  4057 ;;		_Lcd_Write_Char
  4058 ;; This function uses a non-reentrant model
  4059 ;;
  4060                           
  4061                           
  4062                           ;psect for function _Lcd_Port
  4063  0689                     _Lcd_Port:
  4064                           
  4065                           ;incstack = 0
  4066                           ; Regs used in _Lcd_Port: [wreg]
  4067                           ;Lcd_Port@a stored from wreg
  4068  0689  00F2               	movwf	Lcd_Port@a
  4069  068A                     l1359:
  4070                           
  4071                           ;LCD_SPI.c: 23: void Lcd_Port (char a);LCD_SPI.c: 24: {;LCD_SPI.c: 25:     PORTD = a;
  4072  068A  0872               	movf	Lcd_Port@a,w
  4073  068B  1283               	bcf	3,5	;RP0=0, select bank0
  4074  068C  1303               	bcf	3,6	;RP1=0, select bank0
  4075  068D  0088               	movwf	8	;volatile
  4076  068E                     l241:
  4077  068E  0008               	return
  4078  068F                     __end_of_Lcd_Port:
  4079                           
  4080                           	psect	text27
  4081  062D                     __ptext27:	
  4082 ;; *************** function _ISR *****************
  4083 ;; Defined at:
  4084 ;;		line 112 in file "MAESTRO_SPI.c"
  4085 ;; Parameters:    Size  Location     Type
  4086 ;;		None
  4087 ;; Auto vars:     Size  Location     Type
  4088 ;;		None
  4089 ;; Return value:  Size  Location     Type
  4090 ;;                  1    wreg      void 
  4091 ;; Registers used:
  4092 ;;		wreg
  4093 ;; Tracked objects:
  4094 ;;		On entry : 0/0
  4095 ;;		On exit  : 0/0
  4096 ;;		Unchanged: 0/0
  4097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4098 ;;      Params:         0       0       0       0       0
  4099 ;;      Locals:         0       0       0       0       0
  4100 ;;      Temps:          2       0       0       0       0
  4101 ;;      Totals:         2       0       0       0       0
  4102 ;;Total ram usage:        2 bytes
  4103 ;; Hardware stack levels used:    1
  4104 ;; This function calls:
  4105 ;;		Nothing
  4106 ;; This function is called by:
  4107 ;;		Interrupt level 1
  4108 ;; This function uses a non-reentrant model
  4109 ;;
  4110                           
  4111                           
  4112                           ;psect for function _ISR
  4113  062D                     _ISR:
  4114  062D                     i1l1239:
  4115                           
  4116                           ;MAESTRO_SPI.c: 114:     if (INTCONbits.TMR0IF == 1)
  4117  062D  1D0B               	btfss	11,2	;volatile
  4118  062E  2E30               	goto	u30_21
  4119  062F  2E31               	goto	u30_20
  4120  0630                     u30_21:
  4121  0630  2E36               	goto	i1l156
  4122  0631                     u30_20:
  4123  0631                     i1l1241:
  4124                           
  4125                           ;MAESTRO_SPI.c: 115:     {;MAESTRO_SPI.c: 116:         INTCONbits.TMR0IF = 0;
  4126  0631  110B               	bcf	11,2	;volatile
  4127  0632                     i1l1243:
  4128                           
  4129                           ;MAESTRO_SPI.c: 117:         TMR0 = 100;
  4130  0632  3064               	movlw	100
  4131  0633  1283               	bcf	3,5	;RP0=0, select bank0
  4132  0634  1303               	bcf	3,6	;RP1=0, select bank0
  4133  0635  0081               	movwf	1	;volatile
  4134  0636                     i1l156:
  4135  0636  0871               	movf	??_ISR+1,w
  4136  0637  008A               	movwf	10
  4137  0638  0E70               	swapf	??_ISR,w
  4138  0639  0083               	movwf	3
  4139  063A  0EFE               	swapf	btemp,f
  4140  063B  0E7E               	swapf	btemp,w
  4141  063C  0009               	retfie
  4142  063D                     __end_of_ISR:
  4143  007E                     btemp	set	126	;btemp
  4144  007E                     wtemp0	set	126
  4145                           
  4146                           	psect	intentry
  4147  0004                     __pintentry:	
  4148                           ;incstack = 0
  4149                           ; Regs used in _ISR: [wreg]
  4150                           
  4151  0004                     interrupt_function:
  4152  007E                     saved_w	set	btemp
  4153  0004  00FE               	movwf	btemp
  4154  0005  0E03               	swapf	3,w
  4155  0006  00F0               	movwf	??_ISR
  4156  0007  080A               	movf	10,w
  4157  0008  00F1               	movwf	??_ISR+1
  4158  0009  120A  118A  2E2D   	ljmp	_ISR
  4159                           
  4160                           	psect	config
  4161                           
  4162                           ;Config register CONFIG1 @ 0x2007
  4163                           ;	Oscillator Selection bits
  4164                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4165                           ;	Watchdog Timer Enable bit
  4166                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4167                           ;	Power-up Timer Enable bit
  4168                           ;	PWRTE = OFF, PWRT disabled
  4169                           ;	RE3/MCLR pin function select bit
  4170                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4171                           ;	Code Protection bit
  4172                           ;	CP = OFF, Program memory code protection is disabled
  4173                           ;	Data Code Protection bit
  4174                           ;	CPD = OFF, Data memory code protection is disabled
  4175                           ;	Brown Out Reset Selection bits
  4176                           ;	BOREN = OFF, BOR disabled
  4177                           ;	Internal External Switchover bit
  4178                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4179                           ;	Fail-Safe Clock Monitor Enabled bit
  4180                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4181                           ;	Low Voltage Programming Enable bit
  4182                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4183                           ;	In-Circuit Debugger Mode bit
  4184                           ;	DEBUG = 0x1, unprogrammed default
  4185  2007                     	org	8199
  4186  2007  20D4               	dw	8404
  4187                           
  4188                           ;Config register CONFIG2 @ 0x2008
  4189                           ;	Brown-out Reset Selection bit
  4190                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4191                           ;	Flash Program Memory Self Write Enable bits
  4192                           ;	WRT = OFF, Write protection off
  4193  2008                     	org	8200
  4194  2008  3FFF               	dw	16383

Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         31
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     10      39
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _lcd->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Conversion3->___awmod
    _virtual_display3->_escribir_char
    _Conversion2->___awmod
    _virtual_display2->_escribir_char
    _Conversion1->___awmod
    _virtual_display1->_escribir_char
    _Lcd_Write_Char->_Lcd_Port
    _SPI_config->_SPI_Maestro_Init
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_lcd
    _lcd->_Conversion1
    _lcd->_Conversion2
    _lcd->_Conversion3
    _Conversion3->___awdiv
    _Conversion2->___awdiv
    _Conversion1->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    7262
                                              8 BANK0      2     2      0
                           _Lcd_Init
                         _SPI_Enviar
                        _SPI_Recibir
                         _SPI_config
                       _USART_config
                    _interrup_config
                                _lcd
                         _osc_config
                              _setup
                        _tmr0_config
 ---------------------------------------------------------------------------------
 (1) _tmr0_config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _osc_config                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd                                                  1     1      0    7054
                                              7 BANK0      1     1      0
                        _Conversion1
                        _Conversion2
                        _Conversion3
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     3     3      0     167
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       4     3      1     482
                                              6 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Conversion3                                          3     3      0    2135
                                              4 BANK0      3     3      0
                     _Lcd_Write_Char
                            ___awdiv
                            ___awmod
                   _virtual_display3
 ---------------------------------------------------------------------------------
 (3) _virtual_display3                                     0     0      0      22
                      _escribir_char
 ---------------------------------------------------------------------------------
 (2) _Conversion2                                          3     3      0    2135
                                              4 BANK0      3     3      0
                     _Lcd_Write_Char
                            ___awdiv
                            ___awmod
                   _virtual_display2
 ---------------------------------------------------------------------------------
 (3) _virtual_display2                                     0     0      0      22
                      _escribir_char
 ---------------------------------------------------------------------------------
 (2) _Conversion1                                          3     3      0    2135
                                              4 BANK0      3     3      0
                     _Lcd_Write_Char
                            ___awdiv
                            ___awmod
                   _virtual_display1
 ---------------------------------------------------------------------------------
 (3) _virtual_display1                                     0     0      0      22
                      _escribir_char
 ---------------------------------------------------------------------------------
 (4) _escribir_char                                        1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     904
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1165
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      44
                                              3 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _interrup_config                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_config                                         0     0      0       0
                   _USART_lib_config
 ---------------------------------------------------------------------------------
 (2) _USART_lib_config                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_config                                           1     1      0     120
                                              6 COMMON     1     1      0
                   _SPI_Maestro_Init
 ---------------------------------------------------------------------------------
 (2) _SPI_Maestro_Init                                     4     3      1     120
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _SPI_Recibir                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Enviar                                           1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      44
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _SPI_Enviar
   _SPI_Recibir
   _SPI_config
     _SPI_Maestro_Init
   _USART_config
     _USART_lib_config
   _interrup_config
   _lcd
     _Conversion1
       _Lcd_Write_Char
         _Lcd_Port
       ___awdiv
       ___awmod
       _virtual_display1
         _escribir_char
     _Conversion2
       _Lcd_Write_Char
         _Lcd_Port
       ___awdiv
       ___awmod
       _virtual_display2
         _escribir_char
     _Conversion3
       _Lcd_Write_Char
         _Lcd_Port
       ___awdiv
       ___awmod
       _virtual_display3
         _escribir_char
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
   _osc_config
   _setup
   _tmr0_config

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      33       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      A      27       5       48.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      33      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Feb 18 00:40:09 2021

              _SPI_Recibir 068F            SPI_Enviar@valor 0072                          _a 0026  
                        pc 0002                _SSPSTATbits 0094               ___awdiv@sign 003E  
                       _w1 0028                         _w2 0027                         _x1 003B  
                       _x2 0039                         _y1 003A                         _y2 0038  
               _SPI_config 0656     __size_of_escribir_char 000A                         fsr 0004  
                      l201 03BA                        l211 050E                        l230 05E0  
                      l214 0670                        l207 0177                        l241 068E  
                      l321 0692                        l217 0674                        l170 0655  
                      l244 05FA                        l173 066A                        l318 0688  
                      l182 0660                        l262 059E                        l247 046A  
                      l271 062C                        l167 0579                        l256 05C2  
                      l176 0649                        l185 054B                        l290 022D  
                      l194 0357                        l291 0234                        l179 0682  
                      l188 0206                        l293 0257                        l285 0211  
                      l197 04C0                        l294 0285                        l295 025D  
                      l287 0218                        l296 0263                        l288 021F  
                      l560 02F4                        l297 0269                        l289 0226  
                      l298 028B                        l573 0413    __end_of_interrup_config 0656  
                      u310 0674                        u311 0673                        u320 0360  
                      u321 035F                        u330 00E1                        u331 00E0  
                      u500 03E8                        u340 00E7                        u501 03E7  
                      u341 00E6                        u510 03F2                        u350 04C9  
                      u511 03F1                        u351 04C8                        u600 0293  
                      u601 0292                        u610 029E                        u530 0405  
                      u611 029D                        u531 0404                        u515 03EE  
                      u620 02AF                        u540 040A                        u460 03C0  
                      u700 02FB                        _ISR 062D                        u621 02AE  
                      u541 0409                        u525 03F9                        u461 03BF  
                      u701 02FA                        u470 03CB                        u710 0314  
                      u550 05A5                        u471 03CA                        u711 0313  
                      u551 05A4                        u640 02C1                        u480 03D6  
                      u560 05B7                        u641 02C0                        u481 03D5  
                      u561 05B6                        u570 059E                        u635 02B3  
                      u571 059D                        u660 02D2                        u661 02D1  
                      u807 0431                        u655 02C2                        u495 03DA  
                      u727 004A                        u680 02E6                        u817 0444  
                      u681 02E5                        u665 02CE                        u737 0066  
                      u690 02EB                        u827 05F2                        u691 02EA  
                      u675 02DA                        u747 0074                        u757 008E  
                      u767 009C                        u777 00B8                        u787 0626  
                      u797 041E           _USART_lib_config 05C3                        _x1y 002E  
                      _x1z 0035                        _x2y 002C                        _x2z 0033  
                      _y1y 002D                        _y1z 0034                        _y2y 002B  
                      _y2z 0032                        _lcd 050F              ??_Conversion1 0041  
            ??_Conversion2 0041              ??_Conversion3 0041                        fsr0 0004  
                      indf 0000               ___awmod@sign 0078                       ?_ISR 0070  
                     l1401 05EE                       l1403 05F7                       l1501 05CD  
                     l1511 05D4                       l1503 05CE                       l1521 05D9  
                     l1513 05D5                       l1505 05CF                       l1361 0618  
                     l1531 023B                       l1523 05DA                       l1515 05D6  
                     l1507 05D2                       l1363 061B                       l1451 03BC  
                     l1371 0358                       l1525 05DD                       l1517 05D7  
                     l1509 05D3                       l1365 0621                       l1461 03D0  
                     l1453 03C0                       l1357 066C                       l1373 0360  
                     l1381 00E7                       l1621 056B                       l1613 054C  
                     l1359 068A                       l1535 026F                       l1527 0208  
                     l1519 05D8                       l1367 0624                       l1471 03E8  
                     l1463 03D6                       l1455 03C5                       l1375 03B7  
                     l1383 012A                       l1391 04C9                       l1551 05B1  
                     l1623 056C                       l1615 0564                       l1631 063D  
                     l1641 0429                       l1369 0629                       l1801 02BD  
                     l1481 040A                       l1473 03F2                       l1465 03D9  
                     l1457 03C7                       l1449 03BB                       l1385 012E  
                     l1377 00D9                       l1393 050B                       l1553 05B7  
                     l1545 05A0                       l1561 058B                       l1625 0661  
                     l1617 0567                       l1633 0645                       l1395 05E2  
                     l1651 0440                       l1643 042C                       l1635 0414  
                     l1491 05C8                       l1627 064A                       l1811 02E0  
                     l1803 02C1                       l1483 040F                       l1475 03F8  
                     l1467 03E0                       l1459 03CB                       l1379 00E1  
                     l1555 05BC                       l1547 05A5                       l1563 0591  
                     l1619 0568                       l1397 05E5                       l1653 044E  
                     l1645 0436                       l1637 041A                       l1661 0684  
                     l1493 05C9                       l1629 0652                       l1805 02D2  
                     l1813 02E6                       l1477 03FF                       l1469 03E4  
                     l1821 0178                       l1389 04C1                       l1549 05AA  
                     l1557 057B                       l1901 0056                       l1399 05EB  
                     l1655 0451                       l1647 043C                       l1639 0423  
                     l1663 068F                       l1495 05CA                       l1487 05C3  
                     l1815 02EB                       l1807 02D8                       l1479 0405  
                     l1831 01D8                       l1823 0180                       l1559 057E  
                     l1911 0078                       l1903 0060                       l1649 043F  
                     l1497 05CB                       l1489 05C7                       l1657 067D  
                     l1817 02F0                       l1809 02D9                       l1841 01FB  
                     l1833 01DC                       l1825 0196                       l1921 0096  
                     l1913 007E                       l1905 006A                       ?_lcd 0070  
                     l1659 0656                       l1499 05CC                       l1843 0201  
                     l1835 01E3                       l1827 01AC                       l1851 0314  
                     l1931 00BF                       l1923 00A0                       l1915 0088  
                     l1907 006D                       l1781 0293                       l1837 01E9  
                     l1829 01C2                       l1845 02F5                       l1861 04A6  
                     l1853 046B                       l1925 00A8                       l1917 0092  
                     l1909 006E                       l1791 02A7                       l1783 0298  
                     l1839 01F2                       l1847 02FB                       l1863 04AF  
                     l1855 0473                       l1871 0517                       l1927 00B2  
                     l1919 0095                       l1793 02A9                       l1785 029A  
                     l1777 028C                       l1849 030E                       l1865 04B5  
                     l1857 0489                       l1881 053A                       l1873 051D  
                     l1929 00BC                       l1795 02AF                       l1787 029E  
                     l1779 028F                       l1867 04BB                       l1859 049F  
                     l1883 0546                       l1875 0524                       l1891 0037  
                     l1973 0243                       l1797 02B2                       l1789 02A3  
                     l1877 0529                       l1869 050F                       l1893 003C  
                     l1885 001E                       l1975 0277                       l1799 02B9  
                     l1879 0535                       l1895 0041                       l1887 002D  
                     l1897 0044                       l1889 0032                       l1899 004E  
                     STR_1 0606                       _IOCB 0096                       _TMR0 0001  
        ?_Lcd_Write_String 0070                       _main 001E                       _leer 002A  
                     btemp 007E                       start 000C         ??_Lcd_Write_String 0075  
          __end_of_Lcd_Cmd 05FB                      ??_ISR 0070                      ??_lcd 0044  
                    ?_main 0070            __end_of___awdiv 02F5            __end_of___awmod 0414  
                    _ANSEL 0188            ___awdiv@divisor 0072                      i1l156 0636  
          ___awdiv@counter 003D                      u30_20 0631                      u30_21 0630  
                    _SPBRG 0099                      _PORTA 0005                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008                      _PORTE 0009  
  __size_of_Lcd_Set_Cursor 0024                      _TRISA 0085                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088                      _TRISE 0089  
                    _TXREG 0019                      _setup 054C        __end_of_Conversion1 0207  
      __end_of_Conversion2 0358        __end_of_Conversion3 04C1              _escribir_char 066B  
                    pclath 000A                      status 0003                      wtemp0 007E  
         __end_of_Lcd_Init 046B           __end_of_Lcd_Port 068F                ?_SPI_Enviar 0070  
          __initialization 000F               __end_of_main 00D9        SPI_Maestro_Init@SCK 0072  
              ?_SPI_config 0070                     ??_main 0045           ?_interrup_config 0070  
 __end_of_virtual_display1 03BB   __end_of_virtual_display2 0178               ?_tmr0_config 0070  
 __end_of_virtual_display3 050F   __end_of_SPI_Maestro_Init 028C           ___awdiv@dividend 0074  
           ?_escribir_char 0070                     ?_setup 0070                     _ANSELH 0189  
                   i1l1241 0631                     i1l1243 0632                     i1l1239 062D  
                ??_Lcd_Cmd 0073    __size_of_Lcd_Write_Char 0016                     _SSPBUF 0013  
                ??___awdiv 0076                  ??___awmod 0076           ___awdiv@quotient 003F  
          ___awmod@divisor 0072            ___awmod@counter 0077                     _unidad 003C  
              _Conversion1 0178                _Conversion2 02F5                _Conversion3 046B  
                   saved_w 007E        __size_of_SPI_Enviar 0006            Lcd_Set_Cursor@a 0078  
          Lcd_Set_Cursor@b 0076    __end_of__initialization 001A        __size_of_SPI_config 000B  
 __end_of_USART_lib_config 05E1               ?_SPI_Recibir 0070             __pcstackCOMMON 0070  
            __end_of_setup 057A             _Lcd_Set_Cursor 059F             _OPTION_REGbits 0081  
          ??_escribir_char 0072                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
                  ??_setup 0072                 __pbssBANK0 0020                 __pmaintext 001E  
               _dato_push1 0021                 __pintentry 0004  __size_of_Lcd_Write_String 0025  
   __end_of_Lcd_Set_Cursor 05C3                 ??_Lcd_Init 0076                 ??_Lcd_Port 0072  
     __size_of_tmr0_config 000D                 __stringtab 0600             _Lcd_Write_Char 0617  
                  _Lcd_Cmd 05E1               ??_SPI_Enviar 0072                    ___awdiv 028C  
                  ___awmod 03BB               ??_SPI_config 0076                    _decenay 0031  
          ?_Lcd_Set_Cursor 0076                    __ptext1 063D                    __ptext2 054C  
                  __ptext3 0661                    __ptext4 050F                    __ptext5 057A  
                  __ptext6 059F                    __ptext7 046B                    __ptext8 04C1  
                  __ptext9 02F5               __size_of_ISR 0010               __size_of_lcd 003D  
         ___awmod@dividend 0074          ?_virtual_display1 0070          ?_virtual_display2 0070  
        ?_virtual_display3 0070          ?_SPI_Maestro_Init 0072                    _unidady 002F  
                  _unidadz 0036         __end_of_SPI_Enviar 0689         ??_virtual_display1 0073  
       ??_virtual_display2 0073         ??_virtual_display3 0073                    clrloop0 0676  
       ??_SPI_Maestro_Init 0073                    _voltaje 007B     __end_of_Lcd_Write_Char 062D  
     end_of_initialization 001A                 _osc_config 0661         __end_of_SPI_config 0661  
                _RCSTAbits 0018                  Lcd_Port@a 0072       __size_of_SPI_Recibir 0004  
               _velocidad1 0025                 _velocidad2 0024                 _velocidad3 0023  
                _PORTCbits 0007                  _PORTEbits 0009               ?_Conversion1 0070  
             ?_Conversion2 0070               ?_Conversion3 0070                  _TRISAbits 0085  
                _TRISCbits 0087            ?_Lcd_Write_Char 0070   __size_of_interrup_config 000C  
        Lcd_Write_String@a 0077          Lcd_Write_String@i 0075                  _TXSTAbits 0098  
        ?_USART_lib_config 0070              ?_USART_config 0070         ??_USART_lib_config 0072  
         _Lcd_Write_String 057A        start_initialization 000F                __end_of_ISR 063D  
              __end_of_lcd 054C          __size_of_Lcd_Init 0057          __size_of_Lcd_Port 0006  
              ?_osc_config 0070             ??_USART_config 0072            Lcd_Write_Char@a 0074  
              __pbssCOMMON 007A                  ___latbits 0002              __pcstackBANK0 003D  
    __end_of_escribir_char 0675                   ?_Lcd_Cmd 0070          ??_interrup_config 0072  
                _dato_push 007A           ??_Lcd_Set_Cursor 0077                   ?___awdiv 0072  
                 ?___awmod 0072                  __pstrings 0600              _dato_semaforo 0020  
      __size_of_osc_config 000A              ??_tmr0_config 0072       __size_of_Conversion1 008F  
     __size_of_Conversion2 0063       __size_of_Conversion3 0056             __size_of_setup 002E  
        interrupt_function 0004                  clear_ram0 0675                   _PIE1bits 008C  
__size_of_virtual_display1 0063  __size_of_virtual_display2 009F  __size_of_virtual_display3 004E  
__size_of_SPI_Maestro_Init 0085                   Lcd_Cmd@a 0075                   _PIR1bits 000C  
              __stringbase 0605           ??_Lcd_Write_Char 0073       __end_of_USART_config 0683  
                 _Lcd_Init 0414                   _Lcd_Port 0689        __end_of_tmr0_config 064A  
 __end_of_Lcd_Write_String 059F           __size_of_Lcd_Cmd 001A              ??_SPI_Recibir 0072  
         __size_of___awdiv 0069           __size_of___awmod 0059         __end_of__stringtab 0606  
__size_of_USART_lib_config 001E                   _dato_pot 0022                   __ptext10 00D9  
                 __ptext11 0178                   __ptext20 0656                   __ptext12 0358  
                 __ptext21 0207                   __ptext13 066B                   __ptext22 068F  
                 __ptext14 03BB                   __ptext23 0683                   __ptext15 028C  
                 __ptext24 0414                   __ptext16 0617                   __ptext25 05E1  
                 __ptext17 064A                   __ptext26 0689                   __ptext18 067D  
                 __ptext27 062D                   __ptext19 05C3         escribir_char@valor 0072  
                 _contador 0029               ??_osc_config 0072              __size_of_main 00BB  
                 _voltajey 0030                   _voltajez 0037        __end_of_SPI_Recibir 0693  
               _INTCONbits 000B         __end_of_osc_config 066B                _tmr0_config 063D  
          _interrup_config 064A                   intlevel1 0000           _virtual_display1 0358  
         _virtual_display2 00D9           _virtual_display3 04C1           _SPI_Maestro_Init 0207  
                stringcode 0600                 _OSCCONbits 008F         Lcd_Set_Cursor@temp 0079  
SPI_Maestro_Init@port_mode 0075      __size_of_USART_config 0006                   stringdir 0600  
                 stringtab 0600                 _SSPCONbits 0014                 _SPI_Enviar 0683  
             _USART_config 067D  
