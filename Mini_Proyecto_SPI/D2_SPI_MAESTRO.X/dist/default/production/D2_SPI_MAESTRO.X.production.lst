

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Feb 17 00:48:08 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    41                           	dabs	1,0x7E,2
    42  0000                     
    43                           ; Version 2.20
    44                           ; Generated 12/02/2020 GMT
    45                           ; 
    46                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F887 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     	;# 
    78  0001                     	;# 
    79  0002                     	;# 
    80  0003                     	;# 
    81  0004                     	;# 
    82  0005                     	;# 
    83  0006                     	;# 
    84  0007                     	;# 
    85  0008                     	;# 
    86  0009                     	;# 
    87  000A                     	;# 
    88  000B                     	;# 
    89  000C                     	;# 
    90  000D                     	;# 
    91  000E                     	;# 
    92  000E                     	;# 
    93  000F                     	;# 
    94  0010                     	;# 
    95  0011                     	;# 
    96  0012                     	;# 
    97  0013                     	;# 
    98  0014                     	;# 
    99  0015                     	;# 
   100  0015                     	;# 
   101  0016                     	;# 
   102  0017                     	;# 
   103  0018                     	;# 
   104  0019                     	;# 
   105  001A                     	;# 
   106  001B                     	;# 
   107  001B                     	;# 
   108  001C                     	;# 
   109  001D                     	;# 
   110  001E                     	;# 
   111  001F                     	;# 
   112  0081                     	;# 
   113  0085                     	;# 
   114  0086                     	;# 
   115  0087                     	;# 
   116  0088                     	;# 
   117  0089                     	;# 
   118  008C                     	;# 
   119  008D                     	;# 
   120  008E                     	;# 
   121  008F                     	;# 
   122  0090                     	;# 
   123  0091                     	;# 
   124  0092                     	;# 
   125  0093                     	;# 
   126  0093                     	;# 
   127  0093                     	;# 
   128  0094                     	;# 
   129  0095                     	;# 
   130  0096                     	;# 
   131  0097                     	;# 
   132  0098                     	;# 
   133  0099                     	;# 
   134  009A                     	;# 
   135  009B                     	;# 
   136  009C                     	;# 
   137  009D                     	;# 
   138  009E                     	;# 
   139  009F                     	;# 
   140  0105                     	;# 
   141  0107                     	;# 
   142  0108                     	;# 
   143  0109                     	;# 
   144  010C                     	;# 
   145  010C                     	;# 
   146  010D                     	;# 
   147  010E                     	;# 
   148  010F                     	;# 
   149  0185                     	;# 
   150  0187                     	;# 
   151  0188                     	;# 
   152  0189                     	;# 
   153  018C                     	;# 
   154  018D                     	;# 
   155  0000                     	;# 
   156  0001                     	;# 
   157  0002                     	;# 
   158  0003                     	;# 
   159  0004                     	;# 
   160  0005                     	;# 
   161  0006                     	;# 
   162  0007                     	;# 
   163  0008                     	;# 
   164  0009                     	;# 
   165  000A                     	;# 
   166  000B                     	;# 
   167  000C                     	;# 
   168  000D                     	;# 
   169  000E                     	;# 
   170  000E                     	;# 
   171  000F                     	;# 
   172  0010                     	;# 
   173  0011                     	;# 
   174  0012                     	;# 
   175  0013                     	;# 
   176  0014                     	;# 
   177  0015                     	;# 
   178  0015                     	;# 
   179  0016                     	;# 
   180  0017                     	;# 
   181  0018                     	;# 
   182  0019                     	;# 
   183  001A                     	;# 
   184  001B                     	;# 
   185  001B                     	;# 
   186  001C                     	;# 
   187  001D                     	;# 
   188  001E                     	;# 
   189  001F                     	;# 
   190  0081                     	;# 
   191  0085                     	;# 
   192  0086                     	;# 
   193  0087                     	;# 
   194  0088                     	;# 
   195  0089                     	;# 
   196  008C                     	;# 
   197  008D                     	;# 
   198  008E                     	;# 
   199  008F                     	;# 
   200  0090                     	;# 
   201  0091                     	;# 
   202  0092                     	;# 
   203  0093                     	;# 
   204  0093                     	;# 
   205  0093                     	;# 
   206  0094                     	;# 
   207  0095                     	;# 
   208  0096                     	;# 
   209  0097                     	;# 
   210  0098                     	;# 
   211  0099                     	;# 
   212  009A                     	;# 
   213  009B                     	;# 
   214  009C                     	;# 
   215  009D                     	;# 
   216  009E                     	;# 
   217  009F                     	;# 
   218  0105                     	;# 
   219  0107                     	;# 
   220  0108                     	;# 
   221  0109                     	;# 
   222  010C                     	;# 
   223  010C                     	;# 
   224  010D                     	;# 
   225  010E                     	;# 
   226  010F                     	;# 
   227  0185                     	;# 
   228  0187                     	;# 
   229  0188                     	;# 
   230  0189                     	;# 
   231  018C                     	;# 
   232  018D                     	;# 
   233  0000                     	;# 
   234  0001                     	;# 
   235  0002                     	;# 
   236  0003                     	;# 
   237  0004                     	;# 
   238  0005                     	;# 
   239  0006                     	;# 
   240  0007                     	;# 
   241  0008                     	;# 
   242  0009                     	;# 
   243  000A                     	;# 
   244  000B                     	;# 
   245  000C                     	;# 
   246  000D                     	;# 
   247  000E                     	;# 
   248  000E                     	;# 
   249  000F                     	;# 
   250  0010                     	;# 
   251  0011                     	;# 
   252  0012                     	;# 
   253  0013                     	;# 
   254  0014                     	;# 
   255  0015                     	;# 
   256  0015                     	;# 
   257  0016                     	;# 
   258  0017                     	;# 
   259  0018                     	;# 
   260  0019                     	;# 
   261  001A                     	;# 
   262  001B                     	;# 
   263  001B                     	;# 
   264  001C                     	;# 
   265  001D                     	;# 
   266  001E                     	;# 
   267  001F                     	;# 
   268  0081                     	;# 
   269  0085                     	;# 
   270  0086                     	;# 
   271  0087                     	;# 
   272  0088                     	;# 
   273  0089                     	;# 
   274  008C                     	;# 
   275  008D                     	;# 
   276  008E                     	;# 
   277  008F                     	;# 
   278  0090                     	;# 
   279  0091                     	;# 
   280  0092                     	;# 
   281  0093                     	;# 
   282  0093                     	;# 
   283  0093                     	;# 
   284  0094                     	;# 
   285  0095                     	;# 
   286  0096                     	;# 
   287  0097                     	;# 
   288  0098                     	;# 
   289  0099                     	;# 
   290  009A                     	;# 
   291  009B                     	;# 
   292  009C                     	;# 
   293  009D                     	;# 
   294  009E                     	;# 
   295  009F                     	;# 
   296  0105                     	;# 
   297  0107                     	;# 
   298  0108                     	;# 
   299  0109                     	;# 
   300  010C                     	;# 
   301  010C                     	;# 
   302  010D                     	;# 
   303  010E                     	;# 
   304  010F                     	;# 
   305  0185                     	;# 
   306  0187                     	;# 
   307  0188                     	;# 
   308  0189                     	;# 
   309  018C                     	;# 
   310  018D                     	;# 
   311  0000                     	;# 
   312  0001                     	;# 
   313  0002                     	;# 
   314  0003                     	;# 
   315  0004                     	;# 
   316  0005                     	;# 
   317  0006                     	;# 
   318  0007                     	;# 
   319  0008                     	;# 
   320  0009                     	;# 
   321  000A                     	;# 
   322  000B                     	;# 
   323  000C                     	;# 
   324  000D                     	;# 
   325  000E                     	;# 
   326  000E                     	;# 
   327  000F                     	;# 
   328  0010                     	;# 
   329  0011                     	;# 
   330  0012                     	;# 
   331  0013                     	;# 
   332  0014                     	;# 
   333  0015                     	;# 
   334  0015                     	;# 
   335  0016                     	;# 
   336  0017                     	;# 
   337  0018                     	;# 
   338  0019                     	;# 
   339  001A                     	;# 
   340  001B                     	;# 
   341  001B                     	;# 
   342  001C                     	;# 
   343  001D                     	;# 
   344  001E                     	;# 
   345  001F                     	;# 
   346  0081                     	;# 
   347  0085                     	;# 
   348  0086                     	;# 
   349  0087                     	;# 
   350  0088                     	;# 
   351  0089                     	;# 
   352  008C                     	;# 
   353  008D                     	;# 
   354  008E                     	;# 
   355  008F                     	;# 
   356  0090                     	;# 
   357  0091                     	;# 
   358  0092                     	;# 
   359  0093                     	;# 
   360  0093                     	;# 
   361  0093                     	;# 
   362  0094                     	;# 
   363  0095                     	;# 
   364  0096                     	;# 
   365  0097                     	;# 
   366  0098                     	;# 
   367  0099                     	;# 
   368  009A                     	;# 
   369  009B                     	;# 
   370  009C                     	;# 
   371  009D                     	;# 
   372  009E                     	;# 
   373  009F                     	;# 
   374  0105                     	;# 
   375  0107                     	;# 
   376  0108                     	;# 
   377  0109                     	;# 
   378  010C                     	;# 
   379  010C                     	;# 
   380  010D                     	;# 
   381  010E                     	;# 
   382  010F                     	;# 
   383  0185                     	;# 
   384  0187                     	;# 
   385  0188                     	;# 
   386  0189                     	;# 
   387  018C                     	;# 
   388  018D                     	;# 
   389  0000                     	;# 
   390  0001                     	;# 
   391  0002                     	;# 
   392  0003                     	;# 
   393  0004                     	;# 
   394  0005                     	;# 
   395  0006                     	;# 
   396  0007                     	;# 
   397  0008                     	;# 
   398  0009                     	;# 
   399  000A                     	;# 
   400  000B                     	;# 
   401  000C                     	;# 
   402  000D                     	;# 
   403  000E                     	;# 
   404  000E                     	;# 
   405  000F                     	;# 
   406  0010                     	;# 
   407  0011                     	;# 
   408  0012                     	;# 
   409  0013                     	;# 
   410  0014                     	;# 
   411  0015                     	;# 
   412  0015                     	;# 
   413  0016                     	;# 
   414  0017                     	;# 
   415  0018                     	;# 
   416  0019                     	;# 
   417  001A                     	;# 
   418  001B                     	;# 
   419  001B                     	;# 
   420  001C                     	;# 
   421  001D                     	;# 
   422  001E                     	;# 
   423  001F                     	;# 
   424  0081                     	;# 
   425  0085                     	;# 
   426  0086                     	;# 
   427  0087                     	;# 
   428  0088                     	;# 
   429  0089                     	;# 
   430  008C                     	;# 
   431  008D                     	;# 
   432  008E                     	;# 
   433  008F                     	;# 
   434  0090                     	;# 
   435  0091                     	;# 
   436  0092                     	;# 
   437  0093                     	;# 
   438  0093                     	;# 
   439  0093                     	;# 
   440  0094                     	;# 
   441  0095                     	;# 
   442  0096                     	;# 
   443  0097                     	;# 
   444  0098                     	;# 
   445  0099                     	;# 
   446  009A                     	;# 
   447  009B                     	;# 
   448  009C                     	;# 
   449  009D                     	;# 
   450  009E                     	;# 
   451  009F                     	;# 
   452  0105                     	;# 
   453  0107                     	;# 
   454  0108                     	;# 
   455  0109                     	;# 
   456  010C                     	;# 
   457  010C                     	;# 
   458  010D                     	;# 
   459  010E                     	;# 
   460  010F                     	;# 
   461  0185                     	;# 
   462  0187                     	;# 
   463  0188                     	;# 
   464  0189                     	;# 
   465  018C                     	;# 
   466  018D                     	;# 
   467  0013                     _SSPBUF	set	19
   468  0014                     _SSPCONbits	set	20
   469  0009                     _PORTEbits	set	9
   470  0018                     _RCSTAbits	set	24
   471  000C                     _PIR1bits	set	12
   472  0019                     _TXREG	set	25
   473  0009                     _PORTE	set	9
   474  0008                     _PORTD	set	8
   475  0007                     _PORTC	set	7
   476  0006                     _PORTB	set	6
   477  0005                     _PORTA	set	5
   478  0007                     _PORTCbits	set	7
   479  0001                     _TMR0	set	1
   480  000B                     _INTCONbits	set	11
   481  0085                     _TRISAbits	set	133
   482  0094                     _SSPSTATbits	set	148
   483  008C                     _PIE1bits	set	140
   484  0098                     _TXSTAbits	set	152
   485  0099                     _SPBRG	set	153
   486  0081                     _OPTION_REGbits	set	129
   487  008F                     _OSCCONbits	set	143
   488  0096                     _IOCB	set	150
   489  0089                     _TRISE	set	137
   490  0088                     _TRISD	set	136
   491  0087                     _TRISCbits	set	135
   492  0087                     _TRISC	set	135
   493  0086                     _TRISB	set	134
   494  0085                     _TRISA	set	133
   495  0189                     _ANSELH	set	393
   496  0188                     _ANSEL	set	392
   497                           
   498                           	psect	strings
   499  05E4                     __pstrings:
   500  05E4                     stringtab:
   501  05E4                     __stringtab:
   502  05E4                     stringcode:	
   503                           ;	String table - string pointers are 1 byte each
   504                           
   505  05E4                     stringdir:
   506  05E4  3005               	movlw	high stringdir
   507  05E5  008A               	movwf	10
   508  05E6  0804               	movf	4,w
   509  05E7  0A84               	incf	4,f
   510  05E8  0782               	addwf	2,f
   511  05E9                     __stringbase:
   512  05E9  3400               	retlw	0
   513  05EA                     __end_of__stringtab:
   514  05EA                     STR_1:
   515  05EA  3441               	retlw	65	;'A'
   516  05EB  3444               	retlw	68	;'D'
   517  05EC  3443               	retlw	67	;'C'
   518  05ED  343A               	retlw	58	;':'
   519  05EE  3420               	retlw	32	;' '
   520  05EF  3420               	retlw	32	;' '
   521  05F0  3442               	retlw	66	;'B'
   522  05F1  3454               	retlw	84	;'T'
   523  05F2  344E               	retlw	78	;'N'
   524  05F3  343A               	retlw	58	;':'
   525  05F4  3420               	retlw	32	;' '
   526  05F5  3454               	retlw	84	;'T'
   527  05F6  3445               	retlw	69	;'E'
   528  05F7  344D               	retlw	77	;'M'
   529  05F8  3450               	retlw	80	;'P'
   530  05F9  343A               	retlw	58	;':'
   531  05FA  3400               	retlw	0
   532                           
   533                           	psect	cinit
   534  000F                     start_initialization:	
   535                           ; #config settings
   536                           
   537  000F                     __initialization:
   538                           
   539                           ; Clear objects allocated to COMMON
   540  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   541  0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   542                           
   543                           ; Clear objects allocated to BANK0
   544  0011  1383               	bcf	3,7	;select IRP bank0
   545  0012  3020               	movlw	low __pbssBANK0
   546  0013  0084               	movwf	4
   547  0014  303C               	movlw	low (__pbssBANK0+28)
   548  0015  120A  118A  2659  120A  118A  	fcall	clear_ram0
   549  001A                     end_of_initialization:	
   550                           ;End of C runtime variable initialization code
   551                           
   552  001A                     __end_of__initialization:
   553  001A  0183               	clrf	3
   554  001B  120A  118A  28BD   	ljmp	_main	;jump to C main() function
   555                           
   556                           	psect	bssCOMMON
   557  007A                     __pbssCOMMON:
   558  007A                     _dato_push:
   559  007A                     	ds	1
   560  007B                     _dato_pot:
   561  007B                     	ds	1
   562                           
   563                           	psect	bssBANK0
   564  0020                     __pbssBANK0:
   565  0020                     _dato_semaforo:
   566  0020                     	ds	1
   567  0021                     _dato_push1:
   568  0021                     	ds	1
   569  0022                     _velocidad3:
   570  0022                     	ds	1
   571  0023                     _velocidad2:
   572  0023                     	ds	1
   573  0024                     _velocidad1:
   574  0024                     	ds	1
   575  0025                     _a:
   576  0025                     	ds	1
   577  0026                     _w2:
   578  0026                     	ds	1
   579  0027                     _w1:
   580  0027                     	ds	1
   581  0028                     _contador:
   582  0028                     	ds	1
   583  0029                     _leer:
   584  0029                     	ds	1
   585  002A                     _y2y:
   586  002A                     	ds	1
   587  002B                     _x2y:
   588  002B                     	ds	1
   589  002C                     _y1y:
   590  002C                     	ds	1
   591  002D                     _x1y:
   592  002D                     	ds	1
   593  002E                     _unidady:
   594  002E                     	ds	1
   595  002F                     _voltajey:
   596  002F                     	ds	1
   597  0030                     _y2z:
   598  0030                     	ds	1
   599  0031                     _x2z:
   600  0031                     	ds	1
   601  0032                     _y1z:
   602  0032                     	ds	1
   603  0033                     _x1z:
   604  0033                     	ds	1
   605  0034                     _unidadz:
   606  0034                     	ds	1
   607  0035                     _voltajez:
   608  0035                     	ds	1
   609  0036                     _y2:
   610  0036                     	ds	1
   611  0037                     _x2:
   612  0037                     	ds	1
   613  0038                     _y1:
   614  0038                     	ds	1
   615  0039                     _x1:
   616  0039                     	ds	1
   617  003A                     _unidad:
   618  003A                     	ds	1
   619  003B                     _voltaje:
   620  003B                     	ds	1
   621                           
   622                           	psect	clrtext
   623  0659                     clear_ram0:	
   624                           ;	Called with FSR containing the base address, and
   625                           ;	W with the last address+1
   626                           
   627  0659  0064               	clrwdt	;clear the watchdog before getting into this loop
   628  065A                     clrloop0:
   629  065A  0180               	clrf	0	;clear RAM location pointed to by FSR
   630  065B  0A84               	incf	4,f	;increment pointer
   631  065C  0604               	xorwf	4,w	;XOR with final address
   632  065D  1903               	btfsc	3,2	;have we reached the end yet?
   633  065E  3400               	retlw	0	;all done for this memory range, return
   634  065F  0604               	xorwf	4,w	;XOR again to restore value
   635  0660  2E5A               	goto	clrloop0	;do the next byte
   636                           
   637                           	psect	cstackCOMMON
   638  0070                     __pcstackCOMMON:
   639  0070                     ?_setup:
   640  0070                     ?_osc_config:	
   641                           ; 1 bytes @ 0x0
   642                           
   643  0070                     ?_interrup_config:	
   644                           ; 1 bytes @ 0x0
   645                           
   646  0070                     ?_tmr0_config:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0070                     ?_Lcd_Init:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0070                     ?_USART_config:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0070                     ?_SPI_config:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0070                     ?_SPI_Enviar:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0070                     ?_SPI_Recibir:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0070                     ?_lcd:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0070                     ?_USART_lib_config:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0070                     ?_Lcd_Write_String:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0070                     ?_Conversion1:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0070                     ?_Conversion2:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0070                     ?_Conversion3:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ?_Lcd_Write_Char:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0070                     ?_virtual_display1:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0070                     ?_virtual_display2:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0070                     ?_virtual_display3:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0070                     ?_escribir_char:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0070                     ?_ISR:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  0070                     ??_ISR:	
   701                           ; 1 bytes @ 0x0
   702                           
   703  0070                     ?_main:	
   704                           ; 1 bytes @ 0x0
   705                           
   706  0070                     ?_Lcd_Port:	
   707                           ; 1 bytes @ 0x0
   708                           
   709  0070                     ?_Lcd_Cmd:	
   710                           ; 1 bytes @ 0x0
   711                           
   712                           
   713                           ; 1 bytes @ 0x0
   714  0070                     	ds	2
   715  0072                     ??_setup:
   716  0072                     ??_osc_config:	
   717                           ; 1 bytes @ 0x2
   718                           
   719  0072                     ??_interrup_config:	
   720                           ; 1 bytes @ 0x2
   721                           
   722  0072                     ??_tmr0_config:	
   723                           ; 1 bytes @ 0x2
   724                           
   725  0072                     ??_USART_config:	
   726                           ; 1 bytes @ 0x2
   727                           
   728  0072                     ??_SPI_Enviar:	
   729                           ; 1 bytes @ 0x2
   730                           
   731  0072                     ??_SPI_Recibir:	
   732                           ; 1 bytes @ 0x2
   733                           
   734  0072                     ??_USART_lib_config:	
   735                           ; 1 bytes @ 0x2
   736                           
   737  0072                     ?_SPI_Maestro_Init:	
   738                           ; 1 bytes @ 0x2
   739                           
   740  0072                     ??_escribir_char:	
   741                           ; 1 bytes @ 0x2
   742                           
   743  0072                     ??_Lcd_Port:	
   744                           ; 1 bytes @ 0x2
   745                           
   746  0072                     ?___awdiv:	
   747                           ; 1 bytes @ 0x2
   748                           
   749  0072                     ?___awmod:	
   750                           ; 2 bytes @ 0x2
   751                           
   752  0072                     escribir_char@valor:	
   753                           ; 2 bytes @ 0x2
   754                           
   755  0072                     Lcd_Port@a:	
   756                           ; 1 bytes @ 0x2
   757                           
   758  0072                     SPI_Maestro_Init@SCK:	
   759                           ; 1 bytes @ 0x2
   760                           
   761  0072                     SPI_Enviar@valor:	
   762                           ; 1 bytes @ 0x2
   763                           
   764  0072                     ___awdiv@divisor:	
   765                           ; 1 bytes @ 0x2
   766                           
   767  0072                     ___awmod@divisor:	
   768                           ; 2 bytes @ 0x2
   769                           
   770                           
   771                           ; 2 bytes @ 0x2
   772  0072                     	ds	1
   773  0073                     ??_SPI_Maestro_Init:
   774  0073                     ??_Lcd_Write_Char:	
   775                           ; 1 bytes @ 0x3
   776                           
   777  0073                     ??_virtual_display1:	
   778                           ; 1 bytes @ 0x3
   779                           
   780  0073                     ??_virtual_display2:	
   781                           ; 1 bytes @ 0x3
   782                           
   783  0073                     ??_virtual_display3:	
   784                           ; 1 bytes @ 0x3
   785                           
   786  0073                     ??_Lcd_Cmd:	
   787                           ; 1 bytes @ 0x3
   788                           
   789                           
   790                           ; 1 bytes @ 0x3
   791  0073                     	ds	1
   792  0074                     Lcd_Write_Char@a:
   793  0074                     ___awdiv@dividend:	
   794                           ; 1 bytes @ 0x4
   795                           
   796  0074                     ___awmod@dividend:	
   797                           ; 2 bytes @ 0x4
   798                           
   799                           
   800                           ; 2 bytes @ 0x4
   801  0074                     	ds	1
   802  0075                     ??_Lcd_Write_String:
   803  0075                     Lcd_Cmd@a:	
   804                           ; 1 bytes @ 0x5
   805                           
   806  0075                     SPI_Maestro_Init@port_mode:	
   807                           ; 1 bytes @ 0x5
   808                           
   809  0075                     Lcd_Write_String@i:	
   810                           ; 1 bytes @ 0x5
   811                           
   812                           
   813                           ; 2 bytes @ 0x5
   814  0075                     	ds	1
   815  0076                     ??_Lcd_Init:
   816  0076                     ??_SPI_config:	
   817                           ; 1 bytes @ 0x6
   818                           
   819  0076                     ?_Lcd_Set_Cursor:	
   820                           ; 1 bytes @ 0x6
   821                           
   822  0076                     ??___awdiv:	
   823                           ; 1 bytes @ 0x6
   824                           
   825  0076                     ??___awmod:	
   826                           ; 1 bytes @ 0x6
   827                           
   828  0076                     Lcd_Set_Cursor@b:	
   829                           ; 1 bytes @ 0x6
   830                           
   831                           
   832                           ; 1 bytes @ 0x6
   833  0076                     	ds	1
   834  0077                     ??_Lcd_Set_Cursor:
   835  0077                     Lcd_Write_String@a:	
   836                           ; 1 bytes @ 0x7
   837                           
   838  0077                     ___awmod@counter:	
   839                           ; 1 bytes @ 0x7
   840                           
   841                           
   842                           ; 1 bytes @ 0x7
   843  0077                     	ds	1
   844  0078                     Lcd_Set_Cursor@a:
   845  0078                     ___awmod@sign:	
   846                           ; 1 bytes @ 0x8
   847                           
   848                           
   849                           ; 1 bytes @ 0x8
   850  0078                     	ds	1
   851  0079                     Lcd_Set_Cursor@temp:
   852                           
   853                           ; 1 bytes @ 0x9
   854  0079                     	ds	1
   855                           
   856                           	psect	cstackBANK0
   857  003C                     __pcstackBANK0:
   858  003C                     ___awdiv@counter:
   859                           
   860                           ; 1 bytes @ 0x0
   861  003C                     	ds	1
   862  003D                     ___awdiv@sign:
   863                           
   864                           ; 1 bytes @ 0x1
   865  003D                     	ds	1
   866  003E                     ___awdiv@quotient:
   867                           
   868                           ; 2 bytes @ 0x2
   869  003E                     	ds	2
   870  0040                     ??_Conversion1:
   871  0040                     ??_Conversion2:	
   872                           ; 1 bytes @ 0x4
   873                           
   874  0040                     ??_Conversion3:	
   875                           ; 1 bytes @ 0x4
   876                           
   877                           
   878                           ; 1 bytes @ 0x4
   879  0040                     	ds	3
   880  0043                     ??_lcd:
   881                           
   882                           ; 1 bytes @ 0x7
   883  0043                     	ds	1
   884  0044                     ??_main:
   885                           
   886                           ; 1 bytes @ 0x8
   887  0044                     	ds	2
   888                           
   889                           	psect	maintext
   890  00BD                     __pmaintext:	
   891 ;;
   892 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   893 ;;
   894 ;; *************** function _main *****************
   895 ;; Defined at:
   896 ;;		line 120 in file "MAESTRO_SPI.c"
   897 ;; Parameters:    Size  Location     Type
   898 ;;		None
   899 ;; Auto vars:     Size  Location     Type
   900 ;;		None
   901 ;; Return value:  Size  Location     Type
   902 ;;                  1    wreg      void 
   903 ;; Registers used:
   904 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   905 ;; Tracked objects:
   906 ;;		On entry : B00/0
   907 ;;		On exit  : 0/0
   908 ;;		Unchanged: 0/0
   909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   910 ;;      Params:         0       0       0       0       0
   911 ;;      Locals:         0       0       0       0       0
   912 ;;      Temps:          0       2       0       0       0
   913 ;;      Totals:         0       2       0       0       0
   914 ;;Total ram usage:        2 bytes
   915 ;; Hardware stack levels required when called:    5
   916 ;; This function calls:
   917 ;;		_Lcd_Init
   918 ;;		_SPI_Enviar
   919 ;;		_SPI_Recibir
   920 ;;		_SPI_config
   921 ;;		_USART_config
   922 ;;		_interrup_config
   923 ;;		_lcd
   924 ;;		_osc_config
   925 ;;		_setup
   926 ;;		_tmr0_config
   927 ;; This function is called by:
   928 ;;		Startup code after reset
   929 ;; This function uses a non-reentrant model
   930 ;;
   931                           
   932                           
   933                           ;psect for function _main
   934  00BD                     _main:
   935  00BD                     l1895:	
   936                           ;incstack = 0
   937                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   938                           
   939                           
   940                           ;MAESTRO_SPI.c: 122:         velocidad2 = velocidad2 + 1;
   941  00BD  120A  118A  2535  120A  118A  	fcall	_setup
   942                           
   943                           ;MAESTRO_SPI.c: 123:         velocidad3 = velocidad3 + 1;
   944  00C2  120A  118A  2645  120A  118A  	fcall	_osc_config
   945                           
   946                           ;MAESTRO_SPI.c: 124: 
   947  00C7  120A  118A  262E  120A  118A  	fcall	_interrup_config
   948  00CC                     l1897:
   949                           
   950                           ;MAESTRO_SPI.c: 125: 
   951  00CC  120A  118A  2621  120A  118A  	fcall	_tmr0_config
   952  00D1                     l1899:
   953                           
   954                           ;MAESTRO_SPI.c: 126:     }
   955  00D1  120A  118A  24A1  120A  118A  	fcall	_Lcd_Init
   956  00D6                     l1901:
   957                           
   958                           ;MAESTRO_SPI.c: 127: }
   959  00D6  120A  118A  2661  120A  118A  	fcall	_USART_config
   960  00DB                     l1903:
   961                           
   962                           ;MAESTRO_SPI.c: 128: 
   963  00DB  120A  118A  263A  120A  118A  	fcall	_SPI_config
   964  00E0                     l1905:
   965                           
   966                           ;MAESTRO_SPI.c: 130: ;MAESTRO_SPI.c: 135:     ANSEL = 0;
   967  00E0  1283               	bcf	3,5	;RP0=0, select bank0
   968  00E1  1303               	bcf	3,6	;RP1=0, select bank0
   969  00E2  1007               	bcf	7,0	;volatile
   970  00E3                     l1907:
   971                           
   972                           ;MAESTRO_SPI.c: 136:     TRISA = 0;
   973  00E3  3003               	movlw	3
   974  00E4  1283               	bcf	3,5	;RP0=0, select bank0
   975  00E5  1303               	bcf	3,6	;RP1=0, select bank0
   976  00E6  00C5               	movwf	??_main+1
   977  00E7  3097               	movlw	151
   978  00E8  00C4               	movwf	??_main
   979  00E9                     u727:
   980  00E9  0BC4               	decfsz	??_main,f
   981  00EA  28E9               	goto	u727
   982  00EB  0BC5               	decfsz	??_main+1,f
   983  00EC  28E9               	goto	u727
   984  00ED                     l1909:
   985                           
   986                           ;MAESTRO_SPI.c: 138:     ANSELH = 0;
   987  00ED  087B               	movf	_dato_pot,w
   988  00EE  120A  118A  2667  120A  118A  	fcall	_SPI_Enviar
   989  00F3                     l1911:
   990                           
   991                           ;MAESTRO_SPI.c: 139:     TRISB = 0;
   992  00F3  120A  118A  2673  120A  118A  	fcall	_SPI_Recibir
   993  00F8  1283               	bcf	3,5	;RP0=0, select bank0
   994  00F9  1303               	bcf	3,6	;RP1=0, select bank0
   995  00FA  00C4               	movwf	??_main
   996  00FB  0844               	movf	??_main,w
   997  00FC  00FB               	movwf	_dato_pot
   998  00FD                     l1913:
   999                           
  1000                           ;MAESTRO_SPI.c: 141:     TRISC = 0;
  1001  00FD  3003               	movlw	3
  1002  00FE  1283               	bcf	3,5	;RP0=0, select bank0
  1003  00FF  1303               	bcf	3,6	;RP1=0, select bank0
  1004  0100  00C5               	movwf	??_main+1
  1005  0101  3097               	movlw	151
  1006  0102  00C4               	movwf	??_main
  1007  0103                     u737:
  1008  0103  0BC4               	decfsz	??_main,f
  1009  0104  2903               	goto	u737
  1010  0105  0BC5               	decfsz	??_main+1,f
  1011  0106  2903               	goto	u737
  1012  0107                     l1915:
  1013                           
  1014                           ;MAESTRO_SPI.c: 142:     PORTC = 0;
  1015  0107  1283               	bcf	3,5	;RP0=0, select bank0
  1016  0108  1303               	bcf	3,6	;RP1=0, select bank0
  1017  0109  1407               	bsf	7,0	;volatile
  1018  010A                     l1917:
  1019                           
  1020                           ;MAESTRO_SPI.c: 146:     PORTCbits.RC1 = 1;
  1021  010A  1087               	bcf	7,1	;volatile
  1022  010B                     l1919:
  1023                           
  1024                           ;MAESTRO_SPI.c: 147:     PORTCbits.RC2 = 1;
  1025  010B  3003               	movlw	3
  1026  010C  1283               	bcf	3,5	;RP0=0, select bank0
  1027  010D  1303               	bcf	3,6	;RP1=0, select bank0
  1028  010E  00C5               	movwf	??_main+1
  1029  010F  3097               	movlw	151
  1030  0110  00C4               	movwf	??_main
  1031  0111                     u747:
  1032  0111  0BC4               	decfsz	??_main,f
  1033  0112  2911               	goto	u747
  1034  0113  0BC5               	decfsz	??_main+1,f
  1035  0114  2911               	goto	u747
  1036  0115                     l1921:
  1037                           
  1038                           ;MAESTRO_SPI.c: 149:     PORTD = 0;
  1039  0115  3000               	movlw	0
  1040  0116  120A  118A  2667  120A  118A  	fcall	_SPI_Enviar
  1041  011B                     l1923:
  1042                           
  1043                           ;MAESTRO_SPI.c: 150:     TRISE = 0;
  1044  011B  120A  118A  2673  120A  118A  	fcall	_SPI_Recibir
  1045  0120  1283               	bcf	3,5	;RP0=0, select bank0
  1046  0121  1303               	bcf	3,6	;RP1=0, select bank0
  1047  0122  00C4               	movwf	??_main
  1048  0123  0844               	movf	??_main,w
  1049  0124  00FA               	movwf	_dato_push
  1050  0125                     l1925:
  1051                           
  1052                           ;MAESTRO_SPI.c: 152: }
  1053  0125  3003               	movlw	3
  1054  0126  1283               	bcf	3,5	;RP0=0, select bank0
  1055  0127  1303               	bcf	3,6	;RP1=0, select bank0
  1056  0128  00C5               	movwf	??_main+1
  1057  0129  3097               	movlw	151
  1058  012A  00C4               	movwf	??_main
  1059  012B                     u757:
  1060  012B  0BC4               	decfsz	??_main,f
  1061  012C  292B               	goto	u757
  1062  012D  0BC5               	decfsz	??_main+1,f
  1063  012E  292B               	goto	u757
  1064  012F                     l1927:
  1065                           
  1066                           ;MAESTRO_SPI.c: 153: 
  1067  012F  1283               	bcf	3,5	;RP0=0, select bank0
  1068  0130  1303               	bcf	3,6	;RP1=0, select bank0
  1069  0131  1487               	bsf	7,1	;volatile
  1070  0132                     l1929:
  1071                           
  1072                           ;MAESTRO_SPI.c: 158:     INTCONbits.T0IE = 1;
  1073  0132  120A  118A  24F8  120A  118A  	fcall	_lcd
  1074  0137                     l1931:
  1075                           
  1076                           ;MAESTRO_SPI.c: 159:     INTCONbits.INTE = 0;
  1077  0137  1283               	bcf	3,5	;RP0=0, select bank0
  1078  0138  1303               	bcf	3,6	;RP1=0, select bank0
  1079  0139  0824               	movf	_velocidad1,w
  1080  013A  3E01               	addlw	1
  1081  013B  00C4               	movwf	??_main
  1082  013C  0844               	movf	??_main,w
  1083  013D  00A4               	movwf	_velocidad1
  1084  013E                     l1933:
  1085                           
  1086                           ;MAESTRO_SPI.c: 160:     INTCONbits.RBIE = 0;
  1087  013E  0823               	movf	_velocidad2,w
  1088  013F  3E01               	addlw	1
  1089  0140  00C4               	movwf	??_main
  1090  0141  0844               	movf	??_main,w
  1091  0142  00A3               	movwf	_velocidad2
  1092  0143                     l1935:
  1093                           
  1094                           ;MAESTRO_SPI.c: 161:     INTCONbits.T0IF = 0;
  1095  0143  0822               	movf	_velocidad3,w
  1096  0144  3E01               	addlw	1
  1097  0145  00C4               	movwf	??_main
  1098  0146  0844               	movf	??_main,w
  1099  0147  00A2               	movwf	_velocidad3
  1100  0148  28E0               	goto	l1905
  1101  0149  120A  118A  280C   	ljmp	start
  1102  014C                     __end_of_main:
  1103                           
  1104                           	psect	text1
  1105  0621                     __ptext1:	
  1106 ;; *************** function _tmr0_config *****************
  1107 ;; Defined at:
  1108 ;;		line 216 in file "MAESTRO_SPI.c"
  1109 ;; Parameters:    Size  Location     Type
  1110 ;;		None
  1111 ;; Auto vars:     Size  Location     Type
  1112 ;;		None
  1113 ;; Return value:  Size  Location     Type
  1114 ;;                  1    wreg      void 
  1115 ;; Registers used:
  1116 ;;		wreg
  1117 ;; Tracked objects:
  1118 ;;		On entry : 0/0
  1119 ;;		On exit  : 0/0
  1120 ;;		Unchanged: 0/0
  1121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1122 ;;      Params:         0       0       0       0       0
  1123 ;;      Locals:         0       0       0       0       0
  1124 ;;      Temps:          0       0       0       0       0
  1125 ;;      Totals:         0       0       0       0       0
  1126 ;;Total ram usage:        0 bytes
  1127 ;; Hardware stack levels used:    1
  1128 ;; Hardware stack levels required when called:    1
  1129 ;; This function calls:
  1130 ;;		Nothing
  1131 ;; This function is called by:
  1132 ;;		_main
  1133 ;; This function uses a non-reentrant model
  1134 ;;
  1135                           
  1136                           
  1137                           ;psect for function _tmr0_config
  1138  0621                     _tmr0_config:
  1139  0621                     l1639:	
  1140                           ;incstack = 0
  1141                           ; Regs used in _tmr0_config: [wreg]
  1142                           
  1143                           
  1144                           ;MAESTRO_SPI.c: 218: }
  1145  0621  1683               	bsf	3,5	;RP0=1, select bank1
  1146  0622  1303               	bcf	3,6	;RP1=0, select bank1
  1147  0623  1381               	bcf	1,7	;volatile
  1148                           
  1149                           ;MAESTRO_SPI.c: 219: 
  1150  0624  1281               	bcf	1,5	;volatile
  1151                           
  1152                           ;MAESTRO_SPI.c: 220: void Conversion1 ()
  1153  0625  1181               	bcf	1,3	;volatile
  1154                           
  1155                           ;MAESTRO_SPI.c: 221: {
  1156  0626  1101               	bcf	1,2	;volatile
  1157                           
  1158                           ;MAESTRO_SPI.c: 222:     voltaje = dato_pot * 2;
  1159  0627  1481               	bsf	1,1	;volatile
  1160                           
  1161                           ;MAESTRO_SPI.c: 223:     unidad = voltaje / 100;
  1162  0628  1001               	bcf	1,0	;volatile
  1163  0629                     l1641:
  1164                           
  1165                           ;MAESTRO_SPI.c: 224:     x1 = voltaje % 100;
  1166  0629  3064               	movlw	100
  1167  062A  1283               	bcf	3,5	;RP0=0, select bank0
  1168  062B  1303               	bcf	3,6	;RP1=0, select bank0
  1169  062C  0081               	movwf	1	;volatile
  1170  062D                     l174:
  1171  062D  0008               	return
  1172  062E                     __end_of_tmr0_config:
  1173                           
  1174                           	psect	text2
  1175  0535                     __ptext2:	
  1176 ;; *************** function _setup *****************
  1177 ;; Defined at:
  1178 ;;		line 171 in file "MAESTRO_SPI.c"
  1179 ;; Parameters:    Size  Location     Type
  1180 ;;		None
  1181 ;; Auto vars:     Size  Location     Type
  1182 ;;		None
  1183 ;; Return value:  Size  Location     Type
  1184 ;;                  1    wreg      void 
  1185 ;; Registers used:
  1186 ;;		status,2
  1187 ;; Tracked objects:
  1188 ;;		On entry : 0/0
  1189 ;;		On exit  : 0/0
  1190 ;;		Unchanged: 0/0
  1191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1192 ;;      Params:         0       0       0       0       0
  1193 ;;      Locals:         0       0       0       0       0
  1194 ;;      Temps:          0       0       0       0       0
  1195 ;;      Totals:         0       0       0       0       0
  1196 ;;Total ram usage:        0 bytes
  1197 ;; Hardware stack levels used:    1
  1198 ;; Hardware stack levels required when called:    1
  1199 ;; This function calls:
  1200 ;;		Nothing
  1201 ;; This function is called by:
  1202 ;;		_main
  1203 ;; This function uses a non-reentrant model
  1204 ;;
  1205                           
  1206                           
  1207                           ;psect for function _setup
  1208  0535                     _setup:
  1209  0535                     l1621:	
  1210                           ;incstack = 0
  1211                           ; Regs used in _setup: [status,2]
  1212                           
  1213                           
  1214                           ;MAESTRO_SPI.c: 173:     OSCCONbits.HTS = 0;
  1215  0535  1683               	bsf	3,5	;RP0=1, select bank3
  1216  0536  1703               	bsf	3,6	;RP1=1, select bank3
  1217  0537  0188               	clrf	8	;volatile
  1218                           
  1219                           ;MAESTRO_SPI.c: 174:     OSCCONbits.LTS = 1;
  1220  0538  1683               	bsf	3,5	;RP0=1, select bank1
  1221  0539  1303               	bcf	3,6	;RP1=0, select bank1
  1222  053A  0185               	clrf	5	;volatile
  1223                           
  1224                           ;MAESTRO_SPI.c: 175:     OSCCONbits.SCS = 0;
  1225  053B  1283               	bcf	3,5	;RP0=0, select bank0
  1226  053C  1303               	bcf	3,6	;RP1=0, select bank0
  1227  053D  0185               	clrf	5	;volatile
  1228                           
  1229                           ;MAESTRO_SPI.c: 176: }
  1230  053E  1683               	bsf	3,5	;RP0=1, select bank3
  1231  053F  1703               	bsf	3,6	;RP1=1, select bank3
  1232  0540  0189               	clrf	9	;volatile
  1233                           
  1234                           ;MAESTRO_SPI.c: 177: 
  1235  0541  1683               	bsf	3,5	;RP0=1, select bank1
  1236  0542  1303               	bcf	3,6	;RP1=0, select bank1
  1237  0543  0186               	clrf	6	;volatile
  1238                           
  1239                           ;MAESTRO_SPI.c: 178: void tmr0_config (void)
  1240  0544  1283               	bcf	3,5	;RP0=0, select bank0
  1241  0545  1303               	bcf	3,6	;RP1=0, select bank0
  1242  0546  0186               	clrf	6	;volatile
  1243                           
  1244                           ;MAESTRO_SPI.c: 179: {
  1245  0547  1683               	bsf	3,5	;RP0=1, select bank1
  1246  0548  1303               	bcf	3,6	;RP1=0, select bank1
  1247  0549  0187               	clrf	7	;volatile
  1248                           
  1249                           ;MAESTRO_SPI.c: 180:     OPTION_REGbits.nRBPU = 0;
  1250  054A  1283               	bcf	3,5	;RP0=0, select bank0
  1251  054B  1303               	bcf	3,6	;RP1=0, select bank0
  1252  054C  0187               	clrf	7	;volatile
  1253  054D                     l1623:
  1254                           
  1255                           ;MAESTRO_SPI.c: 181:     OPTION_REGbits.T0CS = 0;
  1256  054D  1683               	bsf	3,5	;RP0=1, select bank1
  1257  054E  1303               	bcf	3,6	;RP1=0, select bank1
  1258  054F  1307               	bcf	7,6	;volatile
  1259  0550                     l1625:
  1260                           
  1261                           ;MAESTRO_SPI.c: 182:     OPTION_REGbits.PSA = 0;
  1262  0550  1607               	bsf	7,4	;volatile
  1263  0551                     l1627:
  1264                           
  1265                           ;MAESTRO_SPI.c: 183:     OPTION_REGbits.PS2 = 0;
  1266  0551  1283               	bcf	3,5	;RP0=0, select bank0
  1267  0552  1303               	bcf	3,6	;RP1=0, select bank0
  1268  0553  1407               	bsf	7,0	;volatile
  1269  0554                     l1629:
  1270                           
  1271                           ;MAESTRO_SPI.c: 184:     OPTION_REGbits.PS1 = 1;
  1272  0554  1487               	bsf	7,1	;volatile
  1273  0555                     l1631:
  1274                           
  1275                           ;MAESTRO_SPI.c: 185:     OPTION_REGbits.PS0 = 0;
  1276  0555  1507               	bsf	7,2	;volatile
  1277                           
  1278                           ;MAESTRO_SPI.c: 186:     TMR0 = 100;
  1279  0556  1683               	bsf	3,5	;RP0=1, select bank1
  1280  0557  1303               	bcf	3,6	;RP1=0, select bank1
  1281  0558  0188               	clrf	8	;volatile
  1282                           
  1283                           ;MAESTRO_SPI.c: 187: }
  1284  0559  1283               	bcf	3,5	;RP0=0, select bank0
  1285  055A  1303               	bcf	3,6	;RP1=0, select bank0
  1286  055B  0188               	clrf	8	;volatile
  1287                           
  1288                           ;MAESTRO_SPI.c: 188: 
  1289  055C  1683               	bsf	3,5	;RP0=1, select bank1
  1290  055D  1303               	bcf	3,6	;RP1=0, select bank1
  1291  055E  0189               	clrf	9	;volatile
  1292                           
  1293                           ;MAESTRO_SPI.c: 189: 
  1294  055F  1283               	bcf	3,5	;RP0=0, select bank0
  1295  0560  1303               	bcf	3,6	;RP1=0, select bank0
  1296  0561  0189               	clrf	9	;volatile
  1297  0562                     l165:
  1298  0562  0008               	return
  1299  0563                     __end_of_setup:
  1300                           
  1301                           	psect	text3
  1302  0645                     __ptext3:	
  1303 ;; *************** function _osc_config *****************
  1304 ;; Defined at:
  1305 ;;		line 205 in file "MAESTRO_SPI.c"
  1306 ;; Parameters:    Size  Location     Type
  1307 ;;		None
  1308 ;; Auto vars:     Size  Location     Type
  1309 ;;		None
  1310 ;; Return value:  Size  Location     Type
  1311 ;;                  1    wreg      void 
  1312 ;; Registers used:
  1313 ;;		None
  1314 ;; Tracked objects:
  1315 ;;		On entry : 0/0
  1316 ;;		On exit  : 0/0
  1317 ;;		Unchanged: 0/0
  1318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1319 ;;      Params:         0       0       0       0       0
  1320 ;;      Locals:         0       0       0       0       0
  1321 ;;      Temps:          0       0       0       0       0
  1322 ;;      Totals:         0       0       0       0       0
  1323 ;;Total ram usage:        0 bytes
  1324 ;; Hardware stack levels used:    1
  1325 ;; Hardware stack levels required when called:    1
  1326 ;; This function calls:
  1327 ;;		Nothing
  1328 ;; This function is called by:
  1329 ;;		_main
  1330 ;; This function uses a non-reentrant model
  1331 ;;
  1332                           
  1333                           
  1334                           ;psect for function _osc_config
  1335  0645                     _osc_config:
  1336  0645                     l1633:	
  1337                           ;incstack = 0
  1338                           ; Regs used in _osc_config: []
  1339                           
  1340                           
  1341                           ;MAESTRO_SPI.c: 207: void lcd (void)
  1342  0645  1683               	bsf	3,5	;RP0=1, select bank1
  1343  0646  1303               	bcf	3,6	;RP1=0, select bank1
  1344  0647  170F               	bsf	15,6	;volatile
  1345                           
  1346                           ;MAESTRO_SPI.c: 208: {
  1347  0648  168F               	bsf	15,5	;volatile
  1348                           
  1349                           ;MAESTRO_SPI.c: 209:     Lcd_Set_Cursor(0,1);
  1350  0649  120F               	bcf	15,4	;volatile
  1351                           
  1352                           ;MAESTRO_SPI.c: 210:     Lcd_Write_String("ADC:  BTN: TEMP:");
  1353  064A  118F               	bcf	15,3	;volatile
  1354                           
  1355                           ;MAESTRO_SPI.c: 211:     Lcd_Set_Cursor(2,0);
  1356  064B  110F               	bcf	15,2	;volatile
  1357                           
  1358                           ;MAESTRO_SPI.c: 212:     Conversion1 ();
  1359  064C  148F               	bsf	15,1	;volatile
  1360                           
  1361                           ;MAESTRO_SPI.c: 213:     Lcd_Set_Cursor(2,7);
  1362  064D  100F               	bcf	15,0	;volatile
  1363  064E                     l171:
  1364  064E  0008               	return
  1365  064F                     __end_of_osc_config:
  1366                           
  1367                           	psect	text4
  1368  04F8                     __ptext4:	
  1369 ;; *************** function _lcd *****************
  1370 ;; Defined at:
  1371 ;;		line 245 in file "MAESTRO_SPI.c"
  1372 ;; Parameters:    Size  Location     Type
  1373 ;;		None
  1374 ;; Auto vars:     Size  Location     Type
  1375 ;;		None
  1376 ;; Return value:  Size  Location     Type
  1377 ;;                  1    wreg      void 
  1378 ;; Registers used:
  1379 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1380 ;; Tracked objects:
  1381 ;;		On entry : 0/0
  1382 ;;		On exit  : 0/0
  1383 ;;		Unchanged: 0/0
  1384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1385 ;;      Params:         0       0       0       0       0
  1386 ;;      Locals:         0       0       0       0       0
  1387 ;;      Temps:          0       1       0       0       0
  1388 ;;      Totals:         0       1       0       0       0
  1389 ;;Total ram usage:        1 bytes
  1390 ;; Hardware stack levels used:    1
  1391 ;; Hardware stack levels required when called:    4
  1392 ;; This function calls:
  1393 ;;		_Conversion1
  1394 ;;		_Conversion2
  1395 ;;		_Conversion3
  1396 ;;		_Lcd_Set_Cursor
  1397 ;;		_Lcd_Write_String
  1398 ;; This function is called by:
  1399 ;;		_main
  1400 ;; This function uses a non-reentrant model
  1401 ;;
  1402                           
  1403                           
  1404                           ;psect for function _lcd
  1405  04F8                     _lcd:
  1406  04F8                     l1879:	
  1407                           ;incstack = 0
  1408                           ; Regs used in _lcd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1409                           
  1410                           
  1411                           ;MAESTRO_SPI.c: 247:         w2 = dato_push % 10;
  1412  04F8  01F6               	clrf	Lcd_Set_Cursor@b
  1413  04F9  0AF6               	incf	Lcd_Set_Cursor@b,f
  1414  04FA  3000               	movlw	0
  1415  04FB  120A  118A  2588  120A  118A  	fcall	_Lcd_Set_Cursor
  1416  0500                     l1881:
  1417                           
  1418                           ;MAESTRO_SPI.c: 248:         Lcd_Write_Char(w1+48);
  1419  0500  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1420  0501  120A  118A  2563  120A  118A  	fcall	_Lcd_Write_String
  1421  0506                     l1883:
  1422                           
  1423                           ;MAESTRO_SPI.c: 249:         Lcd_Write_Char(w2+48);
  1424  0506  01F6               	clrf	Lcd_Set_Cursor@b
  1425  0507  3002               	movlw	2
  1426  0508  120A  118A  2588  120A  118A  	fcall	_Lcd_Set_Cursor
  1427  050D                     l1885:
  1428                           
  1429                           ;MAESTRO_SPI.c: 250:         virtual_display2();
  1430  050D  120A  118A  214C  120A  118A  	fcall	_Conversion1
  1431  0512                     l1887:
  1432                           
  1433                           ;MAESTRO_SPI.c: 251:     }
  1434  0512  3007               	movlw	7
  1435  0513  1283               	bcf	3,5	;RP0=0, select bank0
  1436  0514  1303               	bcf	3,6	;RP1=0, select bank0
  1437  0515  00C3               	movwf	??_lcd
  1438  0516  0843               	movf	??_lcd,w
  1439  0517  00F6               	movwf	Lcd_Set_Cursor@b
  1440  0518  3002               	movlw	2
  1441  0519  120A  118A  2588  120A  118A  	fcall	_Lcd_Set_Cursor
  1442  051E                     l1889:
  1443                           
  1444                           ;MAESTRO_SPI.c: 252: }
  1445  051E  120A  118A  22C9  120A  118A  	fcall	_Conversion2
  1446  0523                     l1891:
  1447                           
  1448                           ;MAESTRO_SPI.c: 253: 
  1449  0523  300C               	movlw	12
  1450  0524  1283               	bcf	3,5	;RP0=0, select bank0
  1451  0525  1303               	bcf	3,6	;RP1=0, select bank0
  1452  0526  00C3               	movwf	??_lcd
  1453  0527  0843               	movf	??_lcd,w
  1454  0528  00F6               	movwf	Lcd_Set_Cursor@b
  1455  0529  3002               	movlw	2
  1456  052A  120A  118A  2588  120A  118A  	fcall	_Lcd_Set_Cursor
  1457  052F                     l1893:
  1458                           
  1459                           ;MAESTRO_SPI.c: 254: void Conversion3 ()
  1460  052F  120A  118A  238F  120A  118A  	fcall	_Conversion3
  1461  0534                     l183:
  1462  0534  0008               	return
  1463  0535                     __end_of_lcd:
  1464                           
  1465                           	psect	text5
  1466  0563                     __ptext5:	
  1467 ;; *************** function _Lcd_Write_String *****************
  1468 ;; Defined at:
  1469 ;;		line 78 in file "LCD_SPI.c"
  1470 ;; Parameters:    Size  Location     Type
  1471 ;;  a               1    wreg     PTR unsigned char 
  1472 ;;		 -> STR_1(17), 
  1473 ;; Auto vars:     Size  Location     Type
  1474 ;;  a               1    7[COMMON] PTR unsigned char 
  1475 ;;		 -> STR_1(17), 
  1476 ;;  i               2    5[COMMON] int 
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  1    wreg      void 
  1479 ;; Registers used:
  1480 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1486 ;;      Params:         0       0       0       0       0
  1487 ;;      Locals:         3       0       0       0       0
  1488 ;;      Temps:          0       0       0       0       0
  1489 ;;      Totals:         3       0       0       0       0
  1490 ;;Total ram usage:        3 bytes
  1491 ;; Hardware stack levels used:    1
  1492 ;; Hardware stack levels required when called:    3
  1493 ;; This function calls:
  1494 ;;		_Lcd_Write_Char
  1495 ;; This function is called by:
  1496 ;;		_lcd
  1497 ;; This function uses a non-reentrant model
  1498 ;;
  1499                           
  1500                           
  1501                           ;psect for function _Lcd_Write_String
  1502  0563                     _Lcd_Write_String:
  1503                           
  1504                           ;incstack = 0
  1505                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1506                           ;Lcd_Write_String@a stored from wreg
  1507  0563  00F7               	movwf	Lcd_Write_String@a
  1508  0564                     l1557:
  1509                           
  1510                           ;LCD_SPI.c: 78: void Lcd_Write_String(char *a);LCD_SPI.c: 79: {;LCD_SPI.c: 80:     int i
      +                          ;;LCD_SPI.c: 81:     for (i = 0; a[i] != '\0'; i++)
  1511  0564  01F5               	clrf	Lcd_Write_String@i
  1512  0565  01F6               	clrf	Lcd_Write_String@i+1
  1513  0566  2D7A               	goto	l1563
  1514  0567                     l1559:
  1515                           
  1516                           ;LCD_SPI.c: 82:         Lcd_Write_Char(a[i]);
  1517  0567  0875               	movf	Lcd_Write_String@i,w
  1518  0568  0777               	addwf	Lcd_Write_String@a,w
  1519  0569  0084               	movwf	4
  1520  056A  120A  118A  25E4  120A  118A  	fcall	stringdir
  1521  056F  120A  118A  25FB  120A  118A  	fcall	_Lcd_Write_Char
  1522  0574                     l1561:
  1523  0574  3001               	movlw	1
  1524  0575  07F5               	addwf	Lcd_Write_String@i,f
  1525  0576  1803               	skipnc
  1526  0577  0AF6               	incf	Lcd_Write_String@i+1,f
  1527  0578  3000               	movlw	0
  1528  0579  07F6               	addwf	Lcd_Write_String@i+1,f
  1529  057A                     l1563:
  1530  057A  0875               	movf	Lcd_Write_String@i,w
  1531  057B  0777               	addwf	Lcd_Write_String@a,w
  1532  057C  0084               	movwf	4
  1533  057D  120A  118A  25E4  120A  118A  	fcall	stringdir
  1534  0582  3A00               	xorlw	0
  1535  0583  1D03               	skipz
  1536  0584  2D86               	goto	u571
  1537  0585  2D87               	goto	u570
  1538  0586                     u571:
  1539  0586  2D67               	goto	l1559
  1540  0587                     u570:
  1541  0587                     l260:
  1542  0587  0008               	return
  1543  0588                     __end_of_Lcd_Write_String:
  1544                           
  1545                           	psect	text6
  1546  0588                     __ptext6:	
  1547 ;; *************** function _Lcd_Set_Cursor *****************
  1548 ;; Defined at:
  1549 ;;		line 63 in file "LCD_SPI.c"
  1550 ;; Parameters:    Size  Location     Type
  1551 ;;  a               1    wreg     unsigned char 
  1552 ;;  b               1    6[COMMON] unsigned char 
  1553 ;; Auto vars:     Size  Location     Type
  1554 ;;  a               1    8[COMMON] unsigned char 
  1555 ;;  temp            1    9[COMMON] unsigned char 
  1556 ;; Return value:  Size  Location     Type
  1557 ;;                  1    wreg      void 
  1558 ;; Registers used:
  1559 ;;		wreg, status,2, status,0, pclath, cstack
  1560 ;; Tracked objects:
  1561 ;;		On entry : 0/0
  1562 ;;		On exit  : 0/0
  1563 ;;		Unchanged: 0/0
  1564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1565 ;;      Params:         1       0       0       0       0
  1566 ;;      Locals:         2       0       0       0       0
  1567 ;;      Temps:          1       0       0       0       0
  1568 ;;      Totals:         4       0       0       0       0
  1569 ;;Total ram usage:        4 bytes
  1570 ;; Hardware stack levels used:    1
  1571 ;; Hardware stack levels required when called:    3
  1572 ;; This function calls:
  1573 ;;		_Lcd_Cmd
  1574 ;; This function is called by:
  1575 ;;		_lcd
  1576 ;; This function uses a non-reentrant model
  1577 ;;
  1578                           
  1579                           
  1580                           ;psect for function _Lcd_Set_Cursor
  1581  0588                     _Lcd_Set_Cursor:
  1582                           
  1583                           ;incstack = 0
  1584                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1585                           ;Lcd_Set_Cursor@a stored from wreg
  1586  0588  00F8               	movwf	Lcd_Set_Cursor@a
  1587  0589                     l1545:
  1588                           
  1589                           ;LCD_SPI.c: 63: void Lcd_Set_Cursor(char a, char b);LCD_SPI.c: 64: {;LCD_SPI.c: 65:     
      +                          char temp;;LCD_SPI.c: 66:     if (a == 1)
  1590  0589  0378               	decf	Lcd_Set_Cursor@a,w
  1591  058A  1D03               	btfss	3,2
  1592  058B  2D8D               	goto	u551
  1593  058C  2D8E               	goto	u550
  1594  058D                     u551:
  1595  058D  2D9A               	goto	l1551
  1596  058E                     u550:
  1597  058E                     l1547:
  1598                           
  1599                           ;LCD_SPI.c: 67:     {;LCD_SPI.c: 68:         temp = 0x80 + b;
  1600  058E  0876               	movf	Lcd_Set_Cursor@b,w
  1601  058F  3E80               	addlw	128
  1602  0590  00F7               	movwf	??_Lcd_Set_Cursor
  1603  0591  0877               	movf	??_Lcd_Set_Cursor,w
  1604  0592  00F9               	movwf	Lcd_Set_Cursor@temp
  1605  0593                     l1549:
  1606                           
  1607                           ;LCD_SPI.c: 69:         Lcd_Cmd(temp);
  1608  0593  0879               	movf	Lcd_Set_Cursor@temp,w
  1609  0594  120A  118A  25CA  120A  118A  	fcall	_Lcd_Cmd
  1610                           
  1611                           ;LCD_SPI.c: 70:     }
  1612  0599  2DAB               	goto	l254
  1613  059A                     l1551:
  1614  059A  3002               	movlw	2
  1615  059B  0678               	xorwf	Lcd_Set_Cursor@a,w
  1616  059C  1D03               	btfss	3,2
  1617  059D  2D9F               	goto	u561
  1618  059E  2DA0               	goto	u560
  1619  059F                     u561:
  1620  059F  2DAB               	goto	l254
  1621  05A0                     u560:
  1622  05A0                     l1553:
  1623                           
  1624                           ;LCD_SPI.c: 72:     {;LCD_SPI.c: 73:         temp = 0xC0 + b;
  1625  05A0  0876               	movf	Lcd_Set_Cursor@b,w
  1626  05A1  3EC0               	addlw	192
  1627  05A2  00F7               	movwf	??_Lcd_Set_Cursor
  1628  05A3  0877               	movf	??_Lcd_Set_Cursor,w
  1629  05A4  00F9               	movwf	Lcd_Set_Cursor@temp
  1630  05A5                     l1555:
  1631                           
  1632                           ;LCD_SPI.c: 74:         Lcd_Cmd(temp);
  1633  05A5  0879               	movf	Lcd_Set_Cursor@temp,w
  1634  05A6  120A  118A  25CA  120A  118A  	fcall	_Lcd_Cmd
  1635  05AB                     l254:
  1636  05AB  0008               	return
  1637  05AC                     __end_of_Lcd_Set_Cursor:
  1638                           
  1639                           	psect	text7
  1640  038F                     __ptext7:	
  1641 ;; *************** function _Conversion3 *****************
  1642 ;; Defined at:
  1643 ;;		line 292 in file "MAESTRO_SPI.c"
  1644 ;; Parameters:    Size  Location     Type
  1645 ;;		None
  1646 ;; Auto vars:     Size  Location     Type
  1647 ;;		None
  1648 ;; Return value:  Size  Location     Type
  1649 ;;                  1    wreg      void 
  1650 ;; Registers used:
  1651 ;;		wreg, status,2, status,0, pclath, cstack
  1652 ;; Tracked objects:
  1653 ;;		On entry : 0/0
  1654 ;;		On exit  : 0/0
  1655 ;;		Unchanged: 0/0
  1656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1657 ;;      Params:         0       0       0       0       0
  1658 ;;      Locals:         0       0       0       0       0
  1659 ;;      Temps:          0       3       0       0       0
  1660 ;;      Totals:         0       3       0       0       0
  1661 ;;Total ram usage:        3 bytes
  1662 ;; Hardware stack levels used:    1
  1663 ;; Hardware stack levels required when called:    3
  1664 ;; This function calls:
  1665 ;;		_Lcd_Write_Char
  1666 ;;		___awdiv
  1667 ;;		___awmod
  1668 ;;		_virtual_display3
  1669 ;; This function is called by:
  1670 ;;		_lcd
  1671 ;; This function uses a non-reentrant model
  1672 ;;
  1673                           
  1674                           
  1675                           ;psect for function _Conversion3
  1676  038F                     _Conversion3:
  1677  038F                     l1855:	
  1678                           ;incstack = 0
  1679                           ; Regs used in _Conversion3: [wreg+status,2+status,0+pclath+cstack]
  1680                           
  1681                           
  1682                           ;MAESTRO_SPI.c: 294:     {
  1683  038F  087B               	movf	_dato_pot,w
  1684  0390  1283               	bcf	3,5	;RP0=0, select bank0
  1685  0391  1303               	bcf	3,6	;RP1=0, select bank0
  1686  0392  00C0               	movwf	??_Conversion3
  1687  0393  0740               	addwf	??_Conversion3,w
  1688  0394  00C1               	movwf	??_Conversion3+1
  1689  0395  0841               	movf	??_Conversion3+1,w
  1690  0396  00AF               	movwf	_voltajey
  1691  0397                     l1857:
  1692                           
  1693                           ;MAESTRO_SPI.c: 295:         if (dato_push < 10)
  1694  0397  3064               	movlw	100
  1695  0398  00F2               	movwf	___awdiv@divisor
  1696  0399  3000               	movlw	0
  1697  039A  00F3               	movwf	___awdiv@divisor+1
  1698  039B  082F               	movf	_voltajey,w
  1699  039C  00C0               	movwf	??_Conversion3
  1700  039D  01C1               	clrf	??_Conversion3+1
  1701  039E  0840               	movf	??_Conversion3,w
  1702  039F  00F4               	movwf	___awdiv@dividend
  1703  03A0  0841               	movf	??_Conversion3+1,w
  1704  03A1  00F5               	movwf	___awdiv@dividend+1
  1705  03A2  120A  118A  2260  120A  118A  	fcall	___awdiv
  1706  03A7  0872               	movf	?___awdiv,w
  1707  03A8  1283               	bcf	3,5	;RP0=0, select bank0
  1708  03A9  1303               	bcf	3,6	;RP1=0, select bank0
  1709  03AA  00C2               	movwf	??_Conversion3+2
  1710  03AB  0842               	movf	??_Conversion3+2,w
  1711  03AC  00AE               	movwf	_unidady
  1712  03AD                     l1859:
  1713                           
  1714                           ;MAESTRO_SPI.c: 296:         {
  1715  03AD  3064               	movlw	100
  1716  03AE  00F2               	movwf	___awmod@divisor
  1717  03AF  3000               	movlw	0
  1718  03B0  00F3               	movwf	___awmod@divisor+1
  1719  03B1  082F               	movf	_voltajey,w
  1720  03B2  00C0               	movwf	??_Conversion3
  1721  03B3  01C1               	clrf	??_Conversion3+1
  1722  03B4  0840               	movf	??_Conversion3,w
  1723  03B5  00F4               	movwf	___awmod@dividend
  1724  03B6  0841               	movf	??_Conversion3+1,w
  1725  03B7  00F5               	movwf	___awmod@dividend+1
  1726  03B8  120A  118A  23F1  120A  118A  	fcall	___awmod
  1727  03BD  0872               	movf	?___awmod,w
  1728  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  1729  03BF  1303               	bcf	3,6	;RP1=0, select bank0
  1730  03C0  00C2               	movwf	??_Conversion3+2
  1731  03C1  0842               	movf	??_Conversion3+2,w
  1732  03C2  00B3               	movwf	_x1z
  1733  03C3                     l1861:
  1734                           
  1735                           ;MAESTRO_SPI.c: 297:             escribir_char (67);
  1736  03C3  01AB               	clrf	_x2y
  1737  03C4                     l1863:
  1738                           
  1739                           ;MAESTRO_SPI.c: 298:             escribir_char (79);
  1740  03C4  01AC               	clrf	_y1y
  1741  03C5                     l1865:
  1742                           
  1743                           ;MAESTRO_SPI.c: 299:             escribir_char (78);
  1744  03C5  01AA               	clrf	_y2y
  1745  03C6                     l1867:
  1746                           
  1747                           ;MAESTRO_SPI.c: 300:             escribir_char (84);
  1748  03C6  082E               	movf	_unidady,w
  1749  03C7  3E30               	addlw	48
  1750  03C8  120A  118A  25FB  120A  118A  	fcall	_Lcd_Write_Char
  1751  03CD                     l1869:
  1752                           
  1753                           ;MAESTRO_SPI.c: 301:             escribir_char (58);
  1754  03CD  302E               	movlw	46
  1755  03CE  120A  118A  25FB  120A  118A  	fcall	_Lcd_Write_Char
  1756  03D3                     l1871:
  1757                           
  1758                           ;MAESTRO_SPI.c: 302:             escribir_char (48);
  1759  03D3  1283               	bcf	3,5	;RP0=0, select bank0
  1760  03D4  1303               	bcf	3,6	;RP1=0, select bank0
  1761  03D5  082B               	movf	_x2y,w
  1762  03D6  3E30               	addlw	48
  1763  03D7  120A  118A  25FB  120A  118A  	fcall	_Lcd_Write_Char
  1764  03DC                     l1873:
  1765                           
  1766                           ;MAESTRO_SPI.c: 303:             escribir_char (dato_push+48);
  1767  03DC  1283               	bcf	3,5	;RP0=0, select bank0
  1768  03DD  1303               	bcf	3,6	;RP1=0, select bank0
  1769  03DE  082A               	movf	_y2y,w
  1770  03DF  3E30               	addlw	48
  1771  03E0  120A  118A  25FB  120A  118A  	fcall	_Lcd_Write_Char
  1772  03E5                     l1875:
  1773                           
  1774                           ;MAESTRO_SPI.c: 304:             escribir_char (32);
  1775  03E5  3056               	movlw	86
  1776  03E6  120A  118A  25FB  120A  118A  	fcall	_Lcd_Write_Char
  1777  03EB                     l1877:
  1778                           
  1779                           ;MAESTRO_SPI.c: 305:             escribir_char (32);
  1780  03EB  120A  118A  244A  120A  118A  	fcall	_virtual_display3
  1781  03F0                     l195:
  1782  03F0  0008               	return
  1783  03F1                     __end_of_Conversion3:
  1784                           
  1785                           	psect	text8
  1786  044A                     __ptext8:	
  1787 ;; *************** function _virtual_display3 *****************
  1788 ;; Defined at:
  1789 ;;		line 368 in file "MAESTRO_SPI.c"
  1790 ;; Parameters:    Size  Location     Type
  1791 ;;		None
  1792 ;; Auto vars:     Size  Location     Type
  1793 ;;		None
  1794 ;; Return value:  Size  Location     Type
  1795 ;;                  1    wreg      void 
  1796 ;; Registers used:
  1797 ;;		wreg, status,2, status,0, pclath, cstack
  1798 ;; Tracked objects:
  1799 ;;		On entry : 0/0
  1800 ;;		On exit  : 0/0
  1801 ;;		Unchanged: 0/0
  1802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1803 ;;      Params:         0       0       0       0       0
  1804 ;;      Locals:         0       0       0       0       0
  1805 ;;      Temps:          0       0       0       0       0
  1806 ;;      Totals:         0       0       0       0       0
  1807 ;;Total ram usage:        0 bytes
  1808 ;; Hardware stack levels used:    1
  1809 ;; Hardware stack levels required when called:    2
  1810 ;; This function calls:
  1811 ;;		_escribir_char
  1812 ;; This function is called by:
  1813 ;;		_Conversion3
  1814 ;; This function uses a non-reentrant model
  1815 ;;
  1816                           
  1817                           
  1818                           ;psect for function _virtual_display3
  1819  044A                     _virtual_display3:
  1820  044A                     l1389:	
  1821                           ;incstack = 0
  1822                           ; Regs used in _virtual_display3: [wreg+status,2+status,0+pclath+cstack]
  1823                           
  1824  044A  3010               	movlw	16
  1825  044B  1283               	bcf	3,5	;RP0=0, select bank0
  1826  044C  1303               	bcf	3,6	;RP1=0, select bank0
  1827  044D  0222               	subwf	_velocidad3,w
  1828  044E  1C03               	skipc
  1829  044F  2C51               	goto	u351
  1830  0450  2C52               	goto	u350
  1831  0451                     u351:
  1832  0451  2CA0               	goto	l209
  1833  0452                     u350:
  1834  0452                     l1391:
  1835  0452  3054               	movlw	84
  1836  0453  120A  118A  264F  120A  118A  	fcall	_escribir_char
  1837  0458  3045               	movlw	69
  1838  0459  120A  118A  264F  120A  118A  	fcall	_escribir_char
  1839  045E  304D               	movlw	77
  1840  045F  120A  118A  264F  120A  118A  	fcall	_escribir_char
  1841  0464  3050               	movlw	80
  1842  0465  120A  118A  264F  120A  118A  	fcall	_escribir_char
  1843  046A  303A               	movlw	58
  1844  046B  120A  118A  264F  120A  118A  	fcall	_escribir_char
  1845  0470  1283               	bcf	3,5	;RP0=0, select bank0
  1846  0471  1303               	bcf	3,6	;RP1=0, select bank0
  1847  0472  082E               	movf	_unidady,w
  1848  0473  3E30               	addlw	48
  1849  0474  120A  118A  264F  120A  118A  	fcall	_escribir_char
  1850  0479  302E               	movlw	46
  1851  047A  120A  118A  264F  120A  118A  	fcall	_escribir_char
  1852  047F  1283               	bcf	3,5	;RP0=0, select bank0
  1853  0480  1303               	bcf	3,6	;RP1=0, select bank0
  1854  0481  082B               	movf	_x2y,w
  1855  0482  3E30               	addlw	48
  1856  0483  120A  118A  264F  120A  118A  	fcall	_escribir_char
  1857  0488  1283               	bcf	3,5	;RP0=0, select bank0
  1858  0489  1303               	bcf	3,6	;RP1=0, select bank0
  1859  048A  082A               	movf	_y2y,w
  1860  048B  3E30               	addlw	48
  1861  048C  120A  118A  264F  120A  118A  	fcall	_escribir_char
  1862  0491  3056               	movlw	86
  1863  0492  120A  118A  264F  120A  118A  	fcall	_escribir_char
  1864  0497  300D               	movlw	13
  1865  0498  120A  118A  264F  120A  118A  	fcall	_escribir_char
  1866  049D                     l1393:
  1867  049D  1283               	bcf	3,5	;RP0=0, select bank0
  1868  049E  1303               	bcf	3,6	;RP1=0, select bank0
  1869  049F  01A2               	clrf	_velocidad3
  1870  04A0                     l209:
  1871  04A0  0008               	return
  1872  04A1                     __end_of_virtual_display3:
  1873                           
  1874                           	psect	text9
  1875  02C9                     __ptext9:	
  1876 ;; *************** function _Conversion2 *****************
  1877 ;; Defined at:
  1878 ;;		line 274 in file "MAESTRO_SPI.c"
  1879 ;; Parameters:    Size  Location     Type
  1880 ;;		None
  1881 ;; Auto vars:     Size  Location     Type
  1882 ;;		None
  1883 ;; Return value:  Size  Location     Type
  1884 ;;                  1    wreg      void 
  1885 ;; Registers used:
  1886 ;;		wreg, status,2, status,0, pclath, cstack
  1887 ;; Tracked objects:
  1888 ;;		On entry : 0/0
  1889 ;;		On exit  : 0/0
  1890 ;;		Unchanged: 0/0
  1891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1892 ;;      Params:         0       0       0       0       0
  1893 ;;      Locals:         0       0       0       0       0
  1894 ;;      Temps:          0       3       0       0       0
  1895 ;;      Totals:         0       3       0       0       0
  1896 ;;Total ram usage:        3 bytes
  1897 ;; Hardware stack levels used:    1
  1898 ;; Hardware stack levels required when called:    3
  1899 ;; This function calls:
  1900 ;;		_Lcd_Write_Char
  1901 ;;		___awdiv
  1902 ;;		___awmod
  1903 ;;		_virtual_display2
  1904 ;; This function is called by:
  1905 ;;		_lcd
  1906 ;; This function uses a non-reentrant model
  1907 ;;
  1908                           
  1909                           
  1910                           ;psect for function _Conversion2
  1911  02C9                     _Conversion2:
  1912  02C9                     l1847:	
  1913                           ;incstack = 0
  1914                           ; Regs used in _Conversion2: [wreg+status,2+status,0+pclath+cstack]
  1915                           
  1916                           
  1917                           ;MAESTRO_SPI.c: 276:         escribir_char (67);
  1918  02C9  300A               	movlw	10
  1919  02CA  027A               	subwf	_dato_push,w
  1920  02CB  1803               	skipnc
  1921  02CC  2ACE               	goto	u701
  1922  02CD  2ACF               	goto	u700
  1923  02CE                     u701:
  1924  02CE  2AE2               	goto	l1851
  1925  02CF                     u700:
  1926  02CF                     l1849:
  1927                           
  1928                           ;MAESTRO_SPI.c: 277:         escribir_char (58);;MAESTRO_SPI.c: 278:         escribir_ch
      +                          ar (unidad+48);
  1929  02CF  3030               	movlw	48
  1930  02D0  120A  118A  25FB  120A  118A  	fcall	_Lcd_Write_Char
  1931                           
  1932                           ;MAESTRO_SPI.c: 279:         escribir_char (46);
  1933  02D5  087A               	movf	_dato_push,w
  1934  02D6  3E30               	addlw	48
  1935  02D7  120A  118A  25FB  120A  118A  	fcall	_Lcd_Write_Char
  1936                           
  1937                           ;MAESTRO_SPI.c: 280:         escribir_char (x2+48);
  1938  02DC  120A  118A  201E  120A  118A  	fcall	_virtual_display2
  1939                           
  1940                           ;MAESTRO_SPI.c: 281:         escribir_char (y2+48);
  1941  02E1  2B2B               	goto	l192
  1942  02E2                     l1851:
  1943  02E2  300A               	movlw	10
  1944  02E3  027A               	subwf	_dato_push,w
  1945  02E4  1C03               	skipc
  1946  02E5  2AE7               	goto	u711
  1947  02E6  2AE8               	goto	u710
  1948  02E7                     u711:
  1949  02E7  2B2B               	goto	l192
  1950  02E8                     u710:
  1951  02E8                     l1853:
  1952                           
  1953                           ;MAESTRO_SPI.c: 283:         escribir_char (32);;MAESTRO_SPI.c: 284:         escribir_ch
      +                          ar (32);
  1954  02E8  300A               	movlw	10
  1955  02E9  00F2               	movwf	___awdiv@divisor
  1956  02EA  3000               	movlw	0
  1957  02EB  00F3               	movwf	___awdiv@divisor+1
  1958  02EC  087A               	movf	_dato_push,w
  1959  02ED  1283               	bcf	3,5	;RP0=0, select bank0
  1960  02EE  1303               	bcf	3,6	;RP1=0, select bank0
  1961  02EF  00C0               	movwf	??_Conversion2
  1962  02F0  01C1               	clrf	??_Conversion2+1
  1963  02F1  0840               	movf	??_Conversion2,w
  1964  02F2  00F4               	movwf	___awdiv@dividend
  1965  02F3  0841               	movf	??_Conversion2+1,w
  1966  02F4  00F5               	movwf	___awdiv@dividend+1
  1967  02F5  120A  118A  2260  120A  118A  	fcall	___awdiv
  1968  02FA  0872               	movf	?___awdiv,w
  1969  02FB  1283               	bcf	3,5	;RP0=0, select bank0
  1970  02FC  1303               	bcf	3,6	;RP1=0, select bank0
  1971  02FD  00C2               	movwf	??_Conversion2+2
  1972  02FE  0842               	movf	??_Conversion2+2,w
  1973  02FF  00A7               	movwf	_w1
  1974                           
  1975                           ;MAESTRO_SPI.c: 285:         escribir_char (32);
  1976  0300  300A               	movlw	10
  1977  0301  00F2               	movwf	___awmod@divisor
  1978  0302  3000               	movlw	0
  1979  0303  00F3               	movwf	___awmod@divisor+1
  1980  0304  087A               	movf	_dato_push,w
  1981  0305  00C0               	movwf	??_Conversion2
  1982  0306  01C1               	clrf	??_Conversion2+1
  1983  0307  0840               	movf	??_Conversion2,w
  1984  0308  00F4               	movwf	___awmod@dividend
  1985  0309  0841               	movf	??_Conversion2+1,w
  1986  030A  00F5               	movwf	___awmod@dividend+1
  1987  030B  120A  118A  23F1  120A  118A  	fcall	___awmod
  1988  0310  0872               	movf	?___awmod,w
  1989  0311  1283               	bcf	3,5	;RP0=0, select bank0
  1990  0312  1303               	bcf	3,6	;RP1=0, select bank0
  1991  0313  00C2               	movwf	??_Conversion2+2
  1992  0314  0842               	movf	??_Conversion2+2,w
  1993  0315  00A6               	movwf	_w2
  1994                           
  1995                           ;MAESTRO_SPI.c: 286:         escribir_char (32);
  1996  0316  0827               	movf	_w1,w
  1997  0317  3E30               	addlw	48
  1998  0318  120A  118A  25FB  120A  118A  	fcall	_Lcd_Write_Char
  1999                           
  2000                           ;MAESTRO_SPI.c: 287:         velocidad1 = 0;
  2001  031D  1283               	bcf	3,5	;RP0=0, select bank0
  2002  031E  1303               	bcf	3,6	;RP1=0, select bank0
  2003  031F  0826               	movf	_w2,w
  2004  0320  3E30               	addlw	48
  2005  0321  120A  118A  25FB  120A  118A  	fcall	_Lcd_Write_Char
  2006                           
  2007                           ;MAESTRO_SPI.c: 288:     }
  2008  0326  120A  118A  201E  120A  118A  	fcall	_virtual_display2
  2009  032B                     l192:
  2010  032B  0008               	return
  2011  032C                     __end_of_Conversion2:
  2012                           
  2013                           	psect	text10
  2014  001E                     __ptext10:	
  2015 ;; *************** function _virtual_display2 *****************
  2016 ;; Defined at:
  2017 ;;		line 329 in file "MAESTRO_SPI.c"
  2018 ;; Parameters:    Size  Location     Type
  2019 ;;		None
  2020 ;; Auto vars:     Size  Location     Type
  2021 ;;		None
  2022 ;; Return value:  Size  Location     Type
  2023 ;;                  1    wreg      void 
  2024 ;; Registers used:
  2025 ;;		wreg, status,2, status,0, pclath, cstack
  2026 ;; Tracked objects:
  2027 ;;		On entry : 0/0
  2028 ;;		On exit  : 0/0
  2029 ;;		Unchanged: 0/0
  2030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2031 ;;      Params:         0       0       0       0       0
  2032 ;;      Locals:         0       0       0       0       0
  2033 ;;      Temps:          0       0       0       0       0
  2034 ;;      Totals:         0       0       0       0       0
  2035 ;;Total ram usage:        0 bytes
  2036 ;; Hardware stack levels used:    1
  2037 ;; Hardware stack levels required when called:    2
  2038 ;; This function calls:
  2039 ;;		_escribir_char
  2040 ;; This function is called by:
  2041 ;;		_Conversion2
  2042 ;; This function uses a non-reentrant model
  2043 ;;
  2044                           
  2045                           
  2046                           ;psect for function _virtual_display2
  2047  001E                     _virtual_display2:
  2048  001E                     l1377:	
  2049                           ;incstack = 0
  2050                           ; Regs used in _virtual_display2: [wreg+status,2+status,0+pclath+cstack]
  2051                           
  2052                           
  2053                           ;MAESTRO_SPI.c: 331: {
  2054  001E  3010               	movlw	16
  2055  001F  1283               	bcf	3,5	;RP0=0, select bank0
  2056  0020  1303               	bcf	3,6	;RP1=0, select bank0
  2057  0021  0223               	subwf	_velocidad2,w
  2058  0022  1C03               	skipc
  2059  0023  2825               	goto	u331
  2060  0024  2826               	goto	u330
  2061  0025                     u331:
  2062  0025  28BC               	goto	l205
  2063  0026                     u330:
  2064  0026                     l1379:
  2065                           
  2066                           ;MAESTRO_SPI.c: 332:     if (velocidad3 > 15);MAESTRO_SPI.c: 333:     {
  2067  0026  300A               	movlw	10
  2068  0027  027A               	subwf	_dato_push,w
  2069  0028  1803               	skipnc
  2070  0029  282B               	goto	u341
  2071  002A  282C               	goto	u340
  2072  002B                     u341:
  2073  002B  2873               	goto	l1385
  2074  002C                     u340:
  2075  002C                     l1381:
  2076                           
  2077                           ;MAESTRO_SPI.c: 334:         escribir_char (84);;MAESTRO_SPI.c: 335:         escribir_ch
      +                          ar (69);
  2078  002C  3043               	movlw	67
  2079  002D  120A  118A  264F  120A  118A  	fcall	_escribir_char
  2080                           
  2081                           ;MAESTRO_SPI.c: 336:         escribir_char (77);
  2082  0032  304F               	movlw	79
  2083  0033  120A  118A  264F  120A  118A  	fcall	_escribir_char
  2084                           
  2085                           ;MAESTRO_SPI.c: 337:         escribir_char (80);
  2086  0038  304E               	movlw	78
  2087  0039  120A  118A  264F  120A  118A  	fcall	_escribir_char
  2088                           
  2089                           ;MAESTRO_SPI.c: 338:         escribir_char (58);
  2090  003E  3054               	movlw	84
  2091  003F  120A  118A  264F  120A  118A  	fcall	_escribir_char
  2092                           
  2093                           ;MAESTRO_SPI.c: 339:         escribir_char (unidady+48);
  2094  0044  303A               	movlw	58
  2095  0045  120A  118A  264F  120A  118A  	fcall	_escribir_char
  2096                           
  2097                           ;MAESTRO_SPI.c: 340:         escribir_char (46);
  2098  004A  3030               	movlw	48
  2099  004B  120A  118A  264F  120A  118A  	fcall	_escribir_char
  2100                           
  2101                           ;MAESTRO_SPI.c: 341:         escribir_char (x2y+48);
  2102  0050  087A               	movf	_dato_push,w
  2103  0051  3E30               	addlw	48
  2104  0052  120A  118A  264F  120A  118A  	fcall	_escribir_char
  2105                           
  2106                           ;MAESTRO_SPI.c: 342:         escribir_char (y2y+48);
  2107  0057  3020               	movlw	32
  2108  0058  120A  118A  264F  120A  118A  	fcall	_escribir_char
  2109                           
  2110                           ;MAESTRO_SPI.c: 343:         escribir_char (86);
  2111  005D  3020               	movlw	32
  2112  005E  120A  118A  264F  120A  118A  	fcall	_escribir_char
  2113                           
  2114                           ;MAESTRO_SPI.c: 344:         escribir_char ('\r');
  2115  0063  3020               	movlw	32
  2116  0064  120A  118A  264F  120A  118A  	fcall	_escribir_char
  2117                           
  2118                           ;MAESTRO_SPI.c: 345:         velocidad3 = 0;
  2119  0069  3020               	movlw	32
  2120  006A  120A  118A  264F  120A  118A  	fcall	_escribir_char
  2121  006F                     l1383:
  2122                           
  2123                           ;MAESTRO_SPI.c: 347: }
  2124  006F  1283               	bcf	3,5	;RP0=0, select bank0
  2125  0070  1303               	bcf	3,6	;RP1=0, select bank0
  2126  0071  01A3               	clrf	_velocidad2
  2127                           
  2128                           ;MAESTRO_SPI.c: 348: 
  2129  0072  28BC               	goto	l205
  2130  0073                     l1385:
  2131                           
  2132                           ;MAESTRO_SPI.c: 350: {;MAESTRO_SPI.c: 351:     TXREG = valor;
  2133  0073  3043               	movlw	67
  2134  0074  120A  118A  264F  120A  118A  	fcall	_escribir_char
  2135                           
  2136                           ;MAESTRO_SPI.c: 352:     while (PIR1bits.TXIF == 0);
  2137  0079  304F               	movlw	79
  2138  007A  120A  118A  264F  120A  118A  	fcall	_escribir_char
  2139                           
  2140                           ;MAESTRO_SPI.c: 353: }
  2141  007F  304E               	movlw	78
  2142  0080  120A  118A  264F  120A  118A  	fcall	_escribir_char
  2143  0085  3054               	movlw	84
  2144  0086  120A  118A  264F  120A  118A  	fcall	_escribir_char
  2145  008B  303A               	movlw	58
  2146  008C  120A  118A  264F  120A  118A  	fcall	_escribir_char
  2147  0091  1283               	bcf	3,5	;RP0=0, select bank0
  2148  0092  1303               	bcf	3,6	;RP1=0, select bank0
  2149  0093  0827               	movf	_w1,w
  2150  0094  3E30               	addlw	48
  2151  0095  120A  118A  264F  120A  118A  	fcall	_escribir_char
  2152  009A  1283               	bcf	3,5	;RP0=0, select bank0
  2153  009B  1303               	bcf	3,6	;RP1=0, select bank0
  2154  009C  0826               	movf	_w2,w
  2155  009D  3E30               	addlw	48
  2156  009E  120A  118A  264F  120A  118A  	fcall	_escribir_char
  2157  00A3  3020               	movlw	32
  2158  00A4  120A  118A  264F  120A  118A  	fcall	_escribir_char
  2159  00A9  3020               	movlw	32
  2160  00AA  120A  118A  264F  120A  118A  	fcall	_escribir_char
  2161  00AF  3020               	movlw	32
  2162  00B0  120A  118A  264F  120A  118A  	fcall	_escribir_char
  2163  00B5  3020               	movlw	32
  2164  00B6  120A  118A  264F  120A  118A  	fcall	_escribir_char
  2165  00BB  286F               	goto	l1383
  2166  00BC                     l205:
  2167  00BC  0008               	return
  2168  00BD                     __end_of_virtual_display2:
  2169                           
  2170                           	psect	text11
  2171  014C                     __ptext11:	
  2172 ;; *************** function _Conversion1 *****************
  2173 ;; Defined at:
  2174 ;;		line 258 in file "MAESTRO_SPI.c"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;		None
  2177 ;; Auto vars:     Size  Location     Type
  2178 ;;		None
  2179 ;; Return value:  Size  Location     Type
  2180 ;;                  1    wreg      void 
  2181 ;; Registers used:
  2182 ;;		wreg, status,2, status,0, pclath, cstack
  2183 ;; Tracked objects:
  2184 ;;		On entry : 0/0
  2185 ;;		On exit  : 0/0
  2186 ;;		Unchanged: 0/0
  2187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2188 ;;      Params:         0       0       0       0       0
  2189 ;;      Locals:         0       0       0       0       0
  2190 ;;      Temps:          0       3       0       0       0
  2191 ;;      Totals:         0       3       0       0       0
  2192 ;;Total ram usage:        3 bytes
  2193 ;; Hardware stack levels used:    1
  2194 ;; Hardware stack levels required when called:    3
  2195 ;; This function calls:
  2196 ;;		_Lcd_Write_Char
  2197 ;;		___awdiv
  2198 ;;		___awmod
  2199 ;;		_virtual_display1
  2200 ;; This function is called by:
  2201 ;;		_lcd
  2202 ;; This function uses a non-reentrant model
  2203 ;;
  2204                           
  2205                           
  2206                           ;psect for function _Conversion1
  2207  014C                     _Conversion1:
  2208  014C                     l1823:	
  2209                           ;incstack = 0
  2210                           ; Regs used in _Conversion1: [wreg+status,2+status,0+pclath+cstack]
  2211                           
  2212                           
  2213                           ;MAESTRO_SPI.c: 260:     y1y = x1y % 10;
  2214  014C  087B               	movf	_dato_pot,w
  2215  014D  1283               	bcf	3,5	;RP0=0, select bank0
  2216  014E  1303               	bcf	3,6	;RP1=0, select bank0
  2217  014F  00C0               	movwf	??_Conversion1
  2218  0150  0740               	addwf	??_Conversion1,w
  2219  0151  00C1               	movwf	??_Conversion1+1
  2220  0152  0841               	movf	??_Conversion1+1,w
  2221  0153  00BB               	movwf	_voltaje
  2222  0154                     l1825:
  2223                           
  2224                           ;MAESTRO_SPI.c: 261:     y2y = y1y / 1;
  2225  0154  3064               	movlw	100
  2226  0155  00F2               	movwf	___awdiv@divisor
  2227  0156  3000               	movlw	0
  2228  0157  00F3               	movwf	___awdiv@divisor+1
  2229  0158  083B               	movf	_voltaje,w
  2230  0159  00C0               	movwf	??_Conversion1
  2231  015A  01C1               	clrf	??_Conversion1+1
  2232  015B  0840               	movf	??_Conversion1,w
  2233  015C  00F4               	movwf	___awdiv@dividend
  2234  015D  0841               	movf	??_Conversion1+1,w
  2235  015E  00F5               	movwf	___awdiv@dividend+1
  2236  015F  120A  118A  2260  120A  118A  	fcall	___awdiv
  2237  0164  0872               	movf	?___awdiv,w
  2238  0165  1283               	bcf	3,5	;RP0=0, select bank0
  2239  0166  1303               	bcf	3,6	;RP1=0, select bank0
  2240  0167  00C2               	movwf	??_Conversion1+2
  2241  0168  0842               	movf	??_Conversion1+2,w
  2242  0169  00BA               	movwf	_unidad
  2243  016A                     l1827:
  2244                           
  2245                           ;MAESTRO_SPI.c: 262:     Lcd_Write_Char(unidady+48);
  2246  016A  3064               	movlw	100
  2247  016B  00F2               	movwf	___awmod@divisor
  2248  016C  3000               	movlw	0
  2249  016D  00F3               	movwf	___awmod@divisor+1
  2250  016E  083B               	movf	_voltaje,w
  2251  016F  00C0               	movwf	??_Conversion1
  2252  0170  01C1               	clrf	??_Conversion1+1
  2253  0171  0840               	movf	??_Conversion1,w
  2254  0172  00F4               	movwf	___awmod@dividend
  2255  0173  0841               	movf	??_Conversion1+1,w
  2256  0174  00F5               	movwf	___awmod@dividend+1
  2257  0175  120A  118A  23F1  120A  118A  	fcall	___awmod
  2258  017A  0872               	movf	?___awmod,w
  2259  017B  1283               	bcf	3,5	;RP0=0, select bank0
  2260  017C  1303               	bcf	3,6	;RP1=0, select bank0
  2261  017D  00C2               	movwf	??_Conversion1+2
  2262  017E  0842               	movf	??_Conversion1+2,w
  2263  017F  00B9               	movwf	_x1
  2264  0180                     l1829:
  2265                           
  2266                           ;MAESTRO_SPI.c: 263:     Lcd_Write_Char(46);
  2267  0180  300A               	movlw	10
  2268  0181  00F2               	movwf	___awdiv@divisor
  2269  0182  3000               	movlw	0
  2270  0183  00F3               	movwf	___awdiv@divisor+1
  2271  0184  0839               	movf	_x1,w
  2272  0185  00C0               	movwf	??_Conversion1
  2273  0186  01C1               	clrf	??_Conversion1+1
  2274  0187  0840               	movf	??_Conversion1,w
  2275  0188  00F4               	movwf	___awdiv@dividend
  2276  0189  0841               	movf	??_Conversion1+1,w
  2277  018A  00F5               	movwf	___awdiv@dividend+1
  2278  018B  120A  118A  2260  120A  118A  	fcall	___awdiv
  2279  0190  0872               	movf	?___awdiv,w
  2280  0191  1283               	bcf	3,5	;RP0=0, select bank0
  2281  0192  1303               	bcf	3,6	;RP1=0, select bank0
  2282  0193  00C2               	movwf	??_Conversion1+2
  2283  0194  0842               	movf	??_Conversion1+2,w
  2284  0195  00B7               	movwf	_x2
  2285  0196                     l1831:
  2286                           
  2287                           ;MAESTRO_SPI.c: 264:     Lcd_Write_Char(x2y+48);
  2288  0196  300A               	movlw	10
  2289  0197  00F2               	movwf	___awmod@divisor
  2290  0198  3000               	movlw	0
  2291  0199  00F3               	movwf	___awmod@divisor+1
  2292  019A  0839               	movf	_x1,w
  2293  019B  00C0               	movwf	??_Conversion1
  2294  019C  01C1               	clrf	??_Conversion1+1
  2295  019D  0840               	movf	??_Conversion1,w
  2296  019E  00F4               	movwf	___awmod@dividend
  2297  019F  0841               	movf	??_Conversion1+1,w
  2298  01A0  00F5               	movwf	___awmod@dividend+1
  2299  01A1  120A  118A  23F1  120A  118A  	fcall	___awmod
  2300  01A6  0872               	movf	?___awmod,w
  2301  01A7  1283               	bcf	3,5	;RP0=0, select bank0
  2302  01A8  1303               	bcf	3,6	;RP1=0, select bank0
  2303  01A9  00C2               	movwf	??_Conversion1+2
  2304  01AA  0842               	movf	??_Conversion1+2,w
  2305  01AB  00B8               	movwf	_y1
  2306  01AC                     l1833:
  2307                           
  2308                           ;MAESTRO_SPI.c: 265:     Lcd_Write_Char(y2y+48);
  2309  01AC  0838               	movf	_y1,w
  2310  01AD  00C0               	movwf	??_Conversion1
  2311  01AE  0840               	movf	??_Conversion1,w
  2312  01AF  00B6               	movwf	_y2
  2313  01B0                     l1835:
  2314                           
  2315                           ;MAESTRO_SPI.c: 266:     Lcd_Write_Char(86);
  2316  01B0  083A               	movf	_unidad,w
  2317  01B1  3E30               	addlw	48
  2318  01B2  120A  118A  25FB  120A  118A  	fcall	_Lcd_Write_Char
  2319  01B7                     l1837:
  2320                           
  2321                           ;MAESTRO_SPI.c: 267:     virtual_display3();
  2322  01B7  302E               	movlw	46
  2323  01B8  120A  118A  25FB  120A  118A  	fcall	_Lcd_Write_Char
  2324  01BD                     l1839:
  2325                           
  2326                           ;MAESTRO_SPI.c: 268: }
  2327  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  2328  01BE  1303               	bcf	3,6	;RP1=0, select bank0
  2329  01BF  0837               	movf	_x2,w
  2330  01C0  3E30               	addlw	48
  2331  01C1  120A  118A  25FB  120A  118A  	fcall	_Lcd_Write_Char
  2332  01C6                     l1841:
  2333                           
  2334                           ;MAESTRO_SPI.c: 269: 
  2335  01C6  1283               	bcf	3,5	;RP0=0, select bank0
  2336  01C7  1303               	bcf	3,6	;RP1=0, select bank0
  2337  01C8  0836               	movf	_y2,w
  2338  01C9  3E30               	addlw	48
  2339  01CA  120A  118A  25FB  120A  118A  	fcall	_Lcd_Write_Char
  2340  01CF                     l1843:
  2341                           
  2342                           ;MAESTRO_SPI.c: 270: void virtual_display1 (void)
  2343  01CF  3056               	movlw	86
  2344  01D0  120A  118A  25FB  120A  118A  	fcall	_Lcd_Write_Char
  2345  01D5                     l1845:
  2346                           
  2347                           ;MAESTRO_SPI.c: 271: {
  2348  01D5  120A  118A  232C  120A  118A  	fcall	_virtual_display1
  2349  01DA                     l186:
  2350  01DA  0008               	return
  2351  01DB                     __end_of_Conversion1:
  2352                           
  2353                           	psect	text12
  2354  032C                     __ptext12:	
  2355 ;; *************** function _virtual_display1 *****************
  2356 ;; Defined at:
  2357 ;;		line 308 in file "MAESTRO_SPI.c"
  2358 ;; Parameters:    Size  Location     Type
  2359 ;;		None
  2360 ;; Auto vars:     Size  Location     Type
  2361 ;;		None
  2362 ;; Return value:  Size  Location     Type
  2363 ;;                  1    wreg      void 
  2364 ;; Registers used:
  2365 ;;		wreg, status,2, status,0, pclath, cstack
  2366 ;; Tracked objects:
  2367 ;;		On entry : 0/0
  2368 ;;		On exit  : 0/0
  2369 ;;		Unchanged: 0/0
  2370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2371 ;;      Params:         0       0       0       0       0
  2372 ;;      Locals:         0       0       0       0       0
  2373 ;;      Temps:          0       0       0       0       0
  2374 ;;      Totals:         0       0       0       0       0
  2375 ;;Total ram usage:        0 bytes
  2376 ;; Hardware stack levels used:    1
  2377 ;; Hardware stack levels required when called:    2
  2378 ;; This function calls:
  2379 ;;		_escribir_char
  2380 ;; This function is called by:
  2381 ;;		_Conversion1
  2382 ;; This function uses a non-reentrant model
  2383 ;;
  2384                           
  2385                           
  2386                           ;psect for function _virtual_display1
  2387  032C                     _virtual_display1:
  2388  032C                     l1371:	
  2389                           ;incstack = 0
  2390                           ; Regs used in _virtual_display1: [wreg+status,2+status,0+pclath+cstack]
  2391                           
  2392                           
  2393                           ;MAESTRO_SPI.c: 310:         }
  2394  032C  3010               	movlw	16
  2395  032D  1283               	bcf	3,5	;RP0=0, select bank0
  2396  032E  1303               	bcf	3,6	;RP1=0, select bank0
  2397  032F  0224               	subwf	_velocidad1,w
  2398  0330  1C03               	skipc
  2399  0331  2B33               	goto	u321
  2400  0332  2B34               	goto	u320
  2401  0333                     u321:
  2402  0333  2B8E               	goto	l199
  2403  0334                     u320:
  2404  0334                     l1373:
  2405                           
  2406                           ;MAESTRO_SPI.c: 311:         else;MAESTRO_SPI.c: 312:         {
  2407  0334  3041               	movlw	65
  2408  0335  120A  118A  264F  120A  118A  	fcall	_escribir_char
  2409                           
  2410                           ;MAESTRO_SPI.c: 313:             escribir_char (67);
  2411  033A  3044               	movlw	68
  2412  033B  120A  118A  264F  120A  118A  	fcall	_escribir_char
  2413                           
  2414                           ;MAESTRO_SPI.c: 314:             escribir_char (79);
  2415  0340  3043               	movlw	67
  2416  0341  120A  118A  264F  120A  118A  	fcall	_escribir_char
  2417                           
  2418                           ;MAESTRO_SPI.c: 315:             escribir_char (78);
  2419  0346  303A               	movlw	58
  2420  0347  120A  118A  264F  120A  118A  	fcall	_escribir_char
  2421                           
  2422                           ;MAESTRO_SPI.c: 316:             escribir_char (84);
  2423  034C  1283               	bcf	3,5	;RP0=0, select bank0
  2424  034D  1303               	bcf	3,6	;RP1=0, select bank0
  2425  034E  083A               	movf	_unidad,w
  2426  034F  3E30               	addlw	48
  2427  0350  120A  118A  264F  120A  118A  	fcall	_escribir_char
  2428                           
  2429                           ;MAESTRO_SPI.c: 317:             escribir_char (58);
  2430  0355  302E               	movlw	46
  2431  0356  120A  118A  264F  120A  118A  	fcall	_escribir_char
  2432                           
  2433                           ;MAESTRO_SPI.c: 318:             escribir_char (w1+48);
  2434  035B  1283               	bcf	3,5	;RP0=0, select bank0
  2435  035C  1303               	bcf	3,6	;RP1=0, select bank0
  2436  035D  0837               	movf	_x2,w
  2437  035E  3E30               	addlw	48
  2438  035F  120A  118A  264F  120A  118A  	fcall	_escribir_char
  2439                           
  2440                           ;MAESTRO_SPI.c: 319:             escribir_char (w2+48);
  2441  0364  1283               	bcf	3,5	;RP0=0, select bank0
  2442  0365  1303               	bcf	3,6	;RP1=0, select bank0
  2443  0366  0836               	movf	_y2,w
  2444  0367  3E30               	addlw	48
  2445  0368  120A  118A  264F  120A  118A  	fcall	_escribir_char
  2446                           
  2447                           ;MAESTRO_SPI.c: 320:             escribir_char (32);
  2448  036D  3056               	movlw	86
  2449  036E  120A  118A  264F  120A  118A  	fcall	_escribir_char
  2450                           
  2451                           ;MAESTRO_SPI.c: 321:             escribir_char (32);
  2452  0373  3020               	movlw	32
  2453  0374  120A  118A  264F  120A  118A  	fcall	_escribir_char
  2454                           
  2455                           ;MAESTRO_SPI.c: 322:             escribir_char (32);
  2456  0379  3020               	movlw	32
  2457  037A  120A  118A  264F  120A  118A  	fcall	_escribir_char
  2458                           
  2459                           ;MAESTRO_SPI.c: 323:             escribir_char (32);
  2460  037F  3020               	movlw	32
  2461  0380  120A  118A  264F  120A  118A  	fcall	_escribir_char
  2462                           
  2463                           ;MAESTRO_SPI.c: 324: 
  2464  0385  3020               	movlw	32
  2465  0386  120A  118A  264F  120A  118A  	fcall	_escribir_char
  2466  038B                     l1375:
  2467                           
  2468                           ;MAESTRO_SPI.c: 325:             velocidad2 = 0;
  2469  038B  1283               	bcf	3,5	;RP0=0, select bank0
  2470  038C  1303               	bcf	3,6	;RP1=0, select bank0
  2471  038D  01A4               	clrf	_velocidad1
  2472  038E                     l199:
  2473  038E  0008               	return
  2474  038F                     __end_of_virtual_display1:
  2475                           
  2476                           	psect	text13
  2477  064F                     __ptext13:	
  2478 ;; *************** function _escribir_char *****************
  2479 ;; Defined at:
  2480 ;;		line 387 in file "MAESTRO_SPI.c"
  2481 ;; Parameters:    Size  Location     Type
  2482 ;;  valor           1    wreg     unsigned char 
  2483 ;; Auto vars:     Size  Location     Type
  2484 ;;  valor           1    2[COMMON] unsigned char 
  2485 ;; Return value:  Size  Location     Type
  2486 ;;                  1    wreg      void 
  2487 ;; Registers used:
  2488 ;;		wreg
  2489 ;; Tracked objects:
  2490 ;;		On entry : 0/0
  2491 ;;		On exit  : 0/0
  2492 ;;		Unchanged: 0/0
  2493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2494 ;;      Params:         0       0       0       0       0
  2495 ;;      Locals:         1       0       0       0       0
  2496 ;;      Temps:          0       0       0       0       0
  2497 ;;      Totals:         1       0       0       0       0
  2498 ;;Total ram usage:        1 bytes
  2499 ;; Hardware stack levels used:    1
  2500 ;; Hardware stack levels required when called:    1
  2501 ;; This function calls:
  2502 ;;		Nothing
  2503 ;; This function is called by:
  2504 ;;		_virtual_display1
  2505 ;;		_virtual_display2
  2506 ;;		_virtual_display3
  2507 ;; This function uses a non-reentrant model
  2508 ;;
  2509                           
  2510                           
  2511                           ;psect for function _escribir_char
  2512  064F                     _escribir_char:
  2513                           
  2514                           ;incstack = 0
  2515                           ; Regs used in _escribir_char: [wreg]
  2516                           ;escribir_char@valor stored from wreg
  2517  064F  00F2               	movwf	escribir_char@valor
  2518  0650                     l1357:
  2519  0650  0872               	movf	escribir_char@valor,w
  2520  0651  1283               	bcf	3,5	;RP0=0, select bank0
  2521  0652  1303               	bcf	3,6	;RP1=0, select bank0
  2522  0653  0099               	movwf	25	;volatile
  2523  0654                     l212:
  2524  0654  1E0C               	btfss	12,4	;volatile
  2525  0655  2E57               	goto	u311
  2526  0656  2E58               	goto	u310
  2527  0657                     u311:
  2528  0657  2E54               	goto	l212
  2529  0658                     u310:
  2530  0658                     l215:
  2531  0658  0008               	return
  2532  0659                     __end_of_escribir_char:
  2533                           
  2534                           	psect	text14
  2535  03F1                     __ptext14:	
  2536 ;; *************** function ___awmod *****************
  2537 ;; Defined at:
  2538 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  2539 ;; Parameters:    Size  Location     Type
  2540 ;;  divisor         2    2[COMMON] int 
  2541 ;;  dividend        2    4[COMMON] int 
  2542 ;; Auto vars:     Size  Location     Type
  2543 ;;  sign            1    8[COMMON] unsigned char 
  2544 ;;  counter         1    7[COMMON] unsigned char 
  2545 ;; Return value:  Size  Location     Type
  2546 ;;                  2    2[COMMON] int 
  2547 ;; Registers used:
  2548 ;;		wreg, status,2, status,0
  2549 ;; Tracked objects:
  2550 ;;		On entry : 0/0
  2551 ;;		On exit  : 0/0
  2552 ;;		Unchanged: 0/0
  2553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2554 ;;      Params:         4       0       0       0       0
  2555 ;;      Locals:         2       0       0       0       0
  2556 ;;      Temps:          1       0       0       0       0
  2557 ;;      Totals:         7       0       0       0       0
  2558 ;;Total ram usage:        7 bytes
  2559 ;; Hardware stack levels used:    1
  2560 ;; Hardware stack levels required when called:    1
  2561 ;; This function calls:
  2562 ;;		Nothing
  2563 ;; This function is called by:
  2564 ;;		_Conversion1
  2565 ;;		_Conversion2
  2566 ;;		_Conversion3
  2567 ;; This function uses a non-reentrant model
  2568 ;;
  2569                           
  2570                           
  2571                           ;psect for function ___awmod
  2572  03F1                     ___awmod:
  2573  03F1                     l1449:	
  2574                           ;incstack = 0
  2575                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2576                           
  2577  03F1  01F8               	clrf	___awmod@sign
  2578  03F2                     l1451:
  2579  03F2  1FF5               	btfss	___awmod@dividend+1,7
  2580  03F3  2BF5               	goto	u461
  2581  03F4  2BF6               	goto	u460
  2582  03F5                     u461:
  2583  03F5  2BFD               	goto	l1457
  2584  03F6                     u460:
  2585  03F6                     l1453:
  2586  03F6  09F4               	comf	___awmod@dividend,f
  2587  03F7  09F5               	comf	___awmod@dividend+1,f
  2588  03F8  0AF4               	incf	___awmod@dividend,f
  2589  03F9  1903               	skipnz
  2590  03FA  0AF5               	incf	___awmod@dividend+1,f
  2591  03FB                     l1455:
  2592  03FB  01F8               	clrf	___awmod@sign
  2593  03FC  0AF8               	incf	___awmod@sign,f
  2594  03FD                     l1457:
  2595  03FD  1FF3               	btfss	___awmod@divisor+1,7
  2596  03FE  2C00               	goto	u471
  2597  03FF  2C01               	goto	u470
  2598  0400                     u471:
  2599  0400  2C06               	goto	l1461
  2600  0401                     u470:
  2601  0401                     l1459:
  2602  0401  09F2               	comf	___awmod@divisor,f
  2603  0402  09F3               	comf	___awmod@divisor+1,f
  2604  0403  0AF2               	incf	___awmod@divisor,f
  2605  0404  1903               	skipnz
  2606  0405  0AF3               	incf	___awmod@divisor+1,f
  2607  0406                     l1461:
  2608  0406  0872               	movf	___awmod@divisor,w
  2609  0407  0473               	iorwf	___awmod@divisor+1,w
  2610  0408  1903               	btfsc	3,2
  2611  0409  2C0B               	goto	u481
  2612  040A  2C0C               	goto	u480
  2613  040B                     u481:
  2614  040B  2C3B               	goto	l1479
  2615  040C                     u480:
  2616  040C                     l1463:
  2617  040C  01F7               	clrf	___awmod@counter
  2618  040D  0AF7               	incf	___awmod@counter,f
  2619  040E  2C1A               	goto	l1469
  2620  040F                     l1465:
  2621  040F  3001               	movlw	1
  2622  0410                     u495:
  2623  0410  1003               	clrc
  2624  0411  0DF2               	rlf	___awmod@divisor,f
  2625  0412  0DF3               	rlf	___awmod@divisor+1,f
  2626  0413  3EFF               	addlw	-1
  2627  0414  1D03               	skipz
  2628  0415  2C10               	goto	u495
  2629  0416                     l1467:
  2630  0416  3001               	movlw	1
  2631  0417  00F6               	movwf	??___awmod
  2632  0418  0876               	movf	??___awmod,w
  2633  0419  07F7               	addwf	___awmod@counter,f
  2634  041A                     l1469:
  2635  041A  1FF3               	btfss	___awmod@divisor+1,7
  2636  041B  2C1D               	goto	u501
  2637  041C  2C1E               	goto	u500
  2638  041D                     u501:
  2639  041D  2C0F               	goto	l1465
  2640  041E                     u500:
  2641  041E                     l1471:
  2642  041E  0873               	movf	___awmod@divisor+1,w
  2643  041F  0275               	subwf	___awmod@dividend+1,w
  2644  0420  1D03               	skipz
  2645  0421  2C24               	goto	u515
  2646  0422  0872               	movf	___awmod@divisor,w
  2647  0423  0274               	subwf	___awmod@dividend,w
  2648  0424                     u515:
  2649  0424  1C03               	skipc
  2650  0425  2C27               	goto	u511
  2651  0426  2C28               	goto	u510
  2652  0427                     u511:
  2653  0427  2C2E               	goto	l1475
  2654  0428                     u510:
  2655  0428                     l1473:
  2656  0428  0872               	movf	___awmod@divisor,w
  2657  0429  02F4               	subwf	___awmod@dividend,f
  2658  042A  0873               	movf	___awmod@divisor+1,w
  2659  042B  1C03               	skipc
  2660  042C  03F5               	decf	___awmod@dividend+1,f
  2661  042D  02F5               	subwf	___awmod@dividend+1,f
  2662  042E                     l1475:
  2663  042E  3001               	movlw	1
  2664  042F                     u525:
  2665  042F  1003               	clrc
  2666  0430  0CF3               	rrf	___awmod@divisor+1,f
  2667  0431  0CF2               	rrf	___awmod@divisor,f
  2668  0432  3EFF               	addlw	-1
  2669  0433  1D03               	skipz
  2670  0434  2C2F               	goto	u525
  2671  0435                     l1477:
  2672  0435  3001               	movlw	1
  2673  0436  02F7               	subwf	___awmod@counter,f
  2674  0437  1D03               	btfss	3,2
  2675  0438  2C3A               	goto	u531
  2676  0439  2C3B               	goto	u530
  2677  043A                     u531:
  2678  043A  2C1E               	goto	l1471
  2679  043B                     u530:
  2680  043B                     l1479:
  2681  043B  0878               	movf	___awmod@sign,w
  2682  043C  1903               	btfsc	3,2
  2683  043D  2C3F               	goto	u541
  2684  043E  2C40               	goto	u540
  2685  043F                     u541:
  2686  043F  2C45               	goto	l1483
  2687  0440                     u540:
  2688  0440                     l1481:
  2689  0440  09F4               	comf	___awmod@dividend,f
  2690  0441  09F5               	comf	___awmod@dividend+1,f
  2691  0442  0AF4               	incf	___awmod@dividend,f
  2692  0443  1903               	skipnz
  2693  0444  0AF5               	incf	___awmod@dividend+1,f
  2694  0445                     l1483:
  2695  0445  0875               	movf	___awmod@dividend+1,w
  2696  0446  00F3               	movwf	?___awmod+1
  2697  0447  0874               	movf	___awmod@dividend,w
  2698  0448  00F2               	movwf	?___awmod
  2699  0449                     l571:
  2700  0449  0008               	return
  2701  044A                     __end_of___awmod:
  2702                           
  2703                           	psect	text15
  2704  0260                     __ptext15:	
  2705 ;; *************** function ___awdiv *****************
  2706 ;; Defined at:
  2707 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2708 ;; Parameters:    Size  Location     Type
  2709 ;;  divisor         2    2[COMMON] int 
  2710 ;;  dividend        2    4[COMMON] int 
  2711 ;; Auto vars:     Size  Location     Type
  2712 ;;  quotient        2    2[BANK0 ] int 
  2713 ;;  sign            1    1[BANK0 ] unsigned char 
  2714 ;;  counter         1    0[BANK0 ] unsigned char 
  2715 ;; Return value:  Size  Location     Type
  2716 ;;                  2    2[COMMON] int 
  2717 ;; Registers used:
  2718 ;;		wreg, status,2, status,0
  2719 ;; Tracked objects:
  2720 ;;		On entry : 0/0
  2721 ;;		On exit  : 0/0
  2722 ;;		Unchanged: 0/0
  2723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2724 ;;      Params:         4       0       0       0       0
  2725 ;;      Locals:         0       4       0       0       0
  2726 ;;      Temps:          1       0       0       0       0
  2727 ;;      Totals:         5       4       0       0       0
  2728 ;;Total ram usage:        9 bytes
  2729 ;; Hardware stack levels used:    1
  2730 ;; Hardware stack levels required when called:    1
  2731 ;; This function calls:
  2732 ;;		Nothing
  2733 ;; This function is called by:
  2734 ;;		_Conversion1
  2735 ;;		_Conversion2
  2736 ;;		_Conversion3
  2737 ;; This function uses a non-reentrant model
  2738 ;;
  2739                           
  2740                           
  2741                           ;psect for function ___awdiv
  2742  0260                     ___awdiv:
  2743  0260                     l1779:	
  2744                           ;incstack = 0
  2745                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2746                           
  2747  0260  1283               	bcf	3,5	;RP0=0, select bank0
  2748  0261  1303               	bcf	3,6	;RP1=0, select bank0
  2749  0262  01BD               	clrf	___awdiv@sign
  2750  0263                     l1781:
  2751  0263  1FF3               	btfss	___awdiv@divisor+1,7
  2752  0264  2A66               	goto	u601
  2753  0265  2A67               	goto	u600
  2754  0266                     u601:
  2755  0266  2A6E               	goto	l1787
  2756  0267                     u600:
  2757  0267                     l1783:
  2758  0267  09F2               	comf	___awdiv@divisor,f
  2759  0268  09F3               	comf	___awdiv@divisor+1,f
  2760  0269  0AF2               	incf	___awdiv@divisor,f
  2761  026A  1903               	skipnz
  2762  026B  0AF3               	incf	___awdiv@divisor+1,f
  2763  026C                     l1785:
  2764  026C  01BD               	clrf	___awdiv@sign
  2765  026D  0ABD               	incf	___awdiv@sign,f
  2766  026E                     l1787:
  2767  026E  1FF5               	btfss	___awdiv@dividend+1,7
  2768  026F  2A71               	goto	u611
  2769  0270  2A72               	goto	u610
  2770  0271                     u611:
  2771  0271  2A7B               	goto	l1793
  2772  0272                     u610:
  2773  0272                     l1789:
  2774  0272  09F4               	comf	___awdiv@dividend,f
  2775  0273  09F5               	comf	___awdiv@dividend+1,f
  2776  0274  0AF4               	incf	___awdiv@dividend,f
  2777  0275  1903               	skipnz
  2778  0276  0AF5               	incf	___awdiv@dividend+1,f
  2779  0277                     l1791:
  2780  0277  3001               	movlw	1
  2781  0278  00F6               	movwf	??___awdiv
  2782  0279  0876               	movf	??___awdiv,w
  2783  027A  06BD               	xorwf	___awdiv@sign,f
  2784  027B                     l1793:
  2785  027B  01BE               	clrf	___awdiv@quotient
  2786  027C  01BF               	clrf	___awdiv@quotient+1
  2787  027D                     l1795:
  2788  027D  0872               	movf	___awdiv@divisor,w
  2789  027E  0473               	iorwf	___awdiv@divisor+1,w
  2790  027F  1903               	btfsc	3,2
  2791  0280  2A82               	goto	u621
  2792  0281  2A83               	goto	u620
  2793  0282                     u621:
  2794  0282  2ABA               	goto	l1815
  2795  0283                     u620:
  2796  0283                     l1797:
  2797  0283  01BC               	clrf	___awdiv@counter
  2798  0284  0ABC               	incf	___awdiv@counter,f
  2799  0285  2A91               	goto	l1803
  2800  0286                     l1799:
  2801  0286  3001               	movlw	1
  2802  0287                     u635:
  2803  0287  1003               	clrc
  2804  0288  0DF2               	rlf	___awdiv@divisor,f
  2805  0289  0DF3               	rlf	___awdiv@divisor+1,f
  2806  028A  3EFF               	addlw	-1
  2807  028B  1D03               	skipz
  2808  028C  2A87               	goto	u635
  2809  028D                     l1801:
  2810  028D  3001               	movlw	1
  2811  028E  00F6               	movwf	??___awdiv
  2812  028F  0876               	movf	??___awdiv,w
  2813  0290  07BC               	addwf	___awdiv@counter,f
  2814  0291                     l1803:
  2815  0291  1FF3               	btfss	___awdiv@divisor+1,7
  2816  0292  2A94               	goto	u641
  2817  0293  2A95               	goto	u640
  2818  0294                     u641:
  2819  0294  2A86               	goto	l1799
  2820  0295                     u640:
  2821  0295                     l1805:
  2822  0295  3001               	movlw	1
  2823  0296                     u655:
  2824  0296  1003               	clrc
  2825  0297  0DBE               	rlf	___awdiv@quotient,f
  2826  0298  0DBF               	rlf	___awdiv@quotient+1,f
  2827  0299  3EFF               	addlw	-1
  2828  029A  1D03               	skipz
  2829  029B  2A96               	goto	u655
  2830  029C  0873               	movf	___awdiv@divisor+1,w
  2831  029D  0275               	subwf	___awdiv@dividend+1,w
  2832  029E  1D03               	skipz
  2833  029F  2AA2               	goto	u665
  2834  02A0  0872               	movf	___awdiv@divisor,w
  2835  02A1  0274               	subwf	___awdiv@dividend,w
  2836  02A2                     u665:
  2837  02A2  1C03               	skipc
  2838  02A3  2AA5               	goto	u661
  2839  02A4  2AA6               	goto	u660
  2840  02A5                     u661:
  2841  02A5  2AAD               	goto	l1811
  2842  02A6                     u660:
  2843  02A6                     l1807:
  2844  02A6  0872               	movf	___awdiv@divisor,w
  2845  02A7  02F4               	subwf	___awdiv@dividend,f
  2846  02A8  0873               	movf	___awdiv@divisor+1,w
  2847  02A9  1C03               	skipc
  2848  02AA  03F5               	decf	___awdiv@dividend+1,f
  2849  02AB  02F5               	subwf	___awdiv@dividend+1,f
  2850  02AC                     l1809:
  2851  02AC  143E               	bsf	___awdiv@quotient,0
  2852  02AD                     l1811:
  2853  02AD  3001               	movlw	1
  2854  02AE                     u675:
  2855  02AE  1003               	clrc
  2856  02AF  0CF3               	rrf	___awdiv@divisor+1,f
  2857  02B0  0CF2               	rrf	___awdiv@divisor,f
  2858  02B1  3EFF               	addlw	-1
  2859  02B2  1D03               	skipz
  2860  02B3  2AAE               	goto	u675
  2861  02B4                     l1813:
  2862  02B4  3001               	movlw	1
  2863  02B5  02BC               	subwf	___awdiv@counter,f
  2864  02B6  1D03               	btfss	3,2
  2865  02B7  2AB9               	goto	u681
  2866  02B8  2ABA               	goto	u680
  2867  02B9                     u681:
  2868  02B9  2A95               	goto	l1805
  2869  02BA                     u680:
  2870  02BA                     l1815:
  2871  02BA  083D               	movf	___awdiv@sign,w
  2872  02BB  1903               	btfsc	3,2
  2873  02BC  2ABE               	goto	u691
  2874  02BD  2ABF               	goto	u690
  2875  02BE                     u691:
  2876  02BE  2AC4               	goto	l1819
  2877  02BF                     u690:
  2878  02BF                     l1817:
  2879  02BF  09BE               	comf	___awdiv@quotient,f
  2880  02C0  09BF               	comf	___awdiv@quotient+1,f
  2881  02C1  0ABE               	incf	___awdiv@quotient,f
  2882  02C2  1903               	skipnz
  2883  02C3  0ABF               	incf	___awdiv@quotient+1,f
  2884  02C4                     l1819:
  2885  02C4  083F               	movf	___awdiv@quotient+1,w
  2886  02C5  00F3               	movwf	?___awdiv+1
  2887  02C6  083E               	movf	___awdiv@quotient,w
  2888  02C7  00F2               	movwf	?___awdiv
  2889  02C8                     l558:
  2890  02C8  0008               	return
  2891  02C9                     __end_of___awdiv:
  2892                           
  2893                           	psect	text16
  2894  05FB                     __ptext16:	
  2895 ;; *************** function _Lcd_Write_Char *****************
  2896 ;; Defined at:
  2897 ;;		line 95 in file "LCD_SPI.c"
  2898 ;; Parameters:    Size  Location     Type
  2899 ;;  a               1    wreg     unsigned char 
  2900 ;; Auto vars:     Size  Location     Type
  2901 ;;  a               1    4[COMMON] unsigned char 
  2902 ;; Return value:  Size  Location     Type
  2903 ;;                  1    wreg      void 
  2904 ;; Registers used:
  2905 ;;		wreg, status,2, status,0, pclath, cstack
  2906 ;; Tracked objects:
  2907 ;;		On entry : 0/0
  2908 ;;		On exit  : 0/0
  2909 ;;		Unchanged: 0/0
  2910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2911 ;;      Params:         0       0       0       0       0
  2912 ;;      Locals:         1       0       0       0       0
  2913 ;;      Temps:          1       0       0       0       0
  2914 ;;      Totals:         2       0       0       0       0
  2915 ;;Total ram usage:        2 bytes
  2916 ;; Hardware stack levels used:    1
  2917 ;; Hardware stack levels required when called:    2
  2918 ;; This function calls:
  2919 ;;		_Lcd_Port
  2920 ;; This function is called by:
  2921 ;;		_Conversion1
  2922 ;;		_Conversion2
  2923 ;;		_Conversion3
  2924 ;;		_Lcd_Write_String
  2925 ;; This function uses a non-reentrant model
  2926 ;;
  2927                           
  2928                           
  2929                           ;psect for function _Lcd_Write_Char
  2930  05FB                     _Lcd_Write_Char:
  2931                           
  2932                           ;incstack = 0
  2933                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2934                           ;Lcd_Write_Char@a stored from wreg
  2935  05FB  00F4               	movwf	Lcd_Write_Char@a
  2936  05FC                     l1361:
  2937                           
  2938                           ;LCD_SPI.c: 95: void Lcd_Write_Char(char a);LCD_SPI.c: 96: {;LCD_SPI.c: 97:     PORTEbit
      +                          s.RE0 = 1;
  2939  05FC  1283               	bcf	3,5	;RP0=0, select bank0
  2940  05FD  1303               	bcf	3,6	;RP1=0, select bank0
  2941  05FE  1409               	bsf	9,0	;volatile
  2942  05FF                     l1363:
  2943                           
  2944                           ;LCD_SPI.c: 98:     Lcd_Port(a);
  2945  05FF  0874               	movf	Lcd_Write_Char@a,w
  2946  0600  120A  118A  266D  120A  118A  	fcall	_Lcd_Port
  2947  0605                     l1365:
  2948                           
  2949                           ;LCD_SPI.c: 99:     PORTEbits.RE1 = 1;
  2950  0605  1283               	bcf	3,5	;RP0=0, select bank0
  2951  0606  1303               	bcf	3,6	;RP1=0, select bank0
  2952  0607  1489               	bsf	9,1	;volatile
  2953  0608                     l1367:
  2954                           
  2955                           ;LCD_SPI.c: 100:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2956  0608  301A               	movlw	26
  2957  0609  00F3               	movwf	??_Lcd_Write_Char
  2958  060A                     u767:
  2959  060A  0BF3               	decfsz	??_Lcd_Write_Char,f
  2960  060B  2E0A               	goto	u767
  2961  060C  0000               	nop
  2962  060D                     l1369:
  2963                           
  2964                           ;LCD_SPI.c: 101:     PORTEbits.RE1 = 0;
  2965  060D  1283               	bcf	3,5	;RP0=0, select bank0
  2966  060E  1303               	bcf	3,6	;RP1=0, select bank0
  2967  060F  1089               	bcf	9,1	;volatile
  2968  0610                     l269:
  2969  0610  0008               	return
  2970  0611                     __end_of_Lcd_Write_Char:
  2971                           
  2972                           	psect	text17
  2973  062E                     __ptext17:	
  2974 ;; *************** function _interrup_config *****************
  2975 ;; Defined at:
  2976 ;;		line 192 in file "MAESTRO_SPI.c"
  2977 ;; Parameters:    Size  Location     Type
  2978 ;;		None
  2979 ;; Auto vars:     Size  Location     Type
  2980 ;;		None
  2981 ;; Return value:  Size  Location     Type
  2982 ;;                  1    wreg      void 
  2983 ;; Registers used:
  2984 ;;		status,2
  2985 ;; Tracked objects:
  2986 ;;		On entry : 0/0
  2987 ;;		On exit  : 0/0
  2988 ;;		Unchanged: 0/0
  2989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2990 ;;      Params:         0       0       0       0       0
  2991 ;;      Locals:         0       0       0       0       0
  2992 ;;      Temps:          0       0       0       0       0
  2993 ;;      Totals:         0       0       0       0       0
  2994 ;;Total ram usage:        0 bytes
  2995 ;; Hardware stack levels used:    1
  2996 ;; Hardware stack levels required when called:    1
  2997 ;; This function calls:
  2998 ;;		Nothing
  2999 ;; This function is called by:
  3000 ;;		_main
  3001 ;; This function uses a non-reentrant model
  3002 ;;
  3003                           
  3004                           
  3005                           ;psect for function _interrup_config
  3006  062E                     _interrup_config:
  3007  062E                     l1635:	
  3008                           ;incstack = 0
  3009                           ; Regs used in _interrup_config: [status,2]
  3010                           
  3011                           
  3012                           ;MAESTRO_SPI.c: 194: {
  3013  062E  178B               	bsf	11,7	;volatile
  3014                           
  3015                           ;MAESTRO_SPI.c: 195:     USART_lib_config();
  3016  062F  170B               	bsf	11,6	;volatile
  3017                           
  3018                           ;MAESTRO_SPI.c: 196: }
  3019  0630  168B               	bsf	11,5	;volatile
  3020                           
  3021                           ;MAESTRO_SPI.c: 197: 
  3022  0631  120B               	bcf	11,4	;volatile
  3023                           
  3024                           ;MAESTRO_SPI.c: 198: void SPI_config (void)
  3025  0632  118B               	bcf	11,3	;volatile
  3026                           
  3027                           ;MAESTRO_SPI.c: 199: {
  3028  0633  110B               	bcf	11,2	;volatile
  3029                           
  3030                           ;MAESTRO_SPI.c: 200:     SPI_Maestro_Init (0, 2);
  3031  0634  108B               	bcf	11,1	;volatile
  3032                           
  3033                           ;MAESTRO_SPI.c: 201: }
  3034  0635  100B               	bcf	11,0	;volatile
  3035  0636                     l1637:
  3036                           
  3037                           ;MAESTRO_SPI.c: 202: 
  3038  0636  1683               	bsf	3,5	;RP0=1, select bank1
  3039  0637  1303               	bcf	3,6	;RP1=0, select bank1
  3040  0638  0196               	clrf	22	;volatile
  3041  0639                     l168:
  3042  0639  0008               	return
  3043  063A                     __end_of_interrup_config:
  3044                           
  3045                           	psect	text18
  3046  0661                     __ptext18:	
  3047 ;; *************** function _USART_config *****************
  3048 ;; Defined at:
  3049 ;;		line 231 in file "MAESTRO_SPI.c"
  3050 ;; Parameters:    Size  Location     Type
  3051 ;;		None
  3052 ;; Auto vars:     Size  Location     Type
  3053 ;;		None
  3054 ;; Return value:  Size  Location     Type
  3055 ;;                  1    wreg      void 
  3056 ;; Registers used:
  3057 ;;		wreg, status,2, status,0, pclath, cstack
  3058 ;; Tracked objects:
  3059 ;;		On entry : 0/0
  3060 ;;		On exit  : 0/0
  3061 ;;		Unchanged: 0/0
  3062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3063 ;;      Params:         0       0       0       0       0
  3064 ;;      Locals:         0       0       0       0       0
  3065 ;;      Temps:          0       0       0       0       0
  3066 ;;      Totals:         0       0       0       0       0
  3067 ;;Total ram usage:        0 bytes
  3068 ;; Hardware stack levels used:    1
  3069 ;; Hardware stack levels required when called:    2
  3070 ;; This function calls:
  3071 ;;		_USART_lib_config
  3072 ;; This function is called by:
  3073 ;;		_main
  3074 ;; This function uses a non-reentrant model
  3075 ;;
  3076                           
  3077                           
  3078                           ;psect for function _USART_config
  3079  0661                     _USART_config:
  3080  0661                     l1665:	
  3081                           ;incstack = 0
  3082                           ; Regs used in _USART_config: [wreg+status,2+status,0+pclath+cstack]
  3083                           
  3084                           
  3085                           ;MAESTRO_SPI.c: 233:     virtual_display1();
  3086  0661  120A  118A  25AC  120A  118A  	fcall	_USART_lib_config
  3087  0666                     l177:
  3088  0666  0008               	return
  3089  0667                     __end_of_USART_config:
  3090                           
  3091                           	psect	text19
  3092  05AC                     __ptext19:	
  3093 ;; *************** function _USART_lib_config *****************
  3094 ;; Defined at:
  3095 ;;		line 19 in file "USART_SPI.c"
  3096 ;; Parameters:    Size  Location     Type
  3097 ;;		None
  3098 ;; Auto vars:     Size  Location     Type
  3099 ;;		None
  3100 ;; Return value:  Size  Location     Type
  3101 ;;                  1    wreg      void 
  3102 ;; Registers used:
  3103 ;;		wreg
  3104 ;; Tracked objects:
  3105 ;;		On entry : 0/0
  3106 ;;		On exit  : 0/0
  3107 ;;		Unchanged: 0/0
  3108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3109 ;;      Params:         0       0       0       0       0
  3110 ;;      Locals:         0       0       0       0       0
  3111 ;;      Temps:          0       0       0       0       0
  3112 ;;      Totals:         0       0       0       0       0
  3113 ;;Total ram usage:        0 bytes
  3114 ;; Hardware stack levels used:    1
  3115 ;; Hardware stack levels required when called:    1
  3116 ;; This function calls:
  3117 ;;		Nothing
  3118 ;; This function is called by:
  3119 ;;		_USART_config
  3120 ;; This function uses a non-reentrant model
  3121 ;;
  3122                           
  3123                           
  3124                           ;psect for function _USART_lib_config
  3125  05AC                     _USART_lib_config:
  3126  05AC                     l1487:	
  3127                           ;incstack = 0
  3128                           ; Regs used in _USART_lib_config: [wreg]
  3129                           
  3130                           
  3131                           ;USART_SPI.c: 21:     SPBRG = 25;
  3132  05AC  3019               	movlw	25
  3133  05AD  1683               	bsf	3,5	;RP0=1, select bank1
  3134  05AE  1303               	bcf	3,6	;RP1=0, select bank1
  3135  05AF  0099               	movwf	25	;volatile
  3136  05B0                     l1489:
  3137                           
  3138                           ;USART_SPI.c: 23:     TXSTAbits.CSRC = 0;
  3139  05B0  1398               	bcf	24,7	;volatile
  3140  05B1                     l1491:
  3141                           
  3142                           ;USART_SPI.c: 24:     TXSTAbits.TX9 = 0;
  3143  05B1  1318               	bcf	24,6	;volatile
  3144  05B2                     l1493:
  3145                           
  3146                           ;USART_SPI.c: 25:     TXSTAbits.TXEN = 1;
  3147  05B2  1698               	bsf	24,5	;volatile
  3148  05B3                     l1495:
  3149                           
  3150                           ;USART_SPI.c: 26:     TXSTAbits.SYNC = 0;
  3151  05B3  1218               	bcf	24,4	;volatile
  3152  05B4                     l1497:
  3153                           
  3154                           ;USART_SPI.c: 27:     TXSTAbits.SENDB= 0;
  3155  05B4  1198               	bcf	24,3	;volatile
  3156  05B5                     l1499:
  3157                           
  3158                           ;USART_SPI.c: 28:     TXSTAbits.BRGH = 1;
  3159  05B5  1518               	bsf	24,2	;volatile
  3160  05B6                     l1501:
  3161                           
  3162                           ;USART_SPI.c: 29:     TXSTAbits.TRMT = 0;
  3163  05B6  1098               	bcf	24,1	;volatile
  3164  05B7                     l1503:
  3165                           
  3166                           ;USART_SPI.c: 30:     TXSTAbits.TX9D = 0;
  3167  05B7  1018               	bcf	24,0	;volatile
  3168  05B8                     l1505:
  3169                           
  3170                           ;USART_SPI.c: 32:     RCSTAbits.SPEN = 1;
  3171  05B8  1283               	bcf	3,5	;RP0=0, select bank0
  3172  05B9  1303               	bcf	3,6	;RP1=0, select bank0
  3173  05BA  1798               	bsf	24,7	;volatile
  3174  05BB                     l1507:
  3175                           
  3176                           ;USART_SPI.c: 33:     RCSTAbits.RX9 = 0;
  3177  05BB  1318               	bcf	24,6	;volatile
  3178  05BC                     l1509:
  3179                           
  3180                           ;USART_SPI.c: 34:     RCSTAbits.SREN = 0;
  3181  05BC  1298               	bcf	24,5	;volatile
  3182  05BD                     l1511:
  3183                           
  3184                           ;USART_SPI.c: 35:     RCSTAbits.CREN = 1;
  3185  05BD  1618               	bsf	24,4	;volatile
  3186  05BE                     l1513:
  3187                           
  3188                           ;USART_SPI.c: 36:     RCSTAbits.ADDEN= 0;
  3189  05BE  1198               	bcf	24,3	;volatile
  3190  05BF                     l1515:
  3191                           
  3192                           ;USART_SPI.c: 37:     RCSTAbits.FERR = 0;
  3193  05BF  1118               	bcf	24,2	;volatile
  3194  05C0                     l1517:
  3195                           
  3196                           ;USART_SPI.c: 38:     RCSTAbits.OERR = 0;
  3197  05C0  1098               	bcf	24,1	;volatile
  3198  05C1                     l1519:
  3199                           
  3200                           ;USART_SPI.c: 39:     RCSTAbits.RX9D = 0;
  3201  05C1  1018               	bcf	24,0	;volatile
  3202  05C2                     l1521:
  3203                           
  3204                           ;USART_SPI.c: 41:     PIR1bits.RCIF = 0;
  3205  05C2  128C               	bcf	12,5	;volatile
  3206  05C3                     l1523:
  3207                           
  3208                           ;USART_SPI.c: 42:     PIE1bits.RCIE = 1;
  3209  05C3  1683               	bsf	3,5	;RP0=1, select bank1
  3210  05C4  1303               	bcf	3,6	;RP1=0, select bank1
  3211  05C5  168C               	bsf	12,5	;volatile
  3212  05C6                     l1525:
  3213                           
  3214                           ;USART_SPI.c: 43:     PIR1bits.TXIF = 0;
  3215  05C6  1283               	bcf	3,5	;RP0=0, select bank0
  3216  05C7  1303               	bcf	3,6	;RP1=0, select bank0
  3217  05C8  120C               	bcf	12,4	;volatile
  3218  05C9                     l228:
  3219  05C9  0008               	return
  3220  05CA                     __end_of_USART_lib_config:
  3221                           
  3222                           	psect	text20
  3223  063A                     __ptext20:	
  3224 ;; *************** function _SPI_config *****************
  3225 ;; Defined at:
  3226 ;;		line 236 in file "MAESTRO_SPI.c"
  3227 ;; Parameters:    Size  Location     Type
  3228 ;;		None
  3229 ;; Auto vars:     Size  Location     Type
  3230 ;;		None
  3231 ;; Return value:  Size  Location     Type
  3232 ;;                  1    wreg      void 
  3233 ;; Registers used:
  3234 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3235 ;; Tracked objects:
  3236 ;;		On entry : 0/0
  3237 ;;		On exit  : 0/0
  3238 ;;		Unchanged: 0/0
  3239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3240 ;;      Params:         0       0       0       0       0
  3241 ;;      Locals:         0       0       0       0       0
  3242 ;;      Temps:          1       0       0       0       0
  3243 ;;      Totals:         1       0       0       0       0
  3244 ;;Total ram usage:        1 bytes
  3245 ;; Hardware stack levels used:    1
  3246 ;; Hardware stack levels required when called:    2
  3247 ;; This function calls:
  3248 ;;		_SPI_Maestro_Init
  3249 ;; This function is called by:
  3250 ;;		_main
  3251 ;; This function uses a non-reentrant model
  3252 ;;
  3253                           
  3254                           
  3255                           ;psect for function _SPI_config
  3256  063A                     _SPI_config:
  3257  063A                     l1667:	
  3258                           ;incstack = 0
  3259                           ; Regs used in _SPI_config: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3260                           
  3261                           
  3262                           ;MAESTRO_SPI.c: 238:     if (dato_push < 10)
  3263  063A  3002               	movlw	2
  3264  063B  00F6               	movwf	??_SPI_config
  3265  063C  0876               	movf	??_SPI_config,w
  3266  063D  00F2               	movwf	SPI_Maestro_Init@SCK
  3267  063E  3000               	movlw	0
  3268  063F  120A  118A  21DB  120A  118A  	fcall	_SPI_Maestro_Init
  3269  0644                     l180:
  3270  0644  0008               	return
  3271  0645                     __end_of_SPI_config:
  3272                           
  3273                           	psect	text21
  3274  01DB                     __ptext21:	
  3275 ;; *************** function _SPI_Maestro_Init *****************
  3276 ;; Defined at:
  3277 ;;		line 4 in file "SPI_SPI.c"
  3278 ;; Parameters:    Size  Location     Type
  3279 ;;  port_mode       1    wreg     unsigned char 
  3280 ;;  SCK             1    2[COMMON] unsigned char 
  3281 ;; Auto vars:     Size  Location     Type
  3282 ;;  port_mode       1    5[COMMON] unsigned char 
  3283 ;; Return value:  Size  Location     Type
  3284 ;;                  1    wreg      void 
  3285 ;; Registers used:
  3286 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3287 ;; Tracked objects:
  3288 ;;		On entry : 0/0
  3289 ;;		On exit  : 0/0
  3290 ;;		Unchanged: 0/0
  3291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3292 ;;      Params:         1       0       0       0       0
  3293 ;;      Locals:         1       0       0       0       0
  3294 ;;      Temps:          2       0       0       0       0
  3295 ;;      Totals:         4       0       0       0       0
  3296 ;;Total ram usage:        4 bytes
  3297 ;; Hardware stack levels used:    1
  3298 ;; Hardware stack levels required when called:    1
  3299 ;; This function calls:
  3300 ;;		Nothing
  3301 ;; This function is called by:
  3302 ;;		_SPI_config
  3303 ;; This function uses a non-reentrant model
  3304 ;;
  3305                           
  3306                           
  3307                           ;psect for function _SPI_Maestro_Init
  3308  01DB                     _SPI_Maestro_Init:
  3309                           
  3310                           ;incstack = 0
  3311                           ; Regs used in _SPI_Maestro_Init: [wreg-fsr0h+status,2+status,0]
  3312                           ;SPI_Maestro_Init@port_mode stored from wreg
  3313  01DB  00F5               	movwf	SPI_Maestro_Init@port_mode
  3314  01DC                     l1527:
  3315                           
  3316                           ;SPI_SPI.c: 4: void SPI_Maestro_Init (char port_mode, char SCK);SPI_SPI.c: 5: {;SPI_SPI.
      +                          c: 6:     TRISCbits.TRISC0 = 0;
  3317  01DC  1683               	bsf	3,5	;RP0=1, select bank1
  3318  01DD  1303               	bcf	3,6	;RP1=0, select bank1
  3319  01DE  1007               	bcf	7,0	;volatile
  3320                           
  3321                           ;SPI_SPI.c: 7:     TRISCbits.TRISC1 = 0;
  3322  01DF  1087               	bcf	7,1	;volatile
  3323                           
  3324                           ;SPI_SPI.c: 8:     TRISCbits.TRISC2 = 0;
  3325  01E0  1107               	bcf	7,2	;volatile
  3326                           
  3327                           ;SPI_SPI.c: 9:     TRISCbits.TRISC5 = 0;
  3328  01E1  1287               	bcf	7,5	;volatile
  3329                           
  3330                           ;SPI_SPI.c: 10:     TRISCbits.TRISC4 = 1;
  3331  01E2  1607               	bsf	7,4	;volatile
  3332                           
  3333                           ;SPI_SPI.c: 11:     TRISCbits.TRISC3 = 0;
  3334  01E3  1187               	bcf	7,3	;volatile
  3335                           
  3336                           ;SPI_SPI.c: 13:     switch (port_mode)
  3337  01E4  2A0F               	goto	l1531
  3338  01E5                     l283:	
  3339                           ;SPI_SPI.c: 14:     {;SPI_SPI.c: 15:         case 0:
  3340                           
  3341                           
  3342                           ;SPI_SPI.c: 16:             SSPCONbits.SSPM3 = 0;
  3343  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  3344  01E6  1303               	bcf	3,6	;RP1=0, select bank0
  3345  01E7  1194               	bcf	20,3	;volatile
  3346                           
  3347                           ;SPI_SPI.c: 17:             SSPCONbits.SSPM2 = 0;
  3348  01E8  1114               	bcf	20,2	;volatile
  3349                           
  3350                           ;SPI_SPI.c: 18:             SSPCONbits.SSPM1 = 0;
  3351  01E9  1094               	bcf	20,1	;volatile
  3352                           
  3353                           ;SPI_SPI.c: 19:             SSPCONbits.SSPM0 = 0;
  3354  01EA  1014               	bcf	20,0	;volatile
  3355                           
  3356                           ;SPI_SPI.c: 21:             break;
  3357  01EB  2A43               	goto	l1535
  3358  01EC                     l285:	
  3359                           ;SPI_SPI.c: 22:          case 1:
  3360                           
  3361                           
  3362                           ;SPI_SPI.c: 23:             SSPCONbits.SSPM3 = 0;
  3363  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  3364  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  3365  01EE  1194               	bcf	20,3	;volatile
  3366                           
  3367                           ;SPI_SPI.c: 24:             SSPCONbits.SSPM2 = 0;
  3368  01EF  1114               	bcf	20,2	;volatile
  3369                           
  3370                           ;SPI_SPI.c: 25:             SSPCONbits.SSPM1 = 0;
  3371  01F0  1094               	bcf	20,1	;volatile
  3372                           
  3373                           ;SPI_SPI.c: 26:             SSPCONbits.SSPM0 = 1;
  3374  01F1  1414               	bsf	20,0	;volatile
  3375                           
  3376                           ;SPI_SPI.c: 28:             break;
  3377  01F2  2A43               	goto	l1535
  3378  01F3                     l286:	
  3379                           ;SPI_SPI.c: 29:          case 2:
  3380                           
  3381                           
  3382                           ;SPI_SPI.c: 30:             SSPCONbits.SSPM3 = 0;
  3383  01F3  1283               	bcf	3,5	;RP0=0, select bank0
  3384  01F4  1303               	bcf	3,6	;RP1=0, select bank0
  3385  01F5  1194               	bcf	20,3	;volatile
  3386                           
  3387                           ;SPI_SPI.c: 31:             SSPCONbits.SSPM2 = 0;
  3388  01F6  1114               	bcf	20,2	;volatile
  3389                           
  3390                           ;SPI_SPI.c: 32:             SSPCONbits.SSPM1 = 1;
  3391  01F7  1494               	bsf	20,1	;volatile
  3392                           
  3393                           ;SPI_SPI.c: 33:             SSPCONbits.SSPM0 = 0;
  3394  01F8  1014               	bcf	20,0	;volatile
  3395                           
  3396                           ;SPI_SPI.c: 35:             break;
  3397  01F9  2A43               	goto	l1535
  3398  01FA                     l287:	
  3399                           ;SPI_SPI.c: 36:          case 3:
  3400                           
  3401                           
  3402                           ;SPI_SPI.c: 37:             SSPCONbits.SSPM3 = 0;
  3403  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  3404  01FB  1303               	bcf	3,6	;RP1=0, select bank0
  3405  01FC  1194               	bcf	20,3	;volatile
  3406                           
  3407                           ;SPI_SPI.c: 38:             SSPCONbits.SSPM2 = 0;
  3408  01FD  1114               	bcf	20,2	;volatile
  3409                           
  3410                           ;SPI_SPI.c: 39:             SSPCONbits.SSPM1 = 1;
  3411  01FE  1494               	bsf	20,1	;volatile
  3412                           
  3413                           ;SPI_SPI.c: 40:             SSPCONbits.SSPM0 = 1;
  3414  01FF  1414               	bsf	20,0	;volatile
  3415                           
  3416                           ;SPI_SPI.c: 41:             break;
  3417  0200  2A43               	goto	l1535
  3418  0201                     l288:	
  3419                           ;SPI_SPI.c: 42:          case 4:
  3420                           
  3421                           
  3422                           ;SPI_SPI.c: 43:             SSPCONbits.SSPM3 = 0;
  3423  0201  1283               	bcf	3,5	;RP0=0, select bank0
  3424  0202  1303               	bcf	3,6	;RP1=0, select bank0
  3425  0203  1194               	bcf	20,3	;volatile
  3426                           
  3427                           ;SPI_SPI.c: 44:             SSPCONbits.SSPM2 = 1;
  3428  0204  1514               	bsf	20,2	;volatile
  3429                           
  3430                           ;SPI_SPI.c: 45:             SSPCONbits.SSPM1 = 0;
  3431  0205  1094               	bcf	20,1	;volatile
  3432                           
  3433                           ;SPI_SPI.c: 46:             SSPCONbits.SSPM0 = 0;
  3434  0206  1014               	bcf	20,0	;volatile
  3435                           
  3436                           ;SPI_SPI.c: 48:             break;
  3437  0207  2A43               	goto	l1535
  3438  0208                     l289:	
  3439                           ;SPI_SPI.c: 49:          case 5:
  3440                           
  3441                           
  3442                           ;SPI_SPI.c: 50:             SSPCONbits.SSPM3 = 0;
  3443  0208  1283               	bcf	3,5	;RP0=0, select bank0
  3444  0209  1303               	bcf	3,6	;RP1=0, select bank0
  3445  020A  1194               	bcf	20,3	;volatile
  3446                           
  3447                           ;SPI_SPI.c: 51:             SSPCONbits.SSPM2 = 1;
  3448  020B  1514               	bsf	20,2	;volatile
  3449                           
  3450                           ;SPI_SPI.c: 52:             SSPCONbits.SSPM1 = 0;
  3451  020C  1094               	bcf	20,1	;volatile
  3452                           
  3453                           ;SPI_SPI.c: 53:             SSPCONbits.SSPM0 = 1;
  3454  020D  1414               	bsf	20,0	;volatile
  3455                           
  3456                           ;SPI_SPI.c: 54:             break;
  3457  020E  2A43               	goto	l1535
  3458  020F                     l1531:
  3459  020F  0875               	movf	SPI_Maestro_Init@port_mode,w
  3460  0210  00F3               	movwf	??_SPI_Maestro_Init
  3461  0211  01F4               	clrf	??_SPI_Maestro_Init+1
  3462                           
  3463                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3464                           ; Switch size 1, requested type "simple"
  3465                           ; Number of cases is 1, Range of values is 0 to 0
  3466                           ; switch strategies available:
  3467                           ; Name         Instructions Cycles
  3468                           ; simple_byte            4     3 (average)
  3469                           ; direct_byte           11     8 (fixed)
  3470                           ; jumptable            260     6 (fixed)
  3471                           ;	Chosen strategy is simple_byte
  3472  0212  0874               	movf	??_SPI_Maestro_Init+1,w
  3473  0213  3A00               	xorlw	0	; case 0
  3474  0214  1903               	skipnz
  3475  0215  2A17               	goto	l1977
  3476  0216  2A43               	goto	l1535
  3477  0217                     l1977:
  3478                           
  3479                           ; Switch size 1, requested type "simple"
  3480                           ; Number of cases is 6, Range of values is 0 to 5
  3481                           ; switch strategies available:
  3482                           ; Name         Instructions Cycles
  3483                           ; simple_byte           19    10 (average)
  3484                           ; direct_byte           26     8 (fixed)
  3485                           ; jumptable            260     6 (fixed)
  3486                           ;	Chosen strategy is simple_byte
  3487  0217  0873               	movf	??_SPI_Maestro_Init,w
  3488  0218  3A00               	xorlw	0	; case 0
  3489  0219  1903               	skipnz
  3490  021A  29E5               	goto	l283
  3491  021B  3A01               	xorlw	1	; case 1
  3492  021C  1903               	skipnz
  3493  021D  29EC               	goto	l285
  3494  021E  3A03               	xorlw	3	; case 2
  3495  021F  1903               	skipnz
  3496  0220  29F3               	goto	l286
  3497  0221  3A01               	xorlw	1	; case 3
  3498  0222  1903               	skipnz
  3499  0223  29FA               	goto	l287
  3500  0224  3A07               	xorlw	7	; case 4
  3501  0225  1903               	skipnz
  3502  0226  2A01               	goto	l288
  3503  0227  3A01               	xorlw	1	; case 5
  3504  0228  1903               	skipnz
  3505  0229  2A08               	goto	l289
  3506  022A  2A43               	goto	l1535
  3507  022B                     l291:	
  3508                           ;SPI_SPI.c: 58:     {;SPI_SPI.c: 59:         case 0:
  3509                           
  3510                           
  3511                           ;SPI_SPI.c: 60:             SSPCONbits.CKP = 0;
  3512  022B  1283               	bcf	3,5	;RP0=0, select bank0
  3513  022C  1214               	bcf	20,4	;volatile
  3514                           
  3515                           ;SPI_SPI.c: 61:             SSPSTATbits.CKE = 0;
  3516  022D  1683               	bsf	3,5	;RP0=1, select bank1
  3517  022E  1303               	bcf	3,6	;RP1=0, select bank1
  3518  022F  1314               	bcf	20,6	;volatile
  3519                           
  3520                           ;SPI_SPI.c: 63:             break;
  3521  0230  2A59               	goto	l292
  3522  0231                     l293:	
  3523                           ;SPI_SPI.c: 64:          case 1:
  3524                           
  3525                           
  3526                           ;SPI_SPI.c: 65:             SSPCONbits.CKP = 1;
  3527  0231  1283               	bcf	3,5	;RP0=0, select bank0
  3528  0232  1614               	bsf	20,4	;volatile
  3529                           
  3530                           ;SPI_SPI.c: 66:             SSPSTATbits.CKE = 0;
  3531  0233  1683               	bsf	3,5	;RP0=1, select bank1
  3532  0234  1303               	bcf	3,6	;RP1=0, select bank1
  3533  0235  1314               	bcf	20,6	;volatile
  3534                           
  3535                           ;SPI_SPI.c: 68:             break;
  3536  0236  2A59               	goto	l292
  3537  0237                     l294:	
  3538                           ;SPI_SPI.c: 69:          case 2:
  3539                           
  3540                           
  3541                           ;SPI_SPI.c: 70:             SSPCONbits.CKP = 0;
  3542  0237  1283               	bcf	3,5	;RP0=0, select bank0
  3543  0238  1214               	bcf	20,4	;volatile
  3544                           
  3545                           ;SPI_SPI.c: 71:             SSPSTATbits.CKE = 1;
  3546  0239  1683               	bsf	3,5	;RP0=1, select bank1
  3547  023A  1303               	bcf	3,6	;RP1=0, select bank1
  3548  023B  1714               	bsf	20,6	;volatile
  3549                           
  3550                           ;SPI_SPI.c: 73:             break;
  3551  023C  2A59               	goto	l292
  3552  023D                     l295:	
  3553                           ;SPI_SPI.c: 74:          case 3:
  3554                           
  3555                           
  3556                           ;SPI_SPI.c: 75:             SSPCONbits.CKP = 1;
  3557  023D  1283               	bcf	3,5	;RP0=0, select bank0
  3558  023E  1614               	bsf	20,4	;volatile
  3559                           
  3560                           ;SPI_SPI.c: 76:             SSPSTATbits.CKE = 1;
  3561  023F  1683               	bsf	3,5	;RP0=1, select bank1
  3562  0240  1303               	bcf	3,6	;RP1=0, select bank1
  3563  0241  1714               	bsf	20,6	;volatile
  3564                           
  3565                           ;SPI_SPI.c: 77:             break;
  3566  0242  2A59               	goto	l292
  3567  0243                     l1535:
  3568  0243  0872               	movf	SPI_Maestro_Init@SCK,w
  3569  0244  00F3               	movwf	??_SPI_Maestro_Init
  3570  0245  01F4               	clrf	??_SPI_Maestro_Init+1
  3571                           
  3572                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3573                           ; Switch size 1, requested type "simple"
  3574                           ; Number of cases is 1, Range of values is 0 to 0
  3575                           ; switch strategies available:
  3576                           ; Name         Instructions Cycles
  3577                           ; simple_byte            4     3 (average)
  3578                           ; direct_byte           11     8 (fixed)
  3579                           ; jumptable            260     6 (fixed)
  3580                           ;	Chosen strategy is simple_byte
  3581  0246  0874               	movf	??_SPI_Maestro_Init+1,w
  3582  0247  3A00               	xorlw	0	; case 0
  3583  0248  1903               	skipnz
  3584  0249  2A4B               	goto	l1979
  3585  024A  2A59               	goto	l292
  3586  024B                     l1979:
  3587                           
  3588                           ; Switch size 1, requested type "simple"
  3589                           ; Number of cases is 4, Range of values is 0 to 3
  3590                           ; switch strategies available:
  3591                           ; Name         Instructions Cycles
  3592                           ; simple_byte           13     7 (average)
  3593                           ; direct_byte           20     8 (fixed)
  3594                           ; jumptable            260     6 (fixed)
  3595                           ;	Chosen strategy is simple_byte
  3596  024B  0873               	movf	??_SPI_Maestro_Init,w
  3597  024C  3A00               	xorlw	0	; case 0
  3598  024D  1903               	skipnz
  3599  024E  2A2B               	goto	l291
  3600  024F  3A01               	xorlw	1	; case 1
  3601  0250  1903               	skipnz
  3602  0251  2A31               	goto	l293
  3603  0252  3A03               	xorlw	3	; case 2
  3604  0253  1903               	skipnz
  3605  0254  2A37               	goto	l294
  3606  0255  3A01               	xorlw	1	; case 3
  3607  0256  1903               	skipnz
  3608  0257  2A3D               	goto	l295
  3609  0258  2A59               	goto	l292
  3610  0259                     l292:
  3611                           
  3612                           ;SPI_SPI.c: 79:     SSPSTATbits.SMP = 0;
  3613  0259  1683               	bsf	3,5	;RP0=1, select bank1
  3614  025A  1303               	bcf	3,6	;RP1=0, select bank1
  3615  025B  1394               	bcf	20,7	;volatile
  3616                           
  3617                           ;SPI_SPI.c: 80:     SSPCONbits.SSPEN = 1;
  3618  025C  1283               	bcf	3,5	;RP0=0, select bank0
  3619  025D  1303               	bcf	3,6	;RP1=0, select bank0
  3620  025E  1694               	bsf	20,5	;volatile
  3621  025F                     l296:
  3622  025F  0008               	return
  3623  0260                     __end_of_SPI_Maestro_Init:
  3624                           
  3625                           	psect	text22
  3626  0673                     __ptext22:	
  3627 ;; *************** function _SPI_Recibir *****************
  3628 ;; Defined at:
  3629 ;;		line 167 in file "SPI_SPI.c"
  3630 ;; Parameters:    Size  Location     Type
  3631 ;;		None
  3632 ;; Auto vars:     Size  Location     Type
  3633 ;;		None
  3634 ;; Return value:  Size  Location     Type
  3635 ;;                  1    wreg      unsigned char 
  3636 ;; Registers used:
  3637 ;;		wreg
  3638 ;; Tracked objects:
  3639 ;;		On entry : 0/0
  3640 ;;		On exit  : 0/0
  3641 ;;		Unchanged: 0/0
  3642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3643 ;;      Params:         0       0       0       0       0
  3644 ;;      Locals:         0       0       0       0       0
  3645 ;;      Temps:          0       0       0       0       0
  3646 ;;      Totals:         0       0       0       0       0
  3647 ;;Total ram usage:        0 bytes
  3648 ;; Hardware stack levels used:    1
  3649 ;; Hardware stack levels required when called:    1
  3650 ;; This function calls:
  3651 ;;		Nothing
  3652 ;; This function is called by:
  3653 ;;		_main
  3654 ;; This function uses a non-reentrant model
  3655 ;;
  3656                           
  3657                           
  3658                           ;psect for function _SPI_Recibir
  3659  0673                     _SPI_Recibir:
  3660  0673                     l1671:	
  3661                           ;incstack = 0
  3662                           ; Regs used in _SPI_Recibir: [wreg]
  3663                           
  3664                           
  3665                           ;SPI_SPI.c: 169:     return SSPBUF;
  3666  0673  1283               	bcf	3,5	;RP0=0, select bank0
  3667  0674  1303               	bcf	3,6	;RP1=0, select bank0
  3668  0675  0813               	movf	19,w	;volatile
  3669  0676                     l319:
  3670  0676  0008               	return
  3671  0677                     __end_of_SPI_Recibir:
  3672                           
  3673                           	psect	text23
  3674  0667                     __ptext23:	
  3675 ;; *************** function _SPI_Enviar *****************
  3676 ;; Defined at:
  3677 ;;		line 161 in file "SPI_SPI.c"
  3678 ;; Parameters:    Size  Location     Type
  3679 ;;  valor           1    wreg     unsigned char 
  3680 ;; Auto vars:     Size  Location     Type
  3681 ;;  valor           1    2[COMMON] unsigned char 
  3682 ;; Return value:  Size  Location     Type
  3683 ;;                  1    wreg      void 
  3684 ;; Registers used:
  3685 ;;		wreg
  3686 ;; Tracked objects:
  3687 ;;		On entry : 0/0
  3688 ;;		On exit  : 0/0
  3689 ;;		Unchanged: 0/0
  3690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3691 ;;      Params:         0       0       0       0       0
  3692 ;;      Locals:         1       0       0       0       0
  3693 ;;      Temps:          0       0       0       0       0
  3694 ;;      Totals:         1       0       0       0       0
  3695 ;;Total ram usage:        1 bytes
  3696 ;; Hardware stack levels used:    1
  3697 ;; Hardware stack levels required when called:    1
  3698 ;; This function calls:
  3699 ;;		Nothing
  3700 ;; This function is called by:
  3701 ;;		_main
  3702 ;; This function uses a non-reentrant model
  3703 ;;
  3704                           
  3705                           
  3706                           ;psect for function _SPI_Enviar
  3707  0667                     _SPI_Enviar:
  3708                           
  3709                           ;incstack = 0
  3710                           ; Regs used in _SPI_Enviar: [wreg]
  3711                           ;SPI_Enviar@valor stored from wreg
  3712  0667  00F2               	movwf	SPI_Enviar@valor
  3713  0668                     l1669:
  3714                           
  3715                           ;SPI_SPI.c: 161: void SPI_Enviar (char valor);SPI_SPI.c: 162: {;SPI_SPI.c: 163:     SSPB
      +                          UF = valor;
  3716  0668  0872               	movf	SPI_Enviar@valor,w
  3717  0669  1283               	bcf	3,5	;RP0=0, select bank0
  3718  066A  1303               	bcf	3,6	;RP1=0, select bank0
  3719  066B  0093               	movwf	19	;volatile
  3720  066C                     l316:
  3721  066C  0008               	return
  3722  066D                     __end_of_SPI_Enviar:
  3723                           
  3724                           	psect	text24
  3725  04A1                     __ptext24:	
  3726 ;; *************** function _Lcd_Init *****************
  3727 ;; Defined at:
  3728 ;;		line 37 in file "LCD_SPI.c"
  3729 ;; Parameters:    Size  Location     Type
  3730 ;;		None
  3731 ;; Auto vars:     Size  Location     Type
  3732 ;;		None
  3733 ;; Return value:  Size  Location     Type
  3734 ;;                  1    wreg      void 
  3735 ;; Registers used:
  3736 ;;		wreg, status,2, status,0, pclath, cstack
  3737 ;; Tracked objects:
  3738 ;;		On entry : 0/0
  3739 ;;		On exit  : 0/0
  3740 ;;		Unchanged: 0/0
  3741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3742 ;;      Params:         0       0       0       0       0
  3743 ;;      Locals:         0       0       0       0       0
  3744 ;;      Temps:          2       0       0       0       0
  3745 ;;      Totals:         2       0       0       0       0
  3746 ;;Total ram usage:        2 bytes
  3747 ;; Hardware stack levels used:    1
  3748 ;; Hardware stack levels required when called:    3
  3749 ;; This function calls:
  3750 ;;		_Lcd_Cmd
  3751 ;;		_Lcd_Port
  3752 ;; This function is called by:
  3753 ;;		_main
  3754 ;; This function uses a non-reentrant model
  3755 ;;
  3756                           
  3757                           
  3758                           ;psect for function _Lcd_Init
  3759  04A1                     _Lcd_Init:
  3760  04A1                     l1643:	
  3761                           ;incstack = 0
  3762                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3763                           
  3764                           
  3765                           ;LCD_SPI.c: 39:     Lcd_Port(0b0000000);
  3766  04A1  3000               	movlw	0
  3767  04A2  120A  118A  266D  120A  118A  	fcall	_Lcd_Port
  3768  04A7                     l1645:
  3769                           
  3770                           ;LCD_SPI.c: 40:     _delay((unsigned long)((20)*(8000000/4000.0)));
  3771  04A7  3034               	movlw	52
  3772  04A8  00F7               	movwf	??_Lcd_Init+1
  3773  04A9  30F1               	movlw	241
  3774  04AA  00F6               	movwf	??_Lcd_Init
  3775  04AB                     u777:
  3776  04AB  0BF6               	decfsz	??_Lcd_Init,f
  3777  04AC  2CAB               	goto	u777
  3778  04AD  0BF7               	decfsz	??_Lcd_Init+1,f
  3779  04AE  2CAB               	goto	u777
  3780  04AF  2CB0               	nop2
  3781  04B0                     l1647:
  3782                           
  3783                           ;LCD_SPI.c: 41:     Lcd_Cmd(0b00110000);
  3784  04B0  3030               	movlw	48
  3785  04B1  120A  118A  25CA  120A  118A  	fcall	_Lcd_Cmd
  3786  04B6                     l1649:
  3787                           
  3788                           ;LCD_SPI.c: 42:     PORTEbits.RE0 = 0;
  3789  04B6  1283               	bcf	3,5	;RP0=0, select bank0
  3790  04B7  1303               	bcf	3,6	;RP1=0, select bank0
  3791  04B8  1009               	bcf	9,0	;volatile
  3792  04B9                     l1651:
  3793                           
  3794                           ;LCD_SPI.c: 43:     PORTEbits.RE2 = 0;
  3795  04B9  1109               	bcf	9,2	;volatile
  3796                           
  3797                           ;LCD_SPI.c: 44:     _delay((unsigned long)((5)*(8000000/4000.0)));
  3798  04BA  300D               	movlw	13
  3799  04BB  00F7               	movwf	??_Lcd_Init+1
  3800  04BC  30FB               	movlw	251
  3801  04BD  00F6               	movwf	??_Lcd_Init
  3802  04BE                     u787:
  3803  04BE  0BF6               	decfsz	??_Lcd_Init,f
  3804  04BF  2CBE               	goto	u787
  3805  04C0  0BF7               	decfsz	??_Lcd_Init+1,f
  3806  04C1  2CBE               	goto	u787
  3807  04C2  2CC3               	nop2
  3808  04C3                     l1653:
  3809                           
  3810                           ;LCD_SPI.c: 45:     Lcd_Cmd(0b00110000);
  3811  04C3  3030               	movlw	48
  3812  04C4  120A  118A  25CA  120A  118A  	fcall	_Lcd_Cmd
  3813  04C9                     l1655:
  3814                           
  3815                           ;LCD_SPI.c: 46:      PORTEbits.RE0 = 0;
  3816  04C9  1283               	bcf	3,5	;RP0=0, select bank0
  3817  04CA  1303               	bcf	3,6	;RP1=0, select bank0
  3818  04CB  1009               	bcf	9,0	;volatile
  3819  04CC                     l1657:
  3820                           
  3821                           ;LCD_SPI.c: 47:     PORTEbits.RE2 = 0;
  3822  04CC  1109               	bcf	9,2	;volatile
  3823  04CD                     l1659:
  3824                           
  3825                           ;LCD_SPI.c: 48:     _delay((unsigned long)((11)*(8000000/4000.0)));
  3826  04CD  301D               	movlw	29
  3827  04CE  00F7               	movwf	??_Lcd_Init+1
  3828  04CF  3091               	movlw	145
  3829  04D0  00F6               	movwf	??_Lcd_Init
  3830  04D1                     u797:
  3831  04D1  0BF6               	decfsz	??_Lcd_Init,f
  3832  04D2  2CD1               	goto	u797
  3833  04D3  0BF7               	decfsz	??_Lcd_Init+1,f
  3834  04D4  2CD1               	goto	u797
  3835                           
  3836                           ;LCD_SPI.c: 49:     Lcd_Cmd(0b00110000);
  3837  04D5  3030               	movlw	48
  3838  04D6  120A  118A  25CA  120A  118A  	fcall	_Lcd_Cmd
  3839  04DB                     l1661:
  3840                           
  3841                           ;LCD_SPI.c: 50:     PORTEbits.RE0 = 0;
  3842  04DB  1283               	bcf	3,5	;RP0=0, select bank0
  3843  04DC  1303               	bcf	3,6	;RP1=0, select bank0
  3844  04DD  1009               	bcf	9,0	;volatile
  3845  04DE                     l1663:
  3846                           
  3847                           ;LCD_SPI.c: 51:     PORTEbits.RE2 = 0;
  3848  04DE  1109               	bcf	9,2	;volatile
  3849                           
  3850                           ;LCD_SPI.c: 52:     Lcd_Cmd(0b00111000);
  3851  04DF  3038               	movlw	56
  3852  04E0  120A  118A  25CA  120A  118A  	fcall	_Lcd_Cmd
  3853                           
  3854                           ;LCD_SPI.c: 53:     Lcd_Cmd(0b00001100);
  3855  04E5  300C               	movlw	12
  3856  04E6  120A  118A  25CA  120A  118A  	fcall	_Lcd_Cmd
  3857                           
  3858                           ;LCD_SPI.c: 54:     Lcd_Cmd(0b00000001);
  3859  04EB  3001               	movlw	1
  3860  04EC  120A  118A  25CA  120A  118A  	fcall	_Lcd_Cmd
  3861                           
  3862                           ;LCD_SPI.c: 55:     Lcd_Cmd(0b00000110);
  3863  04F1  3006               	movlw	6
  3864  04F2  120A  118A  25CA  120A  118A  	fcall	_Lcd_Cmd
  3865  04F7                     l245:
  3866  04F7  0008               	return
  3867  04F8                     __end_of_Lcd_Init:
  3868                           
  3869                           	psect	text25
  3870  05CA                     __ptext25:	
  3871 ;; *************** function _Lcd_Cmd *****************
  3872 ;; Defined at:
  3873 ;;		line 28 in file "LCD_SPI.c"
  3874 ;; Parameters:    Size  Location     Type
  3875 ;;  a               1    wreg     unsigned char 
  3876 ;; Auto vars:     Size  Location     Type
  3877 ;;  a               1    5[COMMON] unsigned char 
  3878 ;; Return value:  Size  Location     Type
  3879 ;;                  1    wreg      void 
  3880 ;; Registers used:
  3881 ;;		wreg, status,2, status,0, pclath, cstack
  3882 ;; Tracked objects:
  3883 ;;		On entry : 0/0
  3884 ;;		On exit  : 0/0
  3885 ;;		Unchanged: 0/0
  3886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3887 ;;      Params:         0       0       0       0       0
  3888 ;;      Locals:         1       0       0       0       0
  3889 ;;      Temps:          2       0       0       0       0
  3890 ;;      Totals:         3       0       0       0       0
  3891 ;;Total ram usage:        3 bytes
  3892 ;; Hardware stack levels used:    1
  3893 ;; Hardware stack levels required when called:    2
  3894 ;; This function calls:
  3895 ;;		_Lcd_Port
  3896 ;; This function is called by:
  3897 ;;		_Lcd_Init
  3898 ;;		_Lcd_Set_Cursor
  3899 ;;		_Lcd_Clear
  3900 ;;		_Lcd_Shift_Left
  3901 ;;		_Lcd_Shift_Right
  3902 ;; This function uses a non-reentrant model
  3903 ;;
  3904                           
  3905                           
  3906                           ;psect for function _Lcd_Cmd
  3907  05CA                     _Lcd_Cmd:
  3908                           
  3909                           ;incstack = 0
  3910                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3911                           ;Lcd_Cmd@a stored from wreg
  3912  05CA  00F5               	movwf	Lcd_Cmd@a
  3913  05CB                     l1395:
  3914                           
  3915                           ;LCD_SPI.c: 28: void Lcd_Cmd (char a);LCD_SPI.c: 29: {;LCD_SPI.c: 30:     PORTEbits.RE0 
      +                          = 0;
  3916  05CB  1283               	bcf	3,5	;RP0=0, select bank0
  3917  05CC  1303               	bcf	3,6	;RP1=0, select bank0
  3918  05CD  1009               	bcf	9,0	;volatile
  3919  05CE                     l1397:
  3920                           
  3921                           ;LCD_SPI.c: 31:     Lcd_Port(a);
  3922  05CE  0875               	movf	Lcd_Cmd@a,w
  3923  05CF  120A  118A  266D  120A  118A  	fcall	_Lcd_Port
  3924  05D4                     l1399:
  3925                           
  3926                           ;LCD_SPI.c: 32:     PORTEbits.RE1 = 1;
  3927  05D4  1283               	bcf	3,5	;RP0=0, select bank0
  3928  05D5  1303               	bcf	3,6	;RP1=0, select bank0
  3929  05D6  1489               	bsf	9,1	;volatile
  3930  05D7                     l1401:
  3931                           
  3932                           ;LCD_SPI.c: 33:     _delay((unsigned long)((5)*(8000000/4000.0)));
  3933  05D7  300D               	movlw	13
  3934  05D8  00F4               	movwf	??_Lcd_Cmd+1
  3935  05D9  30FB               	movlw	251
  3936  05DA  00F3               	movwf	??_Lcd_Cmd
  3937  05DB                     u807:
  3938  05DB  0BF3               	decfsz	??_Lcd_Cmd,f
  3939  05DC  2DDB               	goto	u807
  3940  05DD  0BF4               	decfsz	??_Lcd_Cmd+1,f
  3941  05DE  2DDB               	goto	u807
  3942  05DF  2DE0               	nop2
  3943  05E0                     l1403:
  3944                           
  3945                           ;LCD_SPI.c: 34:     PORTEbits.RE1 = 0;
  3946  05E0  1283               	bcf	3,5	;RP0=0, select bank0
  3947  05E1  1303               	bcf	3,6	;RP1=0, select bank0
  3948  05E2  1089               	bcf	9,1	;volatile
  3949  05E3                     l242:
  3950  05E3  0008               	return
  3951  05E4                     __end_of_Lcd_Cmd:
  3952                           
  3953                           	psect	text26
  3954  066D                     __ptext26:	
  3955 ;; *************** function _Lcd_Port *****************
  3956 ;; Defined at:
  3957 ;;		line 23 in file "LCD_SPI.c"
  3958 ;; Parameters:    Size  Location     Type
  3959 ;;  a               1    wreg     unsigned char 
  3960 ;; Auto vars:     Size  Location     Type
  3961 ;;  a               1    2[COMMON] unsigned char 
  3962 ;; Return value:  Size  Location     Type
  3963 ;;                  1    wreg      void 
  3964 ;; Registers used:
  3965 ;;		wreg
  3966 ;; Tracked objects:
  3967 ;;		On entry : 0/0
  3968 ;;		On exit  : 0/0
  3969 ;;		Unchanged: 0/0
  3970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3971 ;;      Params:         0       0       0       0       0
  3972 ;;      Locals:         1       0       0       0       0
  3973 ;;      Temps:          0       0       0       0       0
  3974 ;;      Totals:         1       0       0       0       0
  3975 ;;Total ram usage:        1 bytes
  3976 ;; Hardware stack levels used:    1
  3977 ;; Hardware stack levels required when called:    1
  3978 ;; This function calls:
  3979 ;;		Nothing
  3980 ;; This function is called by:
  3981 ;;		_Lcd_Cmd
  3982 ;;		_Lcd_Init
  3983 ;;		_Lcd_Write_Char
  3984 ;; This function uses a non-reentrant model
  3985 ;;
  3986                           
  3987                           
  3988                           ;psect for function _Lcd_Port
  3989  066D                     _Lcd_Port:
  3990                           
  3991                           ;incstack = 0
  3992                           ; Regs used in _Lcd_Port: [wreg]
  3993                           ;Lcd_Port@a stored from wreg
  3994  066D  00F2               	movwf	Lcd_Port@a
  3995  066E                     l1359:
  3996                           
  3997                           ;LCD_SPI.c: 23: void Lcd_Port (char a);LCD_SPI.c: 24: {;LCD_SPI.c: 25:     PORTD = a;
  3998  066E  0872               	movf	Lcd_Port@a,w
  3999  066F  1283               	bcf	3,5	;RP0=0, select bank0
  4000  0670  1303               	bcf	3,6	;RP1=0, select bank0
  4001  0671  0088               	movwf	8	;volatile
  4002  0672                     l239:
  4003  0672  0008               	return
  4004  0673                     __end_of_Lcd_Port:
  4005                           
  4006                           	psect	text27
  4007  0611                     __ptext27:	
  4008 ;; *************** function _ISR *****************
  4009 ;; Defined at:
  4010 ;;		line 107 in file "MAESTRO_SPI.c"
  4011 ;; Parameters:    Size  Location     Type
  4012 ;;		None
  4013 ;; Auto vars:     Size  Location     Type
  4014 ;;		None
  4015 ;; Return value:  Size  Location     Type
  4016 ;;                  1    wreg      void 
  4017 ;; Registers used:
  4018 ;;		wreg
  4019 ;; Tracked objects:
  4020 ;;		On entry : 0/0
  4021 ;;		On exit  : 0/0
  4022 ;;		Unchanged: 0/0
  4023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4024 ;;      Params:         0       0       0       0       0
  4025 ;;      Locals:         0       0       0       0       0
  4026 ;;      Temps:          2       0       0       0       0
  4027 ;;      Totals:         2       0       0       0       0
  4028 ;;Total ram usage:        2 bytes
  4029 ;; Hardware stack levels used:    1
  4030 ;; This function calls:
  4031 ;;		Nothing
  4032 ;; This function is called by:
  4033 ;;		Interrupt level 1
  4034 ;; This function uses a non-reentrant model
  4035 ;;
  4036                           
  4037                           
  4038                           ;psect for function _ISR
  4039  0611                     _ISR:
  4040  0611                     i1l1245:
  4041                           
  4042                           ;MAESTRO_SPI.c: 109:         _delay((unsigned long)((1)*(8000000/4000.0)));
  4043  0611  1D0B               	btfss	11,2	;volatile
  4044  0612  2E14               	goto	u30_21
  4045  0613  2E15               	goto	u30_20
  4046  0614                     u30_21:
  4047  0614  2E1A               	goto	i1l154
  4048  0615                     u30_20:
  4049  0615                     i1l1247:
  4050                           
  4051                           ;MAESTRO_SPI.c: 110: ;MAESTRO_SPI.c: 111:         SPI_Enviar (dato_push1);
  4052  0615  110B               	bcf	11,2	;volatile
  4053  0616                     i1l1249:
  4054                           
  4055                           ;MAESTRO_SPI.c: 112:         dato_push = SPI_Recibir();
  4056  0616  3064               	movlw	100
  4057  0617  1283               	bcf	3,5	;RP0=0, select bank0
  4058  0618  1303               	bcf	3,6	;RP1=0, select bank0
  4059  0619  0081               	movwf	1	;volatile
  4060  061A                     i1l154:
  4061  061A  0871               	movf	??_ISR+1,w
  4062  061B  008A               	movwf	10
  4063  061C  0E70               	swapf	??_ISR,w
  4064  061D  0083               	movwf	3
  4065  061E  0EFE               	swapf	btemp,f
  4066  061F  0E7E               	swapf	btemp,w
  4067  0620  0009               	retfie
  4068  0621                     __end_of_ISR:
  4069  007E                     btemp	set	126	;btemp
  4070  007E                     wtemp0	set	126
  4071                           
  4072                           	psect	intentry
  4073  0004                     __pintentry:	
  4074                           ;incstack = 0
  4075                           ; Regs used in _ISR: [wreg]
  4076                           
  4077  0004                     interrupt_function:
  4078  007E                     saved_w	set	btemp
  4079  0004  00FE               	movwf	btemp
  4080  0005  0E03               	swapf	3,w
  4081  0006  00F0               	movwf	??_ISR
  4082  0007  080A               	movf	10,w
  4083  0008  00F1               	movwf	??_ISR+1
  4084  0009  120A  118A  2E11   	ljmp	_ISR
  4085                           
  4086                           	psect	config
  4087                           
  4088                           ;Config register CONFIG1 @ 0x2007
  4089                           ;	Oscillator Selection bits
  4090                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4091                           ;	Watchdog Timer Enable bit
  4092                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4093                           ;	Power-up Timer Enable bit
  4094                           ;	PWRTE = OFF, PWRT disabled
  4095                           ;	RE3/MCLR pin function select bit
  4096                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4097                           ;	Code Protection bit
  4098                           ;	CP = OFF, Program memory code protection is disabled
  4099                           ;	Data Code Protection bit
  4100                           ;	CPD = OFF, Data memory code protection is disabled
  4101                           ;	Brown Out Reset Selection bits
  4102                           ;	BOREN = OFF, BOR disabled
  4103                           ;	Internal External Switchover bit
  4104                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4105                           ;	Fail-Safe Clock Monitor Enabled bit
  4106                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4107                           ;	Low Voltage Programming Enable bit
  4108                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4109                           ;	In-Circuit Debugger Mode bit
  4110                           ;	DEBUG = 0x1, unprogrammed default
  4111  2007                     	org	8199
  4112  2007  20D4               	dw	8404
  4113                           
  4114                           ;Config register CONFIG2 @ 0x2008
  4115                           ;	Brown-out Reset Selection bit
  4116                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4117                           ;	Flash Program Memory Self Write Enable bits
  4118                           ;	WRT = OFF, Write protection off
  4119  2008                     	org	8200
  4120  2008  3FFF               	dw	16383

Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         30
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     10      38
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _lcd->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Conversion3->___awmod
    _virtual_display3->_escribir_char
    _Conversion2->___awmod
    _virtual_display2->_escribir_char
    _Conversion1->___awmod
    _virtual_display1->_escribir_char
    _Lcd_Write_Char->_Lcd_Port
    _SPI_config->_SPI_Maestro_Init
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_lcd
    _lcd->_Conversion1
    _lcd->_Conversion2
    _lcd->_Conversion3
    _Conversion3->___awdiv
    _Conversion2->___awdiv
    _Conversion1->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    8126
                                              8 BANK0      2     2      0
                           _Lcd_Init
                         _SPI_Enviar
                        _SPI_Recibir
                         _SPI_config
                       _USART_config
                    _interrup_config
                                _lcd
                         _osc_config
                              _setup
                        _tmr0_config
 ---------------------------------------------------------------------------------
 (1) _tmr0_config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _osc_config                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd                                                  1     1      0    7918
                                              7 BANK0      1     1      0
                        _Conversion1
                        _Conversion2
                        _Conversion3
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     3     3      0     167
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       4     3      1     482
                                              6 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Conversion3                                          3     3      0    2423
                                              4 BANK0      3     3      0
                     _Lcd_Write_Char
                            ___awdiv
                            ___awmod
                   _virtual_display3
 ---------------------------------------------------------------------------------
 (3) _virtual_display3                                     0     0      0      22
                      _escribir_char
 ---------------------------------------------------------------------------------
 (2) _Conversion2                                          3     3      0    2423
                                              4 BANK0      3     3      0
                     _Lcd_Write_Char
                            ___awdiv
                            ___awmod
                   _virtual_display2
 ---------------------------------------------------------------------------------
 (3) _virtual_display2                                     0     0      0      22
                      _escribir_char
 ---------------------------------------------------------------------------------
 (2) _Conversion1                                          3     3      0    2423
                                              4 BANK0      3     3      0
                     _Lcd_Write_Char
                            ___awdiv
                            ___awmod
                   _virtual_display1
 ---------------------------------------------------------------------------------
 (3) _virtual_display1                                     0     0      0      22
                      _escribir_char
 ---------------------------------------------------------------------------------
 (4) _escribir_char                                        1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1040
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1317
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      44
                                              3 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _interrup_config                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_config                                         0     0      0       0
                   _USART_lib_config
 ---------------------------------------------------------------------------------
 (2) _USART_lib_config                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_config                                           1     1      0     120
                                              6 COMMON     1     1      0
                   _SPI_Maestro_Init
 ---------------------------------------------------------------------------------
 (2) _SPI_Maestro_Init                                     4     3      1     120
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _SPI_Recibir                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Enviar                                           1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      44
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _SPI_Enviar
   _SPI_Recibir
   _SPI_config
     _SPI_Maestro_Init
   _USART_config
     _USART_lib_config
   _interrup_config
   _lcd
     _Conversion1
       _Lcd_Write_Char
         _Lcd_Port
       ___awdiv
       ___awmod
       _virtual_display1
         _escribir_char
     _Conversion2
       _Lcd_Write_Char
         _Lcd_Port
       ___awdiv
       ___awmod
       _virtual_display2
         _escribir_char
     _Conversion3
       _Lcd_Write_Char
         _Lcd_Port
       ___awdiv
       ___awmod
       _virtual_display3
         _escribir_char
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
   _osc_config
   _setup
   _tmr0_config

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      32       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      A      26       5       47.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      32      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Feb 17 00:48:08 2021

              _SPI_Recibir 0673            SPI_Enviar@valor 0072                          _a 0025  
                        pc 0002                _SSPSTATbits 0094               ___awdiv@sign 003D  
                       _w1 0027                         _w2 0026                         _x1 0039  
                       _x2 0037                         _y1 0038                         _y2 0036  
               _SPI_config 063A     __size_of_escribir_char 000A                         fsr 0004  
                      l212 0654                        l205 00BC                        l215 0658  
                      l209 04A0                        l242 05E3                        l171 064E  
                      l316 066C                        l180 0644                        l228 05C9  
                      l260 0587                        l245 04F7                        l165 0562  
                      l254 05AB                        l174 062D                        l239 0672  
                      l319 0676                        l183 0534                        l168 0639  
                      l192 032B                        l177 0666                        l186 01DA  
                      l291 022B                        l283 01E5                        l195 03F0  
                      l292 0259                        l293 0231                        l285 01EC  
                      l269 0610                        l294 0237                        l286 01F3  
                      l295 023D                        l287 01FA                        l199 038E  
                      l296 025F                        l288 0201                        l289 0208  
                      l571 0449                        l558 02C8    __end_of_interrup_config 063A  
                      u310 0658                        u311 0657                        u320 0334  
                      u321 0333                        u330 0026                        u331 0025  
                      u500 041E                        u340 002C                        u501 041D  
                      u341 002B                        u510 0428                        u350 0452  
                      u511 0427                        u351 0451                        u600 0267  
                      u601 0266                        u610 0272                        u530 043B  
                      u611 0271                        u531 043A                        u515 0424  
                      u620 0283                        u540 0440                        u460 03F6  
                      u700 02CF                        _ISR 0611                        u621 0282  
                      u541 043F                        u525 042F                        u461 03F5  
                      u701 02CE                        u470 0401                        u710 02E8  
                      u550 058E                        u471 0400                        u711 02E7  
                      u551 058D                        u640 0295                        u480 040C  
                      u560 05A0                        u641 0294                        u481 040B  
                      u561 059F                        u570 0587                        u635 0287  
                      u571 0586                        u660 02A6                        u661 02A5  
                      u807 05DB                        u655 0296                        u495 0410  
                      u727 00E9                        u680 02BA                        u681 02B9  
                      u665 02A2                        u737 0103                        u690 02BF  
                      u691 02BE                        u675 02AE                        u747 0111  
                      u757 012B                        u767 060A                        u777 04AB  
                      u787 04BE                        u797 04D1           _USART_lib_config 05AC  
                      _x1y 002D                        _x1z 0033                        _x2y 002B  
                      _x2z 0031                        _y1y 002C                        _y1z 0032  
                      _y2y 002A                        _y2z 0030                        _lcd 04F8  
            ??_Conversion1 0040              ??_Conversion2 0040              ??_Conversion3 0040  
                      fsr0 0004                        indf 0000               ___awmod@sign 0078  
                     ?_ISR 0070                       l1401 05D7                       l1403 05E0  
                     l1501 05B6                       l1511 05BD                       l1503 05B7  
                     l1521 05C2                       l1513 05BE                       l1505 05B8  
                     l1361 05FC                       l1531 020F                       l1523 05C3  
                     l1515 05BF                       l1507 05BB                       l1363 05FF  
                     l1451 03F2                       l1371 032C                       l1525 05C6  
                     l1517 05C0                       l1509 05BC                       l1365 0605  
                     l1461 0406                       l1453 03F6                       l1357 0650  
                     l1373 0334                       l1381 002C                       l1621 0535  
                     l1359 066E                       l1535 0243                       l1527 01DC  
                     l1519 05C1                       l1367 0608                       l1471 041E  
                     l1463 040C                       l1455 03FB                       l1375 038B  
                     l1383 006F                       l1391 0452                       l1551 059A  
                     l1631 0555                       l1623 054D                       l1369 060D  
                     l1801 028D                       l1481 0440                       l1473 0428  
                     l1465 040F                       l1457 03FD                       l1449 03F1  
                     l1385 0073                       l1377 001E                       l1393 049D  
                     l1553 05A0                       l1545 0589                       l1561 0574  
                     l1633 0645                       l1625 0550                       l1641 0629  
                     l1395 05CB                       l1651 04B9                       l1643 04A1  
                     l1491 05B1                       l1635 062E                       l1811 02AD  
                     l1803 0291                       l1483 0445                       l1475 042E  
                     l1467 0416                       l1459 0401                       l1379 0026  
                     l1555 05A5                       l1547 058E                       l1563 057A  
                     l1627 0551                       l1397 05CE                       l1661 04DB  
                     l1653 04C3                       l1645 04A7                       l1493 05B2  
                     l1637 0636                       l1813 02B4                       l1805 0295  
                     l1477 0435                       l1469 041A                       l1389 044A  
                     l1549 0593                       l1557 0564                       l1629 0554  
                     l1901 00D6                       l1399 05D4                       l1663 04DE  
                     l1655 04C9                       l1647 04B0                       l1671 0673  
                     l1495 05B3                       l1487 05AC                       l1807 02A6  
                     l1815 02BA                       l1479 043B                       l1831 0196  
                     l1823 014C                       l1559 0567                       l1639 0621  
                     l1911 00F3                       l1903 00DB                       l1657 04CC  
                     l1649 04B6                       l1497 05B4                       l1489 05B0  
                     l1665 0661                       l1817 02BF                       l1809 02AC  
                     l1841 01C6                       l1833 01AC                       l1825 0154  
                     l1921 0115                       l1913 00FD                       l1905 00E0  
                     ?_lcd 0070                       l1659 04CD                       l1667 063A  
                     l1499 05B5                       l1819 02C4                       l1843 01CF  
                     l1835 01B0                       l1827 016A                       l1851 02E2  
                     l1931 0137                       l1923 011B                       l1915 0107  
                     l1907 00E3                       l1669 0668                       l1781 0263  
                     l1845 01D5                       l1837 01B7                       l1829 0180  
                     l1853 02E8                       l1861 03C3                       l1933 013E  
                     l1925 0125                       l1917 010A                       l1909 00ED  
                     l1791 0277                       l1783 0267                       l1839 01BD  
                     l1847 02C9                       l1871 03D3                       l1863 03C4  
                     l1855 038F                       l1935 0143                       l1927 012F  
                     l1919 010B                       l1793 027B                       l1785 026C  
                     l1849 02CF                       l1873 03DC                       l1865 03C5  
                     l1857 0397                       l1881 0500                       l1929 0132  
                     l1795 027D                       l1787 026E                       l1779 0260  
                     l1875 03E5                       l1867 03C6                       l1859 03AD  
                     l1891 0523                       l1883 0506                       l1797 0283  
                     l1789 0272                       l1877 03EB                       l1869 03CD  
                     l1893 052F                       l1885 050D                       l1799 0286  
                     l1887 0512                       l1879 04F8                       l1895 00BD  
                     l1977 0217                       l1889 051E                       l1897 00CC  
                     l1979 024B                       l1899 00D1                       STR_1 05EA  
                     _IOCB 0096                       _TMR0 0001          ?_Lcd_Write_String 0070  
                     _main 00BD                       _leer 0029                       btemp 007E  
                     start 000C         ??_Lcd_Write_String 0075            __end_of_Lcd_Cmd 05E4  
                    ??_ISR 0070                      ??_lcd 0043                      ?_main 0070  
          __end_of___awdiv 02C9            __end_of___awmod 044A                      _ANSEL 0188  
          ___awdiv@divisor 0072                      i1l154 061A            ___awdiv@counter 003C  
                    u30_20 0615                      u30_21 0614                      _SPBRG 0099  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009    __size_of_Lcd_Set_Cursor 0024  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _TRISE 0089                      _TXREG 0019  
                    _setup 0535        __end_of_Conversion1 01DB        __end_of_Conversion2 032C  
      __end_of_Conversion3 03F1              _escribir_char 064F                      pclath 000A  
                    status 0003                      wtemp0 007E           __end_of_Lcd_Init 04F8  
         __end_of_Lcd_Port 0673                ?_SPI_Enviar 0070            __initialization 000F  
             __end_of_main 014C        SPI_Maestro_Init@SCK 0072                ?_SPI_config 0070  
                   ??_main 0044           ?_interrup_config 0070   __end_of_virtual_display1 038F  
 __end_of_virtual_display2 00BD               ?_tmr0_config 0070   __end_of_virtual_display3 04A1  
 __end_of_SPI_Maestro_Init 0260           ___awdiv@dividend 0074             ?_escribir_char 0070  
                   ?_setup 0070                     _ANSELH 0189                     i1l1245 0611  
                   i1l1247 0615                     i1l1249 0616                  ??_Lcd_Cmd 0073  
  __size_of_Lcd_Write_Char 0016                     _SSPBUF 0013                  ??___awdiv 0076  
                ??___awmod 0076           ___awdiv@quotient 003E            ___awmod@divisor 0072  
          ___awmod@counter 0077                     _unidad 003A                _Conversion1 014C  
              _Conversion2 02C9                _Conversion3 038F                     saved_w 007E  
      __size_of_SPI_Enviar 0006            Lcd_Set_Cursor@a 0078            Lcd_Set_Cursor@b 0076  
  __end_of__initialization 001A        __size_of_SPI_config 000B   __end_of_USART_lib_config 05CA  
             ?_SPI_Recibir 0070             __pcstackCOMMON 0070              __end_of_setup 0563  
           _Lcd_Set_Cursor 0588             _OPTION_REGbits 0081            ??_escribir_char 0072  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070                    ??_setup 0072  
               __pbssBANK0 0020                 __pmaintext 00BD                 _dato_push1 0021  
               __pintentry 0004  __size_of_Lcd_Write_String 0025     __end_of_Lcd_Set_Cursor 05AC  
               ??_Lcd_Init 0076                 ??_Lcd_Port 0072       __size_of_tmr0_config 000D  
               __stringtab 05E4             _Lcd_Write_Char 05FB                    _Lcd_Cmd 05CA  
             ??_SPI_Enviar 0072                    ___awdiv 0260                    ___awmod 03F1  
             ??_SPI_config 0076            ?_Lcd_Set_Cursor 0076                    __ptext1 0621  
                  __ptext2 0535                    __ptext3 0645                    __ptext4 04F8  
                  __ptext5 0563                    __ptext6 0588                    __ptext7 038F  
                  __ptext8 044A                    __ptext9 02C9               __size_of_ISR 0010  
             __size_of_lcd 003D           ___awmod@dividend 0074          ?_virtual_display1 0070  
        ?_virtual_display2 0070          ?_virtual_display3 0070          ?_SPI_Maestro_Init 0072  
                  _unidady 002E                    _unidadz 0034         __end_of_SPI_Enviar 066D  
       ??_virtual_display1 0073         ??_virtual_display2 0073         ??_virtual_display3 0073  
                  clrloop0 065A         ??_SPI_Maestro_Init 0073                    _voltaje 003B  
   __end_of_Lcd_Write_Char 0611       end_of_initialization 001A                 _osc_config 0645  
       __end_of_SPI_config 0645                  _RCSTAbits 0018                  Lcd_Port@a 0072  
     __size_of_SPI_Recibir 0004                 _velocidad1 0024                 _velocidad2 0023  
               _velocidad3 0022                  _PORTCbits 0007                  _PORTEbits 0009  
             ?_Conversion1 0070               ?_Conversion2 0070               ?_Conversion3 0070  
                _TRISAbits 0085                  _TRISCbits 0087            ?_Lcd_Write_Char 0070  
 __size_of_interrup_config 000C          Lcd_Write_String@a 0077          Lcd_Write_String@i 0075  
                _TXSTAbits 0098          ?_USART_lib_config 0070              ?_USART_config 0070  
       ??_USART_lib_config 0072           _Lcd_Write_String 0563        start_initialization 000F  
              __end_of_ISR 0621                __end_of_lcd 0535          __size_of_Lcd_Init 0057  
        __size_of_Lcd_Port 0006                ?_osc_config 0070             ??_USART_config 0072  
          Lcd_Write_Char@a 0074                __pbssCOMMON 007A                  ___latbits 0002  
            __pcstackBANK0 003C      __end_of_escribir_char 0659                   ?_Lcd_Cmd 0070  
        ??_interrup_config 0072                  _dato_push 007A           ??_Lcd_Set_Cursor 0077  
                 ?___awdiv 0072                   ?___awmod 0072                  __pstrings 05E4  
            _dato_semaforo 0020        __size_of_osc_config 000A              ??_tmr0_config 0072  
     __size_of_Conversion1 008F       __size_of_Conversion2 0063       __size_of_Conversion3 0062  
           __size_of_setup 002E          interrupt_function 0004                  clear_ram0 0659  
                 _PIE1bits 008C  __size_of_virtual_display1 0063  __size_of_virtual_display2 009F  
__size_of_virtual_display3 0057  __size_of_SPI_Maestro_Init 0085                   Lcd_Cmd@a 0075  
                 _PIR1bits 000C                __stringbase 05E9           ??_Lcd_Write_Char 0073  
     __end_of_USART_config 0667                   _Lcd_Init 04A1                   _Lcd_Port 066D  
      __end_of_tmr0_config 062E   __end_of_Lcd_Write_String 0588           __size_of_Lcd_Cmd 001A  
            ??_SPI_Recibir 0072           __size_of___awdiv 0069           __size_of___awmod 0059  
       __end_of__stringtab 05EA  __size_of_USART_lib_config 001E                   _dato_pot 007B  
                 __ptext10 001E                   __ptext11 014C                   __ptext20 063A  
                 __ptext12 032C                   __ptext21 01DB                   __ptext13 064F  
                 __ptext22 0673                   __ptext14 03F1                   __ptext23 0667  
                 __ptext15 0260                   __ptext24 04A1                   __ptext16 05FB  
                 __ptext25 05CA                   __ptext17 062E                   __ptext26 066D  
                 __ptext18 0661                   __ptext27 0611                   __ptext19 05AC  
       escribir_char@valor 0072                   _contador 0028               ??_osc_config 0072  
            __size_of_main 008F                   _voltajey 002F                   _voltajez 0035  
      __end_of_SPI_Recibir 0677                 _INTCONbits 000B         __end_of_osc_config 064F  
              _tmr0_config 0621            _interrup_config 062E                   intlevel1 0000  
         _virtual_display1 032C           _virtual_display2 001E           _virtual_display3 044A  
         _SPI_Maestro_Init 01DB                  stringcode 05E4                 _OSCCONbits 008F  
       Lcd_Set_Cursor@temp 0079  SPI_Maestro_Init@port_mode 0075      __size_of_USART_config 0006  
                 stringdir 05E4                   stringtab 05E4                 _SSPCONbits 0014  
               _SPI_Enviar 0667               _USART_config 0661  
