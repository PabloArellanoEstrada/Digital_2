

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 22 19:39:13 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    41                           	dabs	1,0x7E,2
    42  0000                     
    43                           ; Version 2.20
    44                           ; Generated 12/02/2020 GMT
    45                           ; 
    46                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F887 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     	;# 
    78  0001                     	;# 
    79  0002                     	;# 
    80  0003                     	;# 
    81  0004                     	;# 
    82  0005                     	;# 
    83  0006                     	;# 
    84  0007                     	;# 
    85  0008                     	;# 
    86  0009                     	;# 
    87  000A                     	;# 
    88  000B                     	;# 
    89  000C                     	;# 
    90  000D                     	;# 
    91  000E                     	;# 
    92  000E                     	;# 
    93  000F                     	;# 
    94  0010                     	;# 
    95  0011                     	;# 
    96  0012                     	;# 
    97  0013                     	;# 
    98  0014                     	;# 
    99  0015                     	;# 
   100  0015                     	;# 
   101  0016                     	;# 
   102  0017                     	;# 
   103  0018                     	;# 
   104  0019                     	;# 
   105  001A                     	;# 
   106  001B                     	;# 
   107  001B                     	;# 
   108  001C                     	;# 
   109  001D                     	;# 
   110  001E                     	;# 
   111  001F                     	;# 
   112  0081                     	;# 
   113  0085                     	;# 
   114  0086                     	;# 
   115  0087                     	;# 
   116  0088                     	;# 
   117  0089                     	;# 
   118  008C                     	;# 
   119  008D                     	;# 
   120  008E                     	;# 
   121  008F                     	;# 
   122  0090                     	;# 
   123  0091                     	;# 
   124  0092                     	;# 
   125  0093                     	;# 
   126  0093                     	;# 
   127  0093                     	;# 
   128  0094                     	;# 
   129  0095                     	;# 
   130  0096                     	;# 
   131  0097                     	;# 
   132  0098                     	;# 
   133  0099                     	;# 
   134  009A                     	;# 
   135  009B                     	;# 
   136  009C                     	;# 
   137  009D                     	;# 
   138  009E                     	;# 
   139  009F                     	;# 
   140  0105                     	;# 
   141  0107                     	;# 
   142  0108                     	;# 
   143  0109                     	;# 
   144  010C                     	;# 
   145  010C                     	;# 
   146  010D                     	;# 
   147  010E                     	;# 
   148  010F                     	;# 
   149  0185                     	;# 
   150  0187                     	;# 
   151  0188                     	;# 
   152  0189                     	;# 
   153  018C                     	;# 
   154  018D                     	;# 
   155  0000                     	;# 
   156  0001                     	;# 
   157  0002                     	;# 
   158  0003                     	;# 
   159  0004                     	;# 
   160  0005                     	;# 
   161  0006                     	;# 
   162  0007                     	;# 
   163  0008                     	;# 
   164  0009                     	;# 
   165  000A                     	;# 
   166  000B                     	;# 
   167  000C                     	;# 
   168  000D                     	;# 
   169  000E                     	;# 
   170  000E                     	;# 
   171  000F                     	;# 
   172  0010                     	;# 
   173  0011                     	;# 
   174  0012                     	;# 
   175  0013                     	;# 
   176  0014                     	;# 
   177  0015                     	;# 
   178  0015                     	;# 
   179  0016                     	;# 
   180  0017                     	;# 
   181  0018                     	;# 
   182  0019                     	;# 
   183  001A                     	;# 
   184  001B                     	;# 
   185  001B                     	;# 
   186  001C                     	;# 
   187  001D                     	;# 
   188  001E                     	;# 
   189  001F                     	;# 
   190  0081                     	;# 
   191  0085                     	;# 
   192  0086                     	;# 
   193  0087                     	;# 
   194  0088                     	;# 
   195  0089                     	;# 
   196  008C                     	;# 
   197  008D                     	;# 
   198  008E                     	;# 
   199  008F                     	;# 
   200  0090                     	;# 
   201  0091                     	;# 
   202  0092                     	;# 
   203  0093                     	;# 
   204  0093                     	;# 
   205  0093                     	;# 
   206  0094                     	;# 
   207  0095                     	;# 
   208  0096                     	;# 
   209  0097                     	;# 
   210  0098                     	;# 
   211  0099                     	;# 
   212  009A                     	;# 
   213  009B                     	;# 
   214  009C                     	;# 
   215  009D                     	;# 
   216  009E                     	;# 
   217  009F                     	;# 
   218  0105                     	;# 
   219  0107                     	;# 
   220  0108                     	;# 
   221  0109                     	;# 
   222  010C                     	;# 
   223  010C                     	;# 
   224  010D                     	;# 
   225  010E                     	;# 
   226  010F                     	;# 
   227  0185                     	;# 
   228  0187                     	;# 
   229  0188                     	;# 
   230  0189                     	;# 
   231  018C                     	;# 
   232  018D                     	;# 
   233  0000                     	;# 
   234  0001                     	;# 
   235  0002                     	;# 
   236  0003                     	;# 
   237  0004                     	;# 
   238  0005                     	;# 
   239  0006                     	;# 
   240  0007                     	;# 
   241  0008                     	;# 
   242  0009                     	;# 
   243  000A                     	;# 
   244  000B                     	;# 
   245  000C                     	;# 
   246  000D                     	;# 
   247  000E                     	;# 
   248  000E                     	;# 
   249  000F                     	;# 
   250  0010                     	;# 
   251  0011                     	;# 
   252  0012                     	;# 
   253  0013                     	;# 
   254  0014                     	;# 
   255  0015                     	;# 
   256  0015                     	;# 
   257  0016                     	;# 
   258  0017                     	;# 
   259  0018                     	;# 
   260  0019                     	;# 
   261  001A                     	;# 
   262  001B                     	;# 
   263  001B                     	;# 
   264  001C                     	;# 
   265  001D                     	;# 
   266  001E                     	;# 
   267  001F                     	;# 
   268  0081                     	;# 
   269  0085                     	;# 
   270  0086                     	;# 
   271  0087                     	;# 
   272  0088                     	;# 
   273  0089                     	;# 
   274  008C                     	;# 
   275  008D                     	;# 
   276  008E                     	;# 
   277  008F                     	;# 
   278  0090                     	;# 
   279  0091                     	;# 
   280  0092                     	;# 
   281  0093                     	;# 
   282  0093                     	;# 
   283  0093                     	;# 
   284  0094                     	;# 
   285  0095                     	;# 
   286  0096                     	;# 
   287  0097                     	;# 
   288  0098                     	;# 
   289  0099                     	;# 
   290  009A                     	;# 
   291  009B                     	;# 
   292  009C                     	;# 
   293  009D                     	;# 
   294  009E                     	;# 
   295  009F                     	;# 
   296  0105                     	;# 
   297  0107                     	;# 
   298  0108                     	;# 
   299  0109                     	;# 
   300  010C                     	;# 
   301  010C                     	;# 
   302  010D                     	;# 
   303  010E                     	;# 
   304  010F                     	;# 
   305  0185                     	;# 
   306  0187                     	;# 
   307  0188                     	;# 
   308  0189                     	;# 
   309  018C                     	;# 
   310  018D                     	;# 
   311  0000                     	;# 
   312  0001                     	;# 
   313  0002                     	;# 
   314  0003                     	;# 
   315  0004                     	;# 
   316  0005                     	;# 
   317  0006                     	;# 
   318  0007                     	;# 
   319  0008                     	;# 
   320  0009                     	;# 
   321  000A                     	;# 
   322  000B                     	;# 
   323  000C                     	;# 
   324  000D                     	;# 
   325  000E                     	;# 
   326  000E                     	;# 
   327  000F                     	;# 
   328  0010                     	;# 
   329  0011                     	;# 
   330  0012                     	;# 
   331  0013                     	;# 
   332  0014                     	;# 
   333  0015                     	;# 
   334  0015                     	;# 
   335  0016                     	;# 
   336  0017                     	;# 
   337  0018                     	;# 
   338  0019                     	;# 
   339  001A                     	;# 
   340  001B                     	;# 
   341  001B                     	;# 
   342  001C                     	;# 
   343  001D                     	;# 
   344  001E                     	;# 
   345  001F                     	;# 
   346  0081                     	;# 
   347  0085                     	;# 
   348  0086                     	;# 
   349  0087                     	;# 
   350  0088                     	;# 
   351  0089                     	;# 
   352  008C                     	;# 
   353  008D                     	;# 
   354  008E                     	;# 
   355  008F                     	;# 
   356  0090                     	;# 
   357  0091                     	;# 
   358  0092                     	;# 
   359  0093                     	;# 
   360  0093                     	;# 
   361  0093                     	;# 
   362  0094                     	;# 
   363  0095                     	;# 
   364  0096                     	;# 
   365  0097                     	;# 
   366  0098                     	;# 
   367  0099                     	;# 
   368  009A                     	;# 
   369  009B                     	;# 
   370  009C                     	;# 
   371  009D                     	;# 
   372  009E                     	;# 
   373  009F                     	;# 
   374  0105                     	;# 
   375  0107                     	;# 
   376  0108                     	;# 
   377  0109                     	;# 
   378  010C                     	;# 
   379  010C                     	;# 
   380  010D                     	;# 
   381  010E                     	;# 
   382  010F                     	;# 
   383  0185                     	;# 
   384  0187                     	;# 
   385  0188                     	;# 
   386  0189                     	;# 
   387  018C                     	;# 
   388  018D                     	;# 
   389  0000                     	;# 
   390  0001                     	;# 
   391  0002                     	;# 
   392  0003                     	;# 
   393  0004                     	;# 
   394  0005                     	;# 
   395  0006                     	;# 
   396  0007                     	;# 
   397  0008                     	;# 
   398  0009                     	;# 
   399  000A                     	;# 
   400  000B                     	;# 
   401  000C                     	;# 
   402  000D                     	;# 
   403  000E                     	;# 
   404  000E                     	;# 
   405  000F                     	;# 
   406  0010                     	;# 
   407  0011                     	;# 
   408  0012                     	;# 
   409  0013                     	;# 
   410  0014                     	;# 
   411  0015                     	;# 
   412  0015                     	;# 
   413  0016                     	;# 
   414  0017                     	;# 
   415  0018                     	;# 
   416  0019                     	;# 
   417  001A                     	;# 
   418  001B                     	;# 
   419  001B                     	;# 
   420  001C                     	;# 
   421  001D                     	;# 
   422  001E                     	;# 
   423  001F                     	;# 
   424  0081                     	;# 
   425  0085                     	;# 
   426  0086                     	;# 
   427  0087                     	;# 
   428  0088                     	;# 
   429  0089                     	;# 
   430  008C                     	;# 
   431  008D                     	;# 
   432  008E                     	;# 
   433  008F                     	;# 
   434  0090                     	;# 
   435  0091                     	;# 
   436  0092                     	;# 
   437  0093                     	;# 
   438  0093                     	;# 
   439  0093                     	;# 
   440  0094                     	;# 
   441  0095                     	;# 
   442  0096                     	;# 
   443  0097                     	;# 
   444  0098                     	;# 
   445  0099                     	;# 
   446  009A                     	;# 
   447  009B                     	;# 
   448  009C                     	;# 
   449  009D                     	;# 
   450  009E                     	;# 
   451  009F                     	;# 
   452  0105                     	;# 
   453  0107                     	;# 
   454  0108                     	;# 
   455  0109                     	;# 
   456  010C                     	;# 
   457  010C                     	;# 
   458  010D                     	;# 
   459  010E                     	;# 
   460  010F                     	;# 
   461  0185                     	;# 
   462  0187                     	;# 
   463  0188                     	;# 
   464  0189                     	;# 
   465  018C                     	;# 
   466  018D                     	;# 
   467  0013                     _SSPBUF	set	19
   468  0014                     _SSPCONbits	set	20
   469  0009                     _PORTEbits	set	9
   470  0018                     _RCSTAbits	set	24
   471  000C                     _PIR1bits	set	12
   472  0019                     _TXREG	set	25
   473  0009                     _PORTE	set	9
   474  0008                     _PORTD	set	8
   475  0007                     _PORTC	set	7
   476  0006                     _PORTB	set	6
   477  0005                     _PORTA	set	5
   478  0007                     _PORTCbits	set	7
   479  0001                     _TMR0	set	1
   480  000B                     _INTCONbits	set	11
   481  0085                     _TRISAbits	set	133
   482  0094                     _SSPSTATbits	set	148
   483  008C                     _PIE1bits	set	140
   484  0098                     _TXSTAbits	set	152
   485  0099                     _SPBRG	set	153
   486  0081                     _OPTION_REGbits	set	129
   487  008F                     _OSCCONbits	set	143
   488  0096                     _IOCB	set	150
   489  0089                     _TRISE	set	137
   490  0088                     _TRISD	set	136
   491  0087                     _TRISCbits	set	135
   492  0087                     _TRISC	set	135
   493  0086                     _TRISB	set	134
   494  0085                     _TRISA	set	133
   495  0189                     _ANSELH	set	393
   496  0188                     _ANSEL	set	392
   497                           
   498                           	psect	strings
   499  0600                     __pstrings:
   500  0600                     stringtab:
   501  0600                     __stringtab:
   502  0600                     stringcode:	
   503                           ;	String table - string pointers are 1 byte each
   504                           
   505  0600                     stringdir:
   506  0600  3006               	movlw	high stringdir
   507  0601  008A               	movwf	10
   508  0602  0804               	movf	4,w
   509  0603  0A84               	incf	4,f
   510  0604  0782               	addwf	2,f
   511  0605                     __stringbase:
   512  0605  3400               	retlw	0
   513  0606                     __end_of__stringtab:
   514  0606                     STR_1:
   515  0606  3441               	retlw	65	;'A'
   516  0607  3444               	retlw	68	;'D'
   517  0608  3443               	retlw	67	;'C'
   518  0609  343A               	retlw	58	;':'
   519  060A  3420               	retlw	32	;' '
   520  060B  3420               	retlw	32	;' '
   521  060C  3442               	retlw	66	;'B'
   522  060D  3454               	retlw	84	;'T'
   523  060E  344E               	retlw	78	;'N'
   524  060F  343A               	retlw	58	;':'
   525  0610  3420               	retlw	32	;' '
   526  0611  3454               	retlw	84	;'T'
   527  0612  3445               	retlw	69	;'E'
   528  0613  344D               	retlw	77	;'M'
   529  0614  3450               	retlw	80	;'P'
   530  0615  343A               	retlw	58	;':'
   531  0616  3400               	retlw	0
   532                           
   533                           	psect	cinit
   534  000F                     start_initialization:	
   535                           ; #config settings
   536                           
   537  000F                     __initialization:
   538                           
   539                           ; Clear objects allocated to COMMON
   540  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   541  0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   542                           
   543                           ; Clear objects allocated to BANK0
   544  0011  1383               	bcf	3,7	;select IRP bank0
   545  0012  3020               	movlw	low __pbssBANK0
   546  0013  0084               	movwf	4
   547  0014  303A               	movlw	low (__pbssBANK0+26)
   548  0015  120A  118A  2675  120A  118A  	fcall	clear_ram0
   549  001A                     end_of_initialization:	
   550                           ;End of C runtime variable initialization code
   551                           
   552  001A                     __end_of__initialization:
   553  001A  0183               	clrf	3
   554  001B  120A  118A  281E   	ljmp	_main	;jump to C main() function
   555                           
   556                           	psect	bssCOMMON
   557  007A                     __pbssCOMMON:
   558  007A                     _dato_push:
   559  007A                     	ds	1
   560  007B                     _decenay:
   561  007B                     	ds	1
   562                           
   563                           	psect	bssBANK0
   564  0020                     __pbssBANK0:
   565  0020                     _dato_semaforo:
   566  0020                     	ds	1
   567  0021                     _dato_pot:
   568  0021                     	ds	1
   569  0022                     _velocidad3:
   570  0022                     	ds	1
   571  0023                     _velocidad2:
   572  0023                     	ds	1
   573  0024                     _velocidad1:
   574  0024                     	ds	1
   575  0025                     _a:
   576  0025                     	ds	1
   577  0026                     _w2:
   578  0026                     	ds	1
   579  0027                     _w1:
   580  0027                     	ds	1
   581  0028                     _y2y:
   582  0028                     	ds	1
   583  0029                     _x2y:
   584  0029                     	ds	1
   585  002A                     _y1y:
   586  002A                     	ds	1
   587  002B                     _x1y:
   588  002B                     	ds	1
   589  002C                     _unidady:
   590  002C                     	ds	1
   591  002D                     _voltajey:
   592  002D                     	ds	1
   593  002E                     _y2z:
   594  002E                     	ds	1
   595  002F                     _x2z:
   596  002F                     	ds	1
   597  0030                     _y1z:
   598  0030                     	ds	1
   599  0031                     _x1z:
   600  0031                     	ds	1
   601  0032                     _unidadz:
   602  0032                     	ds	1
   603  0033                     _voltajez:
   604  0033                     	ds	1
   605  0034                     _y2:
   606  0034                     	ds	1
   607  0035                     _x2:
   608  0035                     	ds	1
   609  0036                     _y1:
   610  0036                     	ds	1
   611  0037                     _x1:
   612  0037                     	ds	1
   613  0038                     _unidad:
   614  0038                     	ds	1
   615  0039                     _voltaje:
   616  0039                     	ds	1
   617                           
   618                           	psect	clrtext
   619  0675                     clear_ram0:	
   620                           ;	Called with FSR containing the base address, and
   621                           ;	W with the last address+1
   622                           
   623  0675  0064               	clrwdt	;clear the watchdog before getting into this loop
   624  0676                     clrloop0:
   625  0676  0180               	clrf	0	;clear RAM location pointed to by FSR
   626  0677  0A84               	incf	4,f	;increment pointer
   627  0678  0604               	xorwf	4,w	;XOR with final address
   628  0679  1903               	btfsc	3,2	;have we reached the end yet?
   629  067A  3400               	retlw	0	;all done for this memory range, return
   630  067B  0604               	xorwf	4,w	;XOR again to restore value
   631  067C  2E76               	goto	clrloop0	;do the next byte
   632                           
   633                           	psect	cstackCOMMON
   634  0070                     __pcstackCOMMON:
   635  0070                     ?_setup:
   636  0070                     ?_osc_config:	
   637                           ; 1 bytes @ 0x0
   638                           
   639  0070                     ?_interrup_config:	
   640                           ; 1 bytes @ 0x0
   641                           
   642  0070                     ?_tmr0_config:	
   643                           ; 1 bytes @ 0x0
   644                           
   645  0070                     ?_Lcd_Init:	
   646                           ; 1 bytes @ 0x0
   647                           
   648  0070                     ?_USART_config:	
   649                           ; 1 bytes @ 0x0
   650                           
   651  0070                     ?_SPI_config:	
   652                           ; 1 bytes @ 0x0
   653                           
   654  0070                     ?_SPI_Enviar:	
   655                           ; 1 bytes @ 0x0
   656                           
   657  0070                     ?_SPI_Recibir:	
   658                           ; 1 bytes @ 0x0
   659                           
   660  0070                     ?_lcd:	
   661                           ; 1 bytes @ 0x0
   662                           
   663  0070                     ?_USART_lib_config:	
   664                           ; 1 bytes @ 0x0
   665                           
   666  0070                     ?_Lcd_Write_String:	
   667                           ; 1 bytes @ 0x0
   668                           
   669  0070                     ?_Conversion1:	
   670                           ; 1 bytes @ 0x0
   671                           
   672  0070                     ?_Conversion2:	
   673                           ; 1 bytes @ 0x0
   674                           
   675  0070                     ?_Conversion3:	
   676                           ; 1 bytes @ 0x0
   677                           
   678  0070                     ?_Lcd_Write_Char:	
   679                           ; 1 bytes @ 0x0
   680                           
   681  0070                     ?_virtual_display1:	
   682                           ; 1 bytes @ 0x0
   683                           
   684  0070                     ?_virtual_display2:	
   685                           ; 1 bytes @ 0x0
   686                           
   687  0070                     ?_virtual_display3:	
   688                           ; 1 bytes @ 0x0
   689                           
   690  0070                     ?_escribir_char:	
   691                           ; 1 bytes @ 0x0
   692                           
   693  0070                     ?_ISR:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0070                     ??_ISR:	
   697                           ; 1 bytes @ 0x0
   698                           
   699  0070                     ?_main:	
   700                           ; 1 bytes @ 0x0
   701                           
   702  0070                     ?_Lcd_Port:	
   703                           ; 1 bytes @ 0x0
   704                           
   705  0070                     ?_Lcd_Cmd:	
   706                           ; 1 bytes @ 0x0
   707                           
   708                           
   709                           ; 1 bytes @ 0x0
   710  0070                     	ds	2
   711  0072                     ??_setup:
   712  0072                     ??_osc_config:	
   713                           ; 1 bytes @ 0x2
   714                           
   715  0072                     ??_interrup_config:	
   716                           ; 1 bytes @ 0x2
   717                           
   718  0072                     ??_tmr0_config:	
   719                           ; 1 bytes @ 0x2
   720                           
   721  0072                     ??_USART_config:	
   722                           ; 1 bytes @ 0x2
   723                           
   724  0072                     ??_SPI_Enviar:	
   725                           ; 1 bytes @ 0x2
   726                           
   727  0072                     ??_SPI_Recibir:	
   728                           ; 1 bytes @ 0x2
   729                           
   730  0072                     ??_USART_lib_config:	
   731                           ; 1 bytes @ 0x2
   732                           
   733  0072                     ?_SPI_Maestro_Init:	
   734                           ; 1 bytes @ 0x2
   735                           
   736  0072                     ??_escribir_char:	
   737                           ; 1 bytes @ 0x2
   738                           
   739  0072                     ??_Lcd_Port:	
   740                           ; 1 bytes @ 0x2
   741                           
   742  0072                     ?___awdiv:	
   743                           ; 1 bytes @ 0x2
   744                           
   745  0072                     ?___awmod:	
   746                           ; 2 bytes @ 0x2
   747                           
   748  0072                     escribir_char@valor:	
   749                           ; 2 bytes @ 0x2
   750                           
   751  0072                     Lcd_Port@a:	
   752                           ; 1 bytes @ 0x2
   753                           
   754  0072                     SPI_Maestro_Init@SCK:	
   755                           ; 1 bytes @ 0x2
   756                           
   757  0072                     SPI_Enviar@valor:	
   758                           ; 1 bytes @ 0x2
   759                           
   760  0072                     ___awdiv@divisor:	
   761                           ; 1 bytes @ 0x2
   762                           
   763  0072                     ___awmod@divisor:	
   764                           ; 2 bytes @ 0x2
   765                           
   766                           
   767                           ; 2 bytes @ 0x2
   768  0072                     	ds	1
   769  0073                     ??_SPI_Maestro_Init:
   770  0073                     ??_Lcd_Write_Char:	
   771                           ; 1 bytes @ 0x3
   772                           
   773  0073                     ??_virtual_display1:	
   774                           ; 1 bytes @ 0x3
   775                           
   776  0073                     ??_virtual_display2:	
   777                           ; 1 bytes @ 0x3
   778                           
   779  0073                     ??_virtual_display3:	
   780                           ; 1 bytes @ 0x3
   781                           
   782  0073                     ??_Lcd_Cmd:	
   783                           ; 1 bytes @ 0x3
   784                           
   785                           
   786                           ; 1 bytes @ 0x3
   787  0073                     	ds	1
   788  0074                     Lcd_Write_Char@a:
   789  0074                     ___awdiv@dividend:	
   790                           ; 1 bytes @ 0x4
   791                           
   792  0074                     ___awmod@dividend:	
   793                           ; 2 bytes @ 0x4
   794                           
   795                           
   796                           ; 2 bytes @ 0x4
   797  0074                     	ds	1
   798  0075                     ??_Lcd_Write_String:
   799  0075                     Lcd_Cmd@a:	
   800                           ; 1 bytes @ 0x5
   801                           
   802  0075                     SPI_Maestro_Init@port_mode:	
   803                           ; 1 bytes @ 0x5
   804                           
   805  0075                     Lcd_Write_String@i:	
   806                           ; 1 bytes @ 0x5
   807                           
   808                           
   809                           ; 2 bytes @ 0x5
   810  0075                     	ds	1
   811  0076                     ??_Lcd_Init:
   812  0076                     ??_SPI_config:	
   813                           ; 1 bytes @ 0x6
   814                           
   815  0076                     ?_Lcd_Set_Cursor:	
   816                           ; 1 bytes @ 0x6
   817                           
   818  0076                     ??___awdiv:	
   819                           ; 1 bytes @ 0x6
   820                           
   821  0076                     ??___awmod:	
   822                           ; 1 bytes @ 0x6
   823                           
   824  0076                     Lcd_Set_Cursor@b:	
   825                           ; 1 bytes @ 0x6
   826                           
   827                           
   828                           ; 1 bytes @ 0x6
   829  0076                     	ds	1
   830  0077                     ??_Lcd_Set_Cursor:
   831  0077                     Lcd_Write_String@a:	
   832                           ; 1 bytes @ 0x7
   833                           
   834  0077                     ___awmod@counter:	
   835                           ; 1 bytes @ 0x7
   836                           
   837                           
   838                           ; 1 bytes @ 0x7
   839  0077                     	ds	1
   840  0078                     Lcd_Set_Cursor@a:
   841  0078                     ___awmod@sign:	
   842                           ; 1 bytes @ 0x8
   843                           
   844                           
   845                           ; 1 bytes @ 0x8
   846  0078                     	ds	1
   847  0079                     Lcd_Set_Cursor@temp:
   848                           
   849                           ; 1 bytes @ 0x9
   850  0079                     	ds	1
   851                           
   852                           	psect	cstackBANK0
   853  003A                     __pcstackBANK0:
   854  003A                     ___awdiv@counter:
   855                           
   856                           ; 1 bytes @ 0x0
   857  003A                     	ds	1
   858  003B                     ___awdiv@sign:
   859                           
   860                           ; 1 bytes @ 0x1
   861  003B                     	ds	1
   862  003C                     ___awdiv@quotient:
   863                           
   864                           ; 2 bytes @ 0x2
   865  003C                     	ds	2
   866  003E                     ??_Conversion1:
   867  003E                     ??_Conversion2:	
   868                           ; 1 bytes @ 0x4
   869                           
   870  003E                     ??_Conversion3:	
   871                           ; 1 bytes @ 0x4
   872                           
   873                           
   874                           ; 1 bytes @ 0x4
   875  003E                     	ds	3
   876  0041                     Conversion1@pot:
   877                           
   878                           ; 2 bytes @ 0x7
   879  0041                     	ds	2
   880  0043                     ??_lcd:
   881                           
   882                           ; 1 bytes @ 0x9
   883  0043                     	ds	1
   884  0044                     ??_main:
   885                           
   886                           ; 1 bytes @ 0xA
   887  0044                     	ds	2
   888                           
   889                           	psect	maintext
   890  001E                     __pmaintext:	
   891 ;;
   892 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   893 ;;
   894 ;; *************** function _main *****************
   895 ;; Defined at:
   896 ;;		line 121 in file "MAESTRO_SPI.c"
   897 ;; Parameters:    Size  Location     Type
   898 ;;		None
   899 ;; Auto vars:     Size  Location     Type
   900 ;;		None
   901 ;; Return value:  Size  Location     Type
   902 ;;                  1    wreg      void 
   903 ;; Registers used:
   904 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   905 ;; Tracked objects:
   906 ;;		On entry : B00/0
   907 ;;		On exit  : 0/0
   908 ;;		Unchanged: 0/0
   909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   910 ;;      Params:         0       0       0       0       0
   911 ;;      Locals:         0       0       0       0       0
   912 ;;      Temps:          0       2       0       0       0
   913 ;;      Totals:         0       2       0       0       0
   914 ;;Total ram usage:        2 bytes
   915 ;; Hardware stack levels required when called:    5
   916 ;; This function calls:
   917 ;;		_Lcd_Init
   918 ;;		_SPI_Enviar
   919 ;;		_SPI_Recibir
   920 ;;		_SPI_config
   921 ;;		_USART_config
   922 ;;		_interrup_config
   923 ;;		_lcd
   924 ;;		_osc_config
   925 ;;		_setup
   926 ;;		_tmr0_config
   927 ;; This function is called by:
   928 ;;		Startup code after reset
   929 ;; This function uses a non-reentrant model
   930 ;;
   931                           
   932                           
   933                           ;psect for function _main
   934  001E                     _main:
   935  001E                     l1885:	
   936                           ;incstack = 0
   937                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   938                           
   939                           
   940                           ;MAESTRO_SPI.c: 123:     setup();
   941  001E  120A  118A  254D  120A  118A  	fcall	_setup
   942                           
   943                           ;MAESTRO_SPI.c: 124:     osc_config();
   944  0023  120A  118A  2661  120A  118A  	fcall	_osc_config
   945                           
   946                           ;MAESTRO_SPI.c: 125:     interrup_config();
   947  0028  120A  118A  264A  120A  118A  	fcall	_interrup_config
   948  002D                     l1887:
   949                           
   950                           ;MAESTRO_SPI.c: 126:     tmr0_config ();
   951  002D  120A  118A  263D  120A  118A  	fcall	_tmr0_config
   952  0032                     l1889:
   953                           
   954                           ;MAESTRO_SPI.c: 127:     Lcd_Init();
   955  0032  120A  118A  2419  120A  118A  	fcall	_Lcd_Init
   956  0037                     l1891:
   957                           
   958                           ;MAESTRO_SPI.c: 128:     USART_config();
   959  0037  120A  118A  267D  120A  118A  	fcall	_USART_config
   960  003C                     l1893:
   961                           
   962                           ;MAESTRO_SPI.c: 129:     SPI_config ();
   963  003C  120A  118A  2656  120A  118A  	fcall	_SPI_config
   964  0041                     l1895:
   965                           
   966                           ;MAESTRO_SPI.c: 131:     {;MAESTRO_SPI.c: 133:         PORTCbits.RC0 = 0;
   967  0041  1283               	bcf	3,5	;RP0=0, select bank0
   968  0042  1303               	bcf	3,6	;RP1=0, select bank0
   969  0043  1007               	bcf	7,0	;volatile
   970  0044                     l1897:
   971                           
   972                           ;MAESTRO_SPI.c: 134:         _delay((unsigned long)((1)*(8000000/4000.0)));
   973  0044  3003               	movlw	3
   974  0045  1283               	bcf	3,5	;RP0=0, select bank0
   975  0046  1303               	bcf	3,6	;RP1=0, select bank0
   976  0047  00C5               	movwf	??_main+1
   977  0048  3097               	movlw	151
   978  0049  00C4               	movwf	??_main
   979  004A                     u727:
   980  004A  0BC4               	decfsz	??_main,f
   981  004B  284A               	goto	u727
   982  004C  0BC5               	decfsz	??_main+1,f
   983  004D  284A               	goto	u727
   984  004E                     l1899:
   985                           
   986                           ;MAESTRO_SPI.c: 136:         SPI_Enviar (dato_pot);
   987  004E  1283               	bcf	3,5	;RP0=0, select bank0
   988  004F  1303               	bcf	3,6	;RP1=0, select bank0
   989  0050  0821               	movf	_dato_pot,w
   990  0051  120A  118A  2683  120A  118A  	fcall	_SPI_Enviar
   991  0056                     l1901:
   992                           
   993                           ;MAESTRO_SPI.c: 137:         dato_pot = SPI_Recibir();
   994  0056  120A  118A  268F  120A  118A  	fcall	_SPI_Recibir
   995  005B  1283               	bcf	3,5	;RP0=0, select bank0
   996  005C  1303               	bcf	3,6	;RP1=0, select bank0
   997  005D  00C4               	movwf	??_main
   998  005E  0844               	movf	??_main,w
   999  005F  00A1               	movwf	_dato_pot
  1000  0060                     l1903:
  1001                           
  1002                           ;MAESTRO_SPI.c: 139:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1003  0060  3003               	movlw	3
  1004  0061  1283               	bcf	3,5	;RP0=0, select bank0
  1005  0062  1303               	bcf	3,6	;RP1=0, select bank0
  1006  0063  00C5               	movwf	??_main+1
  1007  0064  3097               	movlw	151
  1008  0065  00C4               	movwf	??_main
  1009  0066                     u737:
  1010  0066  0BC4               	decfsz	??_main,f
  1011  0067  2866               	goto	u737
  1012  0068  0BC5               	decfsz	??_main+1,f
  1013  0069  2866               	goto	u737
  1014  006A                     l1905:
  1015                           
  1016                           ;MAESTRO_SPI.c: 140:         PORTCbits.RC0 = 1;
  1017  006A  1283               	bcf	3,5	;RP0=0, select bank0
  1018  006B  1303               	bcf	3,6	;RP1=0, select bank0
  1019  006C  1407               	bsf	7,0	;volatile
  1020  006D                     l1907:
  1021                           
  1022                           ;MAESTRO_SPI.c: 144:         PORTCbits.RC1 = 0;
  1023  006D  1087               	bcf	7,1	;volatile
  1024  006E                     l1909:
  1025                           
  1026                           ;MAESTRO_SPI.c: 145:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1027  006E  3003               	movlw	3
  1028  006F  1283               	bcf	3,5	;RP0=0, select bank0
  1029  0070  1303               	bcf	3,6	;RP1=0, select bank0
  1030  0071  00C5               	movwf	??_main+1
  1031  0072  3097               	movlw	151
  1032  0073  00C4               	movwf	??_main
  1033  0074                     u747:
  1034  0074  0BC4               	decfsz	??_main,f
  1035  0075  2874               	goto	u747
  1036  0076  0BC5               	decfsz	??_main+1,f
  1037  0077  2874               	goto	u747
  1038  0078                     l1911:
  1039                           
  1040                           ;MAESTRO_SPI.c: 147:         SPI_Enviar (dato_push);
  1041  0078  087A               	movf	_dato_push,w
  1042  0079  120A  118A  2683  120A  118A  	fcall	_SPI_Enviar
  1043  007E                     l1913:
  1044                           
  1045                           ;MAESTRO_SPI.c: 148:         dato_push = SPI_Recibir();
  1046  007E  120A  118A  268F  120A  118A  	fcall	_SPI_Recibir
  1047  0083  1283               	bcf	3,5	;RP0=0, select bank0
  1048  0084  1303               	bcf	3,6	;RP1=0, select bank0
  1049  0085  00C4               	movwf	??_main
  1050  0086  0844               	movf	??_main,w
  1051  0087  00FA               	movwf	_dato_push
  1052  0088                     l1915:
  1053                           
  1054                           ;MAESTRO_SPI.c: 150:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1055  0088  3003               	movlw	3
  1056  0089  1283               	bcf	3,5	;RP0=0, select bank0
  1057  008A  1303               	bcf	3,6	;RP1=0, select bank0
  1058  008B  00C5               	movwf	??_main+1
  1059  008C  3097               	movlw	151
  1060  008D  00C4               	movwf	??_main
  1061  008E                     u757:
  1062  008E  0BC4               	decfsz	??_main,f
  1063  008F  288E               	goto	u757
  1064  0090  0BC5               	decfsz	??_main+1,f
  1065  0091  288E               	goto	u757
  1066  0092                     l1917:
  1067                           
  1068                           ;MAESTRO_SPI.c: 151:         PORTCbits.RC1 = 1;
  1069  0092  1283               	bcf	3,5	;RP0=0, select bank0
  1070  0093  1303               	bcf	3,6	;RP1=0, select bank0
  1071  0094  1487               	bsf	7,1	;volatile
  1072  0095                     l1919:
  1073                           
  1074                           ;MAESTRO_SPI.c: 155:         PORTCbits.RC2 = 0;
  1075  0095  1107               	bcf	7,2	;volatile
  1076  0096                     l1921:
  1077                           
  1078                           ;MAESTRO_SPI.c: 156:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1079  0096  3003               	movlw	3
  1080  0097  1283               	bcf	3,5	;RP0=0, select bank0
  1081  0098  1303               	bcf	3,6	;RP1=0, select bank0
  1082  0099  00C5               	movwf	??_main+1
  1083  009A  3097               	movlw	151
  1084  009B  00C4               	movwf	??_main
  1085  009C                     u767:
  1086  009C  0BC4               	decfsz	??_main,f
  1087  009D  289C               	goto	u767
  1088  009E  0BC5               	decfsz	??_main+1,f
  1089  009F  289C               	goto	u767
  1090  00A0                     l1923:
  1091                           
  1092                           ;MAESTRO_SPI.c: 158:         SPI_Enviar (dato_semaforo);
  1093  00A0  1283               	bcf	3,5	;RP0=0, select bank0
  1094  00A1  1303               	bcf	3,6	;RP1=0, select bank0
  1095  00A2  0820               	movf	_dato_semaforo,w
  1096  00A3  120A  118A  2683  120A  118A  	fcall	_SPI_Enviar
  1097  00A8                     l1925:
  1098                           
  1099                           ;MAESTRO_SPI.c: 159:         dato_semaforo = SPI_Recibir();
  1100  00A8  120A  118A  268F  120A  118A  	fcall	_SPI_Recibir
  1101  00AD  1283               	bcf	3,5	;RP0=0, select bank0
  1102  00AE  1303               	bcf	3,6	;RP1=0, select bank0
  1103  00AF  00C4               	movwf	??_main
  1104  00B0  0844               	movf	??_main,w
  1105  00B1  00A0               	movwf	_dato_semaforo
  1106  00B2                     l1927:
  1107                           
  1108                           ;MAESTRO_SPI.c: 161:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1109  00B2  3003               	movlw	3
  1110  00B3  1283               	bcf	3,5	;RP0=0, select bank0
  1111  00B4  1303               	bcf	3,6	;RP1=0, select bank0
  1112  00B5  00C5               	movwf	??_main+1
  1113  00B6  3097               	movlw	151
  1114  00B7  00C4               	movwf	??_main
  1115  00B8                     u777:
  1116  00B8  0BC4               	decfsz	??_main,f
  1117  00B9  28B8               	goto	u777
  1118  00BA  0BC5               	decfsz	??_main+1,f
  1119  00BB  28B8               	goto	u777
  1120  00BC                     l1929:
  1121                           
  1122                           ;MAESTRO_SPI.c: 162:         PORTCbits.RC2 = 1;
  1123  00BC  1283               	bcf	3,5	;RP0=0, select bank0
  1124  00BD  1303               	bcf	3,6	;RP1=0, select bank0
  1125  00BE  1507               	bsf	7,2	;volatile
  1126  00BF                     l1931:
  1127                           
  1128                           ;MAESTRO_SPI.c: 164:         lcd ();
  1129  00BF  120A  118A  2510  120A  118A  	fcall	_lcd
  1130                           
  1131                           ;MAESTRO_SPI.c: 165:         velocidad1 = velocidad1 + 1;
  1132  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  1133  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  1134  00C6  0824               	movf	_velocidad1,w
  1135  00C7  3E01               	addlw	1
  1136  00C8  00C4               	movwf	??_main
  1137  00C9  0844               	movf	??_main,w
  1138  00CA  00A4               	movwf	_velocidad1
  1139                           
  1140                           ;MAESTRO_SPI.c: 166:         velocidad2 = velocidad2 + 1;
  1141  00CB  0823               	movf	_velocidad2,w
  1142  00CC  3E01               	addlw	1
  1143  00CD  00C4               	movwf	??_main
  1144  00CE  0844               	movf	??_main,w
  1145  00CF  00A3               	movwf	_velocidad2
  1146                           
  1147                           ;MAESTRO_SPI.c: 167:         velocidad3 = velocidad3 + 1;
  1148  00D0  0822               	movf	_velocidad3,w
  1149  00D1  3E01               	addlw	1
  1150  00D2  00C4               	movwf	??_main
  1151  00D3  0844               	movf	??_main,w
  1152  00D4  00A2               	movwf	_velocidad3
  1153  00D5  2841               	goto	l1895
  1154  00D6  120A  118A  280C   	ljmp	start
  1155  00D9                     __end_of_main:
  1156                           
  1157                           	psect	text1
  1158  063D                     __ptext1:	
  1159 ;; *************** function _tmr0_config *****************
  1160 ;; Defined at:
  1161 ;;		line 220 in file "MAESTRO_SPI.c"
  1162 ;; Parameters:    Size  Location     Type
  1163 ;;		None
  1164 ;; Auto vars:     Size  Location     Type
  1165 ;;		None
  1166 ;; Return value:  Size  Location     Type
  1167 ;;                  1    wreg      void 
  1168 ;; Registers used:
  1169 ;;		wreg
  1170 ;; Tracked objects:
  1171 ;;		On entry : 0/0
  1172 ;;		On exit  : 0/0
  1173 ;;		Unchanged: 0/0
  1174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1175 ;;      Params:         0       0       0       0       0
  1176 ;;      Locals:         0       0       0       0       0
  1177 ;;      Temps:          0       0       0       0       0
  1178 ;;      Totals:         0       0       0       0       0
  1179 ;;Total ram usage:        0 bytes
  1180 ;; Hardware stack levels used:    1
  1181 ;; Hardware stack levels required when called:    1
  1182 ;; This function calls:
  1183 ;;		Nothing
  1184 ;; This function is called by:
  1185 ;;		_main
  1186 ;; This function uses a non-reentrant model
  1187 ;;
  1188                           
  1189                           
  1190                           ;psect for function _tmr0_config
  1191  063D                     _tmr0_config:
  1192  063D                     l1629:	
  1193                           ;incstack = 0
  1194                           ; Regs used in _tmr0_config: [wreg]
  1195                           
  1196                           
  1197                           ;MAESTRO_SPI.c: 222:     OPTION_REGbits.nRBPU = 0;
  1198  063D  1683               	bsf	3,5	;RP0=1, select bank1
  1199  063E  1303               	bcf	3,6	;RP1=0, select bank1
  1200  063F  1381               	bcf	1,7	;volatile
  1201                           
  1202                           ;MAESTRO_SPI.c: 223:     OPTION_REGbits.T0CS = 0;
  1203  0640  1281               	bcf	1,5	;volatile
  1204                           
  1205                           ;MAESTRO_SPI.c: 224:     OPTION_REGbits.PSA = 0;
  1206  0641  1181               	bcf	1,3	;volatile
  1207                           
  1208                           ;MAESTRO_SPI.c: 225:     OPTION_REGbits.PS2 = 0;
  1209  0642  1101               	bcf	1,2	;volatile
  1210                           
  1211                           ;MAESTRO_SPI.c: 226:     OPTION_REGbits.PS1 = 1;
  1212  0643  1481               	bsf	1,1	;volatile
  1213                           
  1214                           ;MAESTRO_SPI.c: 227:     OPTION_REGbits.PS0 = 0;
  1215  0644  1001               	bcf	1,0	;volatile
  1216  0645                     l1631:
  1217                           
  1218                           ;MAESTRO_SPI.c: 228:     TMR0 = 100;
  1219  0645  3064               	movlw	100
  1220  0646  1283               	bcf	3,5	;RP0=0, select bank0
  1221  0647  1303               	bcf	3,6	;RP1=0, select bank0
  1222  0648  0081               	movwf	1	;volatile
  1223  0649                     l170:
  1224  0649  0008               	return
  1225  064A                     __end_of_tmr0_config:
  1226                           
  1227                           	psect	text2
  1228  054D                     __ptext2:	
  1229 ;; *************** function _setup *****************
  1230 ;; Defined at:
  1231 ;;		line 175 in file "MAESTRO_SPI.c"
  1232 ;; Parameters:    Size  Location     Type
  1233 ;;		None
  1234 ;; Auto vars:     Size  Location     Type
  1235 ;;		None
  1236 ;; Return value:  Size  Location     Type
  1237 ;;                  1    wreg      void 
  1238 ;; Registers used:
  1239 ;;		status,2
  1240 ;; Tracked objects:
  1241 ;;		On entry : 0/0
  1242 ;;		On exit  : 0/0
  1243 ;;		Unchanged: 0/0
  1244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1245 ;;      Params:         0       0       0       0       0
  1246 ;;      Locals:         0       0       0       0       0
  1247 ;;      Temps:          0       0       0       0       0
  1248 ;;      Totals:         0       0       0       0       0
  1249 ;;Total ram usage:        0 bytes
  1250 ;; Hardware stack levels used:    1
  1251 ;; Hardware stack levels required when called:    1
  1252 ;; This function calls:
  1253 ;;		Nothing
  1254 ;; This function is called by:
  1255 ;;		_main
  1256 ;; This function uses a non-reentrant model
  1257 ;;
  1258                           
  1259                           
  1260                           ;psect for function _setup
  1261  054D                     _setup:
  1262  054D                     l1611:	
  1263                           ;incstack = 0
  1264                           ; Regs used in _setup: [status,2]
  1265                           
  1266                           
  1267                           ;MAESTRO_SPI.c: 177:     ANSEL = 0;
  1268  054D  1683               	bsf	3,5	;RP0=1, select bank3
  1269  054E  1703               	bsf	3,6	;RP1=1, select bank3
  1270  054F  0188               	clrf	8	;volatile
  1271                           
  1272                           ;MAESTRO_SPI.c: 178:     TRISA = 0;
  1273  0550  1683               	bsf	3,5	;RP0=1, select bank1
  1274  0551  1303               	bcf	3,6	;RP1=0, select bank1
  1275  0552  0185               	clrf	5	;volatile
  1276                           
  1277                           ;MAESTRO_SPI.c: 179:     PORTA = 0;
  1278  0553  1283               	bcf	3,5	;RP0=0, select bank0
  1279  0554  1303               	bcf	3,6	;RP1=0, select bank0
  1280  0555  0185               	clrf	5	;volatile
  1281                           
  1282                           ;MAESTRO_SPI.c: 180:     ANSELH = 0;
  1283  0556  1683               	bsf	3,5	;RP0=1, select bank3
  1284  0557  1703               	bsf	3,6	;RP1=1, select bank3
  1285  0558  0189               	clrf	9	;volatile
  1286                           
  1287                           ;MAESTRO_SPI.c: 181:     TRISB = 0;
  1288  0559  1683               	bsf	3,5	;RP0=1, select bank1
  1289  055A  1303               	bcf	3,6	;RP1=0, select bank1
  1290  055B  0186               	clrf	6	;volatile
  1291                           
  1292                           ;MAESTRO_SPI.c: 182:     PORTB = 0;
  1293  055C  1283               	bcf	3,5	;RP0=0, select bank0
  1294  055D  1303               	bcf	3,6	;RP1=0, select bank0
  1295  055E  0186               	clrf	6	;volatile
  1296                           
  1297                           ;MAESTRO_SPI.c: 183:     TRISC = 0;
  1298  055F  1683               	bsf	3,5	;RP0=1, select bank1
  1299  0560  1303               	bcf	3,6	;RP1=0, select bank1
  1300  0561  0187               	clrf	7	;volatile
  1301                           
  1302                           ;MAESTRO_SPI.c: 184:     PORTC = 0;
  1303  0562  1283               	bcf	3,5	;RP0=0, select bank0
  1304  0563  1303               	bcf	3,6	;RP1=0, select bank0
  1305  0564  0187               	clrf	7	;volatile
  1306  0565                     l1613:
  1307                           
  1308                           ;MAESTRO_SPI.c: 185:     TRISCbits.TRISC6 = 0;
  1309  0565  1683               	bsf	3,5	;RP0=1, select bank1
  1310  0566  1303               	bcf	3,6	;RP1=0, select bank1
  1311  0567  1307               	bcf	7,6	;volatile
  1312  0568                     l1615:
  1313                           
  1314                           ;MAESTRO_SPI.c: 186:     TRISCbits.TRISC4 = 1;
  1315  0568  1607               	bsf	7,4	;volatile
  1316  0569                     l1617:
  1317                           
  1318                           ;MAESTRO_SPI.c: 187:     PORTCbits.RC0 = 1;
  1319  0569  1283               	bcf	3,5	;RP0=0, select bank0
  1320  056A  1303               	bcf	3,6	;RP1=0, select bank0
  1321  056B  1407               	bsf	7,0	;volatile
  1322  056C                     l1619:
  1323                           
  1324                           ;MAESTRO_SPI.c: 188:     PORTCbits.RC1 = 1;
  1325  056C  1487               	bsf	7,1	;volatile
  1326  056D                     l1621:
  1327                           
  1328                           ;MAESTRO_SPI.c: 189:     PORTCbits.RC2 = 1;
  1329  056D  1507               	bsf	7,2	;volatile
  1330                           
  1331                           ;MAESTRO_SPI.c: 190:     TRISD = 0;
  1332  056E  1683               	bsf	3,5	;RP0=1, select bank1
  1333  056F  1303               	bcf	3,6	;RP1=0, select bank1
  1334  0570  0188               	clrf	8	;volatile
  1335                           
  1336                           ;MAESTRO_SPI.c: 191:     PORTD = 0;
  1337  0571  1283               	bcf	3,5	;RP0=0, select bank0
  1338  0572  1303               	bcf	3,6	;RP1=0, select bank0
  1339  0573  0188               	clrf	8	;volatile
  1340                           
  1341                           ;MAESTRO_SPI.c: 192:     TRISE = 0;
  1342  0574  1683               	bsf	3,5	;RP0=1, select bank1
  1343  0575  1303               	bcf	3,6	;RP1=0, select bank1
  1344  0576  0189               	clrf	9	;volatile
  1345                           
  1346                           ;MAESTRO_SPI.c: 193:     PORTE = 0;
  1347  0577  1283               	bcf	3,5	;RP0=0, select bank0
  1348  0578  1303               	bcf	3,6	;RP1=0, select bank0
  1349  0579  0189               	clrf	9	;volatile
  1350  057A                     l161:
  1351  057A  0008               	return
  1352  057B                     __end_of_setup:
  1353                           
  1354                           	psect	text3
  1355  0661                     __ptext3:	
  1356 ;; *************** function _osc_config *****************
  1357 ;; Defined at:
  1358 ;;		line 209 in file "MAESTRO_SPI.c"
  1359 ;; Parameters:    Size  Location     Type
  1360 ;;		None
  1361 ;; Auto vars:     Size  Location     Type
  1362 ;;		None
  1363 ;; Return value:  Size  Location     Type
  1364 ;;                  1    wreg      void 
  1365 ;; Registers used:
  1366 ;;		None
  1367 ;; Tracked objects:
  1368 ;;		On entry : 0/0
  1369 ;;		On exit  : 0/0
  1370 ;;		Unchanged: 0/0
  1371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1372 ;;      Params:         0       0       0       0       0
  1373 ;;      Locals:         0       0       0       0       0
  1374 ;;      Temps:          0       0       0       0       0
  1375 ;;      Totals:         0       0       0       0       0
  1376 ;;Total ram usage:        0 bytes
  1377 ;; Hardware stack levels used:    1
  1378 ;; Hardware stack levels required when called:    1
  1379 ;; This function calls:
  1380 ;;		Nothing
  1381 ;; This function is called by:
  1382 ;;		_main
  1383 ;; This function uses a non-reentrant model
  1384 ;;
  1385                           
  1386                           
  1387                           ;psect for function _osc_config
  1388  0661                     _osc_config:
  1389  0661                     l1623:	
  1390                           ;incstack = 0
  1391                           ; Regs used in _osc_config: []
  1392                           
  1393                           
  1394                           ;MAESTRO_SPI.c: 211:     OSCCONbits.IRCF2 = 1;
  1395  0661  1683               	bsf	3,5	;RP0=1, select bank1
  1396  0662  1303               	bcf	3,6	;RP1=0, select bank1
  1397  0663  170F               	bsf	15,6	;volatile
  1398                           
  1399                           ;MAESTRO_SPI.c: 212:     OSCCONbits.IRCF1 = 1;
  1400  0664  168F               	bsf	15,5	;volatile
  1401                           
  1402                           ;MAESTRO_SPI.c: 213:     OSCCONbits.IRCF0 = 0;
  1403  0665  120F               	bcf	15,4	;volatile
  1404                           
  1405                           ;MAESTRO_SPI.c: 214:     OSCCONbits.OSTS = 0;
  1406  0666  118F               	bcf	15,3	;volatile
  1407                           
  1408                           ;MAESTRO_SPI.c: 215:     OSCCONbits.HTS = 0;
  1409  0667  110F               	bcf	15,2	;volatile
  1410                           
  1411                           ;MAESTRO_SPI.c: 216:     OSCCONbits.LTS = 1;
  1412  0668  148F               	bsf	15,1	;volatile
  1413                           
  1414                           ;MAESTRO_SPI.c: 217:     OSCCONbits.SCS = 0;
  1415  0669  100F               	bcf	15,0	;volatile
  1416  066A                     l167:
  1417  066A  0008               	return
  1418  066B                     __end_of_osc_config:
  1419                           
  1420                           	psect	text4
  1421  0510                     __ptext4:	
  1422 ;; *************** function _lcd *****************
  1423 ;; Defined at:
  1424 ;;		line 249 in file "MAESTRO_SPI.c"
  1425 ;; Parameters:    Size  Location     Type
  1426 ;;		None
  1427 ;; Auto vars:     Size  Location     Type
  1428 ;;		None
  1429 ;; Return value:  Size  Location     Type
  1430 ;;                  1    wreg      void 
  1431 ;; Registers used:
  1432 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1433 ;; Tracked objects:
  1434 ;;		On entry : 0/0
  1435 ;;		On exit  : 0/0
  1436 ;;		Unchanged: 0/0
  1437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1438 ;;      Params:         0       0       0       0       0
  1439 ;;      Locals:         0       0       0       0       0
  1440 ;;      Temps:          0       1       0       0       0
  1441 ;;      Totals:         0       1       0       0       0
  1442 ;;Total ram usage:        1 bytes
  1443 ;; Hardware stack levels used:    1
  1444 ;; Hardware stack levels required when called:    4
  1445 ;; This function calls:
  1446 ;;		_Conversion1
  1447 ;;		_Conversion2
  1448 ;;		_Conversion3
  1449 ;;		_Lcd_Set_Cursor
  1450 ;;		_Lcd_Write_String
  1451 ;; This function is called by:
  1452 ;;		_main
  1453 ;; This function uses a non-reentrant model
  1454 ;;
  1455                           
  1456                           
  1457                           ;psect for function _lcd
  1458  0510                     _lcd:
  1459  0510                     l1869:	
  1460                           ;incstack = 0
  1461                           ; Regs used in _lcd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1462                           
  1463                           
  1464                           ;MAESTRO_SPI.c: 251:     Lcd_Set_Cursor(0,1);
  1465  0510  01F6               	clrf	Lcd_Set_Cursor@b
  1466  0511  0AF6               	incf	Lcd_Set_Cursor@b,f
  1467  0512  3000               	movlw	0
  1468  0513  120A  118A  25A0  120A  118A  	fcall	_Lcd_Set_Cursor
  1469  0518                     l1871:
  1470                           
  1471                           ;MAESTRO_SPI.c: 252:     Lcd_Write_String("ADC:  BTN: TEMP:");
  1472  0518  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1473  0519  120A  118A  257B  120A  118A  	fcall	_Lcd_Write_String
  1474  051E                     l1873:
  1475                           
  1476                           ;MAESTRO_SPI.c: 253:     Lcd_Set_Cursor(2,0);
  1477  051E  01F6               	clrf	Lcd_Set_Cursor@b
  1478  051F  3002               	movlw	2
  1479  0520  120A  118A  25A0  120A  118A  	fcall	_Lcd_Set_Cursor
  1480  0525                     l1875:
  1481                           
  1482                           ;MAESTRO_SPI.c: 254:     Conversion1 ();
  1483  0525  120A  118A  2178  120A  118A  	fcall	_Conversion1
  1484  052A                     l1877:
  1485                           
  1486                           ;MAESTRO_SPI.c: 255:     Lcd_Set_Cursor(2,7);
  1487  052A  3007               	movlw	7
  1488  052B  1283               	bcf	3,5	;RP0=0, select bank0
  1489  052C  1303               	bcf	3,6	;RP1=0, select bank0
  1490  052D  00C3               	movwf	??_lcd
  1491  052E  0843               	movf	??_lcd,w
  1492  052F  00F6               	movwf	Lcd_Set_Cursor@b
  1493  0530  3002               	movlw	2
  1494  0531  120A  118A  25A0  120A  118A  	fcall	_Lcd_Set_Cursor
  1495  0536                     l1879:
  1496                           
  1497                           ;MAESTRO_SPI.c: 256:     Conversion2 ();
  1498  0536  120A  118A  22FA  120A  118A  	fcall	_Conversion2
  1499  053B                     l1881:
  1500                           
  1501                           ;MAESTRO_SPI.c: 257:     Lcd_Set_Cursor(2,12);
  1502  053B  300C               	movlw	12
  1503  053C  1283               	bcf	3,5	;RP0=0, select bank0
  1504  053D  1303               	bcf	3,6	;RP1=0, select bank0
  1505  053E  00C3               	movwf	??_lcd
  1506  053F  0843               	movf	??_lcd,w
  1507  0540  00F6               	movwf	Lcd_Set_Cursor@b
  1508  0541  3002               	movlw	2
  1509  0542  120A  118A  25A0  120A  118A  	fcall	_Lcd_Set_Cursor
  1510  0547                     l1883:
  1511                           
  1512                           ;MAESTRO_SPI.c: 258:     Conversion3 ();
  1513  0547  120A  118A  2470  120A  118A  	fcall	_Conversion3
  1514  054C                     l179:
  1515  054C  0008               	return
  1516  054D                     __end_of_lcd:
  1517                           
  1518                           	psect	text5
  1519  057B                     __ptext5:	
  1520 ;; *************** function _Lcd_Write_String *****************
  1521 ;; Defined at:
  1522 ;;		line 78 in file "LCD_SPI.c"
  1523 ;; Parameters:    Size  Location     Type
  1524 ;;  a               1    wreg     PTR unsigned char 
  1525 ;;		 -> STR_1(17), 
  1526 ;; Auto vars:     Size  Location     Type
  1527 ;;  a               1    7[COMMON] PTR unsigned char 
  1528 ;;		 -> STR_1(17), 
  1529 ;;  i               2    5[COMMON] int 
  1530 ;; Return value:  Size  Location     Type
  1531 ;;                  1    wreg      void 
  1532 ;; Registers used:
  1533 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1534 ;; Tracked objects:
  1535 ;;		On entry : 0/0
  1536 ;;		On exit  : 0/0
  1537 ;;		Unchanged: 0/0
  1538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1539 ;;      Params:         0       0       0       0       0
  1540 ;;      Locals:         3       0       0       0       0
  1541 ;;      Temps:          0       0       0       0       0
  1542 ;;      Totals:         3       0       0       0       0
  1543 ;;Total ram usage:        3 bytes
  1544 ;; Hardware stack levels used:    1
  1545 ;; Hardware stack levels required when called:    3
  1546 ;; This function calls:
  1547 ;;		_Lcd_Write_Char
  1548 ;; This function is called by:
  1549 ;;		_lcd
  1550 ;; This function uses a non-reentrant model
  1551 ;;
  1552                           
  1553                           
  1554                           ;psect for function _Lcd_Write_String
  1555  057B                     _Lcd_Write_String:
  1556                           
  1557                           ;incstack = 0
  1558                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1559                           ;Lcd_Write_String@a stored from wreg
  1560  057B  00F7               	movwf	Lcd_Write_String@a
  1561  057C                     l1553:
  1562                           
  1563                           ;LCD_SPI.c: 78: void Lcd_Write_String(char *a);LCD_SPI.c: 79: {;LCD_SPI.c: 80:     int i
      +                          ;;LCD_SPI.c: 81:     for (i = 0; a[i] != '\0'; i++)
  1564  057C  01F5               	clrf	Lcd_Write_String@i
  1565  057D  01F6               	clrf	Lcd_Write_String@i+1
  1566  057E  2D92               	goto	l1559
  1567  057F                     l1555:
  1568                           
  1569                           ;LCD_SPI.c: 82:         Lcd_Write_Char(a[i]);
  1570  057F  0875               	movf	Lcd_Write_String@i,w
  1571  0580  0777               	addwf	Lcd_Write_String@a,w
  1572  0581  0084               	movwf	4
  1573  0582  120A  118A  2600  120A  118A  	fcall	stringdir
  1574  0587  120A  118A  2617  120A  118A  	fcall	_Lcd_Write_Char
  1575  058C                     l1557:
  1576  058C  3001               	movlw	1
  1577  058D  07F5               	addwf	Lcd_Write_String@i,f
  1578  058E  1803               	skipnc
  1579  058F  0AF6               	incf	Lcd_Write_String@i+1,f
  1580  0590  3000               	movlw	0
  1581  0591  07F6               	addwf	Lcd_Write_String@i+1,f
  1582  0592                     l1559:
  1583  0592  0875               	movf	Lcd_Write_String@i,w
  1584  0593  0777               	addwf	Lcd_Write_String@a,w
  1585  0594  0084               	movwf	4
  1586  0595  120A  118A  2600  120A  118A  	fcall	stringdir
  1587  059A  3A00               	xorlw	0
  1588  059B  1D03               	skipz
  1589  059C  2D9E               	goto	u571
  1590  059D  2D9F               	goto	u570
  1591  059E                     u571:
  1592  059E  2D7F               	goto	l1555
  1593  059F                     u570:
  1594  059F                     l256:
  1595  059F  0008               	return
  1596  05A0                     __end_of_Lcd_Write_String:
  1597                           
  1598                           	psect	text6
  1599  05A0                     __ptext6:	
  1600 ;; *************** function _Lcd_Set_Cursor *****************
  1601 ;; Defined at:
  1602 ;;		line 63 in file "LCD_SPI.c"
  1603 ;; Parameters:    Size  Location     Type
  1604 ;;  a               1    wreg     unsigned char 
  1605 ;;  b               1    6[COMMON] unsigned char 
  1606 ;; Auto vars:     Size  Location     Type
  1607 ;;  a               1    8[COMMON] unsigned char 
  1608 ;;  temp            1    9[COMMON] unsigned char 
  1609 ;; Return value:  Size  Location     Type
  1610 ;;                  1    wreg      void 
  1611 ;; Registers used:
  1612 ;;		wreg, status,2, status,0, pclath, cstack
  1613 ;; Tracked objects:
  1614 ;;		On entry : 0/0
  1615 ;;		On exit  : 0/0
  1616 ;;		Unchanged: 0/0
  1617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1618 ;;      Params:         1       0       0       0       0
  1619 ;;      Locals:         2       0       0       0       0
  1620 ;;      Temps:          1       0       0       0       0
  1621 ;;      Totals:         4       0       0       0       0
  1622 ;;Total ram usage:        4 bytes
  1623 ;; Hardware stack levels used:    1
  1624 ;; Hardware stack levels required when called:    3
  1625 ;; This function calls:
  1626 ;;		_Lcd_Cmd
  1627 ;; This function is called by:
  1628 ;;		_lcd
  1629 ;; This function uses a non-reentrant model
  1630 ;;
  1631                           
  1632                           
  1633                           ;psect for function _Lcd_Set_Cursor
  1634  05A0                     _Lcd_Set_Cursor:
  1635                           
  1636                           ;incstack = 0
  1637                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1638                           ;Lcd_Set_Cursor@a stored from wreg
  1639  05A0  00F8               	movwf	Lcd_Set_Cursor@a
  1640  05A1                     l1541:
  1641                           
  1642                           ;LCD_SPI.c: 63: void Lcd_Set_Cursor(char a, char b);LCD_SPI.c: 64: {;LCD_SPI.c: 65:     
      +                          char temp;;LCD_SPI.c: 66:     if (a == 1)
  1643  05A1  0378               	decf	Lcd_Set_Cursor@a,w
  1644  05A2  1D03               	btfss	3,2
  1645  05A3  2DA5               	goto	u551
  1646  05A4  2DA6               	goto	u550
  1647  05A5                     u551:
  1648  05A5  2DB2               	goto	l1547
  1649  05A6                     u550:
  1650  05A6                     l1543:
  1651                           
  1652                           ;LCD_SPI.c: 67:     {;LCD_SPI.c: 68:         temp = 0x80 + b;
  1653  05A6  0876               	movf	Lcd_Set_Cursor@b,w
  1654  05A7  3E80               	addlw	128
  1655  05A8  00F7               	movwf	??_Lcd_Set_Cursor
  1656  05A9  0877               	movf	??_Lcd_Set_Cursor,w
  1657  05AA  00F9               	movwf	Lcd_Set_Cursor@temp
  1658  05AB                     l1545:
  1659                           
  1660                           ;LCD_SPI.c: 69:         Lcd_Cmd(temp);
  1661  05AB  0879               	movf	Lcd_Set_Cursor@temp,w
  1662  05AC  120A  118A  25E2  120A  118A  	fcall	_Lcd_Cmd
  1663                           
  1664                           ;LCD_SPI.c: 70:     }
  1665  05B1  2DC3               	goto	l250
  1666  05B2                     l1547:
  1667  05B2  3002               	movlw	2
  1668  05B3  0678               	xorwf	Lcd_Set_Cursor@a,w
  1669  05B4  1D03               	btfss	3,2
  1670  05B5  2DB7               	goto	u561
  1671  05B6  2DB8               	goto	u560
  1672  05B7                     u561:
  1673  05B7  2DC3               	goto	l250
  1674  05B8                     u560:
  1675  05B8                     l1549:
  1676                           
  1677                           ;LCD_SPI.c: 72:     {;LCD_SPI.c: 73:         temp = 0xC0 + b;
  1678  05B8  0876               	movf	Lcd_Set_Cursor@b,w
  1679  05B9  3EC0               	addlw	192
  1680  05BA  00F7               	movwf	??_Lcd_Set_Cursor
  1681  05BB  0877               	movf	??_Lcd_Set_Cursor,w
  1682  05BC  00F9               	movwf	Lcd_Set_Cursor@temp
  1683  05BD                     l1551:
  1684                           
  1685                           ;LCD_SPI.c: 74:         Lcd_Cmd(temp);
  1686  05BD  0879               	movf	Lcd_Set_Cursor@temp,w
  1687  05BE  120A  118A  25E2  120A  118A  	fcall	_Lcd_Cmd
  1688  05C3                     l250:
  1689  05C3  0008               	return
  1690  05C4                     __end_of_Lcd_Set_Cursor:
  1691                           
  1692                           	psect	text7
  1693  0470                     __ptext7:	
  1694 ;; *************** function _Conversion3 *****************
  1695 ;; Defined at:
  1696 ;;		line 298 in file "MAESTRO_SPI.c"
  1697 ;; Parameters:    Size  Location     Type
  1698 ;;		None
  1699 ;; Auto vars:     Size  Location     Type
  1700 ;;		None
  1701 ;; Return value:  Size  Location     Type
  1702 ;;                  1    wreg      void 
  1703 ;; Registers used:
  1704 ;;		wreg, status,2, status,0, pclath, cstack
  1705 ;; Tracked objects:
  1706 ;;		On entry : 0/0
  1707 ;;		On exit  : 0/0
  1708 ;;		Unchanged: 0/0
  1709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1710 ;;      Params:         0       0       0       0       0
  1711 ;;      Locals:         0       0       0       0       0
  1712 ;;      Temps:          0       3       0       0       0
  1713 ;;      Totals:         0       3       0       0       0
  1714 ;;Total ram usage:        3 bytes
  1715 ;; Hardware stack levels used:    1
  1716 ;; Hardware stack levels required when called:    3
  1717 ;; This function calls:
  1718 ;;		_Lcd_Write_Char
  1719 ;;		___awdiv
  1720 ;;		___awmod
  1721 ;;		_virtual_display3
  1722 ;; This function is called by:
  1723 ;;		_lcd
  1724 ;; This function uses a non-reentrant model
  1725 ;;
  1726                           
  1727                           
  1728                           ;psect for function _Conversion3
  1729  0470                     _Conversion3:
  1730  0470                     l1853:	
  1731                           ;incstack = 0
  1732                           ; Regs used in _Conversion3: [wreg+status,2+status,0+pclath+cstack]
  1733                           
  1734                           
  1735                           ;MAESTRO_SPI.c: 300:     voltajey = dato_semaforo;
  1736  0470  1283               	bcf	3,5	;RP0=0, select bank0
  1737  0471  1303               	bcf	3,6	;RP1=0, select bank0
  1738  0472  0820               	movf	_dato_semaforo,w
  1739  0473  00BE               	movwf	??_Conversion3
  1740  0474  083E               	movf	??_Conversion3,w
  1741  0475  00AD               	movwf	_voltajey
  1742  0476                     l1855:
  1743                           
  1744                           ;MAESTRO_SPI.c: 301:     decenay = voltajey / 10;
  1745  0476  300A               	movlw	10
  1746  0477  00F2               	movwf	___awdiv@divisor
  1747  0478  3000               	movlw	0
  1748  0479  00F3               	movwf	___awdiv@divisor+1
  1749  047A  082D               	movf	_voltajey,w
  1750  047B  00BE               	movwf	??_Conversion3
  1751  047C  01BF               	clrf	??_Conversion3+1
  1752  047D  083E               	movf	??_Conversion3,w
  1753  047E  00F4               	movwf	___awdiv@dividend
  1754  047F  083F               	movf	??_Conversion3+1,w
  1755  0480  00F5               	movwf	___awdiv@dividend+1
  1756  0481  120A  118A  2291  120A  118A  	fcall	___awdiv
  1757  0486  0872               	movf	?___awdiv,w
  1758  0487  1283               	bcf	3,5	;RP0=0, select bank0
  1759  0488  1303               	bcf	3,6	;RP1=0, select bank0
  1760  0489  00C0               	movwf	??_Conversion3+2
  1761  048A  0840               	movf	??_Conversion3+2,w
  1762  048B  00FB               	movwf	_decenay
  1763  048C                     l1857:
  1764                           
  1765                           ;MAESTRO_SPI.c: 302:     unidady = voltajey % 10;
  1766  048C  300A               	movlw	10
  1767  048D  00F2               	movwf	___awmod@divisor
  1768  048E  3000               	movlw	0
  1769  048F  00F3               	movwf	___awmod@divisor+1
  1770  0490  082D               	movf	_voltajey,w
  1771  0491  00BE               	movwf	??_Conversion3
  1772  0492  01BF               	clrf	??_Conversion3+1
  1773  0493  083E               	movf	??_Conversion3,w
  1774  0494  00F4               	movwf	___awmod@dividend
  1775  0495  083F               	movf	??_Conversion3+1,w
  1776  0496  00F5               	movwf	___awmod@dividend+1
  1777  0497  120A  118A  23C0  120A  118A  	fcall	___awmod
  1778  049C  0872               	movf	?___awmod,w
  1779  049D  1283               	bcf	3,5	;RP0=0, select bank0
  1780  049E  1303               	bcf	3,6	;RP1=0, select bank0
  1781  049F  00C0               	movwf	??_Conversion3+2
  1782  04A0  0840               	movf	??_Conversion3+2,w
  1783  04A1  00AC               	movwf	_unidady
  1784  04A2                     l1859:
  1785                           
  1786                           ;MAESTRO_SPI.c: 303:     Lcd_Write_Char(decenay+48);
  1787  04A2  087B               	movf	_decenay,w
  1788  04A3  3E30               	addlw	48
  1789  04A4  120A  118A  2617  120A  118A  	fcall	_Lcd_Write_Char
  1790  04A9                     l1861:
  1791                           
  1792                           ;MAESTRO_SPI.c: 304:     Lcd_Write_Char(unidady+48);
  1793  04A9  1283               	bcf	3,5	;RP0=0, select bank0
  1794  04AA  1303               	bcf	3,6	;RP1=0, select bank0
  1795  04AB  082C               	movf	_unidady,w
  1796  04AC  3E30               	addlw	48
  1797  04AD  120A  118A  2617  120A  118A  	fcall	_Lcd_Write_Char
  1798  04B2                     l1863:
  1799                           
  1800                           ;MAESTRO_SPI.c: 305:     Lcd_Write_Char(223);
  1801  04B2  30DF               	movlw	223
  1802  04B3  120A  118A  2617  120A  118A  	fcall	_Lcd_Write_Char
  1803  04B8                     l1865:
  1804                           
  1805                           ;MAESTRO_SPI.c: 306:     Lcd_Write_Char(67);
  1806  04B8  3043               	movlw	67
  1807  04B9  120A  118A  2617  120A  118A  	fcall	_Lcd_Write_Char
  1808  04BE                     l1867:
  1809                           
  1810                           ;MAESTRO_SPI.c: 307:     virtual_display3();
  1811  04BE  120A  118A  24C4  120A  118A  	fcall	_virtual_display3
  1812  04C3                     l191:
  1813  04C3  0008               	return
  1814  04C4                     __end_of_Conversion3:
  1815                           
  1816                           	psect	text8
  1817  04C4                     __ptext8:	
  1818 ;; *************** function _virtual_display3 *****************
  1819 ;; Defined at:
  1820 ;;		line 370 in file "MAESTRO_SPI.c"
  1821 ;; Parameters:    Size  Location     Type
  1822 ;;		None
  1823 ;; Auto vars:     Size  Location     Type
  1824 ;;		None
  1825 ;; Return value:  Size  Location     Type
  1826 ;;                  1    wreg      void 
  1827 ;; Registers used:
  1828 ;;		wreg, status,2, status,0, pclath, cstack
  1829 ;; Tracked objects:
  1830 ;;		On entry : 0/0
  1831 ;;		On exit  : 0/0
  1832 ;;		Unchanged: 0/0
  1833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1834 ;;      Params:         0       0       0       0       0
  1835 ;;      Locals:         0       0       0       0       0
  1836 ;;      Temps:          0       0       0       0       0
  1837 ;;      Totals:         0       0       0       0       0
  1838 ;;Total ram usage:        0 bytes
  1839 ;; Hardware stack levels used:    1
  1840 ;; Hardware stack levels required when called:    2
  1841 ;; This function calls:
  1842 ;;		_escribir_char
  1843 ;; This function is called by:
  1844 ;;		_Conversion3
  1845 ;; This function uses a non-reentrant model
  1846 ;;
  1847                           
  1848                           
  1849                           ;psect for function _virtual_display3
  1850  04C4                     _virtual_display3:
  1851  04C4                     l1385:	
  1852                           ;incstack = 0
  1853                           ; Regs used in _virtual_display3: [wreg+status,2+status,0+pclath+cstack]
  1854                           
  1855                           
  1856                           ;MAESTRO_SPI.c: 372:     if (velocidad3 > 7)
  1857  04C4  3008               	movlw	8
  1858  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  1859  04C6  1303               	bcf	3,6	;RP1=0, select bank0
  1860  04C7  0222               	subwf	_velocidad3,w
  1861  04C8  1C03               	skipc
  1862  04C9  2CCB               	goto	u351
  1863  04CA  2CCC               	goto	u350
  1864  04CB                     u351:
  1865  04CB  2D0F               	goto	l205
  1866  04CC                     u350:
  1867  04CC                     l1387:
  1868                           
  1869                           ;MAESTRO_SPI.c: 373:     {;MAESTRO_SPI.c: 374:         escribir_char (84);
  1870  04CC  3054               	movlw	84
  1871  04CD  120A  118A  266B  120A  118A  	fcall	_escribir_char
  1872                           
  1873                           ;MAESTRO_SPI.c: 375:         escribir_char (69);
  1874  04D2  3045               	movlw	69
  1875  04D3  120A  118A  266B  120A  118A  	fcall	_escribir_char
  1876                           
  1877                           ;MAESTRO_SPI.c: 376:         escribir_char (77);
  1878  04D8  304D               	movlw	77
  1879  04D9  120A  118A  266B  120A  118A  	fcall	_escribir_char
  1880                           
  1881                           ;MAESTRO_SPI.c: 377:         escribir_char (80);
  1882  04DE  3050               	movlw	80
  1883  04DF  120A  118A  266B  120A  118A  	fcall	_escribir_char
  1884                           
  1885                           ;MAESTRO_SPI.c: 378:         escribir_char (58);
  1886  04E4  303A               	movlw	58
  1887  04E5  120A  118A  266B  120A  118A  	fcall	_escribir_char
  1888                           
  1889                           ;MAESTRO_SPI.c: 379:         escribir_char (decenay+48);
  1890  04EA  087B               	movf	_decenay,w
  1891  04EB  3E30               	addlw	48
  1892  04EC  120A  118A  266B  120A  118A  	fcall	_escribir_char
  1893                           
  1894                           ;MAESTRO_SPI.c: 380:         escribir_char (unidady+48);
  1895  04F1  1283               	bcf	3,5	;RP0=0, select bank0
  1896  04F2  1303               	bcf	3,6	;RP1=0, select bank0
  1897  04F3  082C               	movf	_unidady,w
  1898  04F4  3E30               	addlw	48
  1899  04F5  120A  118A  266B  120A  118A  	fcall	_escribir_char
  1900                           
  1901                           ;MAESTRO_SPI.c: 381:         escribir_char (176);
  1902  04FA  30B0               	movlw	176
  1903  04FB  120A  118A  266B  120A  118A  	fcall	_escribir_char
  1904                           
  1905                           ;MAESTRO_SPI.c: 382:         escribir_char (67);
  1906  0500  3043               	movlw	67
  1907  0501  120A  118A  266B  120A  118A  	fcall	_escribir_char
  1908                           
  1909                           ;MAESTRO_SPI.c: 383:         escribir_char ('\r');
  1910  0506  300D               	movlw	13
  1911  0507  120A  118A  266B  120A  118A  	fcall	_escribir_char
  1912  050C                     l1389:
  1913                           
  1914                           ;MAESTRO_SPI.c: 384:         velocidad3 = 0;
  1915  050C  1283               	bcf	3,5	;RP0=0, select bank0
  1916  050D  1303               	bcf	3,6	;RP1=0, select bank0
  1917  050E  01A2               	clrf	_velocidad3
  1918  050F                     l205:
  1919  050F  0008               	return
  1920  0510                     __end_of_virtual_display3:
  1921                           
  1922                           	psect	text9
  1923  02FA                     __ptext9:	
  1924 ;; *************** function _Conversion2 *****************
  1925 ;; Defined at:
  1926 ;;		line 280 in file "MAESTRO_SPI.c"
  1927 ;; Parameters:    Size  Location     Type
  1928 ;;		None
  1929 ;; Auto vars:     Size  Location     Type
  1930 ;;		None
  1931 ;; Return value:  Size  Location     Type
  1932 ;;                  1    wreg      void 
  1933 ;; Registers used:
  1934 ;;		wreg, status,2, status,0, pclath, cstack
  1935 ;; Tracked objects:
  1936 ;;		On entry : 0/0
  1937 ;;		On exit  : 0/0
  1938 ;;		Unchanged: 0/0
  1939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1940 ;;      Params:         0       0       0       0       0
  1941 ;;      Locals:         0       0       0       0       0
  1942 ;;      Temps:          0       3       0       0       0
  1943 ;;      Totals:         0       3       0       0       0
  1944 ;;Total ram usage:        3 bytes
  1945 ;; Hardware stack levels used:    1
  1946 ;; Hardware stack levels required when called:    3
  1947 ;; This function calls:
  1948 ;;		_Lcd_Write_Char
  1949 ;;		___awdiv
  1950 ;;		___awmod
  1951 ;;		_virtual_display2
  1952 ;; This function is called by:
  1953 ;;		_lcd
  1954 ;; This function uses a non-reentrant model
  1955 ;;
  1956                           
  1957                           
  1958                           ;psect for function _Conversion2
  1959  02FA                     _Conversion2:
  1960  02FA                     l1845:	
  1961                           ;incstack = 0
  1962                           ; Regs used in _Conversion2: [wreg+status,2+status,0+pclath+cstack]
  1963                           
  1964                           
  1965                           ;MAESTRO_SPI.c: 282:     if (dato_push < 10)
  1966  02FA  300A               	movlw	10
  1967  02FB  027A               	subwf	_dato_push,w
  1968  02FC  1803               	skipnc
  1969  02FD  2AFF               	goto	u701
  1970  02FE  2B00               	goto	u700
  1971  02FF                     u701:
  1972  02FF  2B13               	goto	l1849
  1973  0300                     u700:
  1974  0300                     l1847:
  1975                           
  1976                           ;MAESTRO_SPI.c: 283:     {;MAESTRO_SPI.c: 284:         Lcd_Write_Char(48);
  1977  0300  3030               	movlw	48
  1978  0301  120A  118A  2617  120A  118A  	fcall	_Lcd_Write_Char
  1979                           
  1980                           ;MAESTRO_SPI.c: 285:         Lcd_Write_Char(dato_push+ 48);
  1981  0306  087A               	movf	_dato_push,w
  1982  0307  3E30               	addlw	48
  1983  0308  120A  118A  2617  120A  118A  	fcall	_Lcd_Write_Char
  1984                           
  1985                           ;MAESTRO_SPI.c: 286:         virtual_display2();
  1986  030D  120A  118A  20D9  120A  118A  	fcall	_virtual_display2
  1987                           
  1988                           ;MAESTRO_SPI.c: 287:     }
  1989  0312  2B5C               	goto	l188
  1990  0313                     l1849:
  1991  0313  300A               	movlw	10
  1992  0314  027A               	subwf	_dato_push,w
  1993  0315  1C03               	skipc
  1994  0316  2B18               	goto	u711
  1995  0317  2B19               	goto	u710
  1996  0318                     u711:
  1997  0318  2B5C               	goto	l188
  1998  0319                     u710:
  1999  0319                     l1851:
  2000                           
  2001                           ;MAESTRO_SPI.c: 289:     {;MAESTRO_SPI.c: 290:         w1 = dato_push/10;
  2002  0319  300A               	movlw	10
  2003  031A  00F2               	movwf	___awdiv@divisor
  2004  031B  3000               	movlw	0
  2005  031C  00F3               	movwf	___awdiv@divisor+1
  2006  031D  087A               	movf	_dato_push,w
  2007  031E  1283               	bcf	3,5	;RP0=0, select bank0
  2008  031F  1303               	bcf	3,6	;RP1=0, select bank0
  2009  0320  00BE               	movwf	??_Conversion2
  2010  0321  01BF               	clrf	??_Conversion2+1
  2011  0322  083E               	movf	??_Conversion2,w
  2012  0323  00F4               	movwf	___awdiv@dividend
  2013  0324  083F               	movf	??_Conversion2+1,w
  2014  0325  00F5               	movwf	___awdiv@dividend+1
  2015  0326  120A  118A  2291  120A  118A  	fcall	___awdiv
  2016  032B  0872               	movf	?___awdiv,w
  2017  032C  1283               	bcf	3,5	;RP0=0, select bank0
  2018  032D  1303               	bcf	3,6	;RP1=0, select bank0
  2019  032E  00C0               	movwf	??_Conversion2+2
  2020  032F  0840               	movf	??_Conversion2+2,w
  2021  0330  00A7               	movwf	_w1
  2022                           
  2023                           ;MAESTRO_SPI.c: 291:         w2 = dato_push % 10;
  2024  0331  300A               	movlw	10
  2025  0332  00F2               	movwf	___awmod@divisor
  2026  0333  3000               	movlw	0
  2027  0334  00F3               	movwf	___awmod@divisor+1
  2028  0335  087A               	movf	_dato_push,w
  2029  0336  00BE               	movwf	??_Conversion2
  2030  0337  01BF               	clrf	??_Conversion2+1
  2031  0338  083E               	movf	??_Conversion2,w
  2032  0339  00F4               	movwf	___awmod@dividend
  2033  033A  083F               	movf	??_Conversion2+1,w
  2034  033B  00F5               	movwf	___awmod@dividend+1
  2035  033C  120A  118A  23C0  120A  118A  	fcall	___awmod
  2036  0341  0872               	movf	?___awmod,w
  2037  0342  1283               	bcf	3,5	;RP0=0, select bank0
  2038  0343  1303               	bcf	3,6	;RP1=0, select bank0
  2039  0344  00C0               	movwf	??_Conversion2+2
  2040  0345  0840               	movf	??_Conversion2+2,w
  2041  0346  00A6               	movwf	_w2
  2042                           
  2043                           ;MAESTRO_SPI.c: 292:         Lcd_Write_Char(w1+48);
  2044  0347  0827               	movf	_w1,w
  2045  0348  3E30               	addlw	48
  2046  0349  120A  118A  2617  120A  118A  	fcall	_Lcd_Write_Char
  2047                           
  2048                           ;MAESTRO_SPI.c: 293:         Lcd_Write_Char(w2+48);
  2049  034E  1283               	bcf	3,5	;RP0=0, select bank0
  2050  034F  1303               	bcf	3,6	;RP1=0, select bank0
  2051  0350  0826               	movf	_w2,w
  2052  0351  3E30               	addlw	48
  2053  0352  120A  118A  2617  120A  118A  	fcall	_Lcd_Write_Char
  2054                           
  2055                           ;MAESTRO_SPI.c: 294:         virtual_display2();
  2056  0357  120A  118A  20D9  120A  118A  	fcall	_virtual_display2
  2057  035C                     l188:
  2058  035C  0008               	return
  2059  035D                     __end_of_Conversion2:
  2060                           
  2061                           	psect	text10
  2062  00D9                     __ptext10:	
  2063 ;; *************** function _virtual_display2 *****************
  2064 ;; Defined at:
  2065 ;;		line 331 in file "MAESTRO_SPI.c"
  2066 ;; Parameters:    Size  Location     Type
  2067 ;;		None
  2068 ;; Auto vars:     Size  Location     Type
  2069 ;;		None
  2070 ;; Return value:  Size  Location     Type
  2071 ;;                  1    wreg      void 
  2072 ;; Registers used:
  2073 ;;		wreg, status,2, status,0, pclath, cstack
  2074 ;; Tracked objects:
  2075 ;;		On entry : 0/0
  2076 ;;		On exit  : 0/0
  2077 ;;		Unchanged: 0/0
  2078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2079 ;;      Params:         0       0       0       0       0
  2080 ;;      Locals:         0       0       0       0       0
  2081 ;;      Temps:          0       0       0       0       0
  2082 ;;      Totals:         0       0       0       0       0
  2083 ;;Total ram usage:        0 bytes
  2084 ;; Hardware stack levels used:    1
  2085 ;; Hardware stack levels required when called:    2
  2086 ;; This function calls:
  2087 ;;		_escribir_char
  2088 ;; This function is called by:
  2089 ;;		_Conversion2
  2090 ;; This function uses a non-reentrant model
  2091 ;;
  2092                           
  2093                           
  2094                           ;psect for function _virtual_display2
  2095  00D9                     _virtual_display2:
  2096  00D9                     l1373:	
  2097                           ;incstack = 0
  2098                           ; Regs used in _virtual_display2: [wreg+status,2+status,0+pclath+cstack]
  2099                           
  2100                           
  2101                           ;MAESTRO_SPI.c: 333:     if (velocidad2 > 7)
  2102  00D9  3008               	movlw	8
  2103  00DA  1283               	bcf	3,5	;RP0=0, select bank0
  2104  00DB  1303               	bcf	3,6	;RP1=0, select bank0
  2105  00DC  0223               	subwf	_velocidad2,w
  2106  00DD  1C03               	skipc
  2107  00DE  28E0               	goto	u331
  2108  00DF  28E1               	goto	u330
  2109  00E0                     u331:
  2110  00E0  2977               	goto	l201
  2111  00E1                     u330:
  2112  00E1                     l1375:
  2113                           
  2114                           ;MAESTRO_SPI.c: 334:     {;MAESTRO_SPI.c: 335:         if (dato_push < 10)
  2115  00E1  300A               	movlw	10
  2116  00E2  027A               	subwf	_dato_push,w
  2117  00E3  1803               	skipnc
  2118  00E4  28E6               	goto	u341
  2119  00E5  28E7               	goto	u340
  2120  00E6                     u341:
  2121  00E6  292E               	goto	l1381
  2122  00E7                     u340:
  2123  00E7                     l1377:
  2124                           
  2125                           ;MAESTRO_SPI.c: 336:         {;MAESTRO_SPI.c: 337:             escribir_char (67);
  2126  00E7  3043               	movlw	67
  2127  00E8  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2128                           
  2129                           ;MAESTRO_SPI.c: 338:             escribir_char (79);
  2130  00ED  304F               	movlw	79
  2131  00EE  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2132                           
  2133                           ;MAESTRO_SPI.c: 339:             escribir_char (78);
  2134  00F3  304E               	movlw	78
  2135  00F4  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2136                           
  2137                           ;MAESTRO_SPI.c: 340:             escribir_char (84);
  2138  00F9  3054               	movlw	84
  2139  00FA  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2140                           
  2141                           ;MAESTRO_SPI.c: 341:             escribir_char (58);
  2142  00FF  303A               	movlw	58
  2143  0100  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2144                           
  2145                           ;MAESTRO_SPI.c: 342:             escribir_char (48);
  2146  0105  3030               	movlw	48
  2147  0106  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2148                           
  2149                           ;MAESTRO_SPI.c: 343:             escribir_char (dato_push+48);
  2150  010B  087A               	movf	_dato_push,w
  2151  010C  3E30               	addlw	48
  2152  010D  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2153                           
  2154                           ;MAESTRO_SPI.c: 344:             escribir_char (32);
  2155  0112  3020               	movlw	32
  2156  0113  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2157                           
  2158                           ;MAESTRO_SPI.c: 345:             escribir_char (32);
  2159  0118  3020               	movlw	32
  2160  0119  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2161                           
  2162                           ;MAESTRO_SPI.c: 346:             escribir_char (32);
  2163  011E  3020               	movlw	32
  2164  011F  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2165                           
  2166                           ;MAESTRO_SPI.c: 347:             escribir_char (32);
  2167  0124  3020               	movlw	32
  2168  0125  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2169  012A                     l1379:
  2170                           
  2171                           ;MAESTRO_SPI.c: 349:             velocidad2 = 0;
  2172  012A  1283               	bcf	3,5	;RP0=0, select bank0
  2173  012B  1303               	bcf	3,6	;RP1=0, select bank0
  2174  012C  01A3               	clrf	_velocidad2
  2175                           
  2176                           ;MAESTRO_SPI.c: 350:         }
  2177  012D  2977               	goto	l201
  2178  012E                     l1381:
  2179                           
  2180                           ;MAESTRO_SPI.c: 352:         {;MAESTRO_SPI.c: 353:             escribir_char (67);
  2181  012E  3043               	movlw	67
  2182  012F  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2183                           
  2184                           ;MAESTRO_SPI.c: 354:             escribir_char (79);
  2185  0134  304F               	movlw	79
  2186  0135  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2187                           
  2188                           ;MAESTRO_SPI.c: 355:             escribir_char (78);
  2189  013A  304E               	movlw	78
  2190  013B  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2191                           
  2192                           ;MAESTRO_SPI.c: 356:             escribir_char (84);
  2193  0140  3054               	movlw	84
  2194  0141  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2195                           
  2196                           ;MAESTRO_SPI.c: 357:             escribir_char (58);
  2197  0146  303A               	movlw	58
  2198  0147  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2199                           
  2200                           ;MAESTRO_SPI.c: 358:             escribir_char (w1+48);
  2201  014C  1283               	bcf	3,5	;RP0=0, select bank0
  2202  014D  1303               	bcf	3,6	;RP1=0, select bank0
  2203  014E  0827               	movf	_w1,w
  2204  014F  3E30               	addlw	48
  2205  0150  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2206                           
  2207                           ;MAESTRO_SPI.c: 359:             escribir_char (w2+48);
  2208  0155  1283               	bcf	3,5	;RP0=0, select bank0
  2209  0156  1303               	bcf	3,6	;RP1=0, select bank0
  2210  0157  0826               	movf	_w2,w
  2211  0158  3E30               	addlw	48
  2212  0159  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2213                           
  2214                           ;MAESTRO_SPI.c: 360:             escribir_char (32);
  2215  015E  3020               	movlw	32
  2216  015F  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2217                           
  2218                           ;MAESTRO_SPI.c: 361:             escribir_char (32);
  2219  0164  3020               	movlw	32
  2220  0165  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2221                           
  2222                           ;MAESTRO_SPI.c: 362:             escribir_char (32);
  2223  016A  3020               	movlw	32
  2224  016B  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2225                           
  2226                           ;MAESTRO_SPI.c: 363:             escribir_char (32);
  2227  0170  3020               	movlw	32
  2228  0171  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2229  0176  292A               	goto	l1379
  2230  0177                     l201:
  2231  0177  0008               	return
  2232  0178                     __end_of_virtual_display2:
  2233                           
  2234                           	psect	text11
  2235  0178                     __ptext11:	
  2236 ;; *************** function _Conversion1 *****************
  2237 ;; Defined at:
  2238 ;;		line 262 in file "MAESTRO_SPI.c"
  2239 ;; Parameters:    Size  Location     Type
  2240 ;;		None
  2241 ;; Auto vars:     Size  Location     Type
  2242 ;;  pot             2    7[BANK0 ] int 
  2243 ;; Return value:  Size  Location     Type
  2244 ;;                  1    wreg      void 
  2245 ;; Registers used:
  2246 ;;		wreg, status,2, status,0, pclath, cstack
  2247 ;; Tracked objects:
  2248 ;;		On entry : 0/0
  2249 ;;		On exit  : 0/0
  2250 ;;		Unchanged: 0/0
  2251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2252 ;;      Params:         0       0       0       0       0
  2253 ;;      Locals:         0       2       0       0       0
  2254 ;;      Temps:          0       3       0       0       0
  2255 ;;      Totals:         0       5       0       0       0
  2256 ;;Total ram usage:        5 bytes
  2257 ;; Hardware stack levels used:    1
  2258 ;; Hardware stack levels required when called:    3
  2259 ;; This function calls:
  2260 ;;		_Lcd_Write_Char
  2261 ;;		___awdiv
  2262 ;;		___awmod
  2263 ;;		_virtual_display1
  2264 ;; This function is called by:
  2265 ;;		_lcd
  2266 ;; This function uses a non-reentrant model
  2267 ;;
  2268                           
  2269                           
  2270                           ;psect for function _Conversion1
  2271  0178                     _Conversion1:
  2272  0178                     l1819:	
  2273                           ;incstack = 0
  2274                           ; Regs used in _Conversion1: [wreg+status,2+status,0+pclath+cstack]
  2275                           
  2276                           
  2277                           ;MAESTRO_SPI.c: 265:     voltaje = dato_pot;
  2278  0178  1283               	bcf	3,5	;RP0=0, select bank0
  2279  0179  1303               	bcf	3,6	;RP1=0, select bank0
  2280  017A  0821               	movf	_dato_pot,w
  2281  017B  00BE               	movwf	??_Conversion1
  2282  017C  083E               	movf	??_Conversion1,w
  2283  017D  00B9               	movwf	_voltaje
  2284  017E                     l1821:
  2285                           
  2286                           ;MAESTRO_SPI.c: 266:     int pot = voltaje * 4;
  2287  017E  0839               	movf	_voltaje,w
  2288  017F  00BE               	movwf	??_Conversion1
  2289  0180  01BF               	clrf	??_Conversion1+1
  2290  0181  1003               	clrc
  2291  0182  0DBE               	rlf	??_Conversion1,f
  2292  0183  0DBF               	rlf	??_Conversion1+1,f
  2293  0184  1003               	clrc
  2294  0185  0DBE               	rlf	??_Conversion1,f
  2295  0186  0DBF               	rlf	??_Conversion1+1,f
  2296  0187  083E               	movf	??_Conversion1,w
  2297  0188  00C1               	movwf	Conversion1@pot
  2298  0189  083F               	movf	??_Conversion1+1,w
  2299  018A  00C2               	movwf	Conversion1@pot+1
  2300  018B                     l1823:
  2301                           
  2302                           ;MAESTRO_SPI.c: 267:     unidad = pot / 100;
  2303  018B  3064               	movlw	100
  2304  018C  00F2               	movwf	___awdiv@divisor
  2305  018D  3000               	movlw	0
  2306  018E  00F3               	movwf	___awdiv@divisor+1
  2307  018F  0842               	movf	Conversion1@pot+1,w
  2308  0190  00F5               	movwf	___awdiv@dividend+1
  2309  0191  0841               	movf	Conversion1@pot,w
  2310  0192  00F4               	movwf	___awdiv@dividend
  2311  0193  120A  118A  2291  120A  118A  	fcall	___awdiv
  2312  0198  0872               	movf	?___awdiv,w
  2313  0199  1283               	bcf	3,5	;RP0=0, select bank0
  2314  019A  1303               	bcf	3,6	;RP1=0, select bank0
  2315  019B  00BE               	movwf	??_Conversion1
  2316  019C  083E               	movf	??_Conversion1,w
  2317  019D  00B8               	movwf	_unidad
  2318  019E                     l1825:
  2319                           
  2320                           ;MAESTRO_SPI.c: 268:     x1 = pot % 100;
  2321  019E  3064               	movlw	100
  2322  019F  00F2               	movwf	___awmod@divisor
  2323  01A0  3000               	movlw	0
  2324  01A1  00F3               	movwf	___awmod@divisor+1
  2325  01A2  0842               	movf	Conversion1@pot+1,w
  2326  01A3  00F5               	movwf	___awmod@dividend+1
  2327  01A4  0841               	movf	Conversion1@pot,w
  2328  01A5  00F4               	movwf	___awmod@dividend
  2329  01A6  120A  118A  23C0  120A  118A  	fcall	___awmod
  2330  01AB  0872               	movf	?___awmod,w
  2331  01AC  1283               	bcf	3,5	;RP0=0, select bank0
  2332  01AD  1303               	bcf	3,6	;RP1=0, select bank0
  2333  01AE  00BE               	movwf	??_Conversion1
  2334  01AF  083E               	movf	??_Conversion1,w
  2335  01B0  00B7               	movwf	_x1
  2336  01B1                     l1827:
  2337                           
  2338                           ;MAESTRO_SPI.c: 269:     x2 = x1 / 10;
  2339  01B1  300A               	movlw	10
  2340  01B2  00F2               	movwf	___awdiv@divisor
  2341  01B3  3000               	movlw	0
  2342  01B4  00F3               	movwf	___awdiv@divisor+1
  2343  01B5  0837               	movf	_x1,w
  2344  01B6  00BE               	movwf	??_Conversion1
  2345  01B7  01BF               	clrf	??_Conversion1+1
  2346  01B8  083E               	movf	??_Conversion1,w
  2347  01B9  00F4               	movwf	___awdiv@dividend
  2348  01BA  083F               	movf	??_Conversion1+1,w
  2349  01BB  00F5               	movwf	___awdiv@dividend+1
  2350  01BC  120A  118A  2291  120A  118A  	fcall	___awdiv
  2351  01C1  0872               	movf	?___awdiv,w
  2352  01C2  1283               	bcf	3,5	;RP0=0, select bank0
  2353  01C3  1303               	bcf	3,6	;RP1=0, select bank0
  2354  01C4  00C0               	movwf	??_Conversion1+2
  2355  01C5  0840               	movf	??_Conversion1+2,w
  2356  01C6  00B5               	movwf	_x2
  2357  01C7                     l1829:
  2358                           
  2359                           ;MAESTRO_SPI.c: 270:     y1 = x1 % 10;
  2360  01C7  300A               	movlw	10
  2361  01C8  00F2               	movwf	___awmod@divisor
  2362  01C9  3000               	movlw	0
  2363  01CA  00F3               	movwf	___awmod@divisor+1
  2364  01CB  0837               	movf	_x1,w
  2365  01CC  00BE               	movwf	??_Conversion1
  2366  01CD  01BF               	clrf	??_Conversion1+1
  2367  01CE  083E               	movf	??_Conversion1,w
  2368  01CF  00F4               	movwf	___awmod@dividend
  2369  01D0  083F               	movf	??_Conversion1+1,w
  2370  01D1  00F5               	movwf	___awmod@dividend+1
  2371  01D2  120A  118A  23C0  120A  118A  	fcall	___awmod
  2372  01D7  0872               	movf	?___awmod,w
  2373  01D8  1283               	bcf	3,5	;RP0=0, select bank0
  2374  01D9  1303               	bcf	3,6	;RP1=0, select bank0
  2375  01DA  00C0               	movwf	??_Conversion1+2
  2376  01DB  0840               	movf	??_Conversion1+2,w
  2377  01DC  00B6               	movwf	_y1
  2378  01DD                     l1831:
  2379                           
  2380                           ;MAESTRO_SPI.c: 271:     y2 = y1 / 1;
  2381  01DD  0836               	movf	_y1,w
  2382  01DE  00BE               	movwf	??_Conversion1
  2383  01DF  083E               	movf	??_Conversion1,w
  2384  01E0  00B4               	movwf	_y2
  2385  01E1                     l1833:
  2386                           
  2387                           ;MAESTRO_SPI.c: 272:     Lcd_Write_Char(unidad+48);
  2388  01E1  0838               	movf	_unidad,w
  2389  01E2  3E30               	addlw	48
  2390  01E3  120A  118A  2617  120A  118A  	fcall	_Lcd_Write_Char
  2391  01E8                     l1835:
  2392                           
  2393                           ;MAESTRO_SPI.c: 273:     Lcd_Write_Char(46);
  2394  01E8  302E               	movlw	46
  2395  01E9  120A  118A  2617  120A  118A  	fcall	_Lcd_Write_Char
  2396  01EE                     l1837:
  2397                           
  2398                           ;MAESTRO_SPI.c: 274:     Lcd_Write_Char(x2+48);
  2399  01EE  1283               	bcf	3,5	;RP0=0, select bank0
  2400  01EF  1303               	bcf	3,6	;RP1=0, select bank0
  2401  01F0  0835               	movf	_x2,w
  2402  01F1  3E30               	addlw	48
  2403  01F2  120A  118A  2617  120A  118A  	fcall	_Lcd_Write_Char
  2404  01F7                     l1839:
  2405                           
  2406                           ;MAESTRO_SPI.c: 275:     Lcd_Write_Char(y2+48);
  2407  01F7  1283               	bcf	3,5	;RP0=0, select bank0
  2408  01F8  1303               	bcf	3,6	;RP1=0, select bank0
  2409  01F9  0834               	movf	_y2,w
  2410  01FA  3E30               	addlw	48
  2411  01FB  120A  118A  2617  120A  118A  	fcall	_Lcd_Write_Char
  2412  0200                     l1841:
  2413                           
  2414                           ;MAESTRO_SPI.c: 276:     Lcd_Write_Char(86);
  2415  0200  3056               	movlw	86
  2416  0201  120A  118A  2617  120A  118A  	fcall	_Lcd_Write_Char
  2417  0206                     l1843:
  2418                           
  2419                           ;MAESTRO_SPI.c: 277:     virtual_display1();
  2420  0206  120A  118A  235D  120A  118A  	fcall	_virtual_display1
  2421  020B                     l182:
  2422  020B  0008               	return
  2423  020C                     __end_of_Conversion1:
  2424                           
  2425                           	psect	text12
  2426  035D                     __ptext12:	
  2427 ;; *************** function _virtual_display1 *****************
  2428 ;; Defined at:
  2429 ;;		line 310 in file "MAESTRO_SPI.c"
  2430 ;; Parameters:    Size  Location     Type
  2431 ;;		None
  2432 ;; Auto vars:     Size  Location     Type
  2433 ;;		None
  2434 ;; Return value:  Size  Location     Type
  2435 ;;                  1    wreg      void 
  2436 ;; Registers used:
  2437 ;;		wreg, status,2, status,0, pclath, cstack
  2438 ;; Tracked objects:
  2439 ;;		On entry : 0/0
  2440 ;;		On exit  : 0/0
  2441 ;;		Unchanged: 0/0
  2442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2443 ;;      Params:         0       0       0       0       0
  2444 ;;      Locals:         0       0       0       0       0
  2445 ;;      Temps:          0       0       0       0       0
  2446 ;;      Totals:         0       0       0       0       0
  2447 ;;Total ram usage:        0 bytes
  2448 ;; Hardware stack levels used:    1
  2449 ;; Hardware stack levels required when called:    2
  2450 ;; This function calls:
  2451 ;;		_escribir_char
  2452 ;; This function is called by:
  2453 ;;		_Conversion1
  2454 ;; This function uses a non-reentrant model
  2455 ;;
  2456                           
  2457                           
  2458                           ;psect for function _virtual_display1
  2459  035D                     _virtual_display1:
  2460  035D                     l1367:	
  2461                           ;incstack = 0
  2462                           ; Regs used in _virtual_display1: [wreg+status,2+status,0+pclath+cstack]
  2463                           
  2464                           
  2465                           ;MAESTRO_SPI.c: 312:     if (velocidad1 > 7)
  2466  035D  3008               	movlw	8
  2467  035E  1283               	bcf	3,5	;RP0=0, select bank0
  2468  035F  1303               	bcf	3,6	;RP1=0, select bank0
  2469  0360  0224               	subwf	_velocidad1,w
  2470  0361  1C03               	skipc
  2471  0362  2B64               	goto	u321
  2472  0363  2B65               	goto	u320
  2473  0364                     u321:
  2474  0364  2BBF               	goto	l195
  2475  0365                     u320:
  2476  0365                     l1369:
  2477                           
  2478                           ;MAESTRO_SPI.c: 313:     {;MAESTRO_SPI.c: 314:         escribir_char (65);
  2479  0365  3041               	movlw	65
  2480  0366  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2481                           
  2482                           ;MAESTRO_SPI.c: 315:         escribir_char (68);
  2483  036B  3044               	movlw	68
  2484  036C  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2485                           
  2486                           ;MAESTRO_SPI.c: 316:         escribir_char (67);
  2487  0371  3043               	movlw	67
  2488  0372  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2489                           
  2490                           ;MAESTRO_SPI.c: 317:         escribir_char (58);
  2491  0377  303A               	movlw	58
  2492  0378  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2493                           
  2494                           ;MAESTRO_SPI.c: 318:         escribir_char (unidad+48);
  2495  037D  1283               	bcf	3,5	;RP0=0, select bank0
  2496  037E  1303               	bcf	3,6	;RP1=0, select bank0
  2497  037F  0838               	movf	_unidad,w
  2498  0380  3E30               	addlw	48
  2499  0381  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2500                           
  2501                           ;MAESTRO_SPI.c: 319:         escribir_char (46);
  2502  0386  302E               	movlw	46
  2503  0387  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2504                           
  2505                           ;MAESTRO_SPI.c: 320:         escribir_char (x2+48);
  2506  038C  1283               	bcf	3,5	;RP0=0, select bank0
  2507  038D  1303               	bcf	3,6	;RP1=0, select bank0
  2508  038E  0835               	movf	_x2,w
  2509  038F  3E30               	addlw	48
  2510  0390  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2511                           
  2512                           ;MAESTRO_SPI.c: 321:         escribir_char (y2+48);
  2513  0395  1283               	bcf	3,5	;RP0=0, select bank0
  2514  0396  1303               	bcf	3,6	;RP1=0, select bank0
  2515  0397  0834               	movf	_y2,w
  2516  0398  3E30               	addlw	48
  2517  0399  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2518                           
  2519                           ;MAESTRO_SPI.c: 322:         escribir_char (86);
  2520  039E  3056               	movlw	86
  2521  039F  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2522                           
  2523                           ;MAESTRO_SPI.c: 323:         escribir_char (32);
  2524  03A4  3020               	movlw	32
  2525  03A5  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2526                           
  2527                           ;MAESTRO_SPI.c: 324:         escribir_char (32);
  2528  03AA  3020               	movlw	32
  2529  03AB  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2530                           
  2531                           ;MAESTRO_SPI.c: 325:         escribir_char (32);
  2532  03B0  3020               	movlw	32
  2533  03B1  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2534                           
  2535                           ;MAESTRO_SPI.c: 326:         escribir_char (32);
  2536  03B6  3020               	movlw	32
  2537  03B7  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2538  03BC                     l1371:
  2539                           
  2540                           ;MAESTRO_SPI.c: 327:         velocidad1 = 0;
  2541  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  2542  03BD  1303               	bcf	3,6	;RP1=0, select bank0
  2543  03BE  01A4               	clrf	_velocidad1
  2544  03BF                     l195:
  2545  03BF  0008               	return
  2546  03C0                     __end_of_virtual_display1:
  2547                           
  2548                           	psect	text13
  2549  066B                     __ptext13:	
  2550 ;; *************** function _escribir_char *****************
  2551 ;; Defined at:
  2552 ;;		line 388 in file "MAESTRO_SPI.c"
  2553 ;; Parameters:    Size  Location     Type
  2554 ;;  valor           1    wreg     unsigned char 
  2555 ;; Auto vars:     Size  Location     Type
  2556 ;;  valor           1    2[COMMON] unsigned char 
  2557 ;; Return value:  Size  Location     Type
  2558 ;;                  1    wreg      void 
  2559 ;; Registers used:
  2560 ;;		wreg
  2561 ;; Tracked objects:
  2562 ;;		On entry : 0/0
  2563 ;;		On exit  : 0/0
  2564 ;;		Unchanged: 0/0
  2565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2566 ;;      Params:         0       0       0       0       0
  2567 ;;      Locals:         1       0       0       0       0
  2568 ;;      Temps:          0       0       0       0       0
  2569 ;;      Totals:         1       0       0       0       0
  2570 ;;Total ram usage:        1 bytes
  2571 ;; Hardware stack levels used:    1
  2572 ;; Hardware stack levels required when called:    1
  2573 ;; This function calls:
  2574 ;;		Nothing
  2575 ;; This function is called by:
  2576 ;;		_virtual_display1
  2577 ;;		_virtual_display2
  2578 ;;		_virtual_display3
  2579 ;; This function uses a non-reentrant model
  2580 ;;
  2581                           
  2582                           
  2583                           ;psect for function _escribir_char
  2584  066B                     _escribir_char:
  2585                           
  2586                           ;incstack = 0
  2587                           ; Regs used in _escribir_char: [wreg]
  2588                           ;escribir_char@valor stored from wreg
  2589  066B  00F2               	movwf	escribir_char@valor
  2590  066C                     l1353:
  2591                           
  2592                           ;MAESTRO_SPI.c: 388: void escribir_char (uint8_t valor);MAESTRO_SPI.c: 389: {;MAESTRO_SP
      +                          I.c: 390:     TXREG = valor;
  2593  066C  0872               	movf	escribir_char@valor,w
  2594  066D  1283               	bcf	3,5	;RP0=0, select bank0
  2595  066E  1303               	bcf	3,6	;RP1=0, select bank0
  2596  066F  0099               	movwf	25	;volatile
  2597  0670                     l208:	
  2598                           ;MAESTRO_SPI.c: 391:     while (PIR1bits.TXIF == 0);
  2599                           
  2600  0670  1E0C               	btfss	12,4	;volatile
  2601  0671  2E73               	goto	u311
  2602  0672  2E74               	goto	u310
  2603  0673                     u311:
  2604  0673  2E70               	goto	l208
  2605  0674                     u310:
  2606  0674                     l211:
  2607  0674  0008               	return
  2608  0675                     __end_of_escribir_char:
  2609                           
  2610                           	psect	text14
  2611  03C0                     __ptext14:	
  2612 ;; *************** function ___awmod *****************
  2613 ;; Defined at:
  2614 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  2615 ;; Parameters:    Size  Location     Type
  2616 ;;  divisor         2    2[COMMON] int 
  2617 ;;  dividend        2    4[COMMON] int 
  2618 ;; Auto vars:     Size  Location     Type
  2619 ;;  sign            1    8[COMMON] unsigned char 
  2620 ;;  counter         1    7[COMMON] unsigned char 
  2621 ;; Return value:  Size  Location     Type
  2622 ;;                  2    2[COMMON] int 
  2623 ;; Registers used:
  2624 ;;		wreg, status,2, status,0
  2625 ;; Tracked objects:
  2626 ;;		On entry : 0/0
  2627 ;;		On exit  : 0/0
  2628 ;;		Unchanged: 0/0
  2629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2630 ;;      Params:         4       0       0       0       0
  2631 ;;      Locals:         2       0       0       0       0
  2632 ;;      Temps:          1       0       0       0       0
  2633 ;;      Totals:         7       0       0       0       0
  2634 ;;Total ram usage:        7 bytes
  2635 ;; Hardware stack levels used:    1
  2636 ;; Hardware stack levels required when called:    1
  2637 ;; This function calls:
  2638 ;;		Nothing
  2639 ;; This function is called by:
  2640 ;;		_Conversion1
  2641 ;;		_Conversion2
  2642 ;;		_Conversion3
  2643 ;; This function uses a non-reentrant model
  2644 ;;
  2645                           
  2646                           
  2647                           ;psect for function ___awmod
  2648  03C0                     ___awmod:
  2649  03C0                     l1445:	
  2650                           ;incstack = 0
  2651                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2652                           
  2653  03C0  01F8               	clrf	___awmod@sign
  2654  03C1                     l1447:
  2655  03C1  1FF5               	btfss	___awmod@dividend+1,7
  2656  03C2  2BC4               	goto	u461
  2657  03C3  2BC5               	goto	u460
  2658  03C4                     u461:
  2659  03C4  2BCC               	goto	l1453
  2660  03C5                     u460:
  2661  03C5                     l1449:
  2662  03C5  09F4               	comf	___awmod@dividend,f
  2663  03C6  09F5               	comf	___awmod@dividend+1,f
  2664  03C7  0AF4               	incf	___awmod@dividend,f
  2665  03C8  1903               	skipnz
  2666  03C9  0AF5               	incf	___awmod@dividend+1,f
  2667  03CA                     l1451:
  2668  03CA  01F8               	clrf	___awmod@sign
  2669  03CB  0AF8               	incf	___awmod@sign,f
  2670  03CC                     l1453:
  2671  03CC  1FF3               	btfss	___awmod@divisor+1,7
  2672  03CD  2BCF               	goto	u471
  2673  03CE  2BD0               	goto	u470
  2674  03CF                     u471:
  2675  03CF  2BD5               	goto	l1457
  2676  03D0                     u470:
  2677  03D0                     l1455:
  2678  03D0  09F2               	comf	___awmod@divisor,f
  2679  03D1  09F3               	comf	___awmod@divisor+1,f
  2680  03D2  0AF2               	incf	___awmod@divisor,f
  2681  03D3  1903               	skipnz
  2682  03D4  0AF3               	incf	___awmod@divisor+1,f
  2683  03D5                     l1457:
  2684  03D5  0872               	movf	___awmod@divisor,w
  2685  03D6  0473               	iorwf	___awmod@divisor+1,w
  2686  03D7  1903               	btfsc	3,2
  2687  03D8  2BDA               	goto	u481
  2688  03D9  2BDB               	goto	u480
  2689  03DA                     u481:
  2690  03DA  2C0A               	goto	l1475
  2691  03DB                     u480:
  2692  03DB                     l1459:
  2693  03DB  01F7               	clrf	___awmod@counter
  2694  03DC  0AF7               	incf	___awmod@counter,f
  2695  03DD  2BE9               	goto	l1465
  2696  03DE                     l1461:
  2697  03DE  3001               	movlw	1
  2698  03DF                     u495:
  2699  03DF  1003               	clrc
  2700  03E0  0DF2               	rlf	___awmod@divisor,f
  2701  03E1  0DF3               	rlf	___awmod@divisor+1,f
  2702  03E2  3EFF               	addlw	-1
  2703  03E3  1D03               	skipz
  2704  03E4  2BDF               	goto	u495
  2705  03E5                     l1463:
  2706  03E5  3001               	movlw	1
  2707  03E6  00F6               	movwf	??___awmod
  2708  03E7  0876               	movf	??___awmod,w
  2709  03E8  07F7               	addwf	___awmod@counter,f
  2710  03E9                     l1465:
  2711  03E9  1FF3               	btfss	___awmod@divisor+1,7
  2712  03EA  2BEC               	goto	u501
  2713  03EB  2BED               	goto	u500
  2714  03EC                     u501:
  2715  03EC  2BDE               	goto	l1461
  2716  03ED                     u500:
  2717  03ED                     l1467:
  2718  03ED  0873               	movf	___awmod@divisor+1,w
  2719  03EE  0275               	subwf	___awmod@dividend+1,w
  2720  03EF  1D03               	skipz
  2721  03F0  2BF3               	goto	u515
  2722  03F1  0872               	movf	___awmod@divisor,w
  2723  03F2  0274               	subwf	___awmod@dividend,w
  2724  03F3                     u515:
  2725  03F3  1C03               	skipc
  2726  03F4  2BF6               	goto	u511
  2727  03F5  2BF7               	goto	u510
  2728  03F6                     u511:
  2729  03F6  2BFD               	goto	l1471
  2730  03F7                     u510:
  2731  03F7                     l1469:
  2732  03F7  0872               	movf	___awmod@divisor,w
  2733  03F8  02F4               	subwf	___awmod@dividend,f
  2734  03F9  0873               	movf	___awmod@divisor+1,w
  2735  03FA  1C03               	skipc
  2736  03FB  03F5               	decf	___awmod@dividend+1,f
  2737  03FC  02F5               	subwf	___awmod@dividend+1,f
  2738  03FD                     l1471:
  2739  03FD  3001               	movlw	1
  2740  03FE                     u525:
  2741  03FE  1003               	clrc
  2742  03FF  0CF3               	rrf	___awmod@divisor+1,f
  2743  0400  0CF2               	rrf	___awmod@divisor,f
  2744  0401  3EFF               	addlw	-1
  2745  0402  1D03               	skipz
  2746  0403  2BFE               	goto	u525
  2747  0404                     l1473:
  2748  0404  3001               	movlw	1
  2749  0405  02F7               	subwf	___awmod@counter,f
  2750  0406  1D03               	btfss	3,2
  2751  0407  2C09               	goto	u531
  2752  0408  2C0A               	goto	u530
  2753  0409                     u531:
  2754  0409  2BED               	goto	l1467
  2755  040A                     u530:
  2756  040A                     l1475:
  2757  040A  0878               	movf	___awmod@sign,w
  2758  040B  1903               	btfsc	3,2
  2759  040C  2C0E               	goto	u541
  2760  040D  2C0F               	goto	u540
  2761  040E                     u541:
  2762  040E  2C14               	goto	l1479
  2763  040F                     u540:
  2764  040F                     l1477:
  2765  040F  09F4               	comf	___awmod@dividend,f
  2766  0410  09F5               	comf	___awmod@dividend+1,f
  2767  0411  0AF4               	incf	___awmod@dividend,f
  2768  0412  1903               	skipnz
  2769  0413  0AF5               	incf	___awmod@dividend+1,f
  2770  0414                     l1479:
  2771  0414  0875               	movf	___awmod@dividend+1,w
  2772  0415  00F3               	movwf	?___awmod+1
  2773  0416  0874               	movf	___awmod@dividend,w
  2774  0417  00F2               	movwf	?___awmod
  2775  0418                     l567:
  2776  0418  0008               	return
  2777  0419                     __end_of___awmod:
  2778                           
  2779                           	psect	text15
  2780  0291                     __ptext15:	
  2781 ;; *************** function ___awdiv *****************
  2782 ;; Defined at:
  2783 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2784 ;; Parameters:    Size  Location     Type
  2785 ;;  divisor         2    2[COMMON] int 
  2786 ;;  dividend        2    4[COMMON] int 
  2787 ;; Auto vars:     Size  Location     Type
  2788 ;;  quotient        2    2[BANK0 ] int 
  2789 ;;  sign            1    1[BANK0 ] unsigned char 
  2790 ;;  counter         1    0[BANK0 ] unsigned char 
  2791 ;; Return value:  Size  Location     Type
  2792 ;;                  2    2[COMMON] int 
  2793 ;; Registers used:
  2794 ;;		wreg, status,2, status,0
  2795 ;; Tracked objects:
  2796 ;;		On entry : 0/0
  2797 ;;		On exit  : 0/0
  2798 ;;		Unchanged: 0/0
  2799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2800 ;;      Params:         4       0       0       0       0
  2801 ;;      Locals:         0       4       0       0       0
  2802 ;;      Temps:          1       0       0       0       0
  2803 ;;      Totals:         5       4       0       0       0
  2804 ;;Total ram usage:        9 bytes
  2805 ;; Hardware stack levels used:    1
  2806 ;; Hardware stack levels required when called:    1
  2807 ;; This function calls:
  2808 ;;		Nothing
  2809 ;; This function is called by:
  2810 ;;		_Conversion1
  2811 ;;		_Conversion2
  2812 ;;		_Conversion3
  2813 ;; This function uses a non-reentrant model
  2814 ;;
  2815                           
  2816                           
  2817                           ;psect for function ___awdiv
  2818  0291                     ___awdiv:
  2819  0291                     l1775:	
  2820                           ;incstack = 0
  2821                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2822                           
  2823  0291  1283               	bcf	3,5	;RP0=0, select bank0
  2824  0292  1303               	bcf	3,6	;RP1=0, select bank0
  2825  0293  01BB               	clrf	___awdiv@sign
  2826  0294                     l1777:
  2827  0294  1FF3               	btfss	___awdiv@divisor+1,7
  2828  0295  2A97               	goto	u601
  2829  0296  2A98               	goto	u600
  2830  0297                     u601:
  2831  0297  2A9F               	goto	l1783
  2832  0298                     u600:
  2833  0298                     l1779:
  2834  0298  09F2               	comf	___awdiv@divisor,f
  2835  0299  09F3               	comf	___awdiv@divisor+1,f
  2836  029A  0AF2               	incf	___awdiv@divisor,f
  2837  029B  1903               	skipnz
  2838  029C  0AF3               	incf	___awdiv@divisor+1,f
  2839  029D                     l1781:
  2840  029D  01BB               	clrf	___awdiv@sign
  2841  029E  0ABB               	incf	___awdiv@sign,f
  2842  029F                     l1783:
  2843  029F  1FF5               	btfss	___awdiv@dividend+1,7
  2844  02A0  2AA2               	goto	u611
  2845  02A1  2AA3               	goto	u610
  2846  02A2                     u611:
  2847  02A2  2AAC               	goto	l1789
  2848  02A3                     u610:
  2849  02A3                     l1785:
  2850  02A3  09F4               	comf	___awdiv@dividend,f
  2851  02A4  09F5               	comf	___awdiv@dividend+1,f
  2852  02A5  0AF4               	incf	___awdiv@dividend,f
  2853  02A6  1903               	skipnz
  2854  02A7  0AF5               	incf	___awdiv@dividend+1,f
  2855  02A8                     l1787:
  2856  02A8  3001               	movlw	1
  2857  02A9  00F6               	movwf	??___awdiv
  2858  02AA  0876               	movf	??___awdiv,w
  2859  02AB  06BB               	xorwf	___awdiv@sign,f
  2860  02AC                     l1789:
  2861  02AC  01BC               	clrf	___awdiv@quotient
  2862  02AD  01BD               	clrf	___awdiv@quotient+1
  2863  02AE                     l1791:
  2864  02AE  0872               	movf	___awdiv@divisor,w
  2865  02AF  0473               	iorwf	___awdiv@divisor+1,w
  2866  02B0  1903               	btfsc	3,2
  2867  02B1  2AB3               	goto	u621
  2868  02B2  2AB4               	goto	u620
  2869  02B3                     u621:
  2870  02B3  2AEB               	goto	l1811
  2871  02B4                     u620:
  2872  02B4                     l1793:
  2873  02B4  01BA               	clrf	___awdiv@counter
  2874  02B5  0ABA               	incf	___awdiv@counter,f
  2875  02B6  2AC2               	goto	l1799
  2876  02B7                     l1795:
  2877  02B7  3001               	movlw	1
  2878  02B8                     u635:
  2879  02B8  1003               	clrc
  2880  02B9  0DF2               	rlf	___awdiv@divisor,f
  2881  02BA  0DF3               	rlf	___awdiv@divisor+1,f
  2882  02BB  3EFF               	addlw	-1
  2883  02BC  1D03               	skipz
  2884  02BD  2AB8               	goto	u635
  2885  02BE                     l1797:
  2886  02BE  3001               	movlw	1
  2887  02BF  00F6               	movwf	??___awdiv
  2888  02C0  0876               	movf	??___awdiv,w
  2889  02C1  07BA               	addwf	___awdiv@counter,f
  2890  02C2                     l1799:
  2891  02C2  1FF3               	btfss	___awdiv@divisor+1,7
  2892  02C3  2AC5               	goto	u641
  2893  02C4  2AC6               	goto	u640
  2894  02C5                     u641:
  2895  02C5  2AB7               	goto	l1795
  2896  02C6                     u640:
  2897  02C6                     l1801:
  2898  02C6  3001               	movlw	1
  2899  02C7                     u655:
  2900  02C7  1003               	clrc
  2901  02C8  0DBC               	rlf	___awdiv@quotient,f
  2902  02C9  0DBD               	rlf	___awdiv@quotient+1,f
  2903  02CA  3EFF               	addlw	-1
  2904  02CB  1D03               	skipz
  2905  02CC  2AC7               	goto	u655
  2906  02CD  0873               	movf	___awdiv@divisor+1,w
  2907  02CE  0275               	subwf	___awdiv@dividend+1,w
  2908  02CF  1D03               	skipz
  2909  02D0  2AD3               	goto	u665
  2910  02D1  0872               	movf	___awdiv@divisor,w
  2911  02D2  0274               	subwf	___awdiv@dividend,w
  2912  02D3                     u665:
  2913  02D3  1C03               	skipc
  2914  02D4  2AD6               	goto	u661
  2915  02D5  2AD7               	goto	u660
  2916  02D6                     u661:
  2917  02D6  2ADE               	goto	l1807
  2918  02D7                     u660:
  2919  02D7                     l1803:
  2920  02D7  0872               	movf	___awdiv@divisor,w
  2921  02D8  02F4               	subwf	___awdiv@dividend,f
  2922  02D9  0873               	movf	___awdiv@divisor+1,w
  2923  02DA  1C03               	skipc
  2924  02DB  03F5               	decf	___awdiv@dividend+1,f
  2925  02DC  02F5               	subwf	___awdiv@dividend+1,f
  2926  02DD                     l1805:
  2927  02DD  143C               	bsf	___awdiv@quotient,0
  2928  02DE                     l1807:
  2929  02DE  3001               	movlw	1
  2930  02DF                     u675:
  2931  02DF  1003               	clrc
  2932  02E0  0CF3               	rrf	___awdiv@divisor+1,f
  2933  02E1  0CF2               	rrf	___awdiv@divisor,f
  2934  02E2  3EFF               	addlw	-1
  2935  02E3  1D03               	skipz
  2936  02E4  2ADF               	goto	u675
  2937  02E5                     l1809:
  2938  02E5  3001               	movlw	1
  2939  02E6  02BA               	subwf	___awdiv@counter,f
  2940  02E7  1D03               	btfss	3,2
  2941  02E8  2AEA               	goto	u681
  2942  02E9  2AEB               	goto	u680
  2943  02EA                     u681:
  2944  02EA  2AC6               	goto	l1801
  2945  02EB                     u680:
  2946  02EB                     l1811:
  2947  02EB  083B               	movf	___awdiv@sign,w
  2948  02EC  1903               	btfsc	3,2
  2949  02ED  2AEF               	goto	u691
  2950  02EE  2AF0               	goto	u690
  2951  02EF                     u691:
  2952  02EF  2AF5               	goto	l1815
  2953  02F0                     u690:
  2954  02F0                     l1813:
  2955  02F0  09BC               	comf	___awdiv@quotient,f
  2956  02F1  09BD               	comf	___awdiv@quotient+1,f
  2957  02F2  0ABC               	incf	___awdiv@quotient,f
  2958  02F3  1903               	skipnz
  2959  02F4  0ABD               	incf	___awdiv@quotient+1,f
  2960  02F5                     l1815:
  2961  02F5  083D               	movf	___awdiv@quotient+1,w
  2962  02F6  00F3               	movwf	?___awdiv+1
  2963  02F7  083C               	movf	___awdiv@quotient,w
  2964  02F8  00F2               	movwf	?___awdiv
  2965  02F9                     l554:
  2966  02F9  0008               	return
  2967  02FA                     __end_of___awdiv:
  2968                           
  2969                           	psect	text16
  2970  0617                     __ptext16:	
  2971 ;; *************** function _Lcd_Write_Char *****************
  2972 ;; Defined at:
  2973 ;;		line 95 in file "LCD_SPI.c"
  2974 ;; Parameters:    Size  Location     Type
  2975 ;;  a               1    wreg     unsigned char 
  2976 ;; Auto vars:     Size  Location     Type
  2977 ;;  a               1    4[COMMON] unsigned char 
  2978 ;; Return value:  Size  Location     Type
  2979 ;;                  1    wreg      void 
  2980 ;; Registers used:
  2981 ;;		wreg, status,2, status,0, pclath, cstack
  2982 ;; Tracked objects:
  2983 ;;		On entry : 0/0
  2984 ;;		On exit  : 0/0
  2985 ;;		Unchanged: 0/0
  2986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2987 ;;      Params:         0       0       0       0       0
  2988 ;;      Locals:         1       0       0       0       0
  2989 ;;      Temps:          1       0       0       0       0
  2990 ;;      Totals:         2       0       0       0       0
  2991 ;;Total ram usage:        2 bytes
  2992 ;; Hardware stack levels used:    1
  2993 ;; Hardware stack levels required when called:    2
  2994 ;; This function calls:
  2995 ;;		_Lcd_Port
  2996 ;; This function is called by:
  2997 ;;		_Conversion1
  2998 ;;		_Conversion2
  2999 ;;		_Conversion3
  3000 ;;		_Lcd_Write_String
  3001 ;; This function uses a non-reentrant model
  3002 ;;
  3003                           
  3004                           
  3005                           ;psect for function _Lcd_Write_Char
  3006  0617                     _Lcd_Write_Char:
  3007                           
  3008                           ;incstack = 0
  3009                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3010                           ;Lcd_Write_Char@a stored from wreg
  3011  0617  00F4               	movwf	Lcd_Write_Char@a
  3012  0618                     l1357:
  3013                           
  3014                           ;LCD_SPI.c: 95: void Lcd_Write_Char(char a);LCD_SPI.c: 96: {;LCD_SPI.c: 97:     PORTEbit
      +                          s.RE0 = 1;
  3015  0618  1283               	bcf	3,5	;RP0=0, select bank0
  3016  0619  1303               	bcf	3,6	;RP1=0, select bank0
  3017  061A  1409               	bsf	9,0	;volatile
  3018  061B                     l1359:
  3019                           
  3020                           ;LCD_SPI.c: 98:     Lcd_Port(a);
  3021  061B  0874               	movf	Lcd_Write_Char@a,w
  3022  061C  120A  118A  2689  120A  118A  	fcall	_Lcd_Port
  3023  0621                     l1361:
  3024                           
  3025                           ;LCD_SPI.c: 99:     PORTEbits.RE1 = 1;
  3026  0621  1283               	bcf	3,5	;RP0=0, select bank0
  3027  0622  1303               	bcf	3,6	;RP1=0, select bank0
  3028  0623  1489               	bsf	9,1	;volatile
  3029  0624                     l1363:
  3030                           
  3031                           ;LCD_SPI.c: 100:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3032  0624  301A               	movlw	26
  3033  0625  00F3               	movwf	??_Lcd_Write_Char
  3034  0626                     u787:
  3035  0626  0BF3               	decfsz	??_Lcd_Write_Char,f
  3036  0627  2E26               	goto	u787
  3037  0628  0000               	nop
  3038  0629                     l1365:
  3039                           
  3040                           ;LCD_SPI.c: 101:     PORTEbits.RE1 = 0;
  3041  0629  1283               	bcf	3,5	;RP0=0, select bank0
  3042  062A  1303               	bcf	3,6	;RP1=0, select bank0
  3043  062B  1089               	bcf	9,1	;volatile
  3044  062C                     l265:
  3045  062C  0008               	return
  3046  062D                     __end_of_Lcd_Write_Char:
  3047                           
  3048                           	psect	text17
  3049  064A                     __ptext17:	
  3050 ;; *************** function _interrup_config *****************
  3051 ;; Defined at:
  3052 ;;		line 196 in file "MAESTRO_SPI.c"
  3053 ;; Parameters:    Size  Location     Type
  3054 ;;		None
  3055 ;; Auto vars:     Size  Location     Type
  3056 ;;		None
  3057 ;; Return value:  Size  Location     Type
  3058 ;;                  1    wreg      void 
  3059 ;; Registers used:
  3060 ;;		status,2
  3061 ;; Tracked objects:
  3062 ;;		On entry : 0/0
  3063 ;;		On exit  : 0/0
  3064 ;;		Unchanged: 0/0
  3065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3066 ;;      Params:         0       0       0       0       0
  3067 ;;      Locals:         0       0       0       0       0
  3068 ;;      Temps:          0       0       0       0       0
  3069 ;;      Totals:         0       0       0       0       0
  3070 ;;Total ram usage:        0 bytes
  3071 ;; Hardware stack levels used:    1
  3072 ;; Hardware stack levels required when called:    1
  3073 ;; This function calls:
  3074 ;;		Nothing
  3075 ;; This function is called by:
  3076 ;;		_main
  3077 ;; This function uses a non-reentrant model
  3078 ;;
  3079                           
  3080                           
  3081                           ;psect for function _interrup_config
  3082  064A                     _interrup_config:
  3083  064A                     l1625:	
  3084                           ;incstack = 0
  3085                           ; Regs used in _interrup_config: [status,2]
  3086                           
  3087                           
  3088                           ;MAESTRO_SPI.c: 198:     INTCONbits.GIE = 1;
  3089  064A  178B               	bsf	11,7	;volatile
  3090                           
  3091                           ;MAESTRO_SPI.c: 199:     INTCONbits.PEIE = 1;
  3092  064B  170B               	bsf	11,6	;volatile
  3093                           
  3094                           ;MAESTRO_SPI.c: 200:     INTCONbits.T0IE = 1;
  3095  064C  168B               	bsf	11,5	;volatile
  3096                           
  3097                           ;MAESTRO_SPI.c: 201:     INTCONbits.INTE = 0;
  3098  064D  120B               	bcf	11,4	;volatile
  3099                           
  3100                           ;MAESTRO_SPI.c: 202:     INTCONbits.RBIE = 0;
  3101  064E  118B               	bcf	11,3	;volatile
  3102                           
  3103                           ;MAESTRO_SPI.c: 203:     INTCONbits.T0IF = 0;
  3104  064F  110B               	bcf	11,2	;volatile
  3105                           
  3106                           ;MAESTRO_SPI.c: 204:     INTCONbits.INTF = 0;
  3107  0650  108B               	bcf	11,1	;volatile
  3108                           
  3109                           ;MAESTRO_SPI.c: 205:     INTCONbits.RBIF = 0;
  3110  0651  100B               	bcf	11,0	;volatile
  3111  0652                     l1627:
  3112                           
  3113                           ;MAESTRO_SPI.c: 206:     IOCB = 0b00000000;
  3114  0652  1683               	bsf	3,5	;RP0=1, select bank1
  3115  0653  1303               	bcf	3,6	;RP1=0, select bank1
  3116  0654  0196               	clrf	22	;volatile
  3117  0655                     l164:
  3118  0655  0008               	return
  3119  0656                     __end_of_interrup_config:
  3120                           
  3121                           	psect	text18
  3122  067D                     __ptext18:	
  3123 ;; *************** function _USART_config *****************
  3124 ;; Defined at:
  3125 ;;		line 235 in file "MAESTRO_SPI.c"
  3126 ;; Parameters:    Size  Location     Type
  3127 ;;		None
  3128 ;; Auto vars:     Size  Location     Type
  3129 ;;		None
  3130 ;; Return value:  Size  Location     Type
  3131 ;;                  1    wreg      void 
  3132 ;; Registers used:
  3133 ;;		wreg, status,2, status,0, pclath, cstack
  3134 ;; Tracked objects:
  3135 ;;		On entry : 0/0
  3136 ;;		On exit  : 0/0
  3137 ;;		Unchanged: 0/0
  3138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3139 ;;      Params:         0       0       0       0       0
  3140 ;;      Locals:         0       0       0       0       0
  3141 ;;      Temps:          0       0       0       0       0
  3142 ;;      Totals:         0       0       0       0       0
  3143 ;;Total ram usage:        0 bytes
  3144 ;; Hardware stack levels used:    1
  3145 ;; Hardware stack levels required when called:    2
  3146 ;; This function calls:
  3147 ;;		_USART_lib_config
  3148 ;; This function is called by:
  3149 ;;		_main
  3150 ;; This function uses a non-reentrant model
  3151 ;;
  3152                           
  3153                           
  3154                           ;psect for function _USART_config
  3155  067D                     _USART_config:
  3156  067D                     l1655:	
  3157                           ;incstack = 0
  3158                           ; Regs used in _USART_config: [wreg+status,2+status,0+pclath+cstack]
  3159                           
  3160                           
  3161                           ;MAESTRO_SPI.c: 237:     USART_lib_config();
  3162  067D  120A  118A  25C4  120A  118A  	fcall	_USART_lib_config
  3163  0682                     l173:
  3164  0682  0008               	return
  3165  0683                     __end_of_USART_config:
  3166                           
  3167                           	psect	text19
  3168  05C4                     __ptext19:	
  3169 ;; *************** function _USART_lib_config *****************
  3170 ;; Defined at:
  3171 ;;		line 18 in file "USART_SPI.c"
  3172 ;; Parameters:    Size  Location     Type
  3173 ;;		None
  3174 ;; Auto vars:     Size  Location     Type
  3175 ;;		None
  3176 ;; Return value:  Size  Location     Type
  3177 ;;                  1    wreg      void 
  3178 ;; Registers used:
  3179 ;;		wreg
  3180 ;; Tracked objects:
  3181 ;;		On entry : 0/0
  3182 ;;		On exit  : 0/0
  3183 ;;		Unchanged: 0/0
  3184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3185 ;;      Params:         0       0       0       0       0
  3186 ;;      Locals:         0       0       0       0       0
  3187 ;;      Temps:          0       0       0       0       0
  3188 ;;      Totals:         0       0       0       0       0
  3189 ;;Total ram usage:        0 bytes
  3190 ;; Hardware stack levels used:    1
  3191 ;; Hardware stack levels required when called:    1
  3192 ;; This function calls:
  3193 ;;		Nothing
  3194 ;; This function is called by:
  3195 ;;		_USART_config
  3196 ;; This function uses a non-reentrant model
  3197 ;;
  3198                           
  3199                           
  3200                           ;psect for function _USART_lib_config
  3201  05C4                     _USART_lib_config:
  3202  05C4                     l1483:	
  3203                           ;incstack = 0
  3204                           ; Regs used in _USART_lib_config: [wreg]
  3205                           
  3206                           
  3207                           ;USART_SPI.c: 20:     SPBRG = 25;
  3208  05C4  3019               	movlw	25
  3209  05C5  1683               	bsf	3,5	;RP0=1, select bank1
  3210  05C6  1303               	bcf	3,6	;RP1=0, select bank1
  3211  05C7  0099               	movwf	25	;volatile
  3212  05C8                     l1485:
  3213                           
  3214                           ;USART_SPI.c: 22:     TXSTAbits.CSRC = 0;
  3215  05C8  1398               	bcf	24,7	;volatile
  3216  05C9                     l1487:
  3217                           
  3218                           ;USART_SPI.c: 23:     TXSTAbits.TX9 = 0;
  3219  05C9  1318               	bcf	24,6	;volatile
  3220  05CA                     l1489:
  3221                           
  3222                           ;USART_SPI.c: 24:     TXSTAbits.TXEN = 1;
  3223  05CA  1698               	bsf	24,5	;volatile
  3224  05CB                     l1491:
  3225                           
  3226                           ;USART_SPI.c: 25:     TXSTAbits.SYNC = 0;
  3227  05CB  1218               	bcf	24,4	;volatile
  3228  05CC                     l1493:
  3229                           
  3230                           ;USART_SPI.c: 26:     TXSTAbits.SENDB= 0;
  3231  05CC  1198               	bcf	24,3	;volatile
  3232  05CD                     l1495:
  3233                           
  3234                           ;USART_SPI.c: 27:     TXSTAbits.BRGH = 1;
  3235  05CD  1518               	bsf	24,2	;volatile
  3236  05CE                     l1497:
  3237                           
  3238                           ;USART_SPI.c: 28:     TXSTAbits.TRMT = 0;
  3239  05CE  1098               	bcf	24,1	;volatile
  3240  05CF                     l1499:
  3241                           
  3242                           ;USART_SPI.c: 29:     TXSTAbits.TX9D = 0;
  3243  05CF  1018               	bcf	24,0	;volatile
  3244  05D0                     l1501:
  3245                           
  3246                           ;USART_SPI.c: 31:     RCSTAbits.SPEN = 1;
  3247  05D0  1283               	bcf	3,5	;RP0=0, select bank0
  3248  05D1  1303               	bcf	3,6	;RP1=0, select bank0
  3249  05D2  1798               	bsf	24,7	;volatile
  3250  05D3                     l1503:
  3251                           
  3252                           ;USART_SPI.c: 32:     RCSTAbits.RX9 = 0;
  3253  05D3  1318               	bcf	24,6	;volatile
  3254  05D4                     l1505:
  3255                           
  3256                           ;USART_SPI.c: 33:     RCSTAbits.SREN = 0;
  3257  05D4  1298               	bcf	24,5	;volatile
  3258  05D5                     l1507:
  3259                           
  3260                           ;USART_SPI.c: 34:     RCSTAbits.CREN = 1;
  3261  05D5  1618               	bsf	24,4	;volatile
  3262  05D6                     l1509:
  3263                           
  3264                           ;USART_SPI.c: 35:     RCSTAbits.ADDEN= 0;
  3265  05D6  1198               	bcf	24,3	;volatile
  3266  05D7                     l1511:
  3267                           
  3268                           ;USART_SPI.c: 36:     RCSTAbits.FERR = 0;
  3269  05D7  1118               	bcf	24,2	;volatile
  3270  05D8                     l1513:
  3271                           
  3272                           ;USART_SPI.c: 37:     RCSTAbits.OERR = 0;
  3273  05D8  1098               	bcf	24,1	;volatile
  3274  05D9                     l1515:
  3275                           
  3276                           ;USART_SPI.c: 38:     RCSTAbits.RX9D = 0;
  3277  05D9  1018               	bcf	24,0	;volatile
  3278  05DA                     l1517:
  3279                           
  3280                           ;USART_SPI.c: 40:     PIR1bits.RCIF = 0;
  3281  05DA  128C               	bcf	12,5	;volatile
  3282  05DB                     l1519:
  3283                           
  3284                           ;USART_SPI.c: 41:     PIE1bits.RCIE = 1;
  3285  05DB  1683               	bsf	3,5	;RP0=1, select bank1
  3286  05DC  1303               	bcf	3,6	;RP1=0, select bank1
  3287  05DD  168C               	bsf	12,5	;volatile
  3288  05DE                     l1521:
  3289                           
  3290                           ;USART_SPI.c: 42:     PIR1bits.TXIF = 0;
  3291  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  3292  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  3293  05E0  120C               	bcf	12,4	;volatile
  3294  05E1                     l224:
  3295  05E1  0008               	return
  3296  05E2                     __end_of_USART_lib_config:
  3297                           
  3298                           	psect	text20
  3299  0656                     __ptext20:	
  3300 ;; *************** function _SPI_config *****************
  3301 ;; Defined at:
  3302 ;;		line 240 in file "MAESTRO_SPI.c"
  3303 ;; Parameters:    Size  Location     Type
  3304 ;;		None
  3305 ;; Auto vars:     Size  Location     Type
  3306 ;;		None
  3307 ;; Return value:  Size  Location     Type
  3308 ;;                  1    wreg      void 
  3309 ;; Registers used:
  3310 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3311 ;; Tracked objects:
  3312 ;;		On entry : 0/0
  3313 ;;		On exit  : 0/0
  3314 ;;		Unchanged: 0/0
  3315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3316 ;;      Params:         0       0       0       0       0
  3317 ;;      Locals:         0       0       0       0       0
  3318 ;;      Temps:          1       0       0       0       0
  3319 ;;      Totals:         1       0       0       0       0
  3320 ;;Total ram usage:        1 bytes
  3321 ;; Hardware stack levels used:    1
  3322 ;; Hardware stack levels required when called:    2
  3323 ;; This function calls:
  3324 ;;		_SPI_Maestro_Init
  3325 ;; This function is called by:
  3326 ;;		_main
  3327 ;; This function uses a non-reentrant model
  3328 ;;
  3329                           
  3330                           
  3331                           ;psect for function _SPI_config
  3332  0656                     _SPI_config:
  3333  0656                     l1657:	
  3334                           ;incstack = 0
  3335                           ; Regs used in _SPI_config: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3336                           
  3337                           
  3338                           ;MAESTRO_SPI.c: 242:     SPI_Maestro_Init (0, 2);
  3339  0656  3002               	movlw	2
  3340  0657  00F6               	movwf	??_SPI_config
  3341  0658  0876               	movf	??_SPI_config,w
  3342  0659  00F2               	movwf	SPI_Maestro_Init@SCK
  3343  065A  3000               	movlw	0
  3344  065B  120A  118A  220C  120A  118A  	fcall	_SPI_Maestro_Init
  3345  0660                     l176:
  3346  0660  0008               	return
  3347  0661                     __end_of_SPI_config:
  3348                           
  3349                           	psect	text21
  3350  020C                     __ptext21:	
  3351 ;; *************** function _SPI_Maestro_Init *****************
  3352 ;; Defined at:
  3353 ;;		line 19 in file "SPI_SPI.c"
  3354 ;; Parameters:    Size  Location     Type
  3355 ;;  port_mode       1    wreg     unsigned char 
  3356 ;;  SCK             1    2[COMMON] unsigned char 
  3357 ;; Auto vars:     Size  Location     Type
  3358 ;;  port_mode       1    5[COMMON] unsigned char 
  3359 ;; Return value:  Size  Location     Type
  3360 ;;                  1    wreg      void 
  3361 ;; Registers used:
  3362 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3363 ;; Tracked objects:
  3364 ;;		On entry : 0/0
  3365 ;;		On exit  : 0/0
  3366 ;;		Unchanged: 0/0
  3367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3368 ;;      Params:         1       0       0       0       0
  3369 ;;      Locals:         1       0       0       0       0
  3370 ;;      Temps:          2       0       0       0       0
  3371 ;;      Totals:         4       0       0       0       0
  3372 ;;Total ram usage:        4 bytes
  3373 ;; Hardware stack levels used:    1
  3374 ;; Hardware stack levels required when called:    1
  3375 ;; This function calls:
  3376 ;;		Nothing
  3377 ;; This function is called by:
  3378 ;;		_SPI_config
  3379 ;; This function uses a non-reentrant model
  3380 ;;
  3381                           
  3382                           
  3383                           ;psect for function _SPI_Maestro_Init
  3384  020C                     _SPI_Maestro_Init:
  3385                           
  3386                           ;incstack = 0
  3387                           ; Regs used in _SPI_Maestro_Init: [wreg-fsr0h+status,2+status,0]
  3388                           ;SPI_Maestro_Init@port_mode stored from wreg
  3389  020C  00F5               	movwf	SPI_Maestro_Init@port_mode
  3390  020D                     l1523:
  3391                           
  3392                           ;SPI_SPI.c: 19: void SPI_Maestro_Init (char port_mode, char SCK);SPI_SPI.c: 20: {;SPI_SP
      +                          I.c: 21:     TRISCbits.TRISC0 = 0;
  3393  020D  1683               	bsf	3,5	;RP0=1, select bank1
  3394  020E  1303               	bcf	3,6	;RP1=0, select bank1
  3395  020F  1007               	bcf	7,0	;volatile
  3396                           
  3397                           ;SPI_SPI.c: 22:     TRISCbits.TRISC1 = 0;
  3398  0210  1087               	bcf	7,1	;volatile
  3399                           
  3400                           ;SPI_SPI.c: 23:     TRISCbits.TRISC2 = 0;
  3401  0211  1107               	bcf	7,2	;volatile
  3402                           
  3403                           ;SPI_SPI.c: 24:     TRISCbits.TRISC5 = 0;
  3404  0212  1287               	bcf	7,5	;volatile
  3405                           
  3406                           ;SPI_SPI.c: 25:     TRISCbits.TRISC4 = 1;
  3407  0213  1607               	bsf	7,4	;volatile
  3408                           
  3409                           ;SPI_SPI.c: 26:     TRISCbits.TRISC3 = 0;
  3410  0214  1187               	bcf	7,3	;volatile
  3411                           
  3412                           ;SPI_SPI.c: 28:     switch (port_mode)
  3413  0215  2A40               	goto	l1527
  3414  0216                     l279:	
  3415                           ;SPI_SPI.c: 29:     {;SPI_SPI.c: 30:         case 0:
  3416                           
  3417                           
  3418                           ;SPI_SPI.c: 31:             SSPCONbits.SSPM3 = 0;
  3419  0216  1283               	bcf	3,5	;RP0=0, select bank0
  3420  0217  1303               	bcf	3,6	;RP1=0, select bank0
  3421  0218  1194               	bcf	20,3	;volatile
  3422                           
  3423                           ;SPI_SPI.c: 32:             SSPCONbits.SSPM2 = 0;
  3424  0219  1114               	bcf	20,2	;volatile
  3425                           
  3426                           ;SPI_SPI.c: 33:             SSPCONbits.SSPM1 = 0;
  3427  021A  1094               	bcf	20,1	;volatile
  3428                           
  3429                           ;SPI_SPI.c: 34:             SSPCONbits.SSPM0 = 0;
  3430  021B  1014               	bcf	20,0	;volatile
  3431                           
  3432                           ;SPI_SPI.c: 36:             break;
  3433  021C  2A74               	goto	l1531
  3434  021D                     l281:	
  3435                           ;SPI_SPI.c: 37:          case 1:
  3436                           
  3437                           
  3438                           ;SPI_SPI.c: 38:             SSPCONbits.SSPM3 = 0;
  3439  021D  1283               	bcf	3,5	;RP0=0, select bank0
  3440  021E  1303               	bcf	3,6	;RP1=0, select bank0
  3441  021F  1194               	bcf	20,3	;volatile
  3442                           
  3443                           ;SPI_SPI.c: 39:             SSPCONbits.SSPM2 = 0;
  3444  0220  1114               	bcf	20,2	;volatile
  3445                           
  3446                           ;SPI_SPI.c: 40:             SSPCONbits.SSPM1 = 0;
  3447  0221  1094               	bcf	20,1	;volatile
  3448                           
  3449                           ;SPI_SPI.c: 41:             SSPCONbits.SSPM0 = 1;
  3450  0222  1414               	bsf	20,0	;volatile
  3451                           
  3452                           ;SPI_SPI.c: 43:             break;
  3453  0223  2A74               	goto	l1531
  3454  0224                     l282:	
  3455                           ;SPI_SPI.c: 44:          case 2:
  3456                           
  3457                           
  3458                           ;SPI_SPI.c: 45:             SSPCONbits.SSPM3 = 0;
  3459  0224  1283               	bcf	3,5	;RP0=0, select bank0
  3460  0225  1303               	bcf	3,6	;RP1=0, select bank0
  3461  0226  1194               	bcf	20,3	;volatile
  3462                           
  3463                           ;SPI_SPI.c: 46:             SSPCONbits.SSPM2 = 0;
  3464  0227  1114               	bcf	20,2	;volatile
  3465                           
  3466                           ;SPI_SPI.c: 47:             SSPCONbits.SSPM1 = 1;
  3467  0228  1494               	bsf	20,1	;volatile
  3468                           
  3469                           ;SPI_SPI.c: 48:             SSPCONbits.SSPM0 = 0;
  3470  0229  1014               	bcf	20,0	;volatile
  3471                           
  3472                           ;SPI_SPI.c: 50:             break;
  3473  022A  2A74               	goto	l1531
  3474  022B                     l283:	
  3475                           ;SPI_SPI.c: 51:          case 3:
  3476                           
  3477                           
  3478                           ;SPI_SPI.c: 52:             SSPCONbits.SSPM3 = 0;
  3479  022B  1283               	bcf	3,5	;RP0=0, select bank0
  3480  022C  1303               	bcf	3,6	;RP1=0, select bank0
  3481  022D  1194               	bcf	20,3	;volatile
  3482                           
  3483                           ;SPI_SPI.c: 53:             SSPCONbits.SSPM2 = 0;
  3484  022E  1114               	bcf	20,2	;volatile
  3485                           
  3486                           ;SPI_SPI.c: 54:             SSPCONbits.SSPM1 = 1;
  3487  022F  1494               	bsf	20,1	;volatile
  3488                           
  3489                           ;SPI_SPI.c: 55:             SSPCONbits.SSPM0 = 1;
  3490  0230  1414               	bsf	20,0	;volatile
  3491                           
  3492                           ;SPI_SPI.c: 56:             break;
  3493  0231  2A74               	goto	l1531
  3494  0232                     l284:	
  3495                           ;SPI_SPI.c: 57:          case 4:
  3496                           
  3497                           
  3498                           ;SPI_SPI.c: 58:             SSPCONbits.SSPM3 = 0;
  3499  0232  1283               	bcf	3,5	;RP0=0, select bank0
  3500  0233  1303               	bcf	3,6	;RP1=0, select bank0
  3501  0234  1194               	bcf	20,3	;volatile
  3502                           
  3503                           ;SPI_SPI.c: 59:             SSPCONbits.SSPM2 = 1;
  3504  0235  1514               	bsf	20,2	;volatile
  3505                           
  3506                           ;SPI_SPI.c: 60:             SSPCONbits.SSPM1 = 0;
  3507  0236  1094               	bcf	20,1	;volatile
  3508                           
  3509                           ;SPI_SPI.c: 61:             SSPCONbits.SSPM0 = 0;
  3510  0237  1014               	bcf	20,0	;volatile
  3511                           
  3512                           ;SPI_SPI.c: 62:             break;
  3513  0238  2A74               	goto	l1531
  3514  0239                     l285:	
  3515                           ;SPI_SPI.c: 63:          case 5:
  3516                           
  3517                           
  3518                           ;SPI_SPI.c: 64:             SSPCONbits.SSPM3 = 0;
  3519  0239  1283               	bcf	3,5	;RP0=0, select bank0
  3520  023A  1303               	bcf	3,6	;RP1=0, select bank0
  3521  023B  1194               	bcf	20,3	;volatile
  3522                           
  3523                           ;SPI_SPI.c: 65:             SSPCONbits.SSPM2 = 1;
  3524  023C  1514               	bsf	20,2	;volatile
  3525                           
  3526                           ;SPI_SPI.c: 66:             SSPCONbits.SSPM1 = 0;
  3527  023D  1094               	bcf	20,1	;volatile
  3528                           
  3529                           ;SPI_SPI.c: 67:             SSPCONbits.SSPM0 = 1;
  3530  023E  1414               	bsf	20,0	;volatile
  3531                           
  3532                           ;SPI_SPI.c: 68:             break;
  3533  023F  2A74               	goto	l1531
  3534  0240                     l1527:
  3535  0240  0875               	movf	SPI_Maestro_Init@port_mode,w
  3536  0241  00F3               	movwf	??_SPI_Maestro_Init
  3537  0242  01F4               	clrf	??_SPI_Maestro_Init+1
  3538                           
  3539                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3540                           ; Switch size 1, requested type "simple"
  3541                           ; Number of cases is 1, Range of values is 0 to 0
  3542                           ; switch strategies available:
  3543                           ; Name         Instructions Cycles
  3544                           ; simple_byte            4     3 (average)
  3545                           ; direct_byte           11     8 (fixed)
  3546                           ; jumptable            260     6 (fixed)
  3547                           ;	Chosen strategy is simple_byte
  3548  0243  0874               	movf	??_SPI_Maestro_Init+1,w
  3549  0244  3A00               	xorlw	0	; case 0
  3550  0245  1903               	skipnz
  3551  0246  2A48               	goto	l1973
  3552  0247  2A74               	goto	l1531
  3553  0248                     l1973:
  3554                           
  3555                           ; Switch size 1, requested type "simple"
  3556                           ; Number of cases is 6, Range of values is 0 to 5
  3557                           ; switch strategies available:
  3558                           ; Name         Instructions Cycles
  3559                           ; simple_byte           19    10 (average)
  3560                           ; direct_byte           26     8 (fixed)
  3561                           ; jumptable            260     6 (fixed)
  3562                           ;	Chosen strategy is simple_byte
  3563  0248  0873               	movf	??_SPI_Maestro_Init,w
  3564  0249  3A00               	xorlw	0	; case 0
  3565  024A  1903               	skipnz
  3566  024B  2A16               	goto	l279
  3567  024C  3A01               	xorlw	1	; case 1
  3568  024D  1903               	skipnz
  3569  024E  2A1D               	goto	l281
  3570  024F  3A03               	xorlw	3	; case 2
  3571  0250  1903               	skipnz
  3572  0251  2A24               	goto	l282
  3573  0252  3A01               	xorlw	1	; case 3
  3574  0253  1903               	skipnz
  3575  0254  2A2B               	goto	l283
  3576  0255  3A07               	xorlw	7	; case 4
  3577  0256  1903               	skipnz
  3578  0257  2A32               	goto	l284
  3579  0258  3A01               	xorlw	1	; case 5
  3580  0259  1903               	skipnz
  3581  025A  2A39               	goto	l285
  3582  025B  2A74               	goto	l1531
  3583  025C                     l287:	
  3584                           ;SPI_SPI.c: 72:     {;SPI_SPI.c: 73:         case 0:
  3585                           
  3586                           
  3587                           ;SPI_SPI.c: 74:             SSPCONbits.CKP = 0;
  3588  025C  1283               	bcf	3,5	;RP0=0, select bank0
  3589  025D  1214               	bcf	20,4	;volatile
  3590                           
  3591                           ;SPI_SPI.c: 75:             SSPSTATbits.CKE = 0;
  3592  025E  1683               	bsf	3,5	;RP0=1, select bank1
  3593  025F  1303               	bcf	3,6	;RP1=0, select bank1
  3594  0260  1314               	bcf	20,6	;volatile
  3595                           
  3596                           ;SPI_SPI.c: 77:             break;
  3597  0261  2A8A               	goto	l288
  3598  0262                     l289:	
  3599                           ;SPI_SPI.c: 78:          case 1:
  3600                           
  3601                           
  3602                           ;SPI_SPI.c: 79:             SSPCONbits.CKP = 1;
  3603  0262  1283               	bcf	3,5	;RP0=0, select bank0
  3604  0263  1614               	bsf	20,4	;volatile
  3605                           
  3606                           ;SPI_SPI.c: 80:             SSPSTATbits.CKE = 0;
  3607  0264  1683               	bsf	3,5	;RP0=1, select bank1
  3608  0265  1303               	bcf	3,6	;RP1=0, select bank1
  3609  0266  1314               	bcf	20,6	;volatile
  3610                           
  3611                           ;SPI_SPI.c: 82:             break;
  3612  0267  2A8A               	goto	l288
  3613  0268                     l290:	
  3614                           ;SPI_SPI.c: 83:          case 2:
  3615                           
  3616                           
  3617                           ;SPI_SPI.c: 84:             SSPCONbits.CKP = 0;
  3618  0268  1283               	bcf	3,5	;RP0=0, select bank0
  3619  0269  1214               	bcf	20,4	;volatile
  3620                           
  3621                           ;SPI_SPI.c: 85:             SSPSTATbits.CKE = 1;
  3622  026A  1683               	bsf	3,5	;RP0=1, select bank1
  3623  026B  1303               	bcf	3,6	;RP1=0, select bank1
  3624  026C  1714               	bsf	20,6	;volatile
  3625                           
  3626                           ;SPI_SPI.c: 87:             break;
  3627  026D  2A8A               	goto	l288
  3628  026E                     l291:	
  3629                           ;SPI_SPI.c: 88:          case 3:
  3630                           
  3631                           
  3632                           ;SPI_SPI.c: 89:             SSPCONbits.CKP = 1;
  3633  026E  1283               	bcf	3,5	;RP0=0, select bank0
  3634  026F  1614               	bsf	20,4	;volatile
  3635                           
  3636                           ;SPI_SPI.c: 90:             SSPSTATbits.CKE = 1;
  3637  0270  1683               	bsf	3,5	;RP0=1, select bank1
  3638  0271  1303               	bcf	3,6	;RP1=0, select bank1
  3639  0272  1714               	bsf	20,6	;volatile
  3640                           
  3641                           ;SPI_SPI.c: 91:             break;
  3642  0273  2A8A               	goto	l288
  3643  0274                     l1531:
  3644  0274  0872               	movf	SPI_Maestro_Init@SCK,w
  3645  0275  00F3               	movwf	??_SPI_Maestro_Init
  3646  0276  01F4               	clrf	??_SPI_Maestro_Init+1
  3647                           
  3648                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3649                           ; Switch size 1, requested type "simple"
  3650                           ; Number of cases is 1, Range of values is 0 to 0
  3651                           ; switch strategies available:
  3652                           ; Name         Instructions Cycles
  3653                           ; simple_byte            4     3 (average)
  3654                           ; direct_byte           11     8 (fixed)
  3655                           ; jumptable            260     6 (fixed)
  3656                           ;	Chosen strategy is simple_byte
  3657  0277  0874               	movf	??_SPI_Maestro_Init+1,w
  3658  0278  3A00               	xorlw	0	; case 0
  3659  0279  1903               	skipnz
  3660  027A  2A7C               	goto	l1975
  3661  027B  2A8A               	goto	l288
  3662  027C                     l1975:
  3663                           
  3664                           ; Switch size 1, requested type "simple"
  3665                           ; Number of cases is 4, Range of values is 0 to 3
  3666                           ; switch strategies available:
  3667                           ; Name         Instructions Cycles
  3668                           ; simple_byte           13     7 (average)
  3669                           ; direct_byte           20     8 (fixed)
  3670                           ; jumptable            260     6 (fixed)
  3671                           ;	Chosen strategy is simple_byte
  3672  027C  0873               	movf	??_SPI_Maestro_Init,w
  3673  027D  3A00               	xorlw	0	; case 0
  3674  027E  1903               	skipnz
  3675  027F  2A5C               	goto	l287
  3676  0280  3A01               	xorlw	1	; case 1
  3677  0281  1903               	skipnz
  3678  0282  2A62               	goto	l289
  3679  0283  3A03               	xorlw	3	; case 2
  3680  0284  1903               	skipnz
  3681  0285  2A68               	goto	l290
  3682  0286  3A01               	xorlw	1	; case 3
  3683  0287  1903               	skipnz
  3684  0288  2A6E               	goto	l291
  3685  0289  2A8A               	goto	l288
  3686  028A                     l288:
  3687                           
  3688                           ;SPI_SPI.c: 93:     SSPSTATbits.SMP = 0;
  3689  028A  1683               	bsf	3,5	;RP0=1, select bank1
  3690  028B  1303               	bcf	3,6	;RP1=0, select bank1
  3691  028C  1394               	bcf	20,7	;volatile
  3692                           
  3693                           ;SPI_SPI.c: 94:     SSPCONbits.SSPEN = 1;
  3694  028D  1283               	bcf	3,5	;RP0=0, select bank0
  3695  028E  1303               	bcf	3,6	;RP1=0, select bank0
  3696  028F  1694               	bsf	20,5	;volatile
  3697  0290                     l292:
  3698  0290  0008               	return
  3699  0291                     __end_of_SPI_Maestro_Init:
  3700                           
  3701                           	psect	text22
  3702  068F                     __ptext22:	
  3703 ;; *************** function _SPI_Recibir *****************
  3704 ;; Defined at:
  3705 ;;		line 181 in file "SPI_SPI.c"
  3706 ;; Parameters:    Size  Location     Type
  3707 ;;		None
  3708 ;; Auto vars:     Size  Location     Type
  3709 ;;		None
  3710 ;; Return value:  Size  Location     Type
  3711 ;;                  1    wreg      unsigned char 
  3712 ;; Registers used:
  3713 ;;		wreg
  3714 ;; Tracked objects:
  3715 ;;		On entry : 0/0
  3716 ;;		On exit  : 0/0
  3717 ;;		Unchanged: 0/0
  3718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3719 ;;      Params:         0       0       0       0       0
  3720 ;;      Locals:         0       0       0       0       0
  3721 ;;      Temps:          0       0       0       0       0
  3722 ;;      Totals:         0       0       0       0       0
  3723 ;;Total ram usage:        0 bytes
  3724 ;; Hardware stack levels used:    1
  3725 ;; Hardware stack levels required when called:    1
  3726 ;; This function calls:
  3727 ;;		Nothing
  3728 ;; This function is called by:
  3729 ;;		_main
  3730 ;; This function uses a non-reentrant model
  3731 ;;
  3732                           
  3733                           
  3734                           ;psect for function _SPI_Recibir
  3735  068F                     _SPI_Recibir:
  3736  068F                     l1661:	
  3737                           ;incstack = 0
  3738                           ; Regs used in _SPI_Recibir: [wreg]
  3739                           
  3740                           
  3741                           ;SPI_SPI.c: 183:     return SSPBUF;
  3742  068F  1283               	bcf	3,5	;RP0=0, select bank0
  3743  0690  1303               	bcf	3,6	;RP1=0, select bank0
  3744  0691  0813               	movf	19,w	;volatile
  3745  0692                     l315:
  3746  0692  0008               	return
  3747  0693                     __end_of_SPI_Recibir:
  3748                           
  3749                           	psect	text23
  3750  0683                     __ptext23:	
  3751 ;; *************** function _SPI_Enviar *****************
  3752 ;; Defined at:
  3753 ;;		line 175 in file "SPI_SPI.c"
  3754 ;; Parameters:    Size  Location     Type
  3755 ;;  valor           1    wreg     unsigned char 
  3756 ;; Auto vars:     Size  Location     Type
  3757 ;;  valor           1    2[COMMON] unsigned char 
  3758 ;; Return value:  Size  Location     Type
  3759 ;;                  1    wreg      void 
  3760 ;; Registers used:
  3761 ;;		wreg
  3762 ;; Tracked objects:
  3763 ;;		On entry : 0/0
  3764 ;;		On exit  : 0/0
  3765 ;;		Unchanged: 0/0
  3766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3767 ;;      Params:         0       0       0       0       0
  3768 ;;      Locals:         1       0       0       0       0
  3769 ;;      Temps:          0       0       0       0       0
  3770 ;;      Totals:         1       0       0       0       0
  3771 ;;Total ram usage:        1 bytes
  3772 ;; Hardware stack levels used:    1
  3773 ;; Hardware stack levels required when called:    1
  3774 ;; This function calls:
  3775 ;;		Nothing
  3776 ;; This function is called by:
  3777 ;;		_main
  3778 ;; This function uses a non-reentrant model
  3779 ;;
  3780                           
  3781                           
  3782                           ;psect for function _SPI_Enviar
  3783  0683                     _SPI_Enviar:
  3784                           
  3785                           ;incstack = 0
  3786                           ; Regs used in _SPI_Enviar: [wreg]
  3787                           ;SPI_Enviar@valor stored from wreg
  3788  0683  00F2               	movwf	SPI_Enviar@valor
  3789  0684                     l1659:
  3790                           
  3791                           ;SPI_SPI.c: 175: void SPI_Enviar (char valor);SPI_SPI.c: 176: {;SPI_SPI.c: 177:     SSPB
      +                          UF = valor;
  3792  0684  0872               	movf	SPI_Enviar@valor,w
  3793  0685  1283               	bcf	3,5	;RP0=0, select bank0
  3794  0686  1303               	bcf	3,6	;RP1=0, select bank0
  3795  0687  0093               	movwf	19	;volatile
  3796  0688                     l312:
  3797  0688  0008               	return
  3798  0689                     __end_of_SPI_Enviar:
  3799                           
  3800                           	psect	text24
  3801  0419                     __ptext24:	
  3802 ;; *************** function _Lcd_Init *****************
  3803 ;; Defined at:
  3804 ;;		line 37 in file "LCD_SPI.c"
  3805 ;; Parameters:    Size  Location     Type
  3806 ;;		None
  3807 ;; Auto vars:     Size  Location     Type
  3808 ;;		None
  3809 ;; Return value:  Size  Location     Type
  3810 ;;                  1    wreg      void 
  3811 ;; Registers used:
  3812 ;;		wreg, status,2, status,0, pclath, cstack
  3813 ;; Tracked objects:
  3814 ;;		On entry : 0/0
  3815 ;;		On exit  : 0/0
  3816 ;;		Unchanged: 0/0
  3817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3818 ;;      Params:         0       0       0       0       0
  3819 ;;      Locals:         0       0       0       0       0
  3820 ;;      Temps:          2       0       0       0       0
  3821 ;;      Totals:         2       0       0       0       0
  3822 ;;Total ram usage:        2 bytes
  3823 ;; Hardware stack levels used:    1
  3824 ;; Hardware stack levels required when called:    3
  3825 ;; This function calls:
  3826 ;;		_Lcd_Cmd
  3827 ;;		_Lcd_Port
  3828 ;; This function is called by:
  3829 ;;		_main
  3830 ;; This function uses a non-reentrant model
  3831 ;;
  3832                           
  3833                           
  3834                           ;psect for function _Lcd_Init
  3835  0419                     _Lcd_Init:
  3836  0419                     l1633:	
  3837                           ;incstack = 0
  3838                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3839                           
  3840                           
  3841                           ;LCD_SPI.c: 39:     Lcd_Port(0b0000000);
  3842  0419  3000               	movlw	0
  3843  041A  120A  118A  2689  120A  118A  	fcall	_Lcd_Port
  3844  041F                     l1635:
  3845                           
  3846                           ;LCD_SPI.c: 40:     _delay((unsigned long)((20)*(8000000/4000.0)));
  3847  041F  3034               	movlw	52
  3848  0420  00F7               	movwf	??_Lcd_Init+1
  3849  0421  30F1               	movlw	241
  3850  0422  00F6               	movwf	??_Lcd_Init
  3851  0423                     u797:
  3852  0423  0BF6               	decfsz	??_Lcd_Init,f
  3853  0424  2C23               	goto	u797
  3854  0425  0BF7               	decfsz	??_Lcd_Init+1,f
  3855  0426  2C23               	goto	u797
  3856  0427  2C28               	nop2
  3857  0428                     l1637:
  3858                           
  3859                           ;LCD_SPI.c: 41:     Lcd_Cmd(0b00110000);
  3860  0428  3030               	movlw	48
  3861  0429  120A  118A  25E2  120A  118A  	fcall	_Lcd_Cmd
  3862  042E                     l1639:
  3863                           
  3864                           ;LCD_SPI.c: 42:     PORTEbits.RE0 = 0;
  3865  042E  1283               	bcf	3,5	;RP0=0, select bank0
  3866  042F  1303               	bcf	3,6	;RP1=0, select bank0
  3867  0430  1009               	bcf	9,0	;volatile
  3868  0431                     l1641:
  3869                           
  3870                           ;LCD_SPI.c: 43:     PORTEbits.RE2 = 0;
  3871  0431  1109               	bcf	9,2	;volatile
  3872                           
  3873                           ;LCD_SPI.c: 44:     _delay((unsigned long)((5)*(8000000/4000.0)));
  3874  0432  300D               	movlw	13
  3875  0433  00F7               	movwf	??_Lcd_Init+1
  3876  0434  30FB               	movlw	251
  3877  0435  00F6               	movwf	??_Lcd_Init
  3878  0436                     u807:
  3879  0436  0BF6               	decfsz	??_Lcd_Init,f
  3880  0437  2C36               	goto	u807
  3881  0438  0BF7               	decfsz	??_Lcd_Init+1,f
  3882  0439  2C36               	goto	u807
  3883  043A  2C3B               	nop2
  3884  043B                     l1643:
  3885                           
  3886                           ;LCD_SPI.c: 45:     Lcd_Cmd(0b00110000);
  3887  043B  3030               	movlw	48
  3888  043C  120A  118A  25E2  120A  118A  	fcall	_Lcd_Cmd
  3889  0441                     l1645:
  3890                           
  3891                           ;LCD_SPI.c: 46:      PORTEbits.RE0 = 0;
  3892  0441  1283               	bcf	3,5	;RP0=0, select bank0
  3893  0442  1303               	bcf	3,6	;RP1=0, select bank0
  3894  0443  1009               	bcf	9,0	;volatile
  3895  0444                     l1647:
  3896                           
  3897                           ;LCD_SPI.c: 47:     PORTEbits.RE2 = 0;
  3898  0444  1109               	bcf	9,2	;volatile
  3899  0445                     l1649:
  3900                           
  3901                           ;LCD_SPI.c: 48:     _delay((unsigned long)((11)*(8000000/4000.0)));
  3902  0445  301D               	movlw	29
  3903  0446  00F7               	movwf	??_Lcd_Init+1
  3904  0447  3091               	movlw	145
  3905  0448  00F6               	movwf	??_Lcd_Init
  3906  0449                     u817:
  3907  0449  0BF6               	decfsz	??_Lcd_Init,f
  3908  044A  2C49               	goto	u817
  3909  044B  0BF7               	decfsz	??_Lcd_Init+1,f
  3910  044C  2C49               	goto	u817
  3911                           
  3912                           ;LCD_SPI.c: 49:     Lcd_Cmd(0b00110000);
  3913  044D  3030               	movlw	48
  3914  044E  120A  118A  25E2  120A  118A  	fcall	_Lcd_Cmd
  3915  0453                     l1651:
  3916                           
  3917                           ;LCD_SPI.c: 50:     PORTEbits.RE0 = 0;
  3918  0453  1283               	bcf	3,5	;RP0=0, select bank0
  3919  0454  1303               	bcf	3,6	;RP1=0, select bank0
  3920  0455  1009               	bcf	9,0	;volatile
  3921  0456                     l1653:
  3922                           
  3923                           ;LCD_SPI.c: 51:     PORTEbits.RE2 = 0;
  3924  0456  1109               	bcf	9,2	;volatile
  3925                           
  3926                           ;LCD_SPI.c: 52:     Lcd_Cmd(0b00111000);
  3927  0457  3038               	movlw	56
  3928  0458  120A  118A  25E2  120A  118A  	fcall	_Lcd_Cmd
  3929                           
  3930                           ;LCD_SPI.c: 53:     Lcd_Cmd(0b00001100);
  3931  045D  300C               	movlw	12
  3932  045E  120A  118A  25E2  120A  118A  	fcall	_Lcd_Cmd
  3933                           
  3934                           ;LCD_SPI.c: 54:     Lcd_Cmd(0b00000001);
  3935  0463  3001               	movlw	1
  3936  0464  120A  118A  25E2  120A  118A  	fcall	_Lcd_Cmd
  3937                           
  3938                           ;LCD_SPI.c: 55:     Lcd_Cmd(0b00000110);
  3939  0469  3006               	movlw	6
  3940  046A  120A  118A  25E2  120A  118A  	fcall	_Lcd_Cmd
  3941  046F                     l241:
  3942  046F  0008               	return
  3943  0470                     __end_of_Lcd_Init:
  3944                           
  3945                           	psect	text25
  3946  05E2                     __ptext25:	
  3947 ;; *************** function _Lcd_Cmd *****************
  3948 ;; Defined at:
  3949 ;;		line 28 in file "LCD_SPI.c"
  3950 ;; Parameters:    Size  Location     Type
  3951 ;;  a               1    wreg     unsigned char 
  3952 ;; Auto vars:     Size  Location     Type
  3953 ;;  a               1    5[COMMON] unsigned char 
  3954 ;; Return value:  Size  Location     Type
  3955 ;;                  1    wreg      void 
  3956 ;; Registers used:
  3957 ;;		wreg, status,2, status,0, pclath, cstack
  3958 ;; Tracked objects:
  3959 ;;		On entry : 0/0
  3960 ;;		On exit  : 0/0
  3961 ;;		Unchanged: 0/0
  3962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3963 ;;      Params:         0       0       0       0       0
  3964 ;;      Locals:         1       0       0       0       0
  3965 ;;      Temps:          2       0       0       0       0
  3966 ;;      Totals:         3       0       0       0       0
  3967 ;;Total ram usage:        3 bytes
  3968 ;; Hardware stack levels used:    1
  3969 ;; Hardware stack levels required when called:    2
  3970 ;; This function calls:
  3971 ;;		_Lcd_Port
  3972 ;; This function is called by:
  3973 ;;		_Lcd_Init
  3974 ;;		_Lcd_Set_Cursor
  3975 ;;		_Lcd_Clear
  3976 ;;		_Lcd_Shift_Left
  3977 ;;		_Lcd_Shift_Right
  3978 ;; This function uses a non-reentrant model
  3979 ;;
  3980                           
  3981                           
  3982                           ;psect for function _Lcd_Cmd
  3983  05E2                     _Lcd_Cmd:
  3984                           
  3985                           ;incstack = 0
  3986                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3987                           ;Lcd_Cmd@a stored from wreg
  3988  05E2  00F5               	movwf	Lcd_Cmd@a
  3989  05E3                     l1391:
  3990                           
  3991                           ;LCD_SPI.c: 28: void Lcd_Cmd (char a);LCD_SPI.c: 29: {;LCD_SPI.c: 30:     PORTEbits.RE0 
      +                          = 0;
  3992  05E3  1283               	bcf	3,5	;RP0=0, select bank0
  3993  05E4  1303               	bcf	3,6	;RP1=0, select bank0
  3994  05E5  1009               	bcf	9,0	;volatile
  3995  05E6                     l1393:
  3996                           
  3997                           ;LCD_SPI.c: 31:     Lcd_Port(a);
  3998  05E6  0875               	movf	Lcd_Cmd@a,w
  3999  05E7  120A  118A  2689  120A  118A  	fcall	_Lcd_Port
  4000  05EC                     l1395:
  4001                           
  4002                           ;LCD_SPI.c: 32:     PORTEbits.RE1 = 1;
  4003  05EC  1283               	bcf	3,5	;RP0=0, select bank0
  4004  05ED  1303               	bcf	3,6	;RP1=0, select bank0
  4005  05EE  1489               	bsf	9,1	;volatile
  4006  05EF                     l1397:
  4007                           
  4008                           ;LCD_SPI.c: 33:     _delay((unsigned long)((5)*(8000000/4000.0)));
  4009  05EF  300D               	movlw	13
  4010  05F0  00F4               	movwf	??_Lcd_Cmd+1
  4011  05F1  30FB               	movlw	251
  4012  05F2  00F3               	movwf	??_Lcd_Cmd
  4013  05F3                     u827:
  4014  05F3  0BF3               	decfsz	??_Lcd_Cmd,f
  4015  05F4  2DF3               	goto	u827
  4016  05F5  0BF4               	decfsz	??_Lcd_Cmd+1,f
  4017  05F6  2DF3               	goto	u827
  4018  05F7  2DF8               	nop2
  4019  05F8                     l1399:
  4020                           
  4021                           ;LCD_SPI.c: 34:     PORTEbits.RE1 = 0;
  4022  05F8  1283               	bcf	3,5	;RP0=0, select bank0
  4023  05F9  1303               	bcf	3,6	;RP1=0, select bank0
  4024  05FA  1089               	bcf	9,1	;volatile
  4025  05FB                     l238:
  4026  05FB  0008               	return
  4027  05FC                     __end_of_Lcd_Cmd:
  4028                           
  4029                           	psect	text26
  4030  0689                     __ptext26:	
  4031 ;; *************** function _Lcd_Port *****************
  4032 ;; Defined at:
  4033 ;;		line 23 in file "LCD_SPI.c"
  4034 ;; Parameters:    Size  Location     Type
  4035 ;;  a               1    wreg     unsigned char 
  4036 ;; Auto vars:     Size  Location     Type
  4037 ;;  a               1    2[COMMON] unsigned char 
  4038 ;; Return value:  Size  Location     Type
  4039 ;;                  1    wreg      void 
  4040 ;; Registers used:
  4041 ;;		wreg
  4042 ;; Tracked objects:
  4043 ;;		On entry : 0/0
  4044 ;;		On exit  : 0/0
  4045 ;;		Unchanged: 0/0
  4046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4047 ;;      Params:         0       0       0       0       0
  4048 ;;      Locals:         1       0       0       0       0
  4049 ;;      Temps:          0       0       0       0       0
  4050 ;;      Totals:         1       0       0       0       0
  4051 ;;Total ram usage:        1 bytes
  4052 ;; Hardware stack levels used:    1
  4053 ;; Hardware stack levels required when called:    1
  4054 ;; This function calls:
  4055 ;;		Nothing
  4056 ;; This function is called by:
  4057 ;;		_Lcd_Cmd
  4058 ;;		_Lcd_Init
  4059 ;;		_Lcd_Write_Char
  4060 ;; This function uses a non-reentrant model
  4061 ;;
  4062                           
  4063                           
  4064                           ;psect for function _Lcd_Port
  4065  0689                     _Lcd_Port:
  4066                           
  4067                           ;incstack = 0
  4068                           ; Regs used in _Lcd_Port: [wreg]
  4069                           ;Lcd_Port@a stored from wreg
  4070  0689  00F2               	movwf	Lcd_Port@a
  4071  068A                     l1355:
  4072                           
  4073                           ;LCD_SPI.c: 23: void Lcd_Port (char a);LCD_SPI.c: 24: {;LCD_SPI.c: 25:     PORTD = a;
  4074  068A  0872               	movf	Lcd_Port@a,w
  4075  068B  1283               	bcf	3,5	;RP0=0, select bank0
  4076  068C  1303               	bcf	3,6	;RP1=0, select bank0
  4077  068D  0088               	movwf	8	;volatile
  4078  068E                     l235:
  4079  068E  0008               	return
  4080  068F                     __end_of_Lcd_Port:
  4081                           
  4082                           	psect	text27
  4083  062D                     __ptext27:	
  4084 ;; *************** function _ISR *****************
  4085 ;; Defined at:
  4086 ;;		line 108 in file "MAESTRO_SPI.c"
  4087 ;; Parameters:    Size  Location     Type
  4088 ;;		None
  4089 ;; Auto vars:     Size  Location     Type
  4090 ;;		None
  4091 ;; Return value:  Size  Location     Type
  4092 ;;                  1    wreg      void 
  4093 ;; Registers used:
  4094 ;;		wreg
  4095 ;; Tracked objects:
  4096 ;;		On entry : 0/0
  4097 ;;		On exit  : 0/0
  4098 ;;		Unchanged: 0/0
  4099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4100 ;;      Params:         0       0       0       0       0
  4101 ;;      Locals:         0       0       0       0       0
  4102 ;;      Temps:          2       0       0       0       0
  4103 ;;      Totals:         2       0       0       0       0
  4104 ;;Total ram usage:        2 bytes
  4105 ;; Hardware stack levels used:    1
  4106 ;; This function calls:
  4107 ;;		Nothing
  4108 ;; This function is called by:
  4109 ;;		Interrupt level 1
  4110 ;; This function uses a non-reentrant model
  4111 ;;
  4112                           
  4113                           
  4114                           ;psect for function _ISR
  4115  062D                     _ISR:
  4116  062D                     i1l1235:
  4117                           
  4118                           ;MAESTRO_SPI.c: 110:     if (INTCONbits.TMR0IF == 1)
  4119  062D  1D0B               	btfss	11,2	;volatile
  4120  062E  2E30               	goto	u30_21
  4121  062F  2E31               	goto	u30_20
  4122  0630                     u30_21:
  4123  0630  2E36               	goto	i1l150
  4124  0631                     u30_20:
  4125  0631                     i1l1237:
  4126                           
  4127                           ;MAESTRO_SPI.c: 111:     {;MAESTRO_SPI.c: 112:         INTCONbits.TMR0IF = 0;
  4128  0631  110B               	bcf	11,2	;volatile
  4129  0632                     i1l1239:
  4130                           
  4131                           ;MAESTRO_SPI.c: 113:         TMR0 = 100;
  4132  0632  3064               	movlw	100
  4133  0633  1283               	bcf	3,5	;RP0=0, select bank0
  4134  0634  1303               	bcf	3,6	;RP1=0, select bank0
  4135  0635  0081               	movwf	1	;volatile
  4136  0636                     i1l150:
  4137  0636  0871               	movf	??_ISR+1,w
  4138  0637  008A               	movwf	10
  4139  0638  0E70               	swapf	??_ISR,w
  4140  0639  0083               	movwf	3
  4141  063A  0EFE               	swapf	btemp,f
  4142  063B  0E7E               	swapf	btemp,w
  4143  063C  0009               	retfie
  4144  063D                     __end_of_ISR:
  4145  007E                     btemp	set	126	;btemp
  4146  007E                     wtemp0	set	126
  4147                           
  4148                           	psect	intentry
  4149  0004                     __pintentry:	
  4150                           ;incstack = 0
  4151                           ; Regs used in _ISR: [wreg]
  4152                           
  4153  0004                     interrupt_function:
  4154  007E                     saved_w	set	btemp
  4155  0004  00FE               	movwf	btemp
  4156  0005  0E03               	swapf	3,w
  4157  0006  00F0               	movwf	??_ISR
  4158  0007  080A               	movf	10,w
  4159  0008  00F1               	movwf	??_ISR+1
  4160  0009  120A  118A  2E2D   	ljmp	_ISR
  4161                           
  4162                           	psect	config
  4163                           
  4164                           ;Config register CONFIG1 @ 0x2007
  4165                           ;	Oscillator Selection bits
  4166                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4167                           ;	Watchdog Timer Enable bit
  4168                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4169                           ;	Power-up Timer Enable bit
  4170                           ;	PWRTE = OFF, PWRT disabled
  4171                           ;	RE3/MCLR pin function select bit
  4172                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4173                           ;	Code Protection bit
  4174                           ;	CP = OFF, Program memory code protection is disabled
  4175                           ;	Data Code Protection bit
  4176                           ;	CPD = OFF, Data memory code protection is disabled
  4177                           ;	Brown Out Reset Selection bits
  4178                           ;	BOREN = OFF, BOR disabled
  4179                           ;	Internal External Switchover bit
  4180                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4181                           ;	Fail-Safe Clock Monitor Enabled bit
  4182                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4183                           ;	Low Voltage Programming Enable bit
  4184                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4185                           ;	In-Circuit Debugger Mode bit
  4186                           ;	DEBUG = 0x1, unprogrammed default
  4187  2007                     	org	8199
  4188  2007  20D4               	dw	8404
  4189                           
  4190                           ;Config register CONFIG2 @ 0x2008
  4191                           ;	Brown-out Reset Selection bit
  4192                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4193                           ;	Flash Program Memory Self Write Enable bits
  4194                           ;	WRT = OFF, Write protection off
  4195  2008                     	org	8200
  4196  2008  3FFF               	dw	16383

Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     12      38
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _lcd->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Conversion3->___awmod
    _virtual_display3->_escribir_char
    _Conversion2->___awmod
    _virtual_display2->_escribir_char
    _Conversion1->___awmod
    _virtual_display1->_escribir_char
    _Lcd_Write_Char->_Lcd_Port
    _SPI_config->_SPI_Maestro_Init
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_lcd
    _lcd->_Conversion1
    _Conversion3->___awdiv
    _Conversion2->___awdiv
    _Conversion1->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    7327
                                             10 BANK0      2     2      0
                           _Lcd_Init
                         _SPI_Enviar
                        _SPI_Recibir
                         _SPI_config
                       _USART_config
                    _interrup_config
                                _lcd
                         _osc_config
                              _setup
                        _tmr0_config
 ---------------------------------------------------------------------------------
 (1) _tmr0_config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _osc_config                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd                                                  1     1      0    7119
                                              9 BANK0      1     1      0
                        _Conversion1
                        _Conversion2
                        _Conversion3
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     3     3      0     167
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       4     3      1     482
                                              6 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Conversion3                                          3     3      0    2135
                                              4 BANK0      3     3      0
                     _Lcd_Write_Char
                            ___awdiv
                            ___awmod
                   _virtual_display3
 ---------------------------------------------------------------------------------
 (3) _virtual_display3                                     0     0      0      22
                      _escribir_char
 ---------------------------------------------------------------------------------
 (2) _Conversion2                                          3     3      0    2135
                                              4 BANK0      3     3      0
                     _Lcd_Write_Char
                            ___awdiv
                            ___awmod
                   _virtual_display2
 ---------------------------------------------------------------------------------
 (3) _virtual_display2                                     0     0      0      22
                      _escribir_char
 ---------------------------------------------------------------------------------
 (2) _Conversion1                                          5     5      0    2200
                                              4 BANK0      5     5      0
                     _Lcd_Write_Char
                            ___awdiv
                            ___awmod
                   _virtual_display1
 ---------------------------------------------------------------------------------
 (3) _virtual_display1                                     0     0      0      22
                      _escribir_char
 ---------------------------------------------------------------------------------
 (4) _escribir_char                                        1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     904
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1165
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      44
                                              3 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _interrup_config                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_config                                         0     0      0       0
                   _USART_lib_config
 ---------------------------------------------------------------------------------
 (2) _USART_lib_config                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_config                                           1     1      0     120
                                              6 COMMON     1     1      0
                   _SPI_Maestro_Init
 ---------------------------------------------------------------------------------
 (2) _SPI_Maestro_Init                                     4     3      1     120
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _SPI_Recibir                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Enviar                                           1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      44
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _SPI_Enviar
   _SPI_Recibir
   _SPI_config
     _SPI_Maestro_Init
   _USART_config
     _USART_lib_config
   _interrup_config
   _lcd
     _Conversion1
       _Lcd_Write_Char
         _Lcd_Port
       ___awdiv
       ___awmod
       _virtual_display1
         _escribir_char
     _Conversion2
       _Lcd_Write_Char
         _Lcd_Port
       ___awdiv
       ___awmod
       _virtual_display2
         _escribir_char
     _Conversion3
       _Lcd_Write_Char
         _Lcd_Port
       ___awdiv
       ___awmod
       _virtual_display3
         _escribir_char
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
   _osc_config
   _setup
   _tmr0_config

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      32       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      C      26       5       47.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      32      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 22 19:39:13 2021

              _SPI_Recibir 068F            SPI_Enviar@valor 0072                          _a 0025  
                        pc 0002                _SSPSTATbits 0094               ___awdiv@sign 003B  
                       _w1 0027                         _w2 0026                         _x1 0037  
                       _x2 0035                         _y1 0036                         _y2 0034  
               _SPI_config 0656     __size_of_escribir_char 000A                         fsr 0004  
                      l201 0177                        l211 0674                        l205 050F  
                      l312 0688                        l224 05E1                        l208 0670  
                      l241 046F                        l161 057A                        l250 05C3  
                      l170 0649                        l235 068E                        l315 0692  
                      l164 0655                        l173 0682                        l238 05FB  
                      l182 020B                        l191 04C3                        l167 066A  
                      l176 0660                        l256 059F                        l281 021D  
                      l265 062C                        l290 0268                        l282 0224  
                      l291 026E                        l283 022B                        l195 03BF  
                      l179 054C                        l292 0290                        l284 0232  
                      l188 035C                        l285 0239                        l287 025C  
                      l279 0216                        l288 028A                        l289 0262  
                      l554 02F9                        l567 0418    __end_of_interrup_config 0656  
                      u310 0674                        u311 0673                        u320 0365  
                      u321 0364                        u330 00E1                        u331 00E0  
                      u500 03ED                        u340 00E7                        u501 03EC  
                      u341 00E6                        u510 03F7                        u350 04CC  
                      u511 03F6                        u351 04CB                        u600 0298  
                      u601 0297                        u610 02A3                        u530 040A  
                      u611 02A2                        u531 0409                        u515 03F3  
                      u620 02B4                        u540 040F                        u460 03C5  
                      u700 0300                        _ISR 062D                        u621 02B3  
                      u541 040E                        u525 03FE                        u461 03C4  
                      u701 02FF                        u470 03D0                        u710 0319  
                      u550 05A6                        u471 03CF                        u711 0318  
                      u551 05A5                        u640 02C6                        u480 03DB  
                      u560 05B8                        u641 02C5                        u481 03DA  
                      u561 05B7                        u570 059F                        u635 02B8  
                      u571 059E                        u660 02D7                        u661 02D6  
                      u807 0436                        u655 02C7                        u495 03DF  
                      u727 004A                        u680 02EB                        u817 0449  
                      u681 02EA                        u665 02D3                        u737 0066  
                      u690 02F0                        u827 05F3                        u691 02EF  
                      u675 02DF                        u747 0074                        u757 008E  
                      u767 009C                        u777 00B8                        u787 0626  
                      u797 0423           _USART_lib_config 05C4                        _x1y 002B  
                      _x1z 0031                        _x2y 0029                        _x2z 002F  
                      _y1y 002A                        _y1z 0030                        _y2y 0028  
                      _y2z 002E                        _lcd 0510              ??_Conversion1 003E  
            ??_Conversion2 003E              ??_Conversion3 003E                        fsr0 0004  
                      indf 0000               ___awmod@sign 0078                       ?_ISR 0070  
                     l1501 05D0                       l1511 05D7                       l1503 05D3  
                     l1521 05DE                       l1513 05D8                       l1505 05D4  
                     l1361 0621                       l1353 066C                       l1355 068A  
                     l1531 0274                       l1523 020D                       l1515 05D9  
                     l1507 05D5                       l1363 0624                       l1451 03CA  
                     l1371 03BC                       l1611 054D                       l1517 05DA  
                     l1509 05D6                       l1365 0629                       l1357 0618  
                     l1461 03DE                       l1453 03CC                       l1445 03C0  
                     l1381 012E                       l1373 00D9                       l1541 05A1  
                     l1621 056D                       l1613 0565                       l1391 05E3  
                     l1527 0240                       l1519 05DB                       l1359 061B  
                     l1471 03FD                       l1463 03E5                       l1455 03D0  
                     l1447 03C1                       l1367 035D                       l1375 00E1  
                     l1551 05BD                       l1543 05A6                       l1623 0661  
                     l1615 0568                       l1631 0645                       l1393 05E6  
                     l1641 0431                       l1633 0419                       l1625 064A  
                     l1801 02C6                       l1473 0404                       l1465 03E9  
                     l1457 03D5                       l1449 03C5                       l1369 0365  
                     l1377 00E7                       l1385 04C4                       l1545 05AB  
                     l1553 057C                       l1617 0569                       l1395 05EC  
                     l1651 0453                       l1643 043B                       l1635 041F  
                     l1491 05CB                       l1483 05C4                       l1627 0652  
                     l1803 02D7                       l1811 02EB                       l1467 03ED  
                     l1459 03DB                       l1475 040A                       l1379 012A  
                     l1387 04CC                       l1547 05B2                       l1555 057F  
                     l1619 056C                       l1397 05EF                       l1653 0456  
                     l1645 0441                       l1637 0428                       l1661 068F  
                     l1493 05CC                       l1485 05C8                       l1813 02F0  
                     l1805 02DD                       l1477 040F                       l1469 03F7  
                     l1821 017E                       l1389 050C                       l1549 05B8  
                     l1557 058C                       l1629 063D                       l1901 0056  
                     l1399 05F8                       l1647 0444                       l1639 042E  
                     l1495 05CD                       l1487 05C9                       l1655 067D  
                     l1815 02F5                       l1807 02DE                       l1479 0414  
                     l1831 01DD                       l1823 018B                       l1559 0592  
                     l1911 0078                       l1903 0060                       l1649 0445  
                     l1657 0656                       l1497 05CE                       l1489 05CA  
                     l1809 02E5                       l1841 0200                       l1833 01E1  
                     l1825 019E                       l1921 0096                       l1913 007E  
                     l1905 006A                       ?_lcd 0070                       l1659 0684  
                     l1499 05CF                       l1843 0206                       l1835 01E8  
                     l1827 01B1                       l1819 0178                       l1851 0319  
                     l1931 00BF                       l1923 00A0                       l1915 0088  
                     l1907 006D                       l1781 029D                       l1837 01EE  
                     l1829 01C7                       l1845 02FA                       l1861 04A9  
                     l1853 0470                       l1925 00A8                       l1917 0092  
                     l1909 006E                       l1791 02AE                       l1783 029F  
                     l1775 0291                       l1839 01F7                       l1847 0300  
                     l1863 04B2                       l1855 0476                       l1871 0518  
                     l1927 00B2                       l1919 0095                       l1793 02B4  
                     l1785 02A3                       l1777 0294                       l1849 0313  
                     l1865 04B8                       l1857 048C                       l1881 053B  
                     l1873 051E                       l1929 00BC                       l1795 02B7  
                     l1787 02A8                       l1779 0298                       l1867 04BE  
                     l1859 04A2                       l1883 0547                       l1875 0525  
                     l1891 0037                       l1973 0248                       l1797 02BE  
                     l1789 02AC                       l1877 052A                       l1869 0510  
                     l1893 003C                       l1885 001E                       l1975 027C  
                     l1799 02C2                       l1879 0536                       l1895 0041  
                     l1887 002D                       l1897 0044                       l1889 0032  
                     l1899 004E                       STR_1 0606                       _IOCB 0096  
                     _TMR0 0001          ?_Lcd_Write_String 0070                       _main 001E  
                     btemp 007E                       start 000C         ??_Lcd_Write_String 0075  
          __end_of_Lcd_Cmd 05FC                      ??_ISR 0070                      ??_lcd 0043  
                    ?_main 0070            __end_of___awdiv 02FA            __end_of___awmod 0419  
                    _ANSEL 0188            ___awdiv@divisor 0072                      i1l150 0636  
          ___awdiv@counter 003A                      u30_20 0631                      u30_21 0630  
                    _SPBRG 0099                      _PORTA 0005                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008                      _PORTE 0009  
  __size_of_Lcd_Set_Cursor 0024                      _TRISA 0085                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088                      _TRISE 0089  
                    _TXREG 0019                      _setup 054D        __end_of_Conversion1 020C  
      __end_of_Conversion2 035D        __end_of_Conversion3 04C4              _escribir_char 066B  
                    pclath 000A                      status 0003                      wtemp0 007E  
         __end_of_Lcd_Init 0470           __end_of_Lcd_Port 068F                ?_SPI_Enviar 0070  
          __initialization 000F               __end_of_main 00D9        SPI_Maestro_Init@SCK 0072  
              ?_SPI_config 0070                     ??_main 0044           ?_interrup_config 0070  
 __end_of_virtual_display1 03C0   __end_of_virtual_display2 0178               ?_tmr0_config 0070  
 __end_of_virtual_display3 0510   __end_of_SPI_Maestro_Init 0291           ___awdiv@dividend 0074  
           ?_escribir_char 0070                     ?_setup 0070                     _ANSELH 0189  
                   i1l1235 062D                     i1l1237 0631                     i1l1239 0632  
                ??_Lcd_Cmd 0073    __size_of_Lcd_Write_Char 0016                     _SSPBUF 0013  
                ??___awdiv 0076                  ??___awmod 0076           ___awdiv@quotient 003C  
          ___awmod@divisor 0072             Conversion1@pot 0041            ___awmod@counter 0077  
                   _unidad 0038                _Conversion1 0178                _Conversion2 02FA  
              _Conversion3 0470                     saved_w 007E        __size_of_SPI_Enviar 0006  
          Lcd_Set_Cursor@a 0078            Lcd_Set_Cursor@b 0076    __end_of__initialization 001A  
      __size_of_SPI_config 000B   __end_of_USART_lib_config 05E2               ?_SPI_Recibir 0070  
           __pcstackCOMMON 0070              __end_of_setup 057B             _Lcd_Set_Cursor 05A0  
           _OPTION_REGbits 0081            ??_escribir_char 0072                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070                    ??_setup 0072                 __pbssBANK0 0020  
               __pmaintext 001E                 __pintentry 0004  __size_of_Lcd_Write_String 0025  
   __end_of_Lcd_Set_Cursor 05C4                 ??_Lcd_Init 0076                 ??_Lcd_Port 0072  
     __size_of_tmr0_config 000D                 __stringtab 0600             _Lcd_Write_Char 0617  
                  _Lcd_Cmd 05E2               ??_SPI_Enviar 0072                    ___awdiv 0291  
                  ___awmod 03C0               ??_SPI_config 0076                    _decenay 007B  
          ?_Lcd_Set_Cursor 0076                    __ptext1 063D                    __ptext2 054D  
                  __ptext3 0661                    __ptext4 0510                    __ptext5 057B  
                  __ptext6 05A0                    __ptext7 0470                    __ptext8 04C4  
                  __ptext9 02FA               __size_of_ISR 0010               __size_of_lcd 003D  
         ___awmod@dividend 0074          ?_virtual_display1 0070          ?_virtual_display2 0070  
        ?_virtual_display3 0070          ?_SPI_Maestro_Init 0072                    _unidady 002C  
                  _unidadz 0032         __end_of_SPI_Enviar 0689         ??_virtual_display1 0073  
       ??_virtual_display2 0073         ??_virtual_display3 0073                    clrloop0 0676  
       ??_SPI_Maestro_Init 0073                    _voltaje 0039     __end_of_Lcd_Write_Char 062D  
     end_of_initialization 001A                 _osc_config 0661         __end_of_SPI_config 0661  
                _RCSTAbits 0018                  Lcd_Port@a 0072       __size_of_SPI_Recibir 0004  
               _velocidad1 0024                 _velocidad2 0023                 _velocidad3 0022  
                _PORTCbits 0007                  _PORTEbits 0009               ?_Conversion1 0070  
             ?_Conversion2 0070               ?_Conversion3 0070                  _TRISAbits 0085  
                _TRISCbits 0087            ?_Lcd_Write_Char 0070   __size_of_interrup_config 000C  
        Lcd_Write_String@a 0077          Lcd_Write_String@i 0075                  _TXSTAbits 0098  
        ?_USART_lib_config 0070              ?_USART_config 0070         ??_USART_lib_config 0072  
         _Lcd_Write_String 057B        start_initialization 000F                __end_of_ISR 063D  
              __end_of_lcd 054D          __size_of_Lcd_Init 0057          __size_of_Lcd_Port 0006  
              ?_osc_config 0070             ??_USART_config 0072            Lcd_Write_Char@a 0074  
              __pbssCOMMON 007A                  ___latbits 0002              __pcstackBANK0 003A  
    __end_of_escribir_char 0675                   ?_Lcd_Cmd 0070          ??_interrup_config 0072  
                _dato_push 007A           ??_Lcd_Set_Cursor 0077                   ?___awdiv 0072  
                 ?___awmod 0072                  __pstrings 0600              _dato_semaforo 0020  
      __size_of_osc_config 000A              ??_tmr0_config 0072       __size_of_Conversion1 0094  
     __size_of_Conversion2 0063       __size_of_Conversion3 0054             __size_of_setup 002E  
        interrupt_function 0004                  clear_ram0 0675                   _PIE1bits 008C  
__size_of_virtual_display1 0063  __size_of_virtual_display2 009F  __size_of_virtual_display3 004C  
__size_of_SPI_Maestro_Init 0085                   Lcd_Cmd@a 0075                   _PIR1bits 000C  
              __stringbase 0605           ??_Lcd_Write_Char 0073       __end_of_USART_config 0683  
                 _Lcd_Init 0419                   _Lcd_Port 0689        __end_of_tmr0_config 064A  
 __end_of_Lcd_Write_String 05A0           __size_of_Lcd_Cmd 001A              ??_SPI_Recibir 0072  
         __size_of___awdiv 0069           __size_of___awmod 0059         __end_of__stringtab 0606  
__size_of_USART_lib_config 001E                   _dato_pot 0021                   __ptext10 00D9  
                 __ptext11 0178                   __ptext20 0656                   __ptext12 035D  
                 __ptext21 020C                   __ptext13 066B                   __ptext22 068F  
                 __ptext14 03C0                   __ptext23 0683                   __ptext15 0291  
                 __ptext24 0419                   __ptext16 0617                   __ptext25 05E2  
                 __ptext17 064A                   __ptext26 0689                   __ptext18 067D  
                 __ptext27 062D                   __ptext19 05C4         escribir_char@valor 0072  
             ??_osc_config 0072              __size_of_main 00BB                   _voltajey 002D  
                 _voltajez 0033        __end_of_SPI_Recibir 0693                 _INTCONbits 000B  
       __end_of_osc_config 066B                _tmr0_config 063D            _interrup_config 064A  
                 intlevel1 0000           _virtual_display1 035D           _virtual_display2 00D9  
         _virtual_display3 04C4           _SPI_Maestro_Init 020C                  stringcode 0600  
               _OSCCONbits 008F         Lcd_Set_Cursor@temp 0079  SPI_Maestro_Init@port_mode 0075  
    __size_of_USART_config 0006                   stringdir 0600                   stringtab 0600  
               _SSPCONbits 0014                 _SPI_Enviar 0683               _USART_config 067D  
