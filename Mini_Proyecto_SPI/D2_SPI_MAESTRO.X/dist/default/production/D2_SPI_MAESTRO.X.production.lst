

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Feb 18 22:55:45 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    41                           	dabs	1,0x7E,2
    42  0000                     
    43                           ; Version 2.20
    44                           ; Generated 12/02/2020 GMT
    45                           ; 
    46                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F887 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     	;# 
    78  0001                     	;# 
    79  0002                     	;# 
    80  0003                     	;# 
    81  0004                     	;# 
    82  0005                     	;# 
    83  0006                     	;# 
    84  0007                     	;# 
    85  0008                     	;# 
    86  0009                     	;# 
    87  000A                     	;# 
    88  000B                     	;# 
    89  000C                     	;# 
    90  000D                     	;# 
    91  000E                     	;# 
    92  000E                     	;# 
    93  000F                     	;# 
    94  0010                     	;# 
    95  0011                     	;# 
    96  0012                     	;# 
    97  0013                     	;# 
    98  0014                     	;# 
    99  0015                     	;# 
   100  0015                     	;# 
   101  0016                     	;# 
   102  0017                     	;# 
   103  0018                     	;# 
   104  0019                     	;# 
   105  001A                     	;# 
   106  001B                     	;# 
   107  001B                     	;# 
   108  001C                     	;# 
   109  001D                     	;# 
   110  001E                     	;# 
   111  001F                     	;# 
   112  0081                     	;# 
   113  0085                     	;# 
   114  0086                     	;# 
   115  0087                     	;# 
   116  0088                     	;# 
   117  0089                     	;# 
   118  008C                     	;# 
   119  008D                     	;# 
   120  008E                     	;# 
   121  008F                     	;# 
   122  0090                     	;# 
   123  0091                     	;# 
   124  0092                     	;# 
   125  0093                     	;# 
   126  0093                     	;# 
   127  0093                     	;# 
   128  0094                     	;# 
   129  0095                     	;# 
   130  0096                     	;# 
   131  0097                     	;# 
   132  0098                     	;# 
   133  0099                     	;# 
   134  009A                     	;# 
   135  009B                     	;# 
   136  009C                     	;# 
   137  009D                     	;# 
   138  009E                     	;# 
   139  009F                     	;# 
   140  0105                     	;# 
   141  0107                     	;# 
   142  0108                     	;# 
   143  0109                     	;# 
   144  010C                     	;# 
   145  010C                     	;# 
   146  010D                     	;# 
   147  010E                     	;# 
   148  010F                     	;# 
   149  0185                     	;# 
   150  0187                     	;# 
   151  0188                     	;# 
   152  0189                     	;# 
   153  018C                     	;# 
   154  018D                     	;# 
   155  0000                     	;# 
   156  0001                     	;# 
   157  0002                     	;# 
   158  0003                     	;# 
   159  0004                     	;# 
   160  0005                     	;# 
   161  0006                     	;# 
   162  0007                     	;# 
   163  0008                     	;# 
   164  0009                     	;# 
   165  000A                     	;# 
   166  000B                     	;# 
   167  000C                     	;# 
   168  000D                     	;# 
   169  000E                     	;# 
   170  000E                     	;# 
   171  000F                     	;# 
   172  0010                     	;# 
   173  0011                     	;# 
   174  0012                     	;# 
   175  0013                     	;# 
   176  0014                     	;# 
   177  0015                     	;# 
   178  0015                     	;# 
   179  0016                     	;# 
   180  0017                     	;# 
   181  0018                     	;# 
   182  0019                     	;# 
   183  001A                     	;# 
   184  001B                     	;# 
   185  001B                     	;# 
   186  001C                     	;# 
   187  001D                     	;# 
   188  001E                     	;# 
   189  001F                     	;# 
   190  0081                     	;# 
   191  0085                     	;# 
   192  0086                     	;# 
   193  0087                     	;# 
   194  0088                     	;# 
   195  0089                     	;# 
   196  008C                     	;# 
   197  008D                     	;# 
   198  008E                     	;# 
   199  008F                     	;# 
   200  0090                     	;# 
   201  0091                     	;# 
   202  0092                     	;# 
   203  0093                     	;# 
   204  0093                     	;# 
   205  0093                     	;# 
   206  0094                     	;# 
   207  0095                     	;# 
   208  0096                     	;# 
   209  0097                     	;# 
   210  0098                     	;# 
   211  0099                     	;# 
   212  009A                     	;# 
   213  009B                     	;# 
   214  009C                     	;# 
   215  009D                     	;# 
   216  009E                     	;# 
   217  009F                     	;# 
   218  0105                     	;# 
   219  0107                     	;# 
   220  0108                     	;# 
   221  0109                     	;# 
   222  010C                     	;# 
   223  010C                     	;# 
   224  010D                     	;# 
   225  010E                     	;# 
   226  010F                     	;# 
   227  0185                     	;# 
   228  0187                     	;# 
   229  0188                     	;# 
   230  0189                     	;# 
   231  018C                     	;# 
   232  018D                     	;# 
   233  0000                     	;# 
   234  0001                     	;# 
   235  0002                     	;# 
   236  0003                     	;# 
   237  0004                     	;# 
   238  0005                     	;# 
   239  0006                     	;# 
   240  0007                     	;# 
   241  0008                     	;# 
   242  0009                     	;# 
   243  000A                     	;# 
   244  000B                     	;# 
   245  000C                     	;# 
   246  000D                     	;# 
   247  000E                     	;# 
   248  000E                     	;# 
   249  000F                     	;# 
   250  0010                     	;# 
   251  0011                     	;# 
   252  0012                     	;# 
   253  0013                     	;# 
   254  0014                     	;# 
   255  0015                     	;# 
   256  0015                     	;# 
   257  0016                     	;# 
   258  0017                     	;# 
   259  0018                     	;# 
   260  0019                     	;# 
   261  001A                     	;# 
   262  001B                     	;# 
   263  001B                     	;# 
   264  001C                     	;# 
   265  001D                     	;# 
   266  001E                     	;# 
   267  001F                     	;# 
   268  0081                     	;# 
   269  0085                     	;# 
   270  0086                     	;# 
   271  0087                     	;# 
   272  0088                     	;# 
   273  0089                     	;# 
   274  008C                     	;# 
   275  008D                     	;# 
   276  008E                     	;# 
   277  008F                     	;# 
   278  0090                     	;# 
   279  0091                     	;# 
   280  0092                     	;# 
   281  0093                     	;# 
   282  0093                     	;# 
   283  0093                     	;# 
   284  0094                     	;# 
   285  0095                     	;# 
   286  0096                     	;# 
   287  0097                     	;# 
   288  0098                     	;# 
   289  0099                     	;# 
   290  009A                     	;# 
   291  009B                     	;# 
   292  009C                     	;# 
   293  009D                     	;# 
   294  009E                     	;# 
   295  009F                     	;# 
   296  0105                     	;# 
   297  0107                     	;# 
   298  0108                     	;# 
   299  0109                     	;# 
   300  010C                     	;# 
   301  010C                     	;# 
   302  010D                     	;# 
   303  010E                     	;# 
   304  010F                     	;# 
   305  0185                     	;# 
   306  0187                     	;# 
   307  0188                     	;# 
   308  0189                     	;# 
   309  018C                     	;# 
   310  018D                     	;# 
   311  0000                     	;# 
   312  0001                     	;# 
   313  0002                     	;# 
   314  0003                     	;# 
   315  0004                     	;# 
   316  0005                     	;# 
   317  0006                     	;# 
   318  0007                     	;# 
   319  0008                     	;# 
   320  0009                     	;# 
   321  000A                     	;# 
   322  000B                     	;# 
   323  000C                     	;# 
   324  000D                     	;# 
   325  000E                     	;# 
   326  000E                     	;# 
   327  000F                     	;# 
   328  0010                     	;# 
   329  0011                     	;# 
   330  0012                     	;# 
   331  0013                     	;# 
   332  0014                     	;# 
   333  0015                     	;# 
   334  0015                     	;# 
   335  0016                     	;# 
   336  0017                     	;# 
   337  0018                     	;# 
   338  0019                     	;# 
   339  001A                     	;# 
   340  001B                     	;# 
   341  001B                     	;# 
   342  001C                     	;# 
   343  001D                     	;# 
   344  001E                     	;# 
   345  001F                     	;# 
   346  0081                     	;# 
   347  0085                     	;# 
   348  0086                     	;# 
   349  0087                     	;# 
   350  0088                     	;# 
   351  0089                     	;# 
   352  008C                     	;# 
   353  008D                     	;# 
   354  008E                     	;# 
   355  008F                     	;# 
   356  0090                     	;# 
   357  0091                     	;# 
   358  0092                     	;# 
   359  0093                     	;# 
   360  0093                     	;# 
   361  0093                     	;# 
   362  0094                     	;# 
   363  0095                     	;# 
   364  0096                     	;# 
   365  0097                     	;# 
   366  0098                     	;# 
   367  0099                     	;# 
   368  009A                     	;# 
   369  009B                     	;# 
   370  009C                     	;# 
   371  009D                     	;# 
   372  009E                     	;# 
   373  009F                     	;# 
   374  0105                     	;# 
   375  0107                     	;# 
   376  0108                     	;# 
   377  0109                     	;# 
   378  010C                     	;# 
   379  010C                     	;# 
   380  010D                     	;# 
   381  010E                     	;# 
   382  010F                     	;# 
   383  0185                     	;# 
   384  0187                     	;# 
   385  0188                     	;# 
   386  0189                     	;# 
   387  018C                     	;# 
   388  018D                     	;# 
   389  0000                     	;# 
   390  0001                     	;# 
   391  0002                     	;# 
   392  0003                     	;# 
   393  0004                     	;# 
   394  0005                     	;# 
   395  0006                     	;# 
   396  0007                     	;# 
   397  0008                     	;# 
   398  0009                     	;# 
   399  000A                     	;# 
   400  000B                     	;# 
   401  000C                     	;# 
   402  000D                     	;# 
   403  000E                     	;# 
   404  000E                     	;# 
   405  000F                     	;# 
   406  0010                     	;# 
   407  0011                     	;# 
   408  0012                     	;# 
   409  0013                     	;# 
   410  0014                     	;# 
   411  0015                     	;# 
   412  0015                     	;# 
   413  0016                     	;# 
   414  0017                     	;# 
   415  0018                     	;# 
   416  0019                     	;# 
   417  001A                     	;# 
   418  001B                     	;# 
   419  001B                     	;# 
   420  001C                     	;# 
   421  001D                     	;# 
   422  001E                     	;# 
   423  001F                     	;# 
   424  0081                     	;# 
   425  0085                     	;# 
   426  0086                     	;# 
   427  0087                     	;# 
   428  0088                     	;# 
   429  0089                     	;# 
   430  008C                     	;# 
   431  008D                     	;# 
   432  008E                     	;# 
   433  008F                     	;# 
   434  0090                     	;# 
   435  0091                     	;# 
   436  0092                     	;# 
   437  0093                     	;# 
   438  0093                     	;# 
   439  0093                     	;# 
   440  0094                     	;# 
   441  0095                     	;# 
   442  0096                     	;# 
   443  0097                     	;# 
   444  0098                     	;# 
   445  0099                     	;# 
   446  009A                     	;# 
   447  009B                     	;# 
   448  009C                     	;# 
   449  009D                     	;# 
   450  009E                     	;# 
   451  009F                     	;# 
   452  0105                     	;# 
   453  0107                     	;# 
   454  0108                     	;# 
   455  0109                     	;# 
   456  010C                     	;# 
   457  010C                     	;# 
   458  010D                     	;# 
   459  010E                     	;# 
   460  010F                     	;# 
   461  0185                     	;# 
   462  0187                     	;# 
   463  0188                     	;# 
   464  0189                     	;# 
   465  018C                     	;# 
   466  018D                     	;# 
   467  0013                     _SSPBUF	set	19
   468  0014                     _SSPCONbits	set	20
   469  0009                     _PORTEbits	set	9
   470  0018                     _RCSTAbits	set	24
   471  000C                     _PIR1bits	set	12
   472  0019                     _TXREG	set	25
   473  0009                     _PORTE	set	9
   474  0008                     _PORTD	set	8
   475  0007                     _PORTC	set	7
   476  0006                     _PORTB	set	6
   477  0005                     _PORTA	set	5
   478  0007                     _PORTCbits	set	7
   479  0001                     _TMR0	set	1
   480  000B                     _INTCONbits	set	11
   481  0085                     _TRISAbits	set	133
   482  0094                     _SSPSTATbits	set	148
   483  008C                     _PIE1bits	set	140
   484  0098                     _TXSTAbits	set	152
   485  0099                     _SPBRG	set	153
   486  0081                     _OPTION_REGbits	set	129
   487  008F                     _OSCCONbits	set	143
   488  0096                     _IOCB	set	150
   489  0089                     _TRISE	set	137
   490  0088                     _TRISD	set	136
   491  0087                     _TRISCbits	set	135
   492  0087                     _TRISC	set	135
   493  0086                     _TRISB	set	134
   494  0085                     _TRISA	set	133
   495  0189                     _ANSELH	set	393
   496  0188                     _ANSEL	set	392
   497                           
   498                           	psect	strings
   499  0600                     __pstrings:
   500  0600                     stringtab:
   501  0600                     __stringtab:
   502  0600                     stringcode:	
   503                           ;	String table - string pointers are 1 byte each
   504                           
   505  0600                     stringdir:
   506  0600  3006               	movlw	high stringdir
   507  0601  008A               	movwf	10
   508  0602  0804               	movf	4,w
   509  0603  0A84               	incf	4,f
   510  0604  0782               	addwf	2,f
   511  0605                     __stringbase:
   512  0605  3400               	retlw	0
   513  0606                     __end_of__stringtab:
   514  0606                     STR_1:
   515  0606  3441               	retlw	65	;'A'
   516  0607  3444               	retlw	68	;'D'
   517  0608  3443               	retlw	67	;'C'
   518  0609  343A               	retlw	58	;':'
   519  060A  3420               	retlw	32	;' '
   520  060B  3420               	retlw	32	;' '
   521  060C  3442               	retlw	66	;'B'
   522  060D  3454               	retlw	84	;'T'
   523  060E  344E               	retlw	78	;'N'
   524  060F  343A               	retlw	58	;':'
   525  0610  3420               	retlw	32	;' '
   526  0611  3454               	retlw	84	;'T'
   527  0612  3445               	retlw	69	;'E'
   528  0613  344D               	retlw	77	;'M'
   529  0614  3450               	retlw	80	;'P'
   530  0615  343A               	retlw	58	;':'
   531  0616  3400               	retlw	0
   532                           
   533                           	psect	cinit
   534  000F                     start_initialization:	
   535                           ; #config settings
   536                           
   537  000F                     __initialization:
   538                           
   539                           ; Clear objects allocated to COMMON
   540  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   541  0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   542                           
   543                           ; Clear objects allocated to BANK0
   544  0011  1383               	bcf	3,7	;select IRP bank0
   545  0012  3020               	movlw	low __pbssBANK0
   546  0013  0084               	movwf	4
   547  0014  303D               	movlw	low (__pbssBANK0+29)
   548  0015  120A  118A  2675  120A  118A  	fcall	clear_ram0
   549  001A                     end_of_initialization:	
   550                           ;End of C runtime variable initialization code
   551                           
   552  001A                     __end_of__initialization:
   553  001A  0183               	clrf	3
   554  001B  120A  118A  281E   	ljmp	_main	;jump to C main() function
   555                           
   556                           	psect	bssCOMMON
   557  007A                     __pbssCOMMON:
   558  007A                     _dato_push:
   559  007A                     	ds	1
   560  007B                     _decenay:
   561  007B                     	ds	1
   562                           
   563                           	psect	bssBANK0
   564  0020                     __pbssBANK0:
   565  0020                     _dato_semaforo:
   566  0020                     	ds	1
   567  0021                     _dato_push1:
   568  0021                     	ds	1
   569  0022                     _dato_pot:
   570  0022                     	ds	1
   571  0023                     _velocidad3:
   572  0023                     	ds	1
   573  0024                     _velocidad2:
   574  0024                     	ds	1
   575  0025                     _velocidad1:
   576  0025                     	ds	1
   577  0026                     _a:
   578  0026                     	ds	1
   579  0027                     _w2:
   580  0027                     	ds	1
   581  0028                     _w1:
   582  0028                     	ds	1
   583  0029                     _contador:
   584  0029                     	ds	1
   585  002A                     _leer:
   586  002A                     	ds	1
   587  002B                     _y2y:
   588  002B                     	ds	1
   589  002C                     _x2y:
   590  002C                     	ds	1
   591  002D                     _y1y:
   592  002D                     	ds	1
   593  002E                     _x1y:
   594  002E                     	ds	1
   595  002F                     _unidady:
   596  002F                     	ds	1
   597  0030                     _voltajey:
   598  0030                     	ds	1
   599  0031                     _y2z:
   600  0031                     	ds	1
   601  0032                     _x2z:
   602  0032                     	ds	1
   603  0033                     _y1z:
   604  0033                     	ds	1
   605  0034                     _x1z:
   606  0034                     	ds	1
   607  0035                     _unidadz:
   608  0035                     	ds	1
   609  0036                     _voltajez:
   610  0036                     	ds	1
   611  0037                     _y2:
   612  0037                     	ds	1
   613  0038                     _x2:
   614  0038                     	ds	1
   615  0039                     _y1:
   616  0039                     	ds	1
   617  003A                     _x1:
   618  003A                     	ds	1
   619  003B                     _unidad:
   620  003B                     	ds	1
   621  003C                     _voltaje:
   622  003C                     	ds	1
   623                           
   624                           	psect	clrtext
   625  0675                     clear_ram0:	
   626                           ;	Called with FSR containing the base address, and
   627                           ;	W with the last address+1
   628                           
   629  0675  0064               	clrwdt	;clear the watchdog before getting into this loop
   630  0676                     clrloop0:
   631  0676  0180               	clrf	0	;clear RAM location pointed to by FSR
   632  0677  0A84               	incf	4,f	;increment pointer
   633  0678  0604               	xorwf	4,w	;XOR with final address
   634  0679  1903               	btfsc	3,2	;have we reached the end yet?
   635  067A  3400               	retlw	0	;all done for this memory range, return
   636  067B  0604               	xorwf	4,w	;XOR again to restore value
   637  067C  2E76               	goto	clrloop0	;do the next byte
   638                           
   639                           	psect	cstackCOMMON
   640  0070                     __pcstackCOMMON:
   641  0070                     ?_setup:
   642  0070                     ?_osc_config:	
   643                           ; 1 bytes @ 0x0
   644                           
   645  0070                     ?_interrup_config:	
   646                           ; 1 bytes @ 0x0
   647                           
   648  0070                     ?_tmr0_config:	
   649                           ; 1 bytes @ 0x0
   650                           
   651  0070                     ?_Lcd_Init:	
   652                           ; 1 bytes @ 0x0
   653                           
   654  0070                     ?_USART_config:	
   655                           ; 1 bytes @ 0x0
   656                           
   657  0070                     ?_SPI_config:	
   658                           ; 1 bytes @ 0x0
   659                           
   660  0070                     ?_SPI_Enviar:	
   661                           ; 1 bytes @ 0x0
   662                           
   663  0070                     ?_SPI_Recibir:	
   664                           ; 1 bytes @ 0x0
   665                           
   666  0070                     ?_lcd:	
   667                           ; 1 bytes @ 0x0
   668                           
   669  0070                     ?_USART_lib_config:	
   670                           ; 1 bytes @ 0x0
   671                           
   672  0070                     ?_Lcd_Write_String:	
   673                           ; 1 bytes @ 0x0
   674                           
   675  0070                     ?_Conversion1:	
   676                           ; 1 bytes @ 0x0
   677                           
   678  0070                     ?_Conversion2:	
   679                           ; 1 bytes @ 0x0
   680                           
   681  0070                     ?_Conversion3:	
   682                           ; 1 bytes @ 0x0
   683                           
   684  0070                     ?_Lcd_Write_Char:	
   685                           ; 1 bytes @ 0x0
   686                           
   687  0070                     ?_virtual_display1:	
   688                           ; 1 bytes @ 0x0
   689                           
   690  0070                     ?_virtual_display2:	
   691                           ; 1 bytes @ 0x0
   692                           
   693  0070                     ?_virtual_display3:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0070                     ?_escribir_char:	
   697                           ; 1 bytes @ 0x0
   698                           
   699  0070                     ?_ISR:	
   700                           ; 1 bytes @ 0x0
   701                           
   702  0070                     ??_ISR:	
   703                           ; 1 bytes @ 0x0
   704                           
   705  0070                     ?_main:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  0070                     ?_Lcd_Port:	
   709                           ; 1 bytes @ 0x0
   710                           
   711  0070                     ?_Lcd_Cmd:	
   712                           ; 1 bytes @ 0x0
   713                           
   714                           
   715                           ; 1 bytes @ 0x0
   716  0070                     	ds	2
   717  0072                     ??_setup:
   718  0072                     ??_osc_config:	
   719                           ; 1 bytes @ 0x2
   720                           
   721  0072                     ??_interrup_config:	
   722                           ; 1 bytes @ 0x2
   723                           
   724  0072                     ??_tmr0_config:	
   725                           ; 1 bytes @ 0x2
   726                           
   727  0072                     ??_USART_config:	
   728                           ; 1 bytes @ 0x2
   729                           
   730  0072                     ??_SPI_Enviar:	
   731                           ; 1 bytes @ 0x2
   732                           
   733  0072                     ??_SPI_Recibir:	
   734                           ; 1 bytes @ 0x2
   735                           
   736  0072                     ??_USART_lib_config:	
   737                           ; 1 bytes @ 0x2
   738                           
   739  0072                     ?_SPI_Maestro_Init:	
   740                           ; 1 bytes @ 0x2
   741                           
   742  0072                     ??_escribir_char:	
   743                           ; 1 bytes @ 0x2
   744                           
   745  0072                     ??_Lcd_Port:	
   746                           ; 1 bytes @ 0x2
   747                           
   748  0072                     ?___awdiv:	
   749                           ; 1 bytes @ 0x2
   750                           
   751  0072                     ?___awmod:	
   752                           ; 2 bytes @ 0x2
   753                           
   754  0072                     escribir_char@valor:	
   755                           ; 2 bytes @ 0x2
   756                           
   757  0072                     Lcd_Port@a:	
   758                           ; 1 bytes @ 0x2
   759                           
   760  0072                     SPI_Maestro_Init@SCK:	
   761                           ; 1 bytes @ 0x2
   762                           
   763  0072                     SPI_Enviar@valor:	
   764                           ; 1 bytes @ 0x2
   765                           
   766  0072                     ___awdiv@divisor:	
   767                           ; 1 bytes @ 0x2
   768                           
   769  0072                     ___awmod@divisor:	
   770                           ; 2 bytes @ 0x2
   771                           
   772                           
   773                           ; 2 bytes @ 0x2
   774  0072                     	ds	1
   775  0073                     ??_SPI_Maestro_Init:
   776  0073                     ??_Lcd_Write_Char:	
   777                           ; 1 bytes @ 0x3
   778                           
   779  0073                     ??_virtual_display1:	
   780                           ; 1 bytes @ 0x3
   781                           
   782  0073                     ??_virtual_display2:	
   783                           ; 1 bytes @ 0x3
   784                           
   785  0073                     ??_virtual_display3:	
   786                           ; 1 bytes @ 0x3
   787                           
   788  0073                     ??_Lcd_Cmd:	
   789                           ; 1 bytes @ 0x3
   790                           
   791                           
   792                           ; 1 bytes @ 0x3
   793  0073                     	ds	1
   794  0074                     Lcd_Write_Char@a:
   795  0074                     ___awdiv@dividend:	
   796                           ; 1 bytes @ 0x4
   797                           
   798  0074                     ___awmod@dividend:	
   799                           ; 2 bytes @ 0x4
   800                           
   801                           
   802                           ; 2 bytes @ 0x4
   803  0074                     	ds	1
   804  0075                     ??_Lcd_Write_String:
   805  0075                     Lcd_Cmd@a:	
   806                           ; 1 bytes @ 0x5
   807                           
   808  0075                     SPI_Maestro_Init@port_mode:	
   809                           ; 1 bytes @ 0x5
   810                           
   811  0075                     Lcd_Write_String@i:	
   812                           ; 1 bytes @ 0x5
   813                           
   814                           
   815                           ; 2 bytes @ 0x5
   816  0075                     	ds	1
   817  0076                     ??_Lcd_Init:
   818  0076                     ??_SPI_config:	
   819                           ; 1 bytes @ 0x6
   820                           
   821  0076                     ?_Lcd_Set_Cursor:	
   822                           ; 1 bytes @ 0x6
   823                           
   824  0076                     ??___awdiv:	
   825                           ; 1 bytes @ 0x6
   826                           
   827  0076                     ??___awmod:	
   828                           ; 1 bytes @ 0x6
   829                           
   830  0076                     Lcd_Set_Cursor@b:	
   831                           ; 1 bytes @ 0x6
   832                           
   833                           
   834                           ; 1 bytes @ 0x6
   835  0076                     	ds	1
   836  0077                     ??_Lcd_Set_Cursor:
   837  0077                     Lcd_Write_String@a:	
   838                           ; 1 bytes @ 0x7
   839                           
   840  0077                     ___awmod@counter:	
   841                           ; 1 bytes @ 0x7
   842                           
   843                           
   844                           ; 1 bytes @ 0x7
   845  0077                     	ds	1
   846  0078                     Lcd_Set_Cursor@a:
   847  0078                     ___awmod@sign:	
   848                           ; 1 bytes @ 0x8
   849                           
   850                           
   851                           ; 1 bytes @ 0x8
   852  0078                     	ds	1
   853  0079                     Lcd_Set_Cursor@temp:
   854                           
   855                           ; 1 bytes @ 0x9
   856  0079                     	ds	1
   857                           
   858                           	psect	cstackBANK0
   859  003D                     __pcstackBANK0:
   860  003D                     ___awdiv@counter:
   861                           
   862                           ; 1 bytes @ 0x0
   863  003D                     	ds	1
   864  003E                     ___awdiv@sign:
   865                           
   866                           ; 1 bytes @ 0x1
   867  003E                     	ds	1
   868  003F                     ___awdiv@quotient:
   869                           
   870                           ; 2 bytes @ 0x2
   871  003F                     	ds	2
   872  0041                     ??_Conversion1:
   873  0041                     ??_Conversion2:	
   874                           ; 1 bytes @ 0x4
   875                           
   876  0041                     ??_Conversion3:	
   877                           ; 1 bytes @ 0x4
   878                           
   879                           
   880                           ; 1 bytes @ 0x4
   881  0041                     	ds	3
   882  0044                     Conversion1@pot:
   883                           
   884                           ; 2 bytes @ 0x7
   885  0044                     	ds	2
   886  0046                     ??_lcd:
   887                           
   888                           ; 1 bytes @ 0x9
   889  0046                     	ds	1
   890  0047                     ??_main:
   891                           
   892                           ; 1 bytes @ 0xA
   893  0047                     	ds	2
   894                           
   895                           	psect	maintext
   896  001E                     __pmaintext:	
   897 ;;
   898 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   899 ;;
   900 ;; *************** function _main *****************
   901 ;; Defined at:
   902 ;;		line 125 in file "MAESTRO_SPI.c"
   903 ;; Parameters:    Size  Location     Type
   904 ;;		None
   905 ;; Auto vars:     Size  Location     Type
   906 ;;		None
   907 ;; Return value:  Size  Location     Type
   908 ;;                  1    wreg      void 
   909 ;; Registers used:
   910 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   911 ;; Tracked objects:
   912 ;;		On entry : B00/0
   913 ;;		On exit  : 0/0
   914 ;;		Unchanged: 0/0
   915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   916 ;;      Params:         0       0       0       0       0
   917 ;;      Locals:         0       0       0       0       0
   918 ;;      Temps:          0       2       0       0       0
   919 ;;      Totals:         0       2       0       0       0
   920 ;;Total ram usage:        2 bytes
   921 ;; Hardware stack levels required when called:    5
   922 ;; This function calls:
   923 ;;		_Lcd_Init
   924 ;;		_SPI_Enviar
   925 ;;		_SPI_Recibir
   926 ;;		_SPI_config
   927 ;;		_USART_config
   928 ;;		_interrup_config
   929 ;;		_lcd
   930 ;;		_osc_config
   931 ;;		_setup
   932 ;;		_tmr0_config
   933 ;; This function is called by:
   934 ;;		Startup code after reset
   935 ;; This function uses a non-reentrant model
   936 ;;
   937                           
   938                           
   939                           ;psect for function _main
   940  001E                     _main:
   941  001E                     l1891:	
   942                           ;incstack = 0
   943                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   944                           
   945                           
   946                           ;MAESTRO_SPI.c: 127:     setup();
   947  001E  120A  118A  254D  120A  118A  	fcall	_setup
   948                           
   949                           ;MAESTRO_SPI.c: 128:     osc_config();
   950  0023  120A  118A  2661  120A  118A  	fcall	_osc_config
   951                           
   952                           ;MAESTRO_SPI.c: 129:     interrup_config();
   953  0028  120A  118A  264A  120A  118A  	fcall	_interrup_config
   954  002D                     l1893:
   955                           
   956                           ;MAESTRO_SPI.c: 130:     tmr0_config ();
   957  002D  120A  118A  263D  120A  118A  	fcall	_tmr0_config
   958  0032                     l1895:
   959                           
   960                           ;MAESTRO_SPI.c: 131:     Lcd_Init();
   961  0032  120A  118A  2419  120A  118A  	fcall	_Lcd_Init
   962  0037                     l1897:
   963                           
   964                           ;MAESTRO_SPI.c: 132:     USART_config();
   965  0037  120A  118A  267D  120A  118A  	fcall	_USART_config
   966  003C                     l1899:
   967                           
   968                           ;MAESTRO_SPI.c: 133:     SPI_config ();
   969  003C  120A  118A  2656  120A  118A  	fcall	_SPI_config
   970  0041                     l1901:
   971                           
   972                           ;MAESTRO_SPI.c: 135:     {;MAESTRO_SPI.c: 137:         PORTCbits.RC0 = 0;
   973  0041  1283               	bcf	3,5	;RP0=0, select bank0
   974  0042  1303               	bcf	3,6	;RP1=0, select bank0
   975  0043  1007               	bcf	7,0	;volatile
   976  0044                     l1903:
   977                           
   978                           ;MAESTRO_SPI.c: 138:         _delay((unsigned long)((1)*(8000000/4000.0)));
   979  0044  3003               	movlw	3
   980  0045  1283               	bcf	3,5	;RP0=0, select bank0
   981  0046  1303               	bcf	3,6	;RP1=0, select bank0
   982  0047  00C8               	movwf	??_main+1
   983  0048  3097               	movlw	151
   984  0049  00C7               	movwf	??_main
   985  004A                     u727:
   986  004A  0BC7               	decfsz	??_main,f
   987  004B  284A               	goto	u727
   988  004C  0BC8               	decfsz	??_main+1,f
   989  004D  284A               	goto	u727
   990  004E                     l1905:
   991                           
   992                           ;MAESTRO_SPI.c: 140:         SPI_Enviar (dato_pot);
   993  004E  1283               	bcf	3,5	;RP0=0, select bank0
   994  004F  1303               	bcf	3,6	;RP1=0, select bank0
   995  0050  0822               	movf	_dato_pot,w
   996  0051  120A  118A  2683  120A  118A  	fcall	_SPI_Enviar
   997  0056                     l1907:
   998                           
   999                           ;MAESTRO_SPI.c: 141:         dato_pot = SPI_Recibir();
  1000  0056  120A  118A  268F  120A  118A  	fcall	_SPI_Recibir
  1001  005B  1283               	bcf	3,5	;RP0=0, select bank0
  1002  005C  1303               	bcf	3,6	;RP1=0, select bank0
  1003  005D  00C7               	movwf	??_main
  1004  005E  0847               	movf	??_main,w
  1005  005F  00A2               	movwf	_dato_pot
  1006  0060                     l1909:
  1007                           
  1008                           ;MAESTRO_SPI.c: 143:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1009  0060  3003               	movlw	3
  1010  0061  1283               	bcf	3,5	;RP0=0, select bank0
  1011  0062  1303               	bcf	3,6	;RP1=0, select bank0
  1012  0063  00C8               	movwf	??_main+1
  1013  0064  3097               	movlw	151
  1014  0065  00C7               	movwf	??_main
  1015  0066                     u737:
  1016  0066  0BC7               	decfsz	??_main,f
  1017  0067  2866               	goto	u737
  1018  0068  0BC8               	decfsz	??_main+1,f
  1019  0069  2866               	goto	u737
  1020  006A                     l1911:
  1021                           
  1022                           ;MAESTRO_SPI.c: 144:         PORTCbits.RC0 = 1;
  1023  006A  1283               	bcf	3,5	;RP0=0, select bank0
  1024  006B  1303               	bcf	3,6	;RP1=0, select bank0
  1025  006C  1407               	bsf	7,0	;volatile
  1026  006D                     l1913:
  1027                           
  1028                           ;MAESTRO_SPI.c: 148:         PORTCbits.RC1 = 0;
  1029  006D  1087               	bcf	7,1	;volatile
  1030  006E                     l1915:
  1031                           
  1032                           ;MAESTRO_SPI.c: 149:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1033  006E  3003               	movlw	3
  1034  006F  1283               	bcf	3,5	;RP0=0, select bank0
  1035  0070  1303               	bcf	3,6	;RP1=0, select bank0
  1036  0071  00C8               	movwf	??_main+1
  1037  0072  3097               	movlw	151
  1038  0073  00C7               	movwf	??_main
  1039  0074                     u747:
  1040  0074  0BC7               	decfsz	??_main,f
  1041  0075  2874               	goto	u747
  1042  0076  0BC8               	decfsz	??_main+1,f
  1043  0077  2874               	goto	u747
  1044  0078                     l1917:
  1045                           
  1046                           ;MAESTRO_SPI.c: 151:         SPI_Enviar (dato_push);
  1047  0078  087A               	movf	_dato_push,w
  1048  0079  120A  118A  2683  120A  118A  	fcall	_SPI_Enviar
  1049  007E                     l1919:
  1050                           
  1051                           ;MAESTRO_SPI.c: 152:         dato_push = SPI_Recibir();
  1052  007E  120A  118A  268F  120A  118A  	fcall	_SPI_Recibir
  1053  0083  1283               	bcf	3,5	;RP0=0, select bank0
  1054  0084  1303               	bcf	3,6	;RP1=0, select bank0
  1055  0085  00C7               	movwf	??_main
  1056  0086  0847               	movf	??_main,w
  1057  0087  00FA               	movwf	_dato_push
  1058  0088                     l1921:
  1059                           
  1060                           ;MAESTRO_SPI.c: 154:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1061  0088  3003               	movlw	3
  1062  0089  1283               	bcf	3,5	;RP0=0, select bank0
  1063  008A  1303               	bcf	3,6	;RP1=0, select bank0
  1064  008B  00C8               	movwf	??_main+1
  1065  008C  3097               	movlw	151
  1066  008D  00C7               	movwf	??_main
  1067  008E                     u757:
  1068  008E  0BC7               	decfsz	??_main,f
  1069  008F  288E               	goto	u757
  1070  0090  0BC8               	decfsz	??_main+1,f
  1071  0091  288E               	goto	u757
  1072  0092                     l1923:
  1073                           
  1074                           ;MAESTRO_SPI.c: 155:         PORTCbits.RC1 = 1;
  1075  0092  1283               	bcf	3,5	;RP0=0, select bank0
  1076  0093  1303               	bcf	3,6	;RP1=0, select bank0
  1077  0094  1487               	bsf	7,1	;volatile
  1078  0095                     l1925:
  1079                           
  1080                           ;MAESTRO_SPI.c: 159:         PORTCbits.RC2 = 0;
  1081  0095  1107               	bcf	7,2	;volatile
  1082  0096                     l1927:
  1083                           
  1084                           ;MAESTRO_SPI.c: 160:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1085  0096  3003               	movlw	3
  1086  0097  1283               	bcf	3,5	;RP0=0, select bank0
  1087  0098  1303               	bcf	3,6	;RP1=0, select bank0
  1088  0099  00C8               	movwf	??_main+1
  1089  009A  3097               	movlw	151
  1090  009B  00C7               	movwf	??_main
  1091  009C                     u767:
  1092  009C  0BC7               	decfsz	??_main,f
  1093  009D  289C               	goto	u767
  1094  009E  0BC8               	decfsz	??_main+1,f
  1095  009F  289C               	goto	u767
  1096  00A0                     l1929:
  1097                           
  1098                           ;MAESTRO_SPI.c: 163:         SPI_Enviar (dato_semaforo);
  1099  00A0  1283               	bcf	3,5	;RP0=0, select bank0
  1100  00A1  1303               	bcf	3,6	;RP1=0, select bank0
  1101  00A2  0820               	movf	_dato_semaforo,w
  1102  00A3  120A  118A  2683  120A  118A  	fcall	_SPI_Enviar
  1103  00A8                     l1931:
  1104                           
  1105                           ;MAESTRO_SPI.c: 164:         dato_semaforo = SPI_Recibir();
  1106  00A8  120A  118A  268F  120A  118A  	fcall	_SPI_Recibir
  1107  00AD  1283               	bcf	3,5	;RP0=0, select bank0
  1108  00AE  1303               	bcf	3,6	;RP1=0, select bank0
  1109  00AF  00C7               	movwf	??_main
  1110  00B0  0847               	movf	??_main,w
  1111  00B1  00A0               	movwf	_dato_semaforo
  1112  00B2                     l1933:
  1113                           
  1114                           ;MAESTRO_SPI.c: 166:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1115  00B2  3003               	movlw	3
  1116  00B3  1283               	bcf	3,5	;RP0=0, select bank0
  1117  00B4  1303               	bcf	3,6	;RP1=0, select bank0
  1118  00B5  00C8               	movwf	??_main+1
  1119  00B6  3097               	movlw	151
  1120  00B7  00C7               	movwf	??_main
  1121  00B8                     u777:
  1122  00B8  0BC7               	decfsz	??_main,f
  1123  00B9  28B8               	goto	u777
  1124  00BA  0BC8               	decfsz	??_main+1,f
  1125  00BB  28B8               	goto	u777
  1126  00BC                     l1935:
  1127                           
  1128                           ;MAESTRO_SPI.c: 167:         PORTCbits.RC2 = 1;
  1129  00BC  1283               	bcf	3,5	;RP0=0, select bank0
  1130  00BD  1303               	bcf	3,6	;RP1=0, select bank0
  1131  00BE  1507               	bsf	7,2	;volatile
  1132  00BF                     l1937:
  1133                           
  1134                           ;MAESTRO_SPI.c: 173:         lcd ();
  1135  00BF  120A  118A  2510  120A  118A  	fcall	_lcd
  1136                           
  1137                           ;MAESTRO_SPI.c: 174:         velocidad1 = velocidad1 + 1;
  1138  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  1139  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  1140  00C6  0825               	movf	_velocidad1,w
  1141  00C7  3E01               	addlw	1
  1142  00C8  00C7               	movwf	??_main
  1143  00C9  0847               	movf	??_main,w
  1144  00CA  00A5               	movwf	_velocidad1
  1145                           
  1146                           ;MAESTRO_SPI.c: 175:         velocidad2 = velocidad2 + 1;
  1147  00CB  0824               	movf	_velocidad2,w
  1148  00CC  3E01               	addlw	1
  1149  00CD  00C7               	movwf	??_main
  1150  00CE  0847               	movf	??_main,w
  1151  00CF  00A4               	movwf	_velocidad2
  1152                           
  1153                           ;MAESTRO_SPI.c: 176:         velocidad3 = velocidad3 + 1;
  1154  00D0  0823               	movf	_velocidad3,w
  1155  00D1  3E01               	addlw	1
  1156  00D2  00C7               	movwf	??_main
  1157  00D3  0847               	movf	??_main,w
  1158  00D4  00A3               	movwf	_velocidad3
  1159  00D5  2841               	goto	l1901
  1160  00D6  120A  118A  280C   	ljmp	start
  1161  00D9                     __end_of_main:
  1162                           
  1163                           	psect	text1
  1164  063D                     __ptext1:	
  1165 ;; *************** function _tmr0_config *****************
  1166 ;; Defined at:
  1167 ;;		line 231 in file "MAESTRO_SPI.c"
  1168 ;; Parameters:    Size  Location     Type
  1169 ;;		None
  1170 ;; Auto vars:     Size  Location     Type
  1171 ;;		None
  1172 ;; Return value:  Size  Location     Type
  1173 ;;                  1    wreg      void 
  1174 ;; Registers used:
  1175 ;;		wreg
  1176 ;; Tracked objects:
  1177 ;;		On entry : 0/0
  1178 ;;		On exit  : 0/0
  1179 ;;		Unchanged: 0/0
  1180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1181 ;;      Params:         0       0       0       0       0
  1182 ;;      Locals:         0       0       0       0       0
  1183 ;;      Temps:          0       0       0       0       0
  1184 ;;      Totals:         0       0       0       0       0
  1185 ;;Total ram usage:        0 bytes
  1186 ;; Hardware stack levels used:    1
  1187 ;; Hardware stack levels required when called:    1
  1188 ;; This function calls:
  1189 ;;		Nothing
  1190 ;; This function is called by:
  1191 ;;		_main
  1192 ;; This function uses a non-reentrant model
  1193 ;;
  1194                           
  1195                           
  1196                           ;psect for function _tmr0_config
  1197  063D                     _tmr0_config:
  1198  063D                     l1635:	
  1199                           ;incstack = 0
  1200                           ; Regs used in _tmr0_config: [wreg]
  1201                           
  1202                           
  1203                           ;MAESTRO_SPI.c: 233:     OPTION_REGbits.nRBPU = 0;
  1204  063D  1683               	bsf	3,5	;RP0=1, select bank1
  1205  063E  1303               	bcf	3,6	;RP1=0, select bank1
  1206  063F  1381               	bcf	1,7	;volatile
  1207                           
  1208                           ;MAESTRO_SPI.c: 234:     OPTION_REGbits.T0CS = 0;
  1209  0640  1281               	bcf	1,5	;volatile
  1210                           
  1211                           ;MAESTRO_SPI.c: 235:     OPTION_REGbits.PSA = 0;
  1212  0641  1181               	bcf	1,3	;volatile
  1213                           
  1214                           ;MAESTRO_SPI.c: 236:     OPTION_REGbits.PS2 = 0;
  1215  0642  1101               	bcf	1,2	;volatile
  1216                           
  1217                           ;MAESTRO_SPI.c: 237:     OPTION_REGbits.PS1 = 1;
  1218  0643  1481               	bsf	1,1	;volatile
  1219                           
  1220                           ;MAESTRO_SPI.c: 238:     OPTION_REGbits.PS0 = 0;
  1221  0644  1001               	bcf	1,0	;volatile
  1222  0645                     l1637:
  1223                           
  1224                           ;MAESTRO_SPI.c: 239:     TMR0 = 100;
  1225  0645  3064               	movlw	100
  1226  0646  1283               	bcf	3,5	;RP0=0, select bank0
  1227  0647  1303               	bcf	3,6	;RP1=0, select bank0
  1228  0648  0081               	movwf	1	;volatile
  1229  0649                     l176:
  1230  0649  0008               	return
  1231  064A                     __end_of_tmr0_config:
  1232                           
  1233                           	psect	text2
  1234  054D                     __ptext2:	
  1235 ;; *************** function _setup *****************
  1236 ;; Defined at:
  1237 ;;		line 186 in file "MAESTRO_SPI.c"
  1238 ;; Parameters:    Size  Location     Type
  1239 ;;		None
  1240 ;; Auto vars:     Size  Location     Type
  1241 ;;		None
  1242 ;; Return value:  Size  Location     Type
  1243 ;;                  1    wreg      void 
  1244 ;; Registers used:
  1245 ;;		status,2
  1246 ;; Tracked objects:
  1247 ;;		On entry : 0/0
  1248 ;;		On exit  : 0/0
  1249 ;;		Unchanged: 0/0
  1250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1251 ;;      Params:         0       0       0       0       0
  1252 ;;      Locals:         0       0       0       0       0
  1253 ;;      Temps:          0       0       0       0       0
  1254 ;;      Totals:         0       0       0       0       0
  1255 ;;Total ram usage:        0 bytes
  1256 ;; Hardware stack levels used:    1
  1257 ;; Hardware stack levels required when called:    1
  1258 ;; This function calls:
  1259 ;;		Nothing
  1260 ;; This function is called by:
  1261 ;;		_main
  1262 ;; This function uses a non-reentrant model
  1263 ;;
  1264                           
  1265                           
  1266                           ;psect for function _setup
  1267  054D                     _setup:
  1268  054D                     l1617:	
  1269                           ;incstack = 0
  1270                           ; Regs used in _setup: [status,2]
  1271                           
  1272                           
  1273                           ;MAESTRO_SPI.c: 188:     ANSEL = 0;
  1274  054D  1683               	bsf	3,5	;RP0=1, select bank3
  1275  054E  1703               	bsf	3,6	;RP1=1, select bank3
  1276  054F  0188               	clrf	8	;volatile
  1277                           
  1278                           ;MAESTRO_SPI.c: 189:     TRISA = 0;
  1279  0550  1683               	bsf	3,5	;RP0=1, select bank1
  1280  0551  1303               	bcf	3,6	;RP1=0, select bank1
  1281  0552  0185               	clrf	5	;volatile
  1282                           
  1283                           ;MAESTRO_SPI.c: 190:     PORTA = 0;
  1284  0553  1283               	bcf	3,5	;RP0=0, select bank0
  1285  0554  1303               	bcf	3,6	;RP1=0, select bank0
  1286  0555  0185               	clrf	5	;volatile
  1287                           
  1288                           ;MAESTRO_SPI.c: 191:     ANSELH = 0;
  1289  0556  1683               	bsf	3,5	;RP0=1, select bank3
  1290  0557  1703               	bsf	3,6	;RP1=1, select bank3
  1291  0558  0189               	clrf	9	;volatile
  1292                           
  1293                           ;MAESTRO_SPI.c: 192:     TRISB = 0;
  1294  0559  1683               	bsf	3,5	;RP0=1, select bank1
  1295  055A  1303               	bcf	3,6	;RP1=0, select bank1
  1296  055B  0186               	clrf	6	;volatile
  1297                           
  1298                           ;MAESTRO_SPI.c: 193:     PORTB = 0;
  1299  055C  1283               	bcf	3,5	;RP0=0, select bank0
  1300  055D  1303               	bcf	3,6	;RP1=0, select bank0
  1301  055E  0186               	clrf	6	;volatile
  1302                           
  1303                           ;MAESTRO_SPI.c: 194:     TRISC = 0;
  1304  055F  1683               	bsf	3,5	;RP0=1, select bank1
  1305  0560  1303               	bcf	3,6	;RP1=0, select bank1
  1306  0561  0187               	clrf	7	;volatile
  1307                           
  1308                           ;MAESTRO_SPI.c: 195:     PORTC = 0;
  1309  0562  1283               	bcf	3,5	;RP0=0, select bank0
  1310  0563  1303               	bcf	3,6	;RP1=0, select bank0
  1311  0564  0187               	clrf	7	;volatile
  1312  0565                     l1619:
  1313                           
  1314                           ;MAESTRO_SPI.c: 196:     TRISCbits.TRISC6 = 0;
  1315  0565  1683               	bsf	3,5	;RP0=1, select bank1
  1316  0566  1303               	bcf	3,6	;RP1=0, select bank1
  1317  0567  1307               	bcf	7,6	;volatile
  1318  0568                     l1621:
  1319                           
  1320                           ;MAESTRO_SPI.c: 197:     TRISCbits.TRISC4 = 1;
  1321  0568  1607               	bsf	7,4	;volatile
  1322  0569                     l1623:
  1323                           
  1324                           ;MAESTRO_SPI.c: 198:     PORTCbits.RC0 = 1;
  1325  0569  1283               	bcf	3,5	;RP0=0, select bank0
  1326  056A  1303               	bcf	3,6	;RP1=0, select bank0
  1327  056B  1407               	bsf	7,0	;volatile
  1328  056C                     l1625:
  1329                           
  1330                           ;MAESTRO_SPI.c: 199:     PORTCbits.RC1 = 1;
  1331  056C  1487               	bsf	7,1	;volatile
  1332  056D                     l1627:
  1333                           
  1334                           ;MAESTRO_SPI.c: 200:     PORTCbits.RC2 = 1;
  1335  056D  1507               	bsf	7,2	;volatile
  1336                           
  1337                           ;MAESTRO_SPI.c: 201:     TRISD = 0;
  1338  056E  1683               	bsf	3,5	;RP0=1, select bank1
  1339  056F  1303               	bcf	3,6	;RP1=0, select bank1
  1340  0570  0188               	clrf	8	;volatile
  1341                           
  1342                           ;MAESTRO_SPI.c: 202:     PORTD = 0;
  1343  0571  1283               	bcf	3,5	;RP0=0, select bank0
  1344  0572  1303               	bcf	3,6	;RP1=0, select bank0
  1345  0573  0188               	clrf	8	;volatile
  1346                           
  1347                           ;MAESTRO_SPI.c: 203:     TRISE = 0;
  1348  0574  1683               	bsf	3,5	;RP0=1, select bank1
  1349  0575  1303               	bcf	3,6	;RP1=0, select bank1
  1350  0576  0189               	clrf	9	;volatile
  1351                           
  1352                           ;MAESTRO_SPI.c: 204:     PORTE = 0;
  1353  0577  1283               	bcf	3,5	;RP0=0, select bank0
  1354  0578  1303               	bcf	3,6	;RP1=0, select bank0
  1355  0579  0189               	clrf	9	;volatile
  1356  057A                     l167:
  1357  057A  0008               	return
  1358  057B                     __end_of_setup:
  1359                           
  1360                           	psect	text3
  1361  0661                     __ptext3:	
  1362 ;; *************** function _osc_config *****************
  1363 ;; Defined at:
  1364 ;;		line 220 in file "MAESTRO_SPI.c"
  1365 ;; Parameters:    Size  Location     Type
  1366 ;;		None
  1367 ;; Auto vars:     Size  Location     Type
  1368 ;;		None
  1369 ;; Return value:  Size  Location     Type
  1370 ;;                  1    wreg      void 
  1371 ;; Registers used:
  1372 ;;		None
  1373 ;; Tracked objects:
  1374 ;;		On entry : 0/0
  1375 ;;		On exit  : 0/0
  1376 ;;		Unchanged: 0/0
  1377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1378 ;;      Params:         0       0       0       0       0
  1379 ;;      Locals:         0       0       0       0       0
  1380 ;;      Temps:          0       0       0       0       0
  1381 ;;      Totals:         0       0       0       0       0
  1382 ;;Total ram usage:        0 bytes
  1383 ;; Hardware stack levels used:    1
  1384 ;; Hardware stack levels required when called:    1
  1385 ;; This function calls:
  1386 ;;		Nothing
  1387 ;; This function is called by:
  1388 ;;		_main
  1389 ;; This function uses a non-reentrant model
  1390 ;;
  1391                           
  1392                           
  1393                           ;psect for function _osc_config
  1394  0661                     _osc_config:
  1395  0661                     l1629:	
  1396                           ;incstack = 0
  1397                           ; Regs used in _osc_config: []
  1398                           
  1399                           
  1400                           ;MAESTRO_SPI.c: 222:     OSCCONbits.IRCF2 = 1;
  1401  0661  1683               	bsf	3,5	;RP0=1, select bank1
  1402  0662  1303               	bcf	3,6	;RP1=0, select bank1
  1403  0663  170F               	bsf	15,6	;volatile
  1404                           
  1405                           ;MAESTRO_SPI.c: 223:     OSCCONbits.IRCF1 = 1;
  1406  0664  168F               	bsf	15,5	;volatile
  1407                           
  1408                           ;MAESTRO_SPI.c: 224:     OSCCONbits.IRCF0 = 0;
  1409  0665  120F               	bcf	15,4	;volatile
  1410                           
  1411                           ;MAESTRO_SPI.c: 225:     OSCCONbits.OSTS = 0;
  1412  0666  118F               	bcf	15,3	;volatile
  1413                           
  1414                           ;MAESTRO_SPI.c: 226:     OSCCONbits.HTS = 0;
  1415  0667  110F               	bcf	15,2	;volatile
  1416                           
  1417                           ;MAESTRO_SPI.c: 227:     OSCCONbits.LTS = 1;
  1418  0668  148F               	bsf	15,1	;volatile
  1419                           
  1420                           ;MAESTRO_SPI.c: 228:     OSCCONbits.SCS = 0;
  1421  0669  100F               	bcf	15,0	;volatile
  1422  066A                     l173:
  1423  066A  0008               	return
  1424  066B                     __end_of_osc_config:
  1425                           
  1426                           	psect	text4
  1427  0510                     __ptext4:	
  1428 ;; *************** function _lcd *****************
  1429 ;; Defined at:
  1430 ;;		line 260 in file "MAESTRO_SPI.c"
  1431 ;; Parameters:    Size  Location     Type
  1432 ;;		None
  1433 ;; Auto vars:     Size  Location     Type
  1434 ;;		None
  1435 ;; Return value:  Size  Location     Type
  1436 ;;                  1    wreg      void 
  1437 ;; Registers used:
  1438 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1439 ;; Tracked objects:
  1440 ;;		On entry : 0/0
  1441 ;;		On exit  : 0/0
  1442 ;;		Unchanged: 0/0
  1443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1444 ;;      Params:         0       0       0       0       0
  1445 ;;      Locals:         0       0       0       0       0
  1446 ;;      Temps:          0       1       0       0       0
  1447 ;;      Totals:         0       1       0       0       0
  1448 ;;Total ram usage:        1 bytes
  1449 ;; Hardware stack levels used:    1
  1450 ;; Hardware stack levels required when called:    4
  1451 ;; This function calls:
  1452 ;;		_Conversion1
  1453 ;;		_Conversion2
  1454 ;;		_Conversion3
  1455 ;;		_Lcd_Set_Cursor
  1456 ;;		_Lcd_Write_String
  1457 ;; This function is called by:
  1458 ;;		_main
  1459 ;; This function uses a non-reentrant model
  1460 ;;
  1461                           
  1462                           
  1463                           ;psect for function _lcd
  1464  0510                     _lcd:
  1465  0510                     l1875:	
  1466                           ;incstack = 0
  1467                           ; Regs used in _lcd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1468                           
  1469                           
  1470                           ;MAESTRO_SPI.c: 262:     Lcd_Set_Cursor(0,1);
  1471  0510  01F6               	clrf	Lcd_Set_Cursor@b
  1472  0511  0AF6               	incf	Lcd_Set_Cursor@b,f
  1473  0512  3000               	movlw	0
  1474  0513  120A  118A  25A0  120A  118A  	fcall	_Lcd_Set_Cursor
  1475  0518                     l1877:
  1476                           
  1477                           ;MAESTRO_SPI.c: 263:     Lcd_Write_String("ADC:  BTN: TEMP:");
  1478  0518  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1479  0519  120A  118A  257B  120A  118A  	fcall	_Lcd_Write_String
  1480  051E                     l1879:
  1481                           
  1482                           ;MAESTRO_SPI.c: 264:     Lcd_Set_Cursor(2,0);
  1483  051E  01F6               	clrf	Lcd_Set_Cursor@b
  1484  051F  3002               	movlw	2
  1485  0520  120A  118A  25A0  120A  118A  	fcall	_Lcd_Set_Cursor
  1486  0525                     l1881:
  1487                           
  1488                           ;MAESTRO_SPI.c: 265:     Conversion1 ();
  1489  0525  120A  118A  2178  120A  118A  	fcall	_Conversion1
  1490  052A                     l1883:
  1491                           
  1492                           ;MAESTRO_SPI.c: 266:     Lcd_Set_Cursor(2,7);
  1493  052A  3007               	movlw	7
  1494  052B  1283               	bcf	3,5	;RP0=0, select bank0
  1495  052C  1303               	bcf	3,6	;RP1=0, select bank0
  1496  052D  00C6               	movwf	??_lcd
  1497  052E  0846               	movf	??_lcd,w
  1498  052F  00F6               	movwf	Lcd_Set_Cursor@b
  1499  0530  3002               	movlw	2
  1500  0531  120A  118A  25A0  120A  118A  	fcall	_Lcd_Set_Cursor
  1501  0536                     l1885:
  1502                           
  1503                           ;MAESTRO_SPI.c: 267:     Conversion2 ();
  1504  0536  120A  118A  22FA  120A  118A  	fcall	_Conversion2
  1505  053B                     l1887:
  1506                           
  1507                           ;MAESTRO_SPI.c: 268:     Lcd_Set_Cursor(2,12);
  1508  053B  300C               	movlw	12
  1509  053C  1283               	bcf	3,5	;RP0=0, select bank0
  1510  053D  1303               	bcf	3,6	;RP1=0, select bank0
  1511  053E  00C6               	movwf	??_lcd
  1512  053F  0846               	movf	??_lcd,w
  1513  0540  00F6               	movwf	Lcd_Set_Cursor@b
  1514  0541  3002               	movlw	2
  1515  0542  120A  118A  25A0  120A  118A  	fcall	_Lcd_Set_Cursor
  1516  0547                     l1889:
  1517                           
  1518                           ;MAESTRO_SPI.c: 269:     Conversion3 ();
  1519  0547  120A  118A  2470  120A  118A  	fcall	_Conversion3
  1520  054C                     l185:
  1521  054C  0008               	return
  1522  054D                     __end_of_lcd:
  1523                           
  1524                           	psect	text5
  1525  057B                     __ptext5:	
  1526 ;; *************** function _Lcd_Write_String *****************
  1527 ;; Defined at:
  1528 ;;		line 78 in file "LCD_SPI.c"
  1529 ;; Parameters:    Size  Location     Type
  1530 ;;  a               1    wreg     PTR unsigned char 
  1531 ;;		 -> STR_1(17), 
  1532 ;; Auto vars:     Size  Location     Type
  1533 ;;  a               1    7[COMMON] PTR unsigned char 
  1534 ;;		 -> STR_1(17), 
  1535 ;;  i               2    5[COMMON] int 
  1536 ;; Return value:  Size  Location     Type
  1537 ;;                  1    wreg      void 
  1538 ;; Registers used:
  1539 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1540 ;; Tracked objects:
  1541 ;;		On entry : 0/0
  1542 ;;		On exit  : 0/0
  1543 ;;		Unchanged: 0/0
  1544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1545 ;;      Params:         0       0       0       0       0
  1546 ;;      Locals:         3       0       0       0       0
  1547 ;;      Temps:          0       0       0       0       0
  1548 ;;      Totals:         3       0       0       0       0
  1549 ;;Total ram usage:        3 bytes
  1550 ;; Hardware stack levels used:    1
  1551 ;; Hardware stack levels required when called:    3
  1552 ;; This function calls:
  1553 ;;		_Lcd_Write_Char
  1554 ;; This function is called by:
  1555 ;;		_lcd
  1556 ;; This function uses a non-reentrant model
  1557 ;;
  1558                           
  1559                           
  1560                           ;psect for function _Lcd_Write_String
  1561  057B                     _Lcd_Write_String:
  1562                           
  1563                           ;incstack = 0
  1564                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1565                           ;Lcd_Write_String@a stored from wreg
  1566  057B  00F7               	movwf	Lcd_Write_String@a
  1567  057C                     l1559:
  1568                           
  1569                           ;LCD_SPI.c: 78: void Lcd_Write_String(char *a);LCD_SPI.c: 79: {;LCD_SPI.c: 80:     int i
      +                          ;;LCD_SPI.c: 81:     for (i = 0; a[i] != '\0'; i++)
  1570  057C  01F5               	clrf	Lcd_Write_String@i
  1571  057D  01F6               	clrf	Lcd_Write_String@i+1
  1572  057E  2D92               	goto	l1565
  1573  057F                     l1561:
  1574                           
  1575                           ;LCD_SPI.c: 82:         Lcd_Write_Char(a[i]);
  1576  057F  0875               	movf	Lcd_Write_String@i,w
  1577  0580  0777               	addwf	Lcd_Write_String@a,w
  1578  0581  0084               	movwf	4
  1579  0582  120A  118A  2600  120A  118A  	fcall	stringdir
  1580  0587  120A  118A  2617  120A  118A  	fcall	_Lcd_Write_Char
  1581  058C                     l1563:
  1582  058C  3001               	movlw	1
  1583  058D  07F5               	addwf	Lcd_Write_String@i,f
  1584  058E  1803               	skipnc
  1585  058F  0AF6               	incf	Lcd_Write_String@i+1,f
  1586  0590  3000               	movlw	0
  1587  0591  07F6               	addwf	Lcd_Write_String@i+1,f
  1588  0592                     l1565:
  1589  0592  0875               	movf	Lcd_Write_String@i,w
  1590  0593  0777               	addwf	Lcd_Write_String@a,w
  1591  0594  0084               	movwf	4
  1592  0595  120A  118A  2600  120A  118A  	fcall	stringdir
  1593  059A  3A00               	xorlw	0
  1594  059B  1D03               	skipz
  1595  059C  2D9E               	goto	u571
  1596  059D  2D9F               	goto	u570
  1597  059E                     u571:
  1598  059E  2D7F               	goto	l1561
  1599  059F                     u570:
  1600  059F                     l262:
  1601  059F  0008               	return
  1602  05A0                     __end_of_Lcd_Write_String:
  1603                           
  1604                           	psect	text6
  1605  05A0                     __ptext6:	
  1606 ;; *************** function _Lcd_Set_Cursor *****************
  1607 ;; Defined at:
  1608 ;;		line 63 in file "LCD_SPI.c"
  1609 ;; Parameters:    Size  Location     Type
  1610 ;;  a               1    wreg     unsigned char 
  1611 ;;  b               1    6[COMMON] unsigned char 
  1612 ;; Auto vars:     Size  Location     Type
  1613 ;;  a               1    8[COMMON] unsigned char 
  1614 ;;  temp            1    9[COMMON] unsigned char 
  1615 ;; Return value:  Size  Location     Type
  1616 ;;                  1    wreg      void 
  1617 ;; Registers used:
  1618 ;;		wreg, status,2, status,0, pclath, cstack
  1619 ;; Tracked objects:
  1620 ;;		On entry : 0/0
  1621 ;;		On exit  : 0/0
  1622 ;;		Unchanged: 0/0
  1623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1624 ;;      Params:         1       0       0       0       0
  1625 ;;      Locals:         2       0       0       0       0
  1626 ;;      Temps:          1       0       0       0       0
  1627 ;;      Totals:         4       0       0       0       0
  1628 ;;Total ram usage:        4 bytes
  1629 ;; Hardware stack levels used:    1
  1630 ;; Hardware stack levels required when called:    3
  1631 ;; This function calls:
  1632 ;;		_Lcd_Cmd
  1633 ;; This function is called by:
  1634 ;;		_lcd
  1635 ;; This function uses a non-reentrant model
  1636 ;;
  1637                           
  1638                           
  1639                           ;psect for function _Lcd_Set_Cursor
  1640  05A0                     _Lcd_Set_Cursor:
  1641                           
  1642                           ;incstack = 0
  1643                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1644                           ;Lcd_Set_Cursor@a stored from wreg
  1645  05A0  00F8               	movwf	Lcd_Set_Cursor@a
  1646  05A1                     l1547:
  1647                           
  1648                           ;LCD_SPI.c: 63: void Lcd_Set_Cursor(char a, char b);LCD_SPI.c: 64: {;LCD_SPI.c: 65:     
      +                          char temp;;LCD_SPI.c: 66:     if (a == 1)
  1649  05A1  0378               	decf	Lcd_Set_Cursor@a,w
  1650  05A2  1D03               	btfss	3,2
  1651  05A3  2DA5               	goto	u551
  1652  05A4  2DA6               	goto	u550
  1653  05A5                     u551:
  1654  05A5  2DB2               	goto	l1553
  1655  05A6                     u550:
  1656  05A6                     l1549:
  1657                           
  1658                           ;LCD_SPI.c: 67:     {;LCD_SPI.c: 68:         temp = 0x80 + b;
  1659  05A6  0876               	movf	Lcd_Set_Cursor@b,w
  1660  05A7  3E80               	addlw	128
  1661  05A8  00F7               	movwf	??_Lcd_Set_Cursor
  1662  05A9  0877               	movf	??_Lcd_Set_Cursor,w
  1663  05AA  00F9               	movwf	Lcd_Set_Cursor@temp
  1664  05AB                     l1551:
  1665                           
  1666                           ;LCD_SPI.c: 69:         Lcd_Cmd(temp);
  1667  05AB  0879               	movf	Lcd_Set_Cursor@temp,w
  1668  05AC  120A  118A  25E2  120A  118A  	fcall	_Lcd_Cmd
  1669                           
  1670                           ;LCD_SPI.c: 70:     }
  1671  05B1  2DC3               	goto	l256
  1672  05B2                     l1553:
  1673  05B2  3002               	movlw	2
  1674  05B3  0678               	xorwf	Lcd_Set_Cursor@a,w
  1675  05B4  1D03               	btfss	3,2
  1676  05B5  2DB7               	goto	u561
  1677  05B6  2DB8               	goto	u560
  1678  05B7                     u561:
  1679  05B7  2DC3               	goto	l256
  1680  05B8                     u560:
  1681  05B8                     l1555:
  1682                           
  1683                           ;LCD_SPI.c: 72:     {;LCD_SPI.c: 73:         temp = 0xC0 + b;
  1684  05B8  0876               	movf	Lcd_Set_Cursor@b,w
  1685  05B9  3EC0               	addlw	192
  1686  05BA  00F7               	movwf	??_Lcd_Set_Cursor
  1687  05BB  0877               	movf	??_Lcd_Set_Cursor,w
  1688  05BC  00F9               	movwf	Lcd_Set_Cursor@temp
  1689  05BD                     l1557:
  1690                           
  1691                           ;LCD_SPI.c: 74:         Lcd_Cmd(temp);
  1692  05BD  0879               	movf	Lcd_Set_Cursor@temp,w
  1693  05BE  120A  118A  25E2  120A  118A  	fcall	_Lcd_Cmd
  1694  05C3                     l256:
  1695  05C3  0008               	return
  1696  05C4                     __end_of_Lcd_Set_Cursor:
  1697                           
  1698                           	psect	text7
  1699  0470                     __ptext7:	
  1700 ;; *************** function _Conversion3 *****************
  1701 ;; Defined at:
  1702 ;;		line 309 in file "MAESTRO_SPI.c"
  1703 ;; Parameters:    Size  Location     Type
  1704 ;;		None
  1705 ;; Auto vars:     Size  Location     Type
  1706 ;;		None
  1707 ;; Return value:  Size  Location     Type
  1708 ;;                  1    wreg      void 
  1709 ;; Registers used:
  1710 ;;		wreg, status,2, status,0, pclath, cstack
  1711 ;; Tracked objects:
  1712 ;;		On entry : 0/0
  1713 ;;		On exit  : 0/0
  1714 ;;		Unchanged: 0/0
  1715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1716 ;;      Params:         0       0       0       0       0
  1717 ;;      Locals:         0       0       0       0       0
  1718 ;;      Temps:          0       3       0       0       0
  1719 ;;      Totals:         0       3       0       0       0
  1720 ;;Total ram usage:        3 bytes
  1721 ;; Hardware stack levels used:    1
  1722 ;; Hardware stack levels required when called:    3
  1723 ;; This function calls:
  1724 ;;		_Lcd_Write_Char
  1725 ;;		___awdiv
  1726 ;;		___awmod
  1727 ;;		_virtual_display3
  1728 ;; This function is called by:
  1729 ;;		_lcd
  1730 ;; This function uses a non-reentrant model
  1731 ;;
  1732                           
  1733                           
  1734                           ;psect for function _Conversion3
  1735  0470                     _Conversion3:
  1736  0470                     l1859:	
  1737                           ;incstack = 0
  1738                           ; Regs used in _Conversion3: [wreg+status,2+status,0+pclath+cstack]
  1739                           
  1740                           
  1741                           ;MAESTRO_SPI.c: 311:     voltajey = dato_semaforo;
  1742  0470  1283               	bcf	3,5	;RP0=0, select bank0
  1743  0471  1303               	bcf	3,6	;RP1=0, select bank0
  1744  0472  0820               	movf	_dato_semaforo,w
  1745  0473  00C1               	movwf	??_Conversion3
  1746  0474  0841               	movf	??_Conversion3,w
  1747  0475  00B0               	movwf	_voltajey
  1748  0476                     l1861:
  1749                           
  1750                           ;MAESTRO_SPI.c: 312:     decenay = voltajey / 10;
  1751  0476  300A               	movlw	10
  1752  0477  00F2               	movwf	___awdiv@divisor
  1753  0478  3000               	movlw	0
  1754  0479  00F3               	movwf	___awdiv@divisor+1
  1755  047A  0830               	movf	_voltajey,w
  1756  047B  00C1               	movwf	??_Conversion3
  1757  047C  01C2               	clrf	??_Conversion3+1
  1758  047D  0841               	movf	??_Conversion3,w
  1759  047E  00F4               	movwf	___awdiv@dividend
  1760  047F  0842               	movf	??_Conversion3+1,w
  1761  0480  00F5               	movwf	___awdiv@dividend+1
  1762  0481  120A  118A  2291  120A  118A  	fcall	___awdiv
  1763  0486  0872               	movf	?___awdiv,w
  1764  0487  1283               	bcf	3,5	;RP0=0, select bank0
  1765  0488  1303               	bcf	3,6	;RP1=0, select bank0
  1766  0489  00C3               	movwf	??_Conversion3+2
  1767  048A  0843               	movf	??_Conversion3+2,w
  1768  048B  00FB               	movwf	_decenay
  1769  048C                     l1863:
  1770                           
  1771                           ;MAESTRO_SPI.c: 313:     unidady = voltajey % 10;
  1772  048C  300A               	movlw	10
  1773  048D  00F2               	movwf	___awmod@divisor
  1774  048E  3000               	movlw	0
  1775  048F  00F3               	movwf	___awmod@divisor+1
  1776  0490  0830               	movf	_voltajey,w
  1777  0491  00C1               	movwf	??_Conversion3
  1778  0492  01C2               	clrf	??_Conversion3+1
  1779  0493  0841               	movf	??_Conversion3,w
  1780  0494  00F4               	movwf	___awmod@dividend
  1781  0495  0842               	movf	??_Conversion3+1,w
  1782  0496  00F5               	movwf	___awmod@dividend+1
  1783  0497  120A  118A  23C0  120A  118A  	fcall	___awmod
  1784  049C  0872               	movf	?___awmod,w
  1785  049D  1283               	bcf	3,5	;RP0=0, select bank0
  1786  049E  1303               	bcf	3,6	;RP1=0, select bank0
  1787  049F  00C3               	movwf	??_Conversion3+2
  1788  04A0  0843               	movf	??_Conversion3+2,w
  1789  04A1  00AF               	movwf	_unidady
  1790  04A2                     l1865:
  1791                           
  1792                           ;MAESTRO_SPI.c: 314:     Lcd_Write_Char(decenay+48);
  1793  04A2  087B               	movf	_decenay,w
  1794  04A3  3E30               	addlw	48
  1795  04A4  120A  118A  2617  120A  118A  	fcall	_Lcd_Write_Char
  1796  04A9                     l1867:
  1797                           
  1798                           ;MAESTRO_SPI.c: 315:     Lcd_Write_Char(unidady+48);
  1799  04A9  1283               	bcf	3,5	;RP0=0, select bank0
  1800  04AA  1303               	bcf	3,6	;RP1=0, select bank0
  1801  04AB  082F               	movf	_unidady,w
  1802  04AC  3E30               	addlw	48
  1803  04AD  120A  118A  2617  120A  118A  	fcall	_Lcd_Write_Char
  1804  04B2                     l1869:
  1805                           
  1806                           ;MAESTRO_SPI.c: 316:     Lcd_Write_Char(223);
  1807  04B2  30DF               	movlw	223
  1808  04B3  120A  118A  2617  120A  118A  	fcall	_Lcd_Write_Char
  1809  04B8                     l1871:
  1810                           
  1811                           ;MAESTRO_SPI.c: 317:     Lcd_Write_Char(67);
  1812  04B8  3043               	movlw	67
  1813  04B9  120A  118A  2617  120A  118A  	fcall	_Lcd_Write_Char
  1814  04BE                     l1873:
  1815                           
  1816                           ;MAESTRO_SPI.c: 318:     virtual_display3();
  1817  04BE  120A  118A  24C4  120A  118A  	fcall	_virtual_display3
  1818  04C3                     l197:
  1819  04C3  0008               	return
  1820  04C4                     __end_of_Conversion3:
  1821                           
  1822                           	psect	text8
  1823  04C4                     __ptext8:	
  1824 ;; *************** function _virtual_display3 *****************
  1825 ;; Defined at:
  1826 ;;		line 381 in file "MAESTRO_SPI.c"
  1827 ;; Parameters:    Size  Location     Type
  1828 ;;		None
  1829 ;; Auto vars:     Size  Location     Type
  1830 ;;		None
  1831 ;; Return value:  Size  Location     Type
  1832 ;;                  1    wreg      void 
  1833 ;; Registers used:
  1834 ;;		wreg, status,2, status,0, pclath, cstack
  1835 ;; Tracked objects:
  1836 ;;		On entry : 0/0
  1837 ;;		On exit  : 0/0
  1838 ;;		Unchanged: 0/0
  1839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1840 ;;      Params:         0       0       0       0       0
  1841 ;;      Locals:         0       0       0       0       0
  1842 ;;      Temps:          0       0       0       0       0
  1843 ;;      Totals:         0       0       0       0       0
  1844 ;;Total ram usage:        0 bytes
  1845 ;; Hardware stack levels used:    1
  1846 ;; Hardware stack levels required when called:    2
  1847 ;; This function calls:
  1848 ;;		_escribir_char
  1849 ;; This function is called by:
  1850 ;;		_Conversion3
  1851 ;; This function uses a non-reentrant model
  1852 ;;
  1853                           
  1854                           
  1855                           ;psect for function _virtual_display3
  1856  04C4                     _virtual_display3:
  1857  04C4                     l1391:	
  1858                           ;incstack = 0
  1859                           ; Regs used in _virtual_display3: [wreg+status,2+status,0+pclath+cstack]
  1860                           
  1861                           
  1862                           ;MAESTRO_SPI.c: 383:     if (velocidad3 > 15)
  1863  04C4  3010               	movlw	16
  1864  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  1865  04C6  1303               	bcf	3,6	;RP1=0, select bank0
  1866  04C7  0223               	subwf	_velocidad3,w
  1867  04C8  1C03               	skipc
  1868  04C9  2CCB               	goto	u351
  1869  04CA  2CCC               	goto	u350
  1870  04CB                     u351:
  1871  04CB  2D0F               	goto	l211
  1872  04CC                     u350:
  1873  04CC                     l1393:
  1874                           
  1875                           ;MAESTRO_SPI.c: 384:     {;MAESTRO_SPI.c: 385:         escribir_char (84);
  1876  04CC  3054               	movlw	84
  1877  04CD  120A  118A  266B  120A  118A  	fcall	_escribir_char
  1878                           
  1879                           ;MAESTRO_SPI.c: 386:         escribir_char (69);
  1880  04D2  3045               	movlw	69
  1881  04D3  120A  118A  266B  120A  118A  	fcall	_escribir_char
  1882                           
  1883                           ;MAESTRO_SPI.c: 387:         escribir_char (77);
  1884  04D8  304D               	movlw	77
  1885  04D9  120A  118A  266B  120A  118A  	fcall	_escribir_char
  1886                           
  1887                           ;MAESTRO_SPI.c: 388:         escribir_char (80);
  1888  04DE  3050               	movlw	80
  1889  04DF  120A  118A  266B  120A  118A  	fcall	_escribir_char
  1890                           
  1891                           ;MAESTRO_SPI.c: 389:         escribir_char (58);
  1892  04E4  303A               	movlw	58
  1893  04E5  120A  118A  266B  120A  118A  	fcall	_escribir_char
  1894                           
  1895                           ;MAESTRO_SPI.c: 390:         escribir_char (decenay+48);
  1896  04EA  087B               	movf	_decenay,w
  1897  04EB  3E30               	addlw	48
  1898  04EC  120A  118A  266B  120A  118A  	fcall	_escribir_char
  1899                           
  1900                           ;MAESTRO_SPI.c: 391:         escribir_char (unidady+48);
  1901  04F1  1283               	bcf	3,5	;RP0=0, select bank0
  1902  04F2  1303               	bcf	3,6	;RP1=0, select bank0
  1903  04F3  082F               	movf	_unidady,w
  1904  04F4  3E30               	addlw	48
  1905  04F5  120A  118A  266B  120A  118A  	fcall	_escribir_char
  1906                           
  1907                           ;MAESTRO_SPI.c: 392:         escribir_char (176);
  1908  04FA  30B0               	movlw	176
  1909  04FB  120A  118A  266B  120A  118A  	fcall	_escribir_char
  1910                           
  1911                           ;MAESTRO_SPI.c: 393:         escribir_char (67);
  1912  0500  3043               	movlw	67
  1913  0501  120A  118A  266B  120A  118A  	fcall	_escribir_char
  1914                           
  1915                           ;MAESTRO_SPI.c: 394:         escribir_char ('\r');
  1916  0506  300D               	movlw	13
  1917  0507  120A  118A  266B  120A  118A  	fcall	_escribir_char
  1918  050C                     l1395:
  1919                           
  1920                           ;MAESTRO_SPI.c: 395:         velocidad3 = 0;
  1921  050C  1283               	bcf	3,5	;RP0=0, select bank0
  1922  050D  1303               	bcf	3,6	;RP1=0, select bank0
  1923  050E  01A3               	clrf	_velocidad3
  1924  050F                     l211:
  1925  050F  0008               	return
  1926  0510                     __end_of_virtual_display3:
  1927                           
  1928                           	psect	text9
  1929  02FA                     __ptext9:	
  1930 ;; *************** function _Conversion2 *****************
  1931 ;; Defined at:
  1932 ;;		line 291 in file "MAESTRO_SPI.c"
  1933 ;; Parameters:    Size  Location     Type
  1934 ;;		None
  1935 ;; Auto vars:     Size  Location     Type
  1936 ;;		None
  1937 ;; Return value:  Size  Location     Type
  1938 ;;                  1    wreg      void 
  1939 ;; Registers used:
  1940 ;;		wreg, status,2, status,0, pclath, cstack
  1941 ;; Tracked objects:
  1942 ;;		On entry : 0/0
  1943 ;;		On exit  : 0/0
  1944 ;;		Unchanged: 0/0
  1945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1946 ;;      Params:         0       0       0       0       0
  1947 ;;      Locals:         0       0       0       0       0
  1948 ;;      Temps:          0       3       0       0       0
  1949 ;;      Totals:         0       3       0       0       0
  1950 ;;Total ram usage:        3 bytes
  1951 ;; Hardware stack levels used:    1
  1952 ;; Hardware stack levels required when called:    3
  1953 ;; This function calls:
  1954 ;;		_Lcd_Write_Char
  1955 ;;		___awdiv
  1956 ;;		___awmod
  1957 ;;		_virtual_display2
  1958 ;; This function is called by:
  1959 ;;		_lcd
  1960 ;; This function uses a non-reentrant model
  1961 ;;
  1962                           
  1963                           
  1964                           ;psect for function _Conversion2
  1965  02FA                     _Conversion2:
  1966  02FA                     l1851:	
  1967                           ;incstack = 0
  1968                           ; Regs used in _Conversion2: [wreg+status,2+status,0+pclath+cstack]
  1969                           
  1970                           
  1971                           ;MAESTRO_SPI.c: 293:     if (dato_push < 10)
  1972  02FA  300A               	movlw	10
  1973  02FB  027A               	subwf	_dato_push,w
  1974  02FC  1803               	skipnc
  1975  02FD  2AFF               	goto	u701
  1976  02FE  2B00               	goto	u700
  1977  02FF                     u701:
  1978  02FF  2B13               	goto	l1855
  1979  0300                     u700:
  1980  0300                     l1853:
  1981                           
  1982                           ;MAESTRO_SPI.c: 294:     {;MAESTRO_SPI.c: 295:         Lcd_Write_Char(48);
  1983  0300  3030               	movlw	48
  1984  0301  120A  118A  2617  120A  118A  	fcall	_Lcd_Write_Char
  1985                           
  1986                           ;MAESTRO_SPI.c: 296:         Lcd_Write_Char(dato_push+ 48);
  1987  0306  087A               	movf	_dato_push,w
  1988  0307  3E30               	addlw	48
  1989  0308  120A  118A  2617  120A  118A  	fcall	_Lcd_Write_Char
  1990                           
  1991                           ;MAESTRO_SPI.c: 297:         virtual_display2();
  1992  030D  120A  118A  20D9  120A  118A  	fcall	_virtual_display2
  1993                           
  1994                           ;MAESTRO_SPI.c: 298:     }
  1995  0312  2B5C               	goto	l194
  1996  0313                     l1855:
  1997  0313  300A               	movlw	10
  1998  0314  027A               	subwf	_dato_push,w
  1999  0315  1C03               	skipc
  2000  0316  2B18               	goto	u711
  2001  0317  2B19               	goto	u710
  2002  0318                     u711:
  2003  0318  2B5C               	goto	l194
  2004  0319                     u710:
  2005  0319                     l1857:
  2006                           
  2007                           ;MAESTRO_SPI.c: 300:     {;MAESTRO_SPI.c: 301:         w1 = dato_push/10;
  2008  0319  300A               	movlw	10
  2009  031A  00F2               	movwf	___awdiv@divisor
  2010  031B  3000               	movlw	0
  2011  031C  00F3               	movwf	___awdiv@divisor+1
  2012  031D  087A               	movf	_dato_push,w
  2013  031E  1283               	bcf	3,5	;RP0=0, select bank0
  2014  031F  1303               	bcf	3,6	;RP1=0, select bank0
  2015  0320  00C1               	movwf	??_Conversion2
  2016  0321  01C2               	clrf	??_Conversion2+1
  2017  0322  0841               	movf	??_Conversion2,w
  2018  0323  00F4               	movwf	___awdiv@dividend
  2019  0324  0842               	movf	??_Conversion2+1,w
  2020  0325  00F5               	movwf	___awdiv@dividend+1
  2021  0326  120A  118A  2291  120A  118A  	fcall	___awdiv
  2022  032B  0872               	movf	?___awdiv,w
  2023  032C  1283               	bcf	3,5	;RP0=0, select bank0
  2024  032D  1303               	bcf	3,6	;RP1=0, select bank0
  2025  032E  00C3               	movwf	??_Conversion2+2
  2026  032F  0843               	movf	??_Conversion2+2,w
  2027  0330  00A8               	movwf	_w1
  2028                           
  2029                           ;MAESTRO_SPI.c: 302:         w2 = dato_push % 10;
  2030  0331  300A               	movlw	10
  2031  0332  00F2               	movwf	___awmod@divisor
  2032  0333  3000               	movlw	0
  2033  0334  00F3               	movwf	___awmod@divisor+1
  2034  0335  087A               	movf	_dato_push,w
  2035  0336  00C1               	movwf	??_Conversion2
  2036  0337  01C2               	clrf	??_Conversion2+1
  2037  0338  0841               	movf	??_Conversion2,w
  2038  0339  00F4               	movwf	___awmod@dividend
  2039  033A  0842               	movf	??_Conversion2+1,w
  2040  033B  00F5               	movwf	___awmod@dividend+1
  2041  033C  120A  118A  23C0  120A  118A  	fcall	___awmod
  2042  0341  0872               	movf	?___awmod,w
  2043  0342  1283               	bcf	3,5	;RP0=0, select bank0
  2044  0343  1303               	bcf	3,6	;RP1=0, select bank0
  2045  0344  00C3               	movwf	??_Conversion2+2
  2046  0345  0843               	movf	??_Conversion2+2,w
  2047  0346  00A7               	movwf	_w2
  2048                           
  2049                           ;MAESTRO_SPI.c: 303:         Lcd_Write_Char(w1+48);
  2050  0347  0828               	movf	_w1,w
  2051  0348  3E30               	addlw	48
  2052  0349  120A  118A  2617  120A  118A  	fcall	_Lcd_Write_Char
  2053                           
  2054                           ;MAESTRO_SPI.c: 304:         Lcd_Write_Char(w2+48);
  2055  034E  1283               	bcf	3,5	;RP0=0, select bank0
  2056  034F  1303               	bcf	3,6	;RP1=0, select bank0
  2057  0350  0827               	movf	_w2,w
  2058  0351  3E30               	addlw	48
  2059  0352  120A  118A  2617  120A  118A  	fcall	_Lcd_Write_Char
  2060                           
  2061                           ;MAESTRO_SPI.c: 305:         virtual_display2();
  2062  0357  120A  118A  20D9  120A  118A  	fcall	_virtual_display2
  2063  035C                     l194:
  2064  035C  0008               	return
  2065  035D                     __end_of_Conversion2:
  2066                           
  2067                           	psect	text10
  2068  00D9                     __ptext10:	
  2069 ;; *************** function _virtual_display2 *****************
  2070 ;; Defined at:
  2071 ;;		line 342 in file "MAESTRO_SPI.c"
  2072 ;; Parameters:    Size  Location     Type
  2073 ;;		None
  2074 ;; Auto vars:     Size  Location     Type
  2075 ;;		None
  2076 ;; Return value:  Size  Location     Type
  2077 ;;                  1    wreg      void 
  2078 ;; Registers used:
  2079 ;;		wreg, status,2, status,0, pclath, cstack
  2080 ;; Tracked objects:
  2081 ;;		On entry : 0/0
  2082 ;;		On exit  : 0/0
  2083 ;;		Unchanged: 0/0
  2084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2085 ;;      Params:         0       0       0       0       0
  2086 ;;      Locals:         0       0       0       0       0
  2087 ;;      Temps:          0       0       0       0       0
  2088 ;;      Totals:         0       0       0       0       0
  2089 ;;Total ram usage:        0 bytes
  2090 ;; Hardware stack levels used:    1
  2091 ;; Hardware stack levels required when called:    2
  2092 ;; This function calls:
  2093 ;;		_escribir_char
  2094 ;; This function is called by:
  2095 ;;		_Conversion2
  2096 ;; This function uses a non-reentrant model
  2097 ;;
  2098                           
  2099                           
  2100                           ;psect for function _virtual_display2
  2101  00D9                     _virtual_display2:
  2102  00D9                     l1379:	
  2103                           ;incstack = 0
  2104                           ; Regs used in _virtual_display2: [wreg+status,2+status,0+pclath+cstack]
  2105                           
  2106                           
  2107                           ;MAESTRO_SPI.c: 344:     if (velocidad2 > 15)
  2108  00D9  3010               	movlw	16
  2109  00DA  1283               	bcf	3,5	;RP0=0, select bank0
  2110  00DB  1303               	bcf	3,6	;RP1=0, select bank0
  2111  00DC  0224               	subwf	_velocidad2,w
  2112  00DD  1C03               	skipc
  2113  00DE  28E0               	goto	u331
  2114  00DF  28E1               	goto	u330
  2115  00E0                     u331:
  2116  00E0  2977               	goto	l207
  2117  00E1                     u330:
  2118  00E1                     l1381:
  2119                           
  2120                           ;MAESTRO_SPI.c: 345:     {;MAESTRO_SPI.c: 346:         if (dato_push < 10)
  2121  00E1  300A               	movlw	10
  2122  00E2  027A               	subwf	_dato_push,w
  2123  00E3  1803               	skipnc
  2124  00E4  28E6               	goto	u341
  2125  00E5  28E7               	goto	u340
  2126  00E6                     u341:
  2127  00E6  292E               	goto	l1387
  2128  00E7                     u340:
  2129  00E7                     l1383:
  2130                           
  2131                           ;MAESTRO_SPI.c: 347:         {;MAESTRO_SPI.c: 348:             escribir_char (67);
  2132  00E7  3043               	movlw	67
  2133  00E8  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2134                           
  2135                           ;MAESTRO_SPI.c: 349:             escribir_char (79);
  2136  00ED  304F               	movlw	79
  2137  00EE  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2138                           
  2139                           ;MAESTRO_SPI.c: 350:             escribir_char (78);
  2140  00F3  304E               	movlw	78
  2141  00F4  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2142                           
  2143                           ;MAESTRO_SPI.c: 351:             escribir_char (84);
  2144  00F9  3054               	movlw	84
  2145  00FA  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2146                           
  2147                           ;MAESTRO_SPI.c: 352:             escribir_char (58);
  2148  00FF  303A               	movlw	58
  2149  0100  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2150                           
  2151                           ;MAESTRO_SPI.c: 353:             escribir_char (48);
  2152  0105  3030               	movlw	48
  2153  0106  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2154                           
  2155                           ;MAESTRO_SPI.c: 354:             escribir_char (dato_push+48);
  2156  010B  087A               	movf	_dato_push,w
  2157  010C  3E30               	addlw	48
  2158  010D  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2159                           
  2160                           ;MAESTRO_SPI.c: 355:             escribir_char (32);
  2161  0112  3020               	movlw	32
  2162  0113  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2163                           
  2164                           ;MAESTRO_SPI.c: 356:             escribir_char (32);
  2165  0118  3020               	movlw	32
  2166  0119  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2167                           
  2168                           ;MAESTRO_SPI.c: 357:             escribir_char (32);
  2169  011E  3020               	movlw	32
  2170  011F  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2171                           
  2172                           ;MAESTRO_SPI.c: 358:             escribir_char (32);
  2173  0124  3020               	movlw	32
  2174  0125  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2175  012A                     l1385:
  2176                           
  2177                           ;MAESTRO_SPI.c: 360:             velocidad2 = 0;
  2178  012A  1283               	bcf	3,5	;RP0=0, select bank0
  2179  012B  1303               	bcf	3,6	;RP1=0, select bank0
  2180  012C  01A4               	clrf	_velocidad2
  2181                           
  2182                           ;MAESTRO_SPI.c: 361:         }
  2183  012D  2977               	goto	l207
  2184  012E                     l1387:
  2185                           
  2186                           ;MAESTRO_SPI.c: 363:         {;MAESTRO_SPI.c: 364:             escribir_char (67);
  2187  012E  3043               	movlw	67
  2188  012F  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2189                           
  2190                           ;MAESTRO_SPI.c: 365:             escribir_char (79);
  2191  0134  304F               	movlw	79
  2192  0135  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2193                           
  2194                           ;MAESTRO_SPI.c: 366:             escribir_char (78);
  2195  013A  304E               	movlw	78
  2196  013B  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2197                           
  2198                           ;MAESTRO_SPI.c: 367:             escribir_char (84);
  2199  0140  3054               	movlw	84
  2200  0141  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2201                           
  2202                           ;MAESTRO_SPI.c: 368:             escribir_char (58);
  2203  0146  303A               	movlw	58
  2204  0147  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2205                           
  2206                           ;MAESTRO_SPI.c: 369:             escribir_char (w1+48);
  2207  014C  1283               	bcf	3,5	;RP0=0, select bank0
  2208  014D  1303               	bcf	3,6	;RP1=0, select bank0
  2209  014E  0828               	movf	_w1,w
  2210  014F  3E30               	addlw	48
  2211  0150  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2212                           
  2213                           ;MAESTRO_SPI.c: 370:             escribir_char (w2+48);
  2214  0155  1283               	bcf	3,5	;RP0=0, select bank0
  2215  0156  1303               	bcf	3,6	;RP1=0, select bank0
  2216  0157  0827               	movf	_w2,w
  2217  0158  3E30               	addlw	48
  2218  0159  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2219                           
  2220                           ;MAESTRO_SPI.c: 371:             escribir_char (32);
  2221  015E  3020               	movlw	32
  2222  015F  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2223                           
  2224                           ;MAESTRO_SPI.c: 372:             escribir_char (32);
  2225  0164  3020               	movlw	32
  2226  0165  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2227                           
  2228                           ;MAESTRO_SPI.c: 373:             escribir_char (32);
  2229  016A  3020               	movlw	32
  2230  016B  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2231                           
  2232                           ;MAESTRO_SPI.c: 374:             escribir_char (32);
  2233  0170  3020               	movlw	32
  2234  0171  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2235  0176  292A               	goto	l1385
  2236  0177                     l207:
  2237  0177  0008               	return
  2238  0178                     __end_of_virtual_display2:
  2239                           
  2240                           	psect	text11
  2241  0178                     __ptext11:	
  2242 ;; *************** function _Conversion1 *****************
  2243 ;; Defined at:
  2244 ;;		line 273 in file "MAESTRO_SPI.c"
  2245 ;; Parameters:    Size  Location     Type
  2246 ;;		None
  2247 ;; Auto vars:     Size  Location     Type
  2248 ;;  pot             2    7[BANK0 ] int 
  2249 ;; Return value:  Size  Location     Type
  2250 ;;                  1    wreg      void 
  2251 ;; Registers used:
  2252 ;;		wreg, status,2, status,0, pclath, cstack
  2253 ;; Tracked objects:
  2254 ;;		On entry : 0/0
  2255 ;;		On exit  : 0/0
  2256 ;;		Unchanged: 0/0
  2257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2258 ;;      Params:         0       0       0       0       0
  2259 ;;      Locals:         0       2       0       0       0
  2260 ;;      Temps:          0       3       0       0       0
  2261 ;;      Totals:         0       5       0       0       0
  2262 ;;Total ram usage:        5 bytes
  2263 ;; Hardware stack levels used:    1
  2264 ;; Hardware stack levels required when called:    3
  2265 ;; This function calls:
  2266 ;;		_Lcd_Write_Char
  2267 ;;		___awdiv
  2268 ;;		___awmod
  2269 ;;		_virtual_display1
  2270 ;; This function is called by:
  2271 ;;		_lcd
  2272 ;; This function uses a non-reentrant model
  2273 ;;
  2274                           
  2275                           
  2276                           ;psect for function _Conversion1
  2277  0178                     _Conversion1:
  2278  0178                     l1825:	
  2279                           ;incstack = 0
  2280                           ; Regs used in _Conversion1: [wreg+status,2+status,0+pclath+cstack]
  2281                           
  2282                           
  2283                           ;MAESTRO_SPI.c: 276:     voltaje = dato_pot;
  2284  0178  1283               	bcf	3,5	;RP0=0, select bank0
  2285  0179  1303               	bcf	3,6	;RP1=0, select bank0
  2286  017A  0822               	movf	_dato_pot,w
  2287  017B  00C1               	movwf	??_Conversion1
  2288  017C  0841               	movf	??_Conversion1,w
  2289  017D  00BC               	movwf	_voltaje
  2290  017E                     l1827:
  2291                           
  2292                           ;MAESTRO_SPI.c: 277:     int pot = voltaje * 4;
  2293  017E  083C               	movf	_voltaje,w
  2294  017F  00C1               	movwf	??_Conversion1
  2295  0180  01C2               	clrf	??_Conversion1+1
  2296  0181  1003               	clrc
  2297  0182  0DC1               	rlf	??_Conversion1,f
  2298  0183  0DC2               	rlf	??_Conversion1+1,f
  2299  0184  1003               	clrc
  2300  0185  0DC1               	rlf	??_Conversion1,f
  2301  0186  0DC2               	rlf	??_Conversion1+1,f
  2302  0187  0841               	movf	??_Conversion1,w
  2303  0188  00C4               	movwf	Conversion1@pot
  2304  0189  0842               	movf	??_Conversion1+1,w
  2305  018A  00C5               	movwf	Conversion1@pot+1
  2306  018B                     l1829:
  2307                           
  2308                           ;MAESTRO_SPI.c: 278:     unidad = pot / 100;
  2309  018B  3064               	movlw	100
  2310  018C  00F2               	movwf	___awdiv@divisor
  2311  018D  3000               	movlw	0
  2312  018E  00F3               	movwf	___awdiv@divisor+1
  2313  018F  0845               	movf	Conversion1@pot+1,w
  2314  0190  00F5               	movwf	___awdiv@dividend+1
  2315  0191  0844               	movf	Conversion1@pot,w
  2316  0192  00F4               	movwf	___awdiv@dividend
  2317  0193  120A  118A  2291  120A  118A  	fcall	___awdiv
  2318  0198  0872               	movf	?___awdiv,w
  2319  0199  1283               	bcf	3,5	;RP0=0, select bank0
  2320  019A  1303               	bcf	3,6	;RP1=0, select bank0
  2321  019B  00C1               	movwf	??_Conversion1
  2322  019C  0841               	movf	??_Conversion1,w
  2323  019D  00BB               	movwf	_unidad
  2324  019E                     l1831:
  2325                           
  2326                           ;MAESTRO_SPI.c: 279:     x1 = pot % 100;
  2327  019E  3064               	movlw	100
  2328  019F  00F2               	movwf	___awmod@divisor
  2329  01A0  3000               	movlw	0
  2330  01A1  00F3               	movwf	___awmod@divisor+1
  2331  01A2  0845               	movf	Conversion1@pot+1,w
  2332  01A3  00F5               	movwf	___awmod@dividend+1
  2333  01A4  0844               	movf	Conversion1@pot,w
  2334  01A5  00F4               	movwf	___awmod@dividend
  2335  01A6  120A  118A  23C0  120A  118A  	fcall	___awmod
  2336  01AB  0872               	movf	?___awmod,w
  2337  01AC  1283               	bcf	3,5	;RP0=0, select bank0
  2338  01AD  1303               	bcf	3,6	;RP1=0, select bank0
  2339  01AE  00C1               	movwf	??_Conversion1
  2340  01AF  0841               	movf	??_Conversion1,w
  2341  01B0  00BA               	movwf	_x1
  2342  01B1                     l1833:
  2343                           
  2344                           ;MAESTRO_SPI.c: 280:     x2 = x1 / 10;
  2345  01B1  300A               	movlw	10
  2346  01B2  00F2               	movwf	___awdiv@divisor
  2347  01B3  3000               	movlw	0
  2348  01B4  00F3               	movwf	___awdiv@divisor+1
  2349  01B5  083A               	movf	_x1,w
  2350  01B6  00C1               	movwf	??_Conversion1
  2351  01B7  01C2               	clrf	??_Conversion1+1
  2352  01B8  0841               	movf	??_Conversion1,w
  2353  01B9  00F4               	movwf	___awdiv@dividend
  2354  01BA  0842               	movf	??_Conversion1+1,w
  2355  01BB  00F5               	movwf	___awdiv@dividend+1
  2356  01BC  120A  118A  2291  120A  118A  	fcall	___awdiv
  2357  01C1  0872               	movf	?___awdiv,w
  2358  01C2  1283               	bcf	3,5	;RP0=0, select bank0
  2359  01C3  1303               	bcf	3,6	;RP1=0, select bank0
  2360  01C4  00C3               	movwf	??_Conversion1+2
  2361  01C5  0843               	movf	??_Conversion1+2,w
  2362  01C6  00B8               	movwf	_x2
  2363  01C7                     l1835:
  2364                           
  2365                           ;MAESTRO_SPI.c: 281:     y1 = x1 % 10;
  2366  01C7  300A               	movlw	10
  2367  01C8  00F2               	movwf	___awmod@divisor
  2368  01C9  3000               	movlw	0
  2369  01CA  00F3               	movwf	___awmod@divisor+1
  2370  01CB  083A               	movf	_x1,w
  2371  01CC  00C1               	movwf	??_Conversion1
  2372  01CD  01C2               	clrf	??_Conversion1+1
  2373  01CE  0841               	movf	??_Conversion1,w
  2374  01CF  00F4               	movwf	___awmod@dividend
  2375  01D0  0842               	movf	??_Conversion1+1,w
  2376  01D1  00F5               	movwf	___awmod@dividend+1
  2377  01D2  120A  118A  23C0  120A  118A  	fcall	___awmod
  2378  01D7  0872               	movf	?___awmod,w
  2379  01D8  1283               	bcf	3,5	;RP0=0, select bank0
  2380  01D9  1303               	bcf	3,6	;RP1=0, select bank0
  2381  01DA  00C3               	movwf	??_Conversion1+2
  2382  01DB  0843               	movf	??_Conversion1+2,w
  2383  01DC  00B9               	movwf	_y1
  2384  01DD                     l1837:
  2385                           
  2386                           ;MAESTRO_SPI.c: 282:     y2 = y1 / 1;
  2387  01DD  0839               	movf	_y1,w
  2388  01DE  00C1               	movwf	??_Conversion1
  2389  01DF  0841               	movf	??_Conversion1,w
  2390  01E0  00B7               	movwf	_y2
  2391  01E1                     l1839:
  2392                           
  2393                           ;MAESTRO_SPI.c: 283:     Lcd_Write_Char(unidad+48);
  2394  01E1  083B               	movf	_unidad,w
  2395  01E2  3E30               	addlw	48
  2396  01E3  120A  118A  2617  120A  118A  	fcall	_Lcd_Write_Char
  2397  01E8                     l1841:
  2398                           
  2399                           ;MAESTRO_SPI.c: 284:     Lcd_Write_Char(46);
  2400  01E8  302E               	movlw	46
  2401  01E9  120A  118A  2617  120A  118A  	fcall	_Lcd_Write_Char
  2402  01EE                     l1843:
  2403                           
  2404                           ;MAESTRO_SPI.c: 285:     Lcd_Write_Char(x2+48);
  2405  01EE  1283               	bcf	3,5	;RP0=0, select bank0
  2406  01EF  1303               	bcf	3,6	;RP1=0, select bank0
  2407  01F0  0838               	movf	_x2,w
  2408  01F1  3E30               	addlw	48
  2409  01F2  120A  118A  2617  120A  118A  	fcall	_Lcd_Write_Char
  2410  01F7                     l1845:
  2411                           
  2412                           ;MAESTRO_SPI.c: 286:     Lcd_Write_Char(y2+48);
  2413  01F7  1283               	bcf	3,5	;RP0=0, select bank0
  2414  01F8  1303               	bcf	3,6	;RP1=0, select bank0
  2415  01F9  0837               	movf	_y2,w
  2416  01FA  3E30               	addlw	48
  2417  01FB  120A  118A  2617  120A  118A  	fcall	_Lcd_Write_Char
  2418  0200                     l1847:
  2419                           
  2420                           ;MAESTRO_SPI.c: 287:     Lcd_Write_Char(86);
  2421  0200  3056               	movlw	86
  2422  0201  120A  118A  2617  120A  118A  	fcall	_Lcd_Write_Char
  2423  0206                     l1849:
  2424                           
  2425                           ;MAESTRO_SPI.c: 288:     virtual_display1();
  2426  0206  120A  118A  235D  120A  118A  	fcall	_virtual_display1
  2427  020B                     l188:
  2428  020B  0008               	return
  2429  020C                     __end_of_Conversion1:
  2430                           
  2431                           	psect	text12
  2432  035D                     __ptext12:	
  2433 ;; *************** function _virtual_display1 *****************
  2434 ;; Defined at:
  2435 ;;		line 321 in file "MAESTRO_SPI.c"
  2436 ;; Parameters:    Size  Location     Type
  2437 ;;		None
  2438 ;; Auto vars:     Size  Location     Type
  2439 ;;		None
  2440 ;; Return value:  Size  Location     Type
  2441 ;;                  1    wreg      void 
  2442 ;; Registers used:
  2443 ;;		wreg, status,2, status,0, pclath, cstack
  2444 ;; Tracked objects:
  2445 ;;		On entry : 0/0
  2446 ;;		On exit  : 0/0
  2447 ;;		Unchanged: 0/0
  2448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2449 ;;      Params:         0       0       0       0       0
  2450 ;;      Locals:         0       0       0       0       0
  2451 ;;      Temps:          0       0       0       0       0
  2452 ;;      Totals:         0       0       0       0       0
  2453 ;;Total ram usage:        0 bytes
  2454 ;; Hardware stack levels used:    1
  2455 ;; Hardware stack levels required when called:    2
  2456 ;; This function calls:
  2457 ;;		_escribir_char
  2458 ;; This function is called by:
  2459 ;;		_Conversion1
  2460 ;; This function uses a non-reentrant model
  2461 ;;
  2462                           
  2463                           
  2464                           ;psect for function _virtual_display1
  2465  035D                     _virtual_display1:
  2466  035D                     l1373:	
  2467                           ;incstack = 0
  2468                           ; Regs used in _virtual_display1: [wreg+status,2+status,0+pclath+cstack]
  2469                           
  2470                           
  2471                           ;MAESTRO_SPI.c: 323:     if (velocidad1 > 15)
  2472  035D  3010               	movlw	16
  2473  035E  1283               	bcf	3,5	;RP0=0, select bank0
  2474  035F  1303               	bcf	3,6	;RP1=0, select bank0
  2475  0360  0225               	subwf	_velocidad1,w
  2476  0361  1C03               	skipc
  2477  0362  2B64               	goto	u321
  2478  0363  2B65               	goto	u320
  2479  0364                     u321:
  2480  0364  2BBF               	goto	l201
  2481  0365                     u320:
  2482  0365                     l1375:
  2483                           
  2484                           ;MAESTRO_SPI.c: 324:     {;MAESTRO_SPI.c: 325:         escribir_char (65);
  2485  0365  3041               	movlw	65
  2486  0366  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2487                           
  2488                           ;MAESTRO_SPI.c: 326:         escribir_char (68);
  2489  036B  3044               	movlw	68
  2490  036C  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2491                           
  2492                           ;MAESTRO_SPI.c: 327:         escribir_char (67);
  2493  0371  3043               	movlw	67
  2494  0372  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2495                           
  2496                           ;MAESTRO_SPI.c: 328:         escribir_char (58);
  2497  0377  303A               	movlw	58
  2498  0378  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2499                           
  2500                           ;MAESTRO_SPI.c: 329:         escribir_char (unidad+48);
  2501  037D  1283               	bcf	3,5	;RP0=0, select bank0
  2502  037E  1303               	bcf	3,6	;RP1=0, select bank0
  2503  037F  083B               	movf	_unidad,w
  2504  0380  3E30               	addlw	48
  2505  0381  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2506                           
  2507                           ;MAESTRO_SPI.c: 330:         escribir_char (46);
  2508  0386  302E               	movlw	46
  2509  0387  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2510                           
  2511                           ;MAESTRO_SPI.c: 331:         escribir_char (x2+48);
  2512  038C  1283               	bcf	3,5	;RP0=0, select bank0
  2513  038D  1303               	bcf	3,6	;RP1=0, select bank0
  2514  038E  0838               	movf	_x2,w
  2515  038F  3E30               	addlw	48
  2516  0390  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2517                           
  2518                           ;MAESTRO_SPI.c: 332:         escribir_char (y2+48);
  2519  0395  1283               	bcf	3,5	;RP0=0, select bank0
  2520  0396  1303               	bcf	3,6	;RP1=0, select bank0
  2521  0397  0837               	movf	_y2,w
  2522  0398  3E30               	addlw	48
  2523  0399  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2524                           
  2525                           ;MAESTRO_SPI.c: 333:         escribir_char (86);
  2526  039E  3056               	movlw	86
  2527  039F  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2528                           
  2529                           ;MAESTRO_SPI.c: 334:         escribir_char (32);
  2530  03A4  3020               	movlw	32
  2531  03A5  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2532                           
  2533                           ;MAESTRO_SPI.c: 335:         escribir_char (32);
  2534  03AA  3020               	movlw	32
  2535  03AB  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2536                           
  2537                           ;MAESTRO_SPI.c: 336:         escribir_char (32);
  2538  03B0  3020               	movlw	32
  2539  03B1  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2540                           
  2541                           ;MAESTRO_SPI.c: 337:         escribir_char (32);
  2542  03B6  3020               	movlw	32
  2543  03B7  120A  118A  266B  120A  118A  	fcall	_escribir_char
  2544  03BC                     l1377:
  2545                           
  2546                           ;MAESTRO_SPI.c: 338:         velocidad1 = 0;
  2547  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  2548  03BD  1303               	bcf	3,6	;RP1=0, select bank0
  2549  03BE  01A5               	clrf	_velocidad1
  2550  03BF                     l201:
  2551  03BF  0008               	return
  2552  03C0                     __end_of_virtual_display1:
  2553                           
  2554                           	psect	text13
  2555  066B                     __ptext13:	
  2556 ;; *************** function _escribir_char *****************
  2557 ;; Defined at:
  2558 ;;		line 399 in file "MAESTRO_SPI.c"
  2559 ;; Parameters:    Size  Location     Type
  2560 ;;  valor           1    wreg     unsigned char 
  2561 ;; Auto vars:     Size  Location     Type
  2562 ;;  valor           1    2[COMMON] unsigned char 
  2563 ;; Return value:  Size  Location     Type
  2564 ;;                  1    wreg      void 
  2565 ;; Registers used:
  2566 ;;		wreg
  2567 ;; Tracked objects:
  2568 ;;		On entry : 0/0
  2569 ;;		On exit  : 0/0
  2570 ;;		Unchanged: 0/0
  2571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2572 ;;      Params:         0       0       0       0       0
  2573 ;;      Locals:         1       0       0       0       0
  2574 ;;      Temps:          0       0       0       0       0
  2575 ;;      Totals:         1       0       0       0       0
  2576 ;;Total ram usage:        1 bytes
  2577 ;; Hardware stack levels used:    1
  2578 ;; Hardware stack levels required when called:    1
  2579 ;; This function calls:
  2580 ;;		Nothing
  2581 ;; This function is called by:
  2582 ;;		_virtual_display1
  2583 ;;		_virtual_display2
  2584 ;;		_virtual_display3
  2585 ;; This function uses a non-reentrant model
  2586 ;;
  2587                           
  2588                           
  2589                           ;psect for function _escribir_char
  2590  066B                     _escribir_char:
  2591                           
  2592                           ;incstack = 0
  2593                           ; Regs used in _escribir_char: [wreg]
  2594                           ;escribir_char@valor stored from wreg
  2595  066B  00F2               	movwf	escribir_char@valor
  2596  066C                     l1359:
  2597                           
  2598                           ;MAESTRO_SPI.c: 399: void escribir_char (uint8_t valor);MAESTRO_SPI.c: 400: {;MAESTRO_SP
      +                          I.c: 401:     TXREG = valor;
  2599  066C  0872               	movf	escribir_char@valor,w
  2600  066D  1283               	bcf	3,5	;RP0=0, select bank0
  2601  066E  1303               	bcf	3,6	;RP1=0, select bank0
  2602  066F  0099               	movwf	25	;volatile
  2603  0670                     l214:	
  2604                           ;MAESTRO_SPI.c: 402:     while (PIR1bits.TXIF == 0);
  2605                           
  2606  0670  1E0C               	btfss	12,4	;volatile
  2607  0671  2E73               	goto	u311
  2608  0672  2E74               	goto	u310
  2609  0673                     u311:
  2610  0673  2E70               	goto	l214
  2611  0674                     u310:
  2612  0674                     l217:
  2613  0674  0008               	return
  2614  0675                     __end_of_escribir_char:
  2615                           
  2616                           	psect	text14
  2617  03C0                     __ptext14:	
  2618 ;; *************** function ___awmod *****************
  2619 ;; Defined at:
  2620 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  2621 ;; Parameters:    Size  Location     Type
  2622 ;;  divisor         2    2[COMMON] int 
  2623 ;;  dividend        2    4[COMMON] int 
  2624 ;; Auto vars:     Size  Location     Type
  2625 ;;  sign            1    8[COMMON] unsigned char 
  2626 ;;  counter         1    7[COMMON] unsigned char 
  2627 ;; Return value:  Size  Location     Type
  2628 ;;                  2    2[COMMON] int 
  2629 ;; Registers used:
  2630 ;;		wreg, status,2, status,0
  2631 ;; Tracked objects:
  2632 ;;		On entry : 0/0
  2633 ;;		On exit  : 0/0
  2634 ;;		Unchanged: 0/0
  2635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2636 ;;      Params:         4       0       0       0       0
  2637 ;;      Locals:         2       0       0       0       0
  2638 ;;      Temps:          1       0       0       0       0
  2639 ;;      Totals:         7       0       0       0       0
  2640 ;;Total ram usage:        7 bytes
  2641 ;; Hardware stack levels used:    1
  2642 ;; Hardware stack levels required when called:    1
  2643 ;; This function calls:
  2644 ;;		Nothing
  2645 ;; This function is called by:
  2646 ;;		_Conversion1
  2647 ;;		_Conversion2
  2648 ;;		_Conversion3
  2649 ;; This function uses a non-reentrant model
  2650 ;;
  2651                           
  2652                           
  2653                           ;psect for function ___awmod
  2654  03C0                     ___awmod:
  2655  03C0                     l1451:	
  2656                           ;incstack = 0
  2657                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2658                           
  2659  03C0  01F8               	clrf	___awmod@sign
  2660  03C1                     l1453:
  2661  03C1  1FF5               	btfss	___awmod@dividend+1,7
  2662  03C2  2BC4               	goto	u461
  2663  03C3  2BC5               	goto	u460
  2664  03C4                     u461:
  2665  03C4  2BCC               	goto	l1459
  2666  03C5                     u460:
  2667  03C5                     l1455:
  2668  03C5  09F4               	comf	___awmod@dividend,f
  2669  03C6  09F5               	comf	___awmod@dividend+1,f
  2670  03C7  0AF4               	incf	___awmod@dividend,f
  2671  03C8  1903               	skipnz
  2672  03C9  0AF5               	incf	___awmod@dividend+1,f
  2673  03CA                     l1457:
  2674  03CA  01F8               	clrf	___awmod@sign
  2675  03CB  0AF8               	incf	___awmod@sign,f
  2676  03CC                     l1459:
  2677  03CC  1FF3               	btfss	___awmod@divisor+1,7
  2678  03CD  2BCF               	goto	u471
  2679  03CE  2BD0               	goto	u470
  2680  03CF                     u471:
  2681  03CF  2BD5               	goto	l1463
  2682  03D0                     u470:
  2683  03D0                     l1461:
  2684  03D0  09F2               	comf	___awmod@divisor,f
  2685  03D1  09F3               	comf	___awmod@divisor+1,f
  2686  03D2  0AF2               	incf	___awmod@divisor,f
  2687  03D3  1903               	skipnz
  2688  03D4  0AF3               	incf	___awmod@divisor+1,f
  2689  03D5                     l1463:
  2690  03D5  0872               	movf	___awmod@divisor,w
  2691  03D6  0473               	iorwf	___awmod@divisor+1,w
  2692  03D7  1903               	btfsc	3,2
  2693  03D8  2BDA               	goto	u481
  2694  03D9  2BDB               	goto	u480
  2695  03DA                     u481:
  2696  03DA  2C0A               	goto	l1481
  2697  03DB                     u480:
  2698  03DB                     l1465:
  2699  03DB  01F7               	clrf	___awmod@counter
  2700  03DC  0AF7               	incf	___awmod@counter,f
  2701  03DD  2BE9               	goto	l1471
  2702  03DE                     l1467:
  2703  03DE  3001               	movlw	1
  2704  03DF                     u495:
  2705  03DF  1003               	clrc
  2706  03E0  0DF2               	rlf	___awmod@divisor,f
  2707  03E1  0DF3               	rlf	___awmod@divisor+1,f
  2708  03E2  3EFF               	addlw	-1
  2709  03E3  1D03               	skipz
  2710  03E4  2BDF               	goto	u495
  2711  03E5                     l1469:
  2712  03E5  3001               	movlw	1
  2713  03E6  00F6               	movwf	??___awmod
  2714  03E7  0876               	movf	??___awmod,w
  2715  03E8  07F7               	addwf	___awmod@counter,f
  2716  03E9                     l1471:
  2717  03E9  1FF3               	btfss	___awmod@divisor+1,7
  2718  03EA  2BEC               	goto	u501
  2719  03EB  2BED               	goto	u500
  2720  03EC                     u501:
  2721  03EC  2BDE               	goto	l1467
  2722  03ED                     u500:
  2723  03ED                     l1473:
  2724  03ED  0873               	movf	___awmod@divisor+1,w
  2725  03EE  0275               	subwf	___awmod@dividend+1,w
  2726  03EF  1D03               	skipz
  2727  03F0  2BF3               	goto	u515
  2728  03F1  0872               	movf	___awmod@divisor,w
  2729  03F2  0274               	subwf	___awmod@dividend,w
  2730  03F3                     u515:
  2731  03F3  1C03               	skipc
  2732  03F4  2BF6               	goto	u511
  2733  03F5  2BF7               	goto	u510
  2734  03F6                     u511:
  2735  03F6  2BFD               	goto	l1477
  2736  03F7                     u510:
  2737  03F7                     l1475:
  2738  03F7  0872               	movf	___awmod@divisor,w
  2739  03F8  02F4               	subwf	___awmod@dividend,f
  2740  03F9  0873               	movf	___awmod@divisor+1,w
  2741  03FA  1C03               	skipc
  2742  03FB  03F5               	decf	___awmod@dividend+1,f
  2743  03FC  02F5               	subwf	___awmod@dividend+1,f
  2744  03FD                     l1477:
  2745  03FD  3001               	movlw	1
  2746  03FE                     u525:
  2747  03FE  1003               	clrc
  2748  03FF  0CF3               	rrf	___awmod@divisor+1,f
  2749  0400  0CF2               	rrf	___awmod@divisor,f
  2750  0401  3EFF               	addlw	-1
  2751  0402  1D03               	skipz
  2752  0403  2BFE               	goto	u525
  2753  0404                     l1479:
  2754  0404  3001               	movlw	1
  2755  0405  02F7               	subwf	___awmod@counter,f
  2756  0406  1D03               	btfss	3,2
  2757  0407  2C09               	goto	u531
  2758  0408  2C0A               	goto	u530
  2759  0409                     u531:
  2760  0409  2BED               	goto	l1473
  2761  040A                     u530:
  2762  040A                     l1481:
  2763  040A  0878               	movf	___awmod@sign,w
  2764  040B  1903               	btfsc	3,2
  2765  040C  2C0E               	goto	u541
  2766  040D  2C0F               	goto	u540
  2767  040E                     u541:
  2768  040E  2C14               	goto	l1485
  2769  040F                     u540:
  2770  040F                     l1483:
  2771  040F  09F4               	comf	___awmod@dividend,f
  2772  0410  09F5               	comf	___awmod@dividend+1,f
  2773  0411  0AF4               	incf	___awmod@dividend,f
  2774  0412  1903               	skipnz
  2775  0413  0AF5               	incf	___awmod@dividend+1,f
  2776  0414                     l1485:
  2777  0414  0875               	movf	___awmod@dividend+1,w
  2778  0415  00F3               	movwf	?___awmod+1
  2779  0416  0874               	movf	___awmod@dividend,w
  2780  0417  00F2               	movwf	?___awmod
  2781  0418                     l573:
  2782  0418  0008               	return
  2783  0419                     __end_of___awmod:
  2784                           
  2785                           	psect	text15
  2786  0291                     __ptext15:	
  2787 ;; *************** function ___awdiv *****************
  2788 ;; Defined at:
  2789 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2790 ;; Parameters:    Size  Location     Type
  2791 ;;  divisor         2    2[COMMON] int 
  2792 ;;  dividend        2    4[COMMON] int 
  2793 ;; Auto vars:     Size  Location     Type
  2794 ;;  quotient        2    2[BANK0 ] int 
  2795 ;;  sign            1    1[BANK0 ] unsigned char 
  2796 ;;  counter         1    0[BANK0 ] unsigned char 
  2797 ;; Return value:  Size  Location     Type
  2798 ;;                  2    2[COMMON] int 
  2799 ;; Registers used:
  2800 ;;		wreg, status,2, status,0
  2801 ;; Tracked objects:
  2802 ;;		On entry : 0/0
  2803 ;;		On exit  : 0/0
  2804 ;;		Unchanged: 0/0
  2805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2806 ;;      Params:         4       0       0       0       0
  2807 ;;      Locals:         0       4       0       0       0
  2808 ;;      Temps:          1       0       0       0       0
  2809 ;;      Totals:         5       4       0       0       0
  2810 ;;Total ram usage:        9 bytes
  2811 ;; Hardware stack levels used:    1
  2812 ;; Hardware stack levels required when called:    1
  2813 ;; This function calls:
  2814 ;;		Nothing
  2815 ;; This function is called by:
  2816 ;;		_Conversion1
  2817 ;;		_Conversion2
  2818 ;;		_Conversion3
  2819 ;; This function uses a non-reentrant model
  2820 ;;
  2821                           
  2822                           
  2823                           ;psect for function ___awdiv
  2824  0291                     ___awdiv:
  2825  0291                     l1781:	
  2826                           ;incstack = 0
  2827                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2828                           
  2829  0291  1283               	bcf	3,5	;RP0=0, select bank0
  2830  0292  1303               	bcf	3,6	;RP1=0, select bank0
  2831  0293  01BE               	clrf	___awdiv@sign
  2832  0294                     l1783:
  2833  0294  1FF3               	btfss	___awdiv@divisor+1,7
  2834  0295  2A97               	goto	u601
  2835  0296  2A98               	goto	u600
  2836  0297                     u601:
  2837  0297  2A9F               	goto	l1789
  2838  0298                     u600:
  2839  0298                     l1785:
  2840  0298  09F2               	comf	___awdiv@divisor,f
  2841  0299  09F3               	comf	___awdiv@divisor+1,f
  2842  029A  0AF2               	incf	___awdiv@divisor,f
  2843  029B  1903               	skipnz
  2844  029C  0AF3               	incf	___awdiv@divisor+1,f
  2845  029D                     l1787:
  2846  029D  01BE               	clrf	___awdiv@sign
  2847  029E  0ABE               	incf	___awdiv@sign,f
  2848  029F                     l1789:
  2849  029F  1FF5               	btfss	___awdiv@dividend+1,7
  2850  02A0  2AA2               	goto	u611
  2851  02A1  2AA3               	goto	u610
  2852  02A2                     u611:
  2853  02A2  2AAC               	goto	l1795
  2854  02A3                     u610:
  2855  02A3                     l1791:
  2856  02A3  09F4               	comf	___awdiv@dividend,f
  2857  02A4  09F5               	comf	___awdiv@dividend+1,f
  2858  02A5  0AF4               	incf	___awdiv@dividend,f
  2859  02A6  1903               	skipnz
  2860  02A7  0AF5               	incf	___awdiv@dividend+1,f
  2861  02A8                     l1793:
  2862  02A8  3001               	movlw	1
  2863  02A9  00F6               	movwf	??___awdiv
  2864  02AA  0876               	movf	??___awdiv,w
  2865  02AB  06BE               	xorwf	___awdiv@sign,f
  2866  02AC                     l1795:
  2867  02AC  01BF               	clrf	___awdiv@quotient
  2868  02AD  01C0               	clrf	___awdiv@quotient+1
  2869  02AE                     l1797:
  2870  02AE  0872               	movf	___awdiv@divisor,w
  2871  02AF  0473               	iorwf	___awdiv@divisor+1,w
  2872  02B0  1903               	btfsc	3,2
  2873  02B1  2AB3               	goto	u621
  2874  02B2  2AB4               	goto	u620
  2875  02B3                     u621:
  2876  02B3  2AEB               	goto	l1817
  2877  02B4                     u620:
  2878  02B4                     l1799:
  2879  02B4  01BD               	clrf	___awdiv@counter
  2880  02B5  0ABD               	incf	___awdiv@counter,f
  2881  02B6  2AC2               	goto	l1805
  2882  02B7                     l1801:
  2883  02B7  3001               	movlw	1
  2884  02B8                     u635:
  2885  02B8  1003               	clrc
  2886  02B9  0DF2               	rlf	___awdiv@divisor,f
  2887  02BA  0DF3               	rlf	___awdiv@divisor+1,f
  2888  02BB  3EFF               	addlw	-1
  2889  02BC  1D03               	skipz
  2890  02BD  2AB8               	goto	u635
  2891  02BE                     l1803:
  2892  02BE  3001               	movlw	1
  2893  02BF  00F6               	movwf	??___awdiv
  2894  02C0  0876               	movf	??___awdiv,w
  2895  02C1  07BD               	addwf	___awdiv@counter,f
  2896  02C2                     l1805:
  2897  02C2  1FF3               	btfss	___awdiv@divisor+1,7
  2898  02C3  2AC5               	goto	u641
  2899  02C4  2AC6               	goto	u640
  2900  02C5                     u641:
  2901  02C5  2AB7               	goto	l1801
  2902  02C6                     u640:
  2903  02C6                     l1807:
  2904  02C6  3001               	movlw	1
  2905  02C7                     u655:
  2906  02C7  1003               	clrc
  2907  02C8  0DBF               	rlf	___awdiv@quotient,f
  2908  02C9  0DC0               	rlf	___awdiv@quotient+1,f
  2909  02CA  3EFF               	addlw	-1
  2910  02CB  1D03               	skipz
  2911  02CC  2AC7               	goto	u655
  2912  02CD  0873               	movf	___awdiv@divisor+1,w
  2913  02CE  0275               	subwf	___awdiv@dividend+1,w
  2914  02CF  1D03               	skipz
  2915  02D0  2AD3               	goto	u665
  2916  02D1  0872               	movf	___awdiv@divisor,w
  2917  02D2  0274               	subwf	___awdiv@dividend,w
  2918  02D3                     u665:
  2919  02D3  1C03               	skipc
  2920  02D4  2AD6               	goto	u661
  2921  02D5  2AD7               	goto	u660
  2922  02D6                     u661:
  2923  02D6  2ADE               	goto	l1813
  2924  02D7                     u660:
  2925  02D7                     l1809:
  2926  02D7  0872               	movf	___awdiv@divisor,w
  2927  02D8  02F4               	subwf	___awdiv@dividend,f
  2928  02D9  0873               	movf	___awdiv@divisor+1,w
  2929  02DA  1C03               	skipc
  2930  02DB  03F5               	decf	___awdiv@dividend+1,f
  2931  02DC  02F5               	subwf	___awdiv@dividend+1,f
  2932  02DD                     l1811:
  2933  02DD  143F               	bsf	___awdiv@quotient,0
  2934  02DE                     l1813:
  2935  02DE  3001               	movlw	1
  2936  02DF                     u675:
  2937  02DF  1003               	clrc
  2938  02E0  0CF3               	rrf	___awdiv@divisor+1,f
  2939  02E1  0CF2               	rrf	___awdiv@divisor,f
  2940  02E2  3EFF               	addlw	-1
  2941  02E3  1D03               	skipz
  2942  02E4  2ADF               	goto	u675
  2943  02E5                     l1815:
  2944  02E5  3001               	movlw	1
  2945  02E6  02BD               	subwf	___awdiv@counter,f
  2946  02E7  1D03               	btfss	3,2
  2947  02E8  2AEA               	goto	u681
  2948  02E9  2AEB               	goto	u680
  2949  02EA                     u681:
  2950  02EA  2AC6               	goto	l1807
  2951  02EB                     u680:
  2952  02EB                     l1817:
  2953  02EB  083E               	movf	___awdiv@sign,w
  2954  02EC  1903               	btfsc	3,2
  2955  02ED  2AEF               	goto	u691
  2956  02EE  2AF0               	goto	u690
  2957  02EF                     u691:
  2958  02EF  2AF5               	goto	l1821
  2959  02F0                     u690:
  2960  02F0                     l1819:
  2961  02F0  09BF               	comf	___awdiv@quotient,f
  2962  02F1  09C0               	comf	___awdiv@quotient+1,f
  2963  02F2  0ABF               	incf	___awdiv@quotient,f
  2964  02F3  1903               	skipnz
  2965  02F4  0AC0               	incf	___awdiv@quotient+1,f
  2966  02F5                     l1821:
  2967  02F5  0840               	movf	___awdiv@quotient+1,w
  2968  02F6  00F3               	movwf	?___awdiv+1
  2969  02F7  083F               	movf	___awdiv@quotient,w
  2970  02F8  00F2               	movwf	?___awdiv
  2971  02F9                     l560:
  2972  02F9  0008               	return
  2973  02FA                     __end_of___awdiv:
  2974                           
  2975                           	psect	text16
  2976  0617                     __ptext16:	
  2977 ;; *************** function _Lcd_Write_Char *****************
  2978 ;; Defined at:
  2979 ;;		line 95 in file "LCD_SPI.c"
  2980 ;; Parameters:    Size  Location     Type
  2981 ;;  a               1    wreg     unsigned char 
  2982 ;; Auto vars:     Size  Location     Type
  2983 ;;  a               1    4[COMMON] unsigned char 
  2984 ;; Return value:  Size  Location     Type
  2985 ;;                  1    wreg      void 
  2986 ;; Registers used:
  2987 ;;		wreg, status,2, status,0, pclath, cstack
  2988 ;; Tracked objects:
  2989 ;;		On entry : 0/0
  2990 ;;		On exit  : 0/0
  2991 ;;		Unchanged: 0/0
  2992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2993 ;;      Params:         0       0       0       0       0
  2994 ;;      Locals:         1       0       0       0       0
  2995 ;;      Temps:          1       0       0       0       0
  2996 ;;      Totals:         2       0       0       0       0
  2997 ;;Total ram usage:        2 bytes
  2998 ;; Hardware stack levels used:    1
  2999 ;; Hardware stack levels required when called:    2
  3000 ;; This function calls:
  3001 ;;		_Lcd_Port
  3002 ;; This function is called by:
  3003 ;;		_Conversion1
  3004 ;;		_Conversion2
  3005 ;;		_Conversion3
  3006 ;;		_Lcd_Write_String
  3007 ;; This function uses a non-reentrant model
  3008 ;;
  3009                           
  3010                           
  3011                           ;psect for function _Lcd_Write_Char
  3012  0617                     _Lcd_Write_Char:
  3013                           
  3014                           ;incstack = 0
  3015                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3016                           ;Lcd_Write_Char@a stored from wreg
  3017  0617  00F4               	movwf	Lcd_Write_Char@a
  3018  0618                     l1363:
  3019                           
  3020                           ;LCD_SPI.c: 95: void Lcd_Write_Char(char a);LCD_SPI.c: 96: {;LCD_SPI.c: 97:     PORTEbit
      +                          s.RE0 = 1;
  3021  0618  1283               	bcf	3,5	;RP0=0, select bank0
  3022  0619  1303               	bcf	3,6	;RP1=0, select bank0
  3023  061A  1409               	bsf	9,0	;volatile
  3024  061B                     l1365:
  3025                           
  3026                           ;LCD_SPI.c: 98:     Lcd_Port(a);
  3027  061B  0874               	movf	Lcd_Write_Char@a,w
  3028  061C  120A  118A  2689  120A  118A  	fcall	_Lcd_Port
  3029  0621                     l1367:
  3030                           
  3031                           ;LCD_SPI.c: 99:     PORTEbits.RE1 = 1;
  3032  0621  1283               	bcf	3,5	;RP0=0, select bank0
  3033  0622  1303               	bcf	3,6	;RP1=0, select bank0
  3034  0623  1489               	bsf	9,1	;volatile
  3035  0624                     l1369:
  3036                           
  3037                           ;LCD_SPI.c: 100:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3038  0624  301A               	movlw	26
  3039  0625  00F3               	movwf	??_Lcd_Write_Char
  3040  0626                     u787:
  3041  0626  0BF3               	decfsz	??_Lcd_Write_Char,f
  3042  0627  2E26               	goto	u787
  3043  0628  0000               	nop
  3044  0629                     l1371:
  3045                           
  3046                           ;LCD_SPI.c: 101:     PORTEbits.RE1 = 0;
  3047  0629  1283               	bcf	3,5	;RP0=0, select bank0
  3048  062A  1303               	bcf	3,6	;RP1=0, select bank0
  3049  062B  1089               	bcf	9,1	;volatile
  3050  062C                     l271:
  3051  062C  0008               	return
  3052  062D                     __end_of_Lcd_Write_Char:
  3053                           
  3054                           	psect	text17
  3055  064A                     __ptext17:	
  3056 ;; *************** function _interrup_config *****************
  3057 ;; Defined at:
  3058 ;;		line 207 in file "MAESTRO_SPI.c"
  3059 ;; Parameters:    Size  Location     Type
  3060 ;;		None
  3061 ;; Auto vars:     Size  Location     Type
  3062 ;;		None
  3063 ;; Return value:  Size  Location     Type
  3064 ;;                  1    wreg      void 
  3065 ;; Registers used:
  3066 ;;		status,2
  3067 ;; Tracked objects:
  3068 ;;		On entry : 0/0
  3069 ;;		On exit  : 0/0
  3070 ;;		Unchanged: 0/0
  3071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3072 ;;      Params:         0       0       0       0       0
  3073 ;;      Locals:         0       0       0       0       0
  3074 ;;      Temps:          0       0       0       0       0
  3075 ;;      Totals:         0       0       0       0       0
  3076 ;;Total ram usage:        0 bytes
  3077 ;; Hardware stack levels used:    1
  3078 ;; Hardware stack levels required when called:    1
  3079 ;; This function calls:
  3080 ;;		Nothing
  3081 ;; This function is called by:
  3082 ;;		_main
  3083 ;; This function uses a non-reentrant model
  3084 ;;
  3085                           
  3086                           
  3087                           ;psect for function _interrup_config
  3088  064A                     _interrup_config:
  3089  064A                     l1631:	
  3090                           ;incstack = 0
  3091                           ; Regs used in _interrup_config: [status,2]
  3092                           
  3093                           
  3094                           ;MAESTRO_SPI.c: 209:     INTCONbits.GIE = 1;
  3095  064A  178B               	bsf	11,7	;volatile
  3096                           
  3097                           ;MAESTRO_SPI.c: 210:     INTCONbits.PEIE = 1;
  3098  064B  170B               	bsf	11,6	;volatile
  3099                           
  3100                           ;MAESTRO_SPI.c: 211:     INTCONbits.T0IE = 1;
  3101  064C  168B               	bsf	11,5	;volatile
  3102                           
  3103                           ;MAESTRO_SPI.c: 212:     INTCONbits.INTE = 0;
  3104  064D  120B               	bcf	11,4	;volatile
  3105                           
  3106                           ;MAESTRO_SPI.c: 213:     INTCONbits.RBIE = 0;
  3107  064E  118B               	bcf	11,3	;volatile
  3108                           
  3109                           ;MAESTRO_SPI.c: 214:     INTCONbits.T0IF = 0;
  3110  064F  110B               	bcf	11,2	;volatile
  3111                           
  3112                           ;MAESTRO_SPI.c: 215:     INTCONbits.INTF = 0;
  3113  0650  108B               	bcf	11,1	;volatile
  3114                           
  3115                           ;MAESTRO_SPI.c: 216:     INTCONbits.RBIF = 0;
  3116  0651  100B               	bcf	11,0	;volatile
  3117  0652                     l1633:
  3118                           
  3119                           ;MAESTRO_SPI.c: 217:     IOCB = 0b00000000;
  3120  0652  1683               	bsf	3,5	;RP0=1, select bank1
  3121  0653  1303               	bcf	3,6	;RP1=0, select bank1
  3122  0654  0196               	clrf	22	;volatile
  3123  0655                     l170:
  3124  0655  0008               	return
  3125  0656                     __end_of_interrup_config:
  3126                           
  3127                           	psect	text18
  3128  067D                     __ptext18:	
  3129 ;; *************** function _USART_config *****************
  3130 ;; Defined at:
  3131 ;;		line 246 in file "MAESTRO_SPI.c"
  3132 ;; Parameters:    Size  Location     Type
  3133 ;;		None
  3134 ;; Auto vars:     Size  Location     Type
  3135 ;;		None
  3136 ;; Return value:  Size  Location     Type
  3137 ;;                  1    wreg      void 
  3138 ;; Registers used:
  3139 ;;		wreg, status,2, status,0, pclath, cstack
  3140 ;; Tracked objects:
  3141 ;;		On entry : 0/0
  3142 ;;		On exit  : 0/0
  3143 ;;		Unchanged: 0/0
  3144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3145 ;;      Params:         0       0       0       0       0
  3146 ;;      Locals:         0       0       0       0       0
  3147 ;;      Temps:          0       0       0       0       0
  3148 ;;      Totals:         0       0       0       0       0
  3149 ;;Total ram usage:        0 bytes
  3150 ;; Hardware stack levels used:    1
  3151 ;; Hardware stack levels required when called:    2
  3152 ;; This function calls:
  3153 ;;		_USART_lib_config
  3154 ;; This function is called by:
  3155 ;;		_main
  3156 ;; This function uses a non-reentrant model
  3157 ;;
  3158                           
  3159                           
  3160                           ;psect for function _USART_config
  3161  067D                     _USART_config:
  3162  067D                     l1661:	
  3163                           ;incstack = 0
  3164                           ; Regs used in _USART_config: [wreg+status,2+status,0+pclath+cstack]
  3165                           
  3166                           
  3167                           ;MAESTRO_SPI.c: 248:     USART_lib_config();
  3168  067D  120A  118A  25C4  120A  118A  	fcall	_USART_lib_config
  3169  0682                     l179:
  3170  0682  0008               	return
  3171  0683                     __end_of_USART_config:
  3172                           
  3173                           	psect	text19
  3174  05C4                     __ptext19:	
  3175 ;; *************** function _USART_lib_config *****************
  3176 ;; Defined at:
  3177 ;;		line 19 in file "USART_SPI.c"
  3178 ;; Parameters:    Size  Location     Type
  3179 ;;		None
  3180 ;; Auto vars:     Size  Location     Type
  3181 ;;		None
  3182 ;; Return value:  Size  Location     Type
  3183 ;;                  1    wreg      void 
  3184 ;; Registers used:
  3185 ;;		wreg
  3186 ;; Tracked objects:
  3187 ;;		On entry : 0/0
  3188 ;;		On exit  : 0/0
  3189 ;;		Unchanged: 0/0
  3190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3191 ;;      Params:         0       0       0       0       0
  3192 ;;      Locals:         0       0       0       0       0
  3193 ;;      Temps:          0       0       0       0       0
  3194 ;;      Totals:         0       0       0       0       0
  3195 ;;Total ram usage:        0 bytes
  3196 ;; Hardware stack levels used:    1
  3197 ;; Hardware stack levels required when called:    1
  3198 ;; This function calls:
  3199 ;;		Nothing
  3200 ;; This function is called by:
  3201 ;;		_USART_config
  3202 ;; This function uses a non-reentrant model
  3203 ;;
  3204                           
  3205                           
  3206                           ;psect for function _USART_lib_config
  3207  05C4                     _USART_lib_config:
  3208  05C4                     l1489:	
  3209                           ;incstack = 0
  3210                           ; Regs used in _USART_lib_config: [wreg]
  3211                           
  3212                           
  3213                           ;USART_SPI.c: 21:     SPBRG = 25;
  3214  05C4  3019               	movlw	25
  3215  05C5  1683               	bsf	3,5	;RP0=1, select bank1
  3216  05C6  1303               	bcf	3,6	;RP1=0, select bank1
  3217  05C7  0099               	movwf	25	;volatile
  3218  05C8                     l1491:
  3219                           
  3220                           ;USART_SPI.c: 23:     TXSTAbits.CSRC = 0;
  3221  05C8  1398               	bcf	24,7	;volatile
  3222  05C9                     l1493:
  3223                           
  3224                           ;USART_SPI.c: 24:     TXSTAbits.TX9 = 0;
  3225  05C9  1318               	bcf	24,6	;volatile
  3226  05CA                     l1495:
  3227                           
  3228                           ;USART_SPI.c: 25:     TXSTAbits.TXEN = 1;
  3229  05CA  1698               	bsf	24,5	;volatile
  3230  05CB                     l1497:
  3231                           
  3232                           ;USART_SPI.c: 26:     TXSTAbits.SYNC = 0;
  3233  05CB  1218               	bcf	24,4	;volatile
  3234  05CC                     l1499:
  3235                           
  3236                           ;USART_SPI.c: 27:     TXSTAbits.SENDB= 0;
  3237  05CC  1198               	bcf	24,3	;volatile
  3238  05CD                     l1501:
  3239                           
  3240                           ;USART_SPI.c: 28:     TXSTAbits.BRGH = 1;
  3241  05CD  1518               	bsf	24,2	;volatile
  3242  05CE                     l1503:
  3243                           
  3244                           ;USART_SPI.c: 29:     TXSTAbits.TRMT = 0;
  3245  05CE  1098               	bcf	24,1	;volatile
  3246  05CF                     l1505:
  3247                           
  3248                           ;USART_SPI.c: 30:     TXSTAbits.TX9D = 0;
  3249  05CF  1018               	bcf	24,0	;volatile
  3250  05D0                     l1507:
  3251                           
  3252                           ;USART_SPI.c: 32:     RCSTAbits.SPEN = 1;
  3253  05D0  1283               	bcf	3,5	;RP0=0, select bank0
  3254  05D1  1303               	bcf	3,6	;RP1=0, select bank0
  3255  05D2  1798               	bsf	24,7	;volatile
  3256  05D3                     l1509:
  3257                           
  3258                           ;USART_SPI.c: 33:     RCSTAbits.RX9 = 0;
  3259  05D3  1318               	bcf	24,6	;volatile
  3260  05D4                     l1511:
  3261                           
  3262                           ;USART_SPI.c: 34:     RCSTAbits.SREN = 0;
  3263  05D4  1298               	bcf	24,5	;volatile
  3264  05D5                     l1513:
  3265                           
  3266                           ;USART_SPI.c: 35:     RCSTAbits.CREN = 1;
  3267  05D5  1618               	bsf	24,4	;volatile
  3268  05D6                     l1515:
  3269                           
  3270                           ;USART_SPI.c: 36:     RCSTAbits.ADDEN= 0;
  3271  05D6  1198               	bcf	24,3	;volatile
  3272  05D7                     l1517:
  3273                           
  3274                           ;USART_SPI.c: 37:     RCSTAbits.FERR = 0;
  3275  05D7  1118               	bcf	24,2	;volatile
  3276  05D8                     l1519:
  3277                           
  3278                           ;USART_SPI.c: 38:     RCSTAbits.OERR = 0;
  3279  05D8  1098               	bcf	24,1	;volatile
  3280  05D9                     l1521:
  3281                           
  3282                           ;USART_SPI.c: 39:     RCSTAbits.RX9D = 0;
  3283  05D9  1018               	bcf	24,0	;volatile
  3284  05DA                     l1523:
  3285                           
  3286                           ;USART_SPI.c: 41:     PIR1bits.RCIF = 0;
  3287  05DA  128C               	bcf	12,5	;volatile
  3288  05DB                     l1525:
  3289                           
  3290                           ;USART_SPI.c: 42:     PIE1bits.RCIE = 1;
  3291  05DB  1683               	bsf	3,5	;RP0=1, select bank1
  3292  05DC  1303               	bcf	3,6	;RP1=0, select bank1
  3293  05DD  168C               	bsf	12,5	;volatile
  3294  05DE                     l1527:
  3295                           
  3296                           ;USART_SPI.c: 43:     PIR1bits.TXIF = 0;
  3297  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  3298  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  3299  05E0  120C               	bcf	12,4	;volatile
  3300  05E1                     l230:
  3301  05E1  0008               	return
  3302  05E2                     __end_of_USART_lib_config:
  3303                           
  3304                           	psect	text20
  3305  0656                     __ptext20:	
  3306 ;; *************** function _SPI_config *****************
  3307 ;; Defined at:
  3308 ;;		line 251 in file "MAESTRO_SPI.c"
  3309 ;; Parameters:    Size  Location     Type
  3310 ;;		None
  3311 ;; Auto vars:     Size  Location     Type
  3312 ;;		None
  3313 ;; Return value:  Size  Location     Type
  3314 ;;                  1    wreg      void 
  3315 ;; Registers used:
  3316 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3317 ;; Tracked objects:
  3318 ;;		On entry : 0/0
  3319 ;;		On exit  : 0/0
  3320 ;;		Unchanged: 0/0
  3321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3322 ;;      Params:         0       0       0       0       0
  3323 ;;      Locals:         0       0       0       0       0
  3324 ;;      Temps:          1       0       0       0       0
  3325 ;;      Totals:         1       0       0       0       0
  3326 ;;Total ram usage:        1 bytes
  3327 ;; Hardware stack levels used:    1
  3328 ;; Hardware stack levels required when called:    2
  3329 ;; This function calls:
  3330 ;;		_SPI_Maestro_Init
  3331 ;; This function is called by:
  3332 ;;		_main
  3333 ;; This function uses a non-reentrant model
  3334 ;;
  3335                           
  3336                           
  3337                           ;psect for function _SPI_config
  3338  0656                     _SPI_config:
  3339  0656                     l1663:	
  3340                           ;incstack = 0
  3341                           ; Regs used in _SPI_config: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3342                           
  3343                           
  3344                           ;MAESTRO_SPI.c: 253:     SPI_Maestro_Init (0, 2);
  3345  0656  3002               	movlw	2
  3346  0657  00F6               	movwf	??_SPI_config
  3347  0658  0876               	movf	??_SPI_config,w
  3348  0659  00F2               	movwf	SPI_Maestro_Init@SCK
  3349  065A  3000               	movlw	0
  3350  065B  120A  118A  220C  120A  118A  	fcall	_SPI_Maestro_Init
  3351  0660                     l182:
  3352  0660  0008               	return
  3353  0661                     __end_of_SPI_config:
  3354                           
  3355                           	psect	text21
  3356  020C                     __ptext21:	
  3357 ;; *************** function _SPI_Maestro_Init *****************
  3358 ;; Defined at:
  3359 ;;		line 4 in file "SPI_SPI.c"
  3360 ;; Parameters:    Size  Location     Type
  3361 ;;  port_mode       1    wreg     unsigned char 
  3362 ;;  SCK             1    2[COMMON] unsigned char 
  3363 ;; Auto vars:     Size  Location     Type
  3364 ;;  port_mode       1    5[COMMON] unsigned char 
  3365 ;; Return value:  Size  Location     Type
  3366 ;;                  1    wreg      void 
  3367 ;; Registers used:
  3368 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3369 ;; Tracked objects:
  3370 ;;		On entry : 0/0
  3371 ;;		On exit  : 0/0
  3372 ;;		Unchanged: 0/0
  3373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3374 ;;      Params:         1       0       0       0       0
  3375 ;;      Locals:         1       0       0       0       0
  3376 ;;      Temps:          2       0       0       0       0
  3377 ;;      Totals:         4       0       0       0       0
  3378 ;;Total ram usage:        4 bytes
  3379 ;; Hardware stack levels used:    1
  3380 ;; Hardware stack levels required when called:    1
  3381 ;; This function calls:
  3382 ;;		Nothing
  3383 ;; This function is called by:
  3384 ;;		_SPI_config
  3385 ;; This function uses a non-reentrant model
  3386 ;;
  3387                           
  3388                           
  3389                           ;psect for function _SPI_Maestro_Init
  3390  020C                     _SPI_Maestro_Init:
  3391                           
  3392                           ;incstack = 0
  3393                           ; Regs used in _SPI_Maestro_Init: [wreg-fsr0h+status,2+status,0]
  3394                           ;SPI_Maestro_Init@port_mode stored from wreg
  3395  020C  00F5               	movwf	SPI_Maestro_Init@port_mode
  3396  020D                     l1529:
  3397                           
  3398                           ;SPI_SPI.c: 4: void SPI_Maestro_Init (char port_mode, char SCK);SPI_SPI.c: 5: {;SPI_SPI.
      +                          c: 6:     TRISCbits.TRISC0 = 0;
  3399  020D  1683               	bsf	3,5	;RP0=1, select bank1
  3400  020E  1303               	bcf	3,6	;RP1=0, select bank1
  3401  020F  1007               	bcf	7,0	;volatile
  3402                           
  3403                           ;SPI_SPI.c: 7:     TRISCbits.TRISC1 = 0;
  3404  0210  1087               	bcf	7,1	;volatile
  3405                           
  3406                           ;SPI_SPI.c: 8:     TRISCbits.TRISC2 = 0;
  3407  0211  1107               	bcf	7,2	;volatile
  3408                           
  3409                           ;SPI_SPI.c: 9:     TRISCbits.TRISC5 = 0;
  3410  0212  1287               	bcf	7,5	;volatile
  3411                           
  3412                           ;SPI_SPI.c: 10:     TRISCbits.TRISC4 = 1;
  3413  0213  1607               	bsf	7,4	;volatile
  3414                           
  3415                           ;SPI_SPI.c: 11:     TRISCbits.TRISC3 = 0;
  3416  0214  1187               	bcf	7,3	;volatile
  3417                           
  3418                           ;SPI_SPI.c: 13:     switch (port_mode)
  3419  0215  2A40               	goto	l1533
  3420  0216                     l285:	
  3421                           ;SPI_SPI.c: 14:     {;SPI_SPI.c: 15:         case 0:
  3422                           
  3423                           
  3424                           ;SPI_SPI.c: 16:             SSPCONbits.SSPM3 = 0;
  3425  0216  1283               	bcf	3,5	;RP0=0, select bank0
  3426  0217  1303               	bcf	3,6	;RP1=0, select bank0
  3427  0218  1194               	bcf	20,3	;volatile
  3428                           
  3429                           ;SPI_SPI.c: 17:             SSPCONbits.SSPM2 = 0;
  3430  0219  1114               	bcf	20,2	;volatile
  3431                           
  3432                           ;SPI_SPI.c: 18:             SSPCONbits.SSPM1 = 0;
  3433  021A  1094               	bcf	20,1	;volatile
  3434                           
  3435                           ;SPI_SPI.c: 19:             SSPCONbits.SSPM0 = 0;
  3436  021B  1014               	bcf	20,0	;volatile
  3437                           
  3438                           ;SPI_SPI.c: 21:             break;
  3439  021C  2A74               	goto	l1537
  3440  021D                     l287:	
  3441                           ;SPI_SPI.c: 22:          case 1:
  3442                           
  3443                           
  3444                           ;SPI_SPI.c: 23:             SSPCONbits.SSPM3 = 0;
  3445  021D  1283               	bcf	3,5	;RP0=0, select bank0
  3446  021E  1303               	bcf	3,6	;RP1=0, select bank0
  3447  021F  1194               	bcf	20,3	;volatile
  3448                           
  3449                           ;SPI_SPI.c: 24:             SSPCONbits.SSPM2 = 0;
  3450  0220  1114               	bcf	20,2	;volatile
  3451                           
  3452                           ;SPI_SPI.c: 25:             SSPCONbits.SSPM1 = 0;
  3453  0221  1094               	bcf	20,1	;volatile
  3454                           
  3455                           ;SPI_SPI.c: 26:             SSPCONbits.SSPM0 = 1;
  3456  0222  1414               	bsf	20,0	;volatile
  3457                           
  3458                           ;SPI_SPI.c: 28:             break;
  3459  0223  2A74               	goto	l1537
  3460  0224                     l288:	
  3461                           ;SPI_SPI.c: 29:          case 2:
  3462                           
  3463                           
  3464                           ;SPI_SPI.c: 30:             SSPCONbits.SSPM3 = 0;
  3465  0224  1283               	bcf	3,5	;RP0=0, select bank0
  3466  0225  1303               	bcf	3,6	;RP1=0, select bank0
  3467  0226  1194               	bcf	20,3	;volatile
  3468                           
  3469                           ;SPI_SPI.c: 31:             SSPCONbits.SSPM2 = 0;
  3470  0227  1114               	bcf	20,2	;volatile
  3471                           
  3472                           ;SPI_SPI.c: 32:             SSPCONbits.SSPM1 = 1;
  3473  0228  1494               	bsf	20,1	;volatile
  3474                           
  3475                           ;SPI_SPI.c: 33:             SSPCONbits.SSPM0 = 0;
  3476  0229  1014               	bcf	20,0	;volatile
  3477                           
  3478                           ;SPI_SPI.c: 35:             break;
  3479  022A  2A74               	goto	l1537
  3480  022B                     l289:	
  3481                           ;SPI_SPI.c: 36:          case 3:
  3482                           
  3483                           
  3484                           ;SPI_SPI.c: 37:             SSPCONbits.SSPM3 = 0;
  3485  022B  1283               	bcf	3,5	;RP0=0, select bank0
  3486  022C  1303               	bcf	3,6	;RP1=0, select bank0
  3487  022D  1194               	bcf	20,3	;volatile
  3488                           
  3489                           ;SPI_SPI.c: 38:             SSPCONbits.SSPM2 = 0;
  3490  022E  1114               	bcf	20,2	;volatile
  3491                           
  3492                           ;SPI_SPI.c: 39:             SSPCONbits.SSPM1 = 1;
  3493  022F  1494               	bsf	20,1	;volatile
  3494                           
  3495                           ;SPI_SPI.c: 40:             SSPCONbits.SSPM0 = 1;
  3496  0230  1414               	bsf	20,0	;volatile
  3497                           
  3498                           ;SPI_SPI.c: 41:             break;
  3499  0231  2A74               	goto	l1537
  3500  0232                     l290:	
  3501                           ;SPI_SPI.c: 42:          case 4:
  3502                           
  3503                           
  3504                           ;SPI_SPI.c: 43:             SSPCONbits.SSPM3 = 0;
  3505  0232  1283               	bcf	3,5	;RP0=0, select bank0
  3506  0233  1303               	bcf	3,6	;RP1=0, select bank0
  3507  0234  1194               	bcf	20,3	;volatile
  3508                           
  3509                           ;SPI_SPI.c: 44:             SSPCONbits.SSPM2 = 1;
  3510  0235  1514               	bsf	20,2	;volatile
  3511                           
  3512                           ;SPI_SPI.c: 45:             SSPCONbits.SSPM1 = 0;
  3513  0236  1094               	bcf	20,1	;volatile
  3514                           
  3515                           ;SPI_SPI.c: 46:             SSPCONbits.SSPM0 = 0;
  3516  0237  1014               	bcf	20,0	;volatile
  3517                           
  3518                           ;SPI_SPI.c: 48:             break;
  3519  0238  2A74               	goto	l1537
  3520  0239                     l291:	
  3521                           ;SPI_SPI.c: 49:          case 5:
  3522                           
  3523                           
  3524                           ;SPI_SPI.c: 50:             SSPCONbits.SSPM3 = 0;
  3525  0239  1283               	bcf	3,5	;RP0=0, select bank0
  3526  023A  1303               	bcf	3,6	;RP1=0, select bank0
  3527  023B  1194               	bcf	20,3	;volatile
  3528                           
  3529                           ;SPI_SPI.c: 51:             SSPCONbits.SSPM2 = 1;
  3530  023C  1514               	bsf	20,2	;volatile
  3531                           
  3532                           ;SPI_SPI.c: 52:             SSPCONbits.SSPM1 = 0;
  3533  023D  1094               	bcf	20,1	;volatile
  3534                           
  3535                           ;SPI_SPI.c: 53:             SSPCONbits.SSPM0 = 1;
  3536  023E  1414               	bsf	20,0	;volatile
  3537                           
  3538                           ;SPI_SPI.c: 54:             break;
  3539  023F  2A74               	goto	l1537
  3540  0240                     l1533:
  3541  0240  0875               	movf	SPI_Maestro_Init@port_mode,w
  3542  0241  00F3               	movwf	??_SPI_Maestro_Init
  3543  0242  01F4               	clrf	??_SPI_Maestro_Init+1
  3544                           
  3545                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3546                           ; Switch size 1, requested type "simple"
  3547                           ; Number of cases is 1, Range of values is 0 to 0
  3548                           ; switch strategies available:
  3549                           ; Name         Instructions Cycles
  3550                           ; simple_byte            4     3 (average)
  3551                           ; direct_byte           11     8 (fixed)
  3552                           ; jumptable            260     6 (fixed)
  3553                           ;	Chosen strategy is simple_byte
  3554  0243  0874               	movf	??_SPI_Maestro_Init+1,w
  3555  0244  3A00               	xorlw	0	; case 0
  3556  0245  1903               	skipnz
  3557  0246  2A48               	goto	l1979
  3558  0247  2A74               	goto	l1537
  3559  0248                     l1979:
  3560                           
  3561                           ; Switch size 1, requested type "simple"
  3562                           ; Number of cases is 6, Range of values is 0 to 5
  3563                           ; switch strategies available:
  3564                           ; Name         Instructions Cycles
  3565                           ; simple_byte           19    10 (average)
  3566                           ; direct_byte           26     8 (fixed)
  3567                           ; jumptable            260     6 (fixed)
  3568                           ;	Chosen strategy is simple_byte
  3569  0248  0873               	movf	??_SPI_Maestro_Init,w
  3570  0249  3A00               	xorlw	0	; case 0
  3571  024A  1903               	skipnz
  3572  024B  2A16               	goto	l285
  3573  024C  3A01               	xorlw	1	; case 1
  3574  024D  1903               	skipnz
  3575  024E  2A1D               	goto	l287
  3576  024F  3A03               	xorlw	3	; case 2
  3577  0250  1903               	skipnz
  3578  0251  2A24               	goto	l288
  3579  0252  3A01               	xorlw	1	; case 3
  3580  0253  1903               	skipnz
  3581  0254  2A2B               	goto	l289
  3582  0255  3A07               	xorlw	7	; case 4
  3583  0256  1903               	skipnz
  3584  0257  2A32               	goto	l290
  3585  0258  3A01               	xorlw	1	; case 5
  3586  0259  1903               	skipnz
  3587  025A  2A39               	goto	l291
  3588  025B  2A74               	goto	l1537
  3589  025C                     l293:	
  3590                           ;SPI_SPI.c: 58:     {;SPI_SPI.c: 59:         case 0:
  3591                           
  3592                           
  3593                           ;SPI_SPI.c: 60:             SSPCONbits.CKP = 0;
  3594  025C  1283               	bcf	3,5	;RP0=0, select bank0
  3595  025D  1214               	bcf	20,4	;volatile
  3596                           
  3597                           ;SPI_SPI.c: 61:             SSPSTATbits.CKE = 0;
  3598  025E  1683               	bsf	3,5	;RP0=1, select bank1
  3599  025F  1303               	bcf	3,6	;RP1=0, select bank1
  3600  0260  1314               	bcf	20,6	;volatile
  3601                           
  3602                           ;SPI_SPI.c: 63:             break;
  3603  0261  2A8A               	goto	l294
  3604  0262                     l295:	
  3605                           ;SPI_SPI.c: 64:          case 1:
  3606                           
  3607                           
  3608                           ;SPI_SPI.c: 65:             SSPCONbits.CKP = 1;
  3609  0262  1283               	bcf	3,5	;RP0=0, select bank0
  3610  0263  1614               	bsf	20,4	;volatile
  3611                           
  3612                           ;SPI_SPI.c: 66:             SSPSTATbits.CKE = 0;
  3613  0264  1683               	bsf	3,5	;RP0=1, select bank1
  3614  0265  1303               	bcf	3,6	;RP1=0, select bank1
  3615  0266  1314               	bcf	20,6	;volatile
  3616                           
  3617                           ;SPI_SPI.c: 68:             break;
  3618  0267  2A8A               	goto	l294
  3619  0268                     l296:	
  3620                           ;SPI_SPI.c: 69:          case 2:
  3621                           
  3622                           
  3623                           ;SPI_SPI.c: 70:             SSPCONbits.CKP = 0;
  3624  0268  1283               	bcf	3,5	;RP0=0, select bank0
  3625  0269  1214               	bcf	20,4	;volatile
  3626                           
  3627                           ;SPI_SPI.c: 71:             SSPSTATbits.CKE = 1;
  3628  026A  1683               	bsf	3,5	;RP0=1, select bank1
  3629  026B  1303               	bcf	3,6	;RP1=0, select bank1
  3630  026C  1714               	bsf	20,6	;volatile
  3631                           
  3632                           ;SPI_SPI.c: 73:             break;
  3633  026D  2A8A               	goto	l294
  3634  026E                     l297:	
  3635                           ;SPI_SPI.c: 74:          case 3:
  3636                           
  3637                           
  3638                           ;SPI_SPI.c: 75:             SSPCONbits.CKP = 1;
  3639  026E  1283               	bcf	3,5	;RP0=0, select bank0
  3640  026F  1614               	bsf	20,4	;volatile
  3641                           
  3642                           ;SPI_SPI.c: 76:             SSPSTATbits.CKE = 1;
  3643  0270  1683               	bsf	3,5	;RP0=1, select bank1
  3644  0271  1303               	bcf	3,6	;RP1=0, select bank1
  3645  0272  1714               	bsf	20,6	;volatile
  3646                           
  3647                           ;SPI_SPI.c: 77:             break;
  3648  0273  2A8A               	goto	l294
  3649  0274                     l1537:
  3650  0274  0872               	movf	SPI_Maestro_Init@SCK,w
  3651  0275  00F3               	movwf	??_SPI_Maestro_Init
  3652  0276  01F4               	clrf	??_SPI_Maestro_Init+1
  3653                           
  3654                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3655                           ; Switch size 1, requested type "simple"
  3656                           ; Number of cases is 1, Range of values is 0 to 0
  3657                           ; switch strategies available:
  3658                           ; Name         Instructions Cycles
  3659                           ; simple_byte            4     3 (average)
  3660                           ; direct_byte           11     8 (fixed)
  3661                           ; jumptable            260     6 (fixed)
  3662                           ;	Chosen strategy is simple_byte
  3663  0277  0874               	movf	??_SPI_Maestro_Init+1,w
  3664  0278  3A00               	xorlw	0	; case 0
  3665  0279  1903               	skipnz
  3666  027A  2A7C               	goto	l1981
  3667  027B  2A8A               	goto	l294
  3668  027C                     l1981:
  3669                           
  3670                           ; Switch size 1, requested type "simple"
  3671                           ; Number of cases is 4, Range of values is 0 to 3
  3672                           ; switch strategies available:
  3673                           ; Name         Instructions Cycles
  3674                           ; simple_byte           13     7 (average)
  3675                           ; direct_byte           20     8 (fixed)
  3676                           ; jumptable            260     6 (fixed)
  3677                           ;	Chosen strategy is simple_byte
  3678  027C  0873               	movf	??_SPI_Maestro_Init,w
  3679  027D  3A00               	xorlw	0	; case 0
  3680  027E  1903               	skipnz
  3681  027F  2A5C               	goto	l293
  3682  0280  3A01               	xorlw	1	; case 1
  3683  0281  1903               	skipnz
  3684  0282  2A62               	goto	l295
  3685  0283  3A03               	xorlw	3	; case 2
  3686  0284  1903               	skipnz
  3687  0285  2A68               	goto	l296
  3688  0286  3A01               	xorlw	1	; case 3
  3689  0287  1903               	skipnz
  3690  0288  2A6E               	goto	l297
  3691  0289  2A8A               	goto	l294
  3692  028A                     l294:
  3693                           
  3694                           ;SPI_SPI.c: 79:     SSPSTATbits.SMP = 0;
  3695  028A  1683               	bsf	3,5	;RP0=1, select bank1
  3696  028B  1303               	bcf	3,6	;RP1=0, select bank1
  3697  028C  1394               	bcf	20,7	;volatile
  3698                           
  3699                           ;SPI_SPI.c: 80:     SSPCONbits.SSPEN = 1;
  3700  028D  1283               	bcf	3,5	;RP0=0, select bank0
  3701  028E  1303               	bcf	3,6	;RP1=0, select bank0
  3702  028F  1694               	bsf	20,5	;volatile
  3703  0290                     l298:
  3704  0290  0008               	return
  3705  0291                     __end_of_SPI_Maestro_Init:
  3706                           
  3707                           	psect	text22
  3708  068F                     __ptext22:	
  3709 ;; *************** function _SPI_Recibir *****************
  3710 ;; Defined at:
  3711 ;;		line 167 in file "SPI_SPI.c"
  3712 ;; Parameters:    Size  Location     Type
  3713 ;;		None
  3714 ;; Auto vars:     Size  Location     Type
  3715 ;;		None
  3716 ;; Return value:  Size  Location     Type
  3717 ;;                  1    wreg      unsigned char 
  3718 ;; Registers used:
  3719 ;;		wreg
  3720 ;; Tracked objects:
  3721 ;;		On entry : 0/0
  3722 ;;		On exit  : 0/0
  3723 ;;		Unchanged: 0/0
  3724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3725 ;;      Params:         0       0       0       0       0
  3726 ;;      Locals:         0       0       0       0       0
  3727 ;;      Temps:          0       0       0       0       0
  3728 ;;      Totals:         0       0       0       0       0
  3729 ;;Total ram usage:        0 bytes
  3730 ;; Hardware stack levels used:    1
  3731 ;; Hardware stack levels required when called:    1
  3732 ;; This function calls:
  3733 ;;		Nothing
  3734 ;; This function is called by:
  3735 ;;		_main
  3736 ;; This function uses a non-reentrant model
  3737 ;;
  3738                           
  3739                           
  3740                           ;psect for function _SPI_Recibir
  3741  068F                     _SPI_Recibir:
  3742  068F                     l1667:	
  3743                           ;incstack = 0
  3744                           ; Regs used in _SPI_Recibir: [wreg]
  3745                           
  3746                           
  3747                           ;SPI_SPI.c: 169:     return SSPBUF;
  3748  068F  1283               	bcf	3,5	;RP0=0, select bank0
  3749  0690  1303               	bcf	3,6	;RP1=0, select bank0
  3750  0691  0813               	movf	19,w	;volatile
  3751  0692                     l321:
  3752  0692  0008               	return
  3753  0693                     __end_of_SPI_Recibir:
  3754                           
  3755                           	psect	text23
  3756  0683                     __ptext23:	
  3757 ;; *************** function _SPI_Enviar *****************
  3758 ;; Defined at:
  3759 ;;		line 161 in file "SPI_SPI.c"
  3760 ;; Parameters:    Size  Location     Type
  3761 ;;  valor           1    wreg     unsigned char 
  3762 ;; Auto vars:     Size  Location     Type
  3763 ;;  valor           1    2[COMMON] unsigned char 
  3764 ;; Return value:  Size  Location     Type
  3765 ;;                  1    wreg      void 
  3766 ;; Registers used:
  3767 ;;		wreg
  3768 ;; Tracked objects:
  3769 ;;		On entry : 0/0
  3770 ;;		On exit  : 0/0
  3771 ;;		Unchanged: 0/0
  3772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3773 ;;      Params:         0       0       0       0       0
  3774 ;;      Locals:         1       0       0       0       0
  3775 ;;      Temps:          0       0       0       0       0
  3776 ;;      Totals:         1       0       0       0       0
  3777 ;;Total ram usage:        1 bytes
  3778 ;; Hardware stack levels used:    1
  3779 ;; Hardware stack levels required when called:    1
  3780 ;; This function calls:
  3781 ;;		Nothing
  3782 ;; This function is called by:
  3783 ;;		_main
  3784 ;; This function uses a non-reentrant model
  3785 ;;
  3786                           
  3787                           
  3788                           ;psect for function _SPI_Enviar
  3789  0683                     _SPI_Enviar:
  3790                           
  3791                           ;incstack = 0
  3792                           ; Regs used in _SPI_Enviar: [wreg]
  3793                           ;SPI_Enviar@valor stored from wreg
  3794  0683  00F2               	movwf	SPI_Enviar@valor
  3795  0684                     l1665:
  3796                           
  3797                           ;SPI_SPI.c: 161: void SPI_Enviar (char valor);SPI_SPI.c: 162: {;SPI_SPI.c: 163:     SSPB
      +                          UF = valor;
  3798  0684  0872               	movf	SPI_Enviar@valor,w
  3799  0685  1283               	bcf	3,5	;RP0=0, select bank0
  3800  0686  1303               	bcf	3,6	;RP1=0, select bank0
  3801  0687  0093               	movwf	19	;volatile
  3802  0688                     l318:
  3803  0688  0008               	return
  3804  0689                     __end_of_SPI_Enviar:
  3805                           
  3806                           	psect	text24
  3807  0419                     __ptext24:	
  3808 ;; *************** function _Lcd_Init *****************
  3809 ;; Defined at:
  3810 ;;		line 37 in file "LCD_SPI.c"
  3811 ;; Parameters:    Size  Location     Type
  3812 ;;		None
  3813 ;; Auto vars:     Size  Location     Type
  3814 ;;		None
  3815 ;; Return value:  Size  Location     Type
  3816 ;;                  1    wreg      void 
  3817 ;; Registers used:
  3818 ;;		wreg, status,2, status,0, pclath, cstack
  3819 ;; Tracked objects:
  3820 ;;		On entry : 0/0
  3821 ;;		On exit  : 0/0
  3822 ;;		Unchanged: 0/0
  3823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3824 ;;      Params:         0       0       0       0       0
  3825 ;;      Locals:         0       0       0       0       0
  3826 ;;      Temps:          2       0       0       0       0
  3827 ;;      Totals:         2       0       0       0       0
  3828 ;;Total ram usage:        2 bytes
  3829 ;; Hardware stack levels used:    1
  3830 ;; Hardware stack levels required when called:    3
  3831 ;; This function calls:
  3832 ;;		_Lcd_Cmd
  3833 ;;		_Lcd_Port
  3834 ;; This function is called by:
  3835 ;;		_main
  3836 ;; This function uses a non-reentrant model
  3837 ;;
  3838                           
  3839                           
  3840                           ;psect for function _Lcd_Init
  3841  0419                     _Lcd_Init:
  3842  0419                     l1639:	
  3843                           ;incstack = 0
  3844                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3845                           
  3846                           
  3847                           ;LCD_SPI.c: 39:     Lcd_Port(0b0000000);
  3848  0419  3000               	movlw	0
  3849  041A  120A  118A  2689  120A  118A  	fcall	_Lcd_Port
  3850  041F                     l1641:
  3851                           
  3852                           ;LCD_SPI.c: 40:     _delay((unsigned long)((20)*(8000000/4000.0)));
  3853  041F  3034               	movlw	52
  3854  0420  00F7               	movwf	??_Lcd_Init+1
  3855  0421  30F1               	movlw	241
  3856  0422  00F6               	movwf	??_Lcd_Init
  3857  0423                     u797:
  3858  0423  0BF6               	decfsz	??_Lcd_Init,f
  3859  0424  2C23               	goto	u797
  3860  0425  0BF7               	decfsz	??_Lcd_Init+1,f
  3861  0426  2C23               	goto	u797
  3862  0427  2C28               	nop2
  3863  0428                     l1643:
  3864                           
  3865                           ;LCD_SPI.c: 41:     Lcd_Cmd(0b00110000);
  3866  0428  3030               	movlw	48
  3867  0429  120A  118A  25E2  120A  118A  	fcall	_Lcd_Cmd
  3868  042E                     l1645:
  3869                           
  3870                           ;LCD_SPI.c: 42:     PORTEbits.RE0 = 0;
  3871  042E  1283               	bcf	3,5	;RP0=0, select bank0
  3872  042F  1303               	bcf	3,6	;RP1=0, select bank0
  3873  0430  1009               	bcf	9,0	;volatile
  3874  0431                     l1647:
  3875                           
  3876                           ;LCD_SPI.c: 43:     PORTEbits.RE2 = 0;
  3877  0431  1109               	bcf	9,2	;volatile
  3878                           
  3879                           ;LCD_SPI.c: 44:     _delay((unsigned long)((5)*(8000000/4000.0)));
  3880  0432  300D               	movlw	13
  3881  0433  00F7               	movwf	??_Lcd_Init+1
  3882  0434  30FB               	movlw	251
  3883  0435  00F6               	movwf	??_Lcd_Init
  3884  0436                     u807:
  3885  0436  0BF6               	decfsz	??_Lcd_Init,f
  3886  0437  2C36               	goto	u807
  3887  0438  0BF7               	decfsz	??_Lcd_Init+1,f
  3888  0439  2C36               	goto	u807
  3889  043A  2C3B               	nop2
  3890  043B                     l1649:
  3891                           
  3892                           ;LCD_SPI.c: 45:     Lcd_Cmd(0b00110000);
  3893  043B  3030               	movlw	48
  3894  043C  120A  118A  25E2  120A  118A  	fcall	_Lcd_Cmd
  3895  0441                     l1651:
  3896                           
  3897                           ;LCD_SPI.c: 46:      PORTEbits.RE0 = 0;
  3898  0441  1283               	bcf	3,5	;RP0=0, select bank0
  3899  0442  1303               	bcf	3,6	;RP1=0, select bank0
  3900  0443  1009               	bcf	9,0	;volatile
  3901  0444                     l1653:
  3902                           
  3903                           ;LCD_SPI.c: 47:     PORTEbits.RE2 = 0;
  3904  0444  1109               	bcf	9,2	;volatile
  3905  0445                     l1655:
  3906                           
  3907                           ;LCD_SPI.c: 48:     _delay((unsigned long)((11)*(8000000/4000.0)));
  3908  0445  301D               	movlw	29
  3909  0446  00F7               	movwf	??_Lcd_Init+1
  3910  0447  3091               	movlw	145
  3911  0448  00F6               	movwf	??_Lcd_Init
  3912  0449                     u817:
  3913  0449  0BF6               	decfsz	??_Lcd_Init,f
  3914  044A  2C49               	goto	u817
  3915  044B  0BF7               	decfsz	??_Lcd_Init+1,f
  3916  044C  2C49               	goto	u817
  3917                           
  3918                           ;LCD_SPI.c: 49:     Lcd_Cmd(0b00110000);
  3919  044D  3030               	movlw	48
  3920  044E  120A  118A  25E2  120A  118A  	fcall	_Lcd_Cmd
  3921  0453                     l1657:
  3922                           
  3923                           ;LCD_SPI.c: 50:     PORTEbits.RE0 = 0;
  3924  0453  1283               	bcf	3,5	;RP0=0, select bank0
  3925  0454  1303               	bcf	3,6	;RP1=0, select bank0
  3926  0455  1009               	bcf	9,0	;volatile
  3927  0456                     l1659:
  3928                           
  3929                           ;LCD_SPI.c: 51:     PORTEbits.RE2 = 0;
  3930  0456  1109               	bcf	9,2	;volatile
  3931                           
  3932                           ;LCD_SPI.c: 52:     Lcd_Cmd(0b00111000);
  3933  0457  3038               	movlw	56
  3934  0458  120A  118A  25E2  120A  118A  	fcall	_Lcd_Cmd
  3935                           
  3936                           ;LCD_SPI.c: 53:     Lcd_Cmd(0b00001100);
  3937  045D  300C               	movlw	12
  3938  045E  120A  118A  25E2  120A  118A  	fcall	_Lcd_Cmd
  3939                           
  3940                           ;LCD_SPI.c: 54:     Lcd_Cmd(0b00000001);
  3941  0463  3001               	movlw	1
  3942  0464  120A  118A  25E2  120A  118A  	fcall	_Lcd_Cmd
  3943                           
  3944                           ;LCD_SPI.c: 55:     Lcd_Cmd(0b00000110);
  3945  0469  3006               	movlw	6
  3946  046A  120A  118A  25E2  120A  118A  	fcall	_Lcd_Cmd
  3947  046F                     l247:
  3948  046F  0008               	return
  3949  0470                     __end_of_Lcd_Init:
  3950                           
  3951                           	psect	text25
  3952  05E2                     __ptext25:	
  3953 ;; *************** function _Lcd_Cmd *****************
  3954 ;; Defined at:
  3955 ;;		line 28 in file "LCD_SPI.c"
  3956 ;; Parameters:    Size  Location     Type
  3957 ;;  a               1    wreg     unsigned char 
  3958 ;; Auto vars:     Size  Location     Type
  3959 ;;  a               1    5[COMMON] unsigned char 
  3960 ;; Return value:  Size  Location     Type
  3961 ;;                  1    wreg      void 
  3962 ;; Registers used:
  3963 ;;		wreg, status,2, status,0, pclath, cstack
  3964 ;; Tracked objects:
  3965 ;;		On entry : 0/0
  3966 ;;		On exit  : 0/0
  3967 ;;		Unchanged: 0/0
  3968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3969 ;;      Params:         0       0       0       0       0
  3970 ;;      Locals:         1       0       0       0       0
  3971 ;;      Temps:          2       0       0       0       0
  3972 ;;      Totals:         3       0       0       0       0
  3973 ;;Total ram usage:        3 bytes
  3974 ;; Hardware stack levels used:    1
  3975 ;; Hardware stack levels required when called:    2
  3976 ;; This function calls:
  3977 ;;		_Lcd_Port
  3978 ;; This function is called by:
  3979 ;;		_Lcd_Init
  3980 ;;		_Lcd_Set_Cursor
  3981 ;;		_Lcd_Clear
  3982 ;;		_Lcd_Shift_Left
  3983 ;;		_Lcd_Shift_Right
  3984 ;; This function uses a non-reentrant model
  3985 ;;
  3986                           
  3987                           
  3988                           ;psect for function _Lcd_Cmd
  3989  05E2                     _Lcd_Cmd:
  3990                           
  3991                           ;incstack = 0
  3992                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3993                           ;Lcd_Cmd@a stored from wreg
  3994  05E2  00F5               	movwf	Lcd_Cmd@a
  3995  05E3                     l1397:
  3996                           
  3997                           ;LCD_SPI.c: 28: void Lcd_Cmd (char a);LCD_SPI.c: 29: {;LCD_SPI.c: 30:     PORTEbits.RE0 
      +                          = 0;
  3998  05E3  1283               	bcf	3,5	;RP0=0, select bank0
  3999  05E4  1303               	bcf	3,6	;RP1=0, select bank0
  4000  05E5  1009               	bcf	9,0	;volatile
  4001  05E6                     l1399:
  4002                           
  4003                           ;LCD_SPI.c: 31:     Lcd_Port(a);
  4004  05E6  0875               	movf	Lcd_Cmd@a,w
  4005  05E7  120A  118A  2689  120A  118A  	fcall	_Lcd_Port
  4006  05EC                     l1401:
  4007                           
  4008                           ;LCD_SPI.c: 32:     PORTEbits.RE1 = 1;
  4009  05EC  1283               	bcf	3,5	;RP0=0, select bank0
  4010  05ED  1303               	bcf	3,6	;RP1=0, select bank0
  4011  05EE  1489               	bsf	9,1	;volatile
  4012  05EF                     l1403:
  4013                           
  4014                           ;LCD_SPI.c: 33:     _delay((unsigned long)((5)*(8000000/4000.0)));
  4015  05EF  300D               	movlw	13
  4016  05F0  00F4               	movwf	??_Lcd_Cmd+1
  4017  05F1  30FB               	movlw	251
  4018  05F2  00F3               	movwf	??_Lcd_Cmd
  4019  05F3                     u827:
  4020  05F3  0BF3               	decfsz	??_Lcd_Cmd,f
  4021  05F4  2DF3               	goto	u827
  4022  05F5  0BF4               	decfsz	??_Lcd_Cmd+1,f
  4023  05F6  2DF3               	goto	u827
  4024  05F7  2DF8               	nop2
  4025  05F8                     l1405:
  4026                           
  4027                           ;LCD_SPI.c: 34:     PORTEbits.RE1 = 0;
  4028  05F8  1283               	bcf	3,5	;RP0=0, select bank0
  4029  05F9  1303               	bcf	3,6	;RP1=0, select bank0
  4030  05FA  1089               	bcf	9,1	;volatile
  4031  05FB                     l244:
  4032  05FB  0008               	return
  4033  05FC                     __end_of_Lcd_Cmd:
  4034                           
  4035                           	psect	text26
  4036  0689                     __ptext26:	
  4037 ;; *************** function _Lcd_Port *****************
  4038 ;; Defined at:
  4039 ;;		line 23 in file "LCD_SPI.c"
  4040 ;; Parameters:    Size  Location     Type
  4041 ;;  a               1    wreg     unsigned char 
  4042 ;; Auto vars:     Size  Location     Type
  4043 ;;  a               1    2[COMMON] unsigned char 
  4044 ;; Return value:  Size  Location     Type
  4045 ;;                  1    wreg      void 
  4046 ;; Registers used:
  4047 ;;		wreg
  4048 ;; Tracked objects:
  4049 ;;		On entry : 0/0
  4050 ;;		On exit  : 0/0
  4051 ;;		Unchanged: 0/0
  4052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4053 ;;      Params:         0       0       0       0       0
  4054 ;;      Locals:         1       0       0       0       0
  4055 ;;      Temps:          0       0       0       0       0
  4056 ;;      Totals:         1       0       0       0       0
  4057 ;;Total ram usage:        1 bytes
  4058 ;; Hardware stack levels used:    1
  4059 ;; Hardware stack levels required when called:    1
  4060 ;; This function calls:
  4061 ;;		Nothing
  4062 ;; This function is called by:
  4063 ;;		_Lcd_Cmd
  4064 ;;		_Lcd_Init
  4065 ;;		_Lcd_Write_Char
  4066 ;; This function uses a non-reentrant model
  4067 ;;
  4068                           
  4069                           
  4070                           ;psect for function _Lcd_Port
  4071  0689                     _Lcd_Port:
  4072                           
  4073                           ;incstack = 0
  4074                           ; Regs used in _Lcd_Port: [wreg]
  4075                           ;Lcd_Port@a stored from wreg
  4076  0689  00F2               	movwf	Lcd_Port@a
  4077  068A                     l1361:
  4078                           
  4079                           ;LCD_SPI.c: 23: void Lcd_Port (char a);LCD_SPI.c: 24: {;LCD_SPI.c: 25:     PORTD = a;
  4080  068A  0872               	movf	Lcd_Port@a,w
  4081  068B  1283               	bcf	3,5	;RP0=0, select bank0
  4082  068C  1303               	bcf	3,6	;RP1=0, select bank0
  4083  068D  0088               	movwf	8	;volatile
  4084  068E                     l241:
  4085  068E  0008               	return
  4086  068F                     __end_of_Lcd_Port:
  4087                           
  4088                           	psect	text27
  4089  062D                     __ptext27:	
  4090 ;; *************** function _ISR *****************
  4091 ;; Defined at:
  4092 ;;		line 112 in file "MAESTRO_SPI.c"
  4093 ;; Parameters:    Size  Location     Type
  4094 ;;		None
  4095 ;; Auto vars:     Size  Location     Type
  4096 ;;		None
  4097 ;; Return value:  Size  Location     Type
  4098 ;;                  1    wreg      void 
  4099 ;; Registers used:
  4100 ;;		wreg
  4101 ;; Tracked objects:
  4102 ;;		On entry : 0/0
  4103 ;;		On exit  : 0/0
  4104 ;;		Unchanged: 0/0
  4105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4106 ;;      Params:         0       0       0       0       0
  4107 ;;      Locals:         0       0       0       0       0
  4108 ;;      Temps:          2       0       0       0       0
  4109 ;;      Totals:         2       0       0       0       0
  4110 ;;Total ram usage:        2 bytes
  4111 ;; Hardware stack levels used:    1
  4112 ;; This function calls:
  4113 ;;		Nothing
  4114 ;; This function is called by:
  4115 ;;		Interrupt level 1
  4116 ;; This function uses a non-reentrant model
  4117 ;;
  4118                           
  4119                           
  4120                           ;psect for function _ISR
  4121  062D                     _ISR:
  4122  062D                     i1l1241:
  4123                           
  4124                           ;MAESTRO_SPI.c: 114:     if (INTCONbits.TMR0IF == 1)
  4125  062D  1D0B               	btfss	11,2	;volatile
  4126  062E  2E30               	goto	u30_21
  4127  062F  2E31               	goto	u30_20
  4128  0630                     u30_21:
  4129  0630  2E36               	goto	i1l156
  4130  0631                     u30_20:
  4131  0631                     i1l1243:
  4132                           
  4133                           ;MAESTRO_SPI.c: 115:     {;MAESTRO_SPI.c: 116:         INTCONbits.TMR0IF = 0;
  4134  0631  110B               	bcf	11,2	;volatile
  4135  0632                     i1l1245:
  4136                           
  4137                           ;MAESTRO_SPI.c: 117:         TMR0 = 100;
  4138  0632  3064               	movlw	100
  4139  0633  1283               	bcf	3,5	;RP0=0, select bank0
  4140  0634  1303               	bcf	3,6	;RP1=0, select bank0
  4141  0635  0081               	movwf	1	;volatile
  4142  0636                     i1l156:
  4143  0636  0871               	movf	??_ISR+1,w
  4144  0637  008A               	movwf	10
  4145  0638  0E70               	swapf	??_ISR,w
  4146  0639  0083               	movwf	3
  4147  063A  0EFE               	swapf	btemp,f
  4148  063B  0E7E               	swapf	btemp,w
  4149  063C  0009               	retfie
  4150  063D                     __end_of_ISR:
  4151  007E                     btemp	set	126	;btemp
  4152  007E                     wtemp0	set	126
  4153                           
  4154                           	psect	intentry
  4155  0004                     __pintentry:	
  4156                           ;incstack = 0
  4157                           ; Regs used in _ISR: [wreg]
  4158                           
  4159  0004                     interrupt_function:
  4160  007E                     saved_w	set	btemp
  4161  0004  00FE               	movwf	btemp
  4162  0005  0E03               	swapf	3,w
  4163  0006  00F0               	movwf	??_ISR
  4164  0007  080A               	movf	10,w
  4165  0008  00F1               	movwf	??_ISR+1
  4166  0009  120A  118A  2E2D   	ljmp	_ISR
  4167                           
  4168                           	psect	config
  4169                           
  4170                           ;Config register CONFIG1 @ 0x2007
  4171                           ;	Oscillator Selection bits
  4172                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4173                           ;	Watchdog Timer Enable bit
  4174                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4175                           ;	Power-up Timer Enable bit
  4176                           ;	PWRTE = OFF, PWRT disabled
  4177                           ;	RE3/MCLR pin function select bit
  4178                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4179                           ;	Code Protection bit
  4180                           ;	CP = OFF, Program memory code protection is disabled
  4181                           ;	Data Code Protection bit
  4182                           ;	CPD = OFF, Data memory code protection is disabled
  4183                           ;	Brown Out Reset Selection bits
  4184                           ;	BOREN = OFF, BOR disabled
  4185                           ;	Internal External Switchover bit
  4186                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4187                           ;	Fail-Safe Clock Monitor Enabled bit
  4188                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4189                           ;	Low Voltage Programming Enable bit
  4190                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4191                           ;	In-Circuit Debugger Mode bit
  4192                           ;	DEBUG = 0x1, unprogrammed default
  4193  2007                     	org	8199
  4194  2007  20D4               	dw	8404
  4195                           
  4196                           ;Config register CONFIG2 @ 0x2008
  4197                           ;	Brown-out Reset Selection bit
  4198                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4199                           ;	Flash Program Memory Self Write Enable bits
  4200                           ;	WRT = OFF, Write protection off
  4201  2008                     	org	8200
  4202  2008  3FFF               	dw	16383

Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         31
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     12      41
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _lcd->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Conversion3->___awmod
    _virtual_display3->_escribir_char
    _Conversion2->___awmod
    _virtual_display2->_escribir_char
    _Conversion1->___awmod
    _virtual_display1->_escribir_char
    _Lcd_Write_Char->_Lcd_Port
    _SPI_config->_SPI_Maestro_Init
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_lcd
    _lcd->_Conversion1
    _Conversion3->___awdiv
    _Conversion2->___awdiv
    _Conversion1->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    7327
                                             10 BANK0      2     2      0
                           _Lcd_Init
                         _SPI_Enviar
                        _SPI_Recibir
                         _SPI_config
                       _USART_config
                    _interrup_config
                                _lcd
                         _osc_config
                              _setup
                        _tmr0_config
 ---------------------------------------------------------------------------------
 (1) _tmr0_config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _osc_config                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd                                                  1     1      0    7119
                                              9 BANK0      1     1      0
                        _Conversion1
                        _Conversion2
                        _Conversion3
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     3     3      0     167
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       4     3      1     482
                                              6 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Conversion3                                          3     3      0    2135
                                              4 BANK0      3     3      0
                     _Lcd_Write_Char
                            ___awdiv
                            ___awmod
                   _virtual_display3
 ---------------------------------------------------------------------------------
 (3) _virtual_display3                                     0     0      0      22
                      _escribir_char
 ---------------------------------------------------------------------------------
 (2) _Conversion2                                          3     3      0    2135
                                              4 BANK0      3     3      0
                     _Lcd_Write_Char
                            ___awdiv
                            ___awmod
                   _virtual_display2
 ---------------------------------------------------------------------------------
 (3) _virtual_display2                                     0     0      0      22
                      _escribir_char
 ---------------------------------------------------------------------------------
 (2) _Conversion1                                          5     5      0    2200
                                              4 BANK0      5     5      0
                     _Lcd_Write_Char
                            ___awdiv
                            ___awmod
                   _virtual_display1
 ---------------------------------------------------------------------------------
 (3) _virtual_display1                                     0     0      0      22
                      _escribir_char
 ---------------------------------------------------------------------------------
 (4) _escribir_char                                        1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     904
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1165
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      44
                                              3 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _interrup_config                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_config                                         0     0      0       0
                   _USART_lib_config
 ---------------------------------------------------------------------------------
 (2) _USART_lib_config                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_config                                           1     1      0     120
                                              6 COMMON     1     1      0
                   _SPI_Maestro_Init
 ---------------------------------------------------------------------------------
 (2) _SPI_Maestro_Init                                     4     3      1     120
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _SPI_Recibir                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Enviar                                           1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      44
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _SPI_Enviar
   _SPI_Recibir
   _SPI_config
     _SPI_Maestro_Init
   _USART_config
     _USART_lib_config
   _interrup_config
   _lcd
     _Conversion1
       _Lcd_Write_Char
         _Lcd_Port
       ___awdiv
       ___awmod
       _virtual_display1
         _escribir_char
     _Conversion2
       _Lcd_Write_Char
         _Lcd_Port
       ___awdiv
       ___awmod
       _virtual_display2
         _escribir_char
     _Conversion3
       _Lcd_Write_Char
         _Lcd_Port
       ___awdiv
       ___awmod
       _virtual_display3
         _escribir_char
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
   _osc_config
   _setup
   _tmr0_config

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      35       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      C      29       5       51.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      35      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Feb 18 22:55:45 2021

              _SPI_Recibir 068F            SPI_Enviar@valor 0072                          _a 0026  
                        pc 0002                _SSPSTATbits 0094               ___awdiv@sign 003E  
                       _w1 0028                         _w2 0027                         _x1 003A  
                       _x2 0038                         _y1 0039                         _y2 0037  
               _SPI_config 0656     __size_of_escribir_char 000A                         fsr 0004  
                      l201 03BF                        l211 050F                        l230 05E1  
                      l214 0670                        l207 0177                        l241 068E  
                      l321 0692                        l217 0674                        l170 0655  
                      l244 05FB                        l173 066A                        l318 0688  
                      l182 0660                        l262 059F                        l247 046F  
                      l271 062C                        l167 057A                        l256 05C3  
                      l176 0649                        l185 054C                        l290 0232  
                      l194 035C                        l291 0239                        l179 0682  
                      l188 020B                        l293 025C                        l285 0216  
                      l197 04C3                        l294 028A                        l295 0262  
                      l287 021D                        l296 0268                        l288 0224  
                      l560 02F9                        l297 026E                        l289 022B  
                      l298 0290                        l573 0418    __end_of_interrup_config 0656  
                      u310 0674                        u311 0673                        u320 0365  
                      u321 0364                        u330 00E1                        u331 00E0  
                      u500 03ED                        u340 00E7                        u501 03EC  
                      u341 00E6                        u510 03F7                        u350 04CC  
                      u511 03F6                        u351 04CB                        u600 0298  
                      u601 0297                        u610 02A3                        u530 040A  
                      u611 02A2                        u531 0409                        u515 03F3  
                      u620 02B4                        u540 040F                        u460 03C5  
                      u700 0300                        _ISR 062D                        u621 02B3  
                      u541 040E                        u525 03FE                        u461 03C4  
                      u701 02FF                        u470 03D0                        u710 0319  
                      u550 05A6                        u471 03CF                        u711 0318  
                      u551 05A5                        u640 02C6                        u480 03DB  
                      u560 05B8                        u641 02C5                        u481 03DA  
                      u561 05B7                        u570 059F                        u635 02B8  
                      u571 059E                        u660 02D7                        u661 02D6  
                      u807 0436                        u655 02C7                        u495 03DF  
                      u727 004A                        u680 02EB                        u817 0449  
                      u681 02EA                        u665 02D3                        u737 0066  
                      u690 02F0                        u827 05F3                        u691 02EF  
                      u675 02DF                        u747 0074                        u757 008E  
                      u767 009C                        u777 00B8                        u787 0626  
                      u797 0423           _USART_lib_config 05C4                        _x1y 002E  
                      _x1z 0034                        _x2y 002C                        _x2z 0032  
                      _y1y 002D                        _y1z 0033                        _y2y 002B  
                      _y2z 0031                        _lcd 0510              ??_Conversion1 0041  
            ??_Conversion2 0041              ??_Conversion3 0041                        fsr0 0004  
                      indf 0000               ___awmod@sign 0078                       ?_ISR 0070  
                     l1401 05EC                       l1403 05EF                       l1405 05F8  
                     l1501 05CD                       l1511 05D4                       l1503 05CE  
                     l1361 068A                       l1521 05D9                       l1513 05D5  
                     l1505 05CF                       l1523 05DA                       l1515 05D6  
                     l1507 05D0                       l1371 0629                       l1363 0618  
                     l1451 03C0                       l1533 0240                       l1525 05DB  
                     l1517 05D7                       l1509 05D3                       l1365 061B  
                     l1461 03D0                       l1453 03C1                       l1373 035D  
                     l1381 00E1                       l1621 0568                       l1527 05DE  
                     l1519 05D8                       l1631 064A                       l1367 0621  
                     l1471 03E9                       l1463 03D5                       l1455 03C5  
                     l1359 066C                       l1375 0365                       l1383 00E7  
                     l1391 04C4                       l1551 05AB                       l1623 0569  
                     l1641 041F                       l1537 0274                       l1529 020D  
                     l1633 0652                       l1369 0624                       l1801 02B7  
                     l1473 03ED                       l1465 03DB                       l1481 040A  
                     l1457 03CA                       l1377 03BC                       l1385 012A  
                     l1393 04CC                       l1553 05B2                       l1561 057F  
                     l1625 056C                       l1617 054D                       l1651 0441  
                     l1643 0428                       l1491 05C8                       l1811 02DD  
                     l1803 02BE                       l1483 040F                       l1475 03F7  
                     l1467 03DE                       l1459 03CC                       l1387 012E  
                     l1379 00D9                       l1395 050C                       l1555 05B8  
                     l1547 05A1                       l1563 058C                       l1627 056D  
                     l1619 0565                       l1635 063D                       l1397 05E3  
                     l1653 0444                       l1645 042E                       l1493 05C9  
                     l1661 067D                       l1821 02F5                       l1813 02DE  
                     l1805 02C2                       l1485 0414                       l1477 03FD  
                     l1469 03E5                       l1557 05BD                       l1549 05A6  
                     l1565 0592                       l1629 0661                       l1637 0645  
                     l1901 0041                       l1399 05E6                       l1655 0445  
                     l1647 0431                       l1639 0419                       l1663 0656  
                     l1495 05CA                       l1815 02E5                       l1807 02C6  
                     l1479 0404                       l1831 019E                       l1559 057C  
                     l1911 006A                       l1903 0044                       l1657 0453  
                     l1649 043B                       l1665 0684                       l1497 05CB  
                     l1489 05C4                       l1809 02D7                       l1817 02EB  
                     l1841 01E8                       l1833 01B1                       l1825 0178  
                     l1921 0088                       l1913 006D                       l1905 004E  
                     ?_lcd 0070                       l1659 0456                       l1667 068F  
                     l1499 05CC                       l1819 02F0                       l1843 01EE  
                     l1835 01C7                       l1827 017E                       l1851 02FA  
                     l1931 00A8                       l1923 0092                       l1915 006E  
                     l1907 0056                       l1781 0291                       l1845 01F7  
                     l1837 01DD                       l1829 018B                       l1853 0300  
                     l1861 0476                       l1933 00B2                       l1925 0095  
                     l1917 0078                       l1909 0060                       l1791 02A3  
                     l1783 0294                       l1847 0200                       l1839 01E1  
                     l1855 0313                       l1871 04B8                       l1863 048C  
                     l1935 00BC                       l1927 0096                       l1919 007E  
                     l1793 02A8                       l1785 0298                       l1849 0206  
                     l1857 0319                       l1873 04BE                       l1865 04A2  
                     l1881 0525                       l1937 00BF                       l1929 00A0  
                     l1795 02AC                       l1787 029D                       l1867 04A9  
                     l1859 0470                       l1883 052A                       l1875 0510  
                     l1891 001E                       l1981 027C                       l1797 02AE  
                     l1789 029F                       l1869 04B2                       l1885 0536  
                     l1877 0518                       l1893 002D                       l1799 02B4  
                     l1887 053B                       l1879 051E                       l1895 0032  
                     l1889 0547                       l1897 0037                       l1979 0248  
                     l1899 003C                       STR_1 0606                       _IOCB 0096  
                     _TMR0 0001          ?_Lcd_Write_String 0070                       _main 001E  
                     _leer 002A                       btemp 007E                       start 000C  
       ??_Lcd_Write_String 0075            __end_of_Lcd_Cmd 05FC                      ??_ISR 0070  
                    ??_lcd 0046                      ?_main 0070            __end_of___awdiv 02FA  
          __end_of___awmod 0419                      _ANSEL 0188            ___awdiv@divisor 0072  
                    i1l156 0636            ___awdiv@counter 003D                      u30_20 0631  
                    u30_21 0630                      _SPBRG 0099                      _PORTA 0005  
                    _PORTB 0006                      _PORTC 0007                      _PORTD 0008  
                    _PORTE 0009    __size_of_Lcd_Set_Cursor 0024                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    _TRISE 0089                      _TXREG 0019                      _setup 054D  
      __end_of_Conversion1 020C        __end_of_Conversion2 035D        __end_of_Conversion3 04C4  
            _escribir_char 066B                      pclath 000A                      status 0003  
                    wtemp0 007E           __end_of_Lcd_Init 0470           __end_of_Lcd_Port 068F  
              ?_SPI_Enviar 0070            __initialization 000F               __end_of_main 00D9  
      SPI_Maestro_Init@SCK 0072                ?_SPI_config 0070                     ??_main 0047  
         ?_interrup_config 0070   __end_of_virtual_display1 03C0   __end_of_virtual_display2 0178  
             ?_tmr0_config 0070   __end_of_virtual_display3 0510   __end_of_SPI_Maestro_Init 0291  
         ___awdiv@dividend 0074             ?_escribir_char 0070                     ?_setup 0070  
                   _ANSELH 0189                     i1l1241 062D                     i1l1243 0631  
                   i1l1245 0632                  ??_Lcd_Cmd 0073    __size_of_Lcd_Write_Char 0016  
                   _SSPBUF 0013                  ??___awdiv 0076                  ??___awmod 0076  
         ___awdiv@quotient 003F            ___awmod@divisor 0072             Conversion1@pot 0044  
          ___awmod@counter 0077                     _unidad 003B                _Conversion1 0178  
              _Conversion2 02FA                _Conversion3 0470                     saved_w 007E  
      __size_of_SPI_Enviar 0006            Lcd_Set_Cursor@a 0078            Lcd_Set_Cursor@b 0076  
  __end_of__initialization 001A        __size_of_SPI_config 000B   __end_of_USART_lib_config 05E2  
             ?_SPI_Recibir 0070             __pcstackCOMMON 0070              __end_of_setup 057B  
           _Lcd_Set_Cursor 05A0             _OPTION_REGbits 0081            ??_escribir_char 0072  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070                    ??_setup 0072  
               __pbssBANK0 0020                 __pmaintext 001E                 _dato_push1 0021  
               __pintentry 0004  __size_of_Lcd_Write_String 0025     __end_of_Lcd_Set_Cursor 05C4  
               ??_Lcd_Init 0076                 ??_Lcd_Port 0072       __size_of_tmr0_config 000D  
               __stringtab 0600             _Lcd_Write_Char 0617                    _Lcd_Cmd 05E2  
             ??_SPI_Enviar 0072                    ___awdiv 0291                    ___awmod 03C0  
             ??_SPI_config 0076                    _decenay 007B            ?_Lcd_Set_Cursor 0076  
                  __ptext1 063D                    __ptext2 054D                    __ptext3 0661  
                  __ptext4 0510                    __ptext5 057B                    __ptext6 05A0  
                  __ptext7 0470                    __ptext8 04C4                    __ptext9 02FA  
             __size_of_ISR 0010               __size_of_lcd 003D           ___awmod@dividend 0074  
        ?_virtual_display1 0070          ?_virtual_display2 0070          ?_virtual_display3 0070  
        ?_SPI_Maestro_Init 0072                    _unidady 002F                    _unidadz 0035  
       __end_of_SPI_Enviar 0689         ??_virtual_display1 0073         ??_virtual_display2 0073  
       ??_virtual_display3 0073                    clrloop0 0676         ??_SPI_Maestro_Init 0073  
                  _voltaje 003C     __end_of_Lcd_Write_Char 062D       end_of_initialization 001A  
               _osc_config 0661         __end_of_SPI_config 0661                  _RCSTAbits 0018  
                Lcd_Port@a 0072       __size_of_SPI_Recibir 0004                 _velocidad1 0025  
               _velocidad2 0024                 _velocidad3 0023                  _PORTCbits 0007  
                _PORTEbits 0009               ?_Conversion1 0070               ?_Conversion2 0070  
             ?_Conversion3 0070                  _TRISAbits 0085                  _TRISCbits 0087  
          ?_Lcd_Write_Char 0070   __size_of_interrup_config 000C          Lcd_Write_String@a 0077  
        Lcd_Write_String@i 0075                  _TXSTAbits 0098          ?_USART_lib_config 0070  
            ?_USART_config 0070         ??_USART_lib_config 0072           _Lcd_Write_String 057B  
      start_initialization 000F                __end_of_ISR 063D                __end_of_lcd 054D  
        __size_of_Lcd_Init 0057          __size_of_Lcd_Port 0006                ?_osc_config 0070  
           ??_USART_config 0072            Lcd_Write_Char@a 0074                __pbssCOMMON 007A  
                ___latbits 0002              __pcstackBANK0 003D      __end_of_escribir_char 0675  
                 ?_Lcd_Cmd 0070          ??_interrup_config 0072                  _dato_push 007A  
         ??_Lcd_Set_Cursor 0077                   ?___awdiv 0072                   ?___awmod 0072  
                __pstrings 0600              _dato_semaforo 0020        __size_of_osc_config 000A  
            ??_tmr0_config 0072       __size_of_Conversion1 0094       __size_of_Conversion2 0063  
     __size_of_Conversion3 0054             __size_of_setup 002E          interrupt_function 0004  
                clear_ram0 0675                   _PIE1bits 008C  __size_of_virtual_display1 0063  
__size_of_virtual_display2 009F  __size_of_virtual_display3 004C  __size_of_SPI_Maestro_Init 0085  
                 Lcd_Cmd@a 0075                   _PIR1bits 000C                __stringbase 0605  
         ??_Lcd_Write_Char 0073       __end_of_USART_config 0683                   _Lcd_Init 0419  
                 _Lcd_Port 0689        __end_of_tmr0_config 064A   __end_of_Lcd_Write_String 05A0  
         __size_of_Lcd_Cmd 001A              ??_SPI_Recibir 0072           __size_of___awdiv 0069  
         __size_of___awmod 0059         __end_of__stringtab 0606  __size_of_USART_lib_config 001E  
                 _dato_pot 0022                   __ptext10 00D9                   __ptext11 0178  
                 __ptext20 0656                   __ptext12 035D                   __ptext21 020C  
                 __ptext13 066B                   __ptext22 068F                   __ptext14 03C0  
                 __ptext23 0683                   __ptext15 0291                   __ptext24 0419  
                 __ptext16 0617                   __ptext25 05E2                   __ptext17 064A  
                 __ptext26 0689                   __ptext18 067D                   __ptext27 062D  
                 __ptext19 05C4         escribir_char@valor 0072                   _contador 0029  
             ??_osc_config 0072              __size_of_main 00BB                   _voltajey 0030  
                 _voltajez 0036        __end_of_SPI_Recibir 0693                 _INTCONbits 000B  
       __end_of_osc_config 066B                _tmr0_config 063D            _interrup_config 064A  
                 intlevel1 0000           _virtual_display1 035D           _virtual_display2 00D9  
         _virtual_display3 04C4           _SPI_Maestro_Init 020C                  stringcode 0600  
               _OSCCONbits 008F         Lcd_Set_Cursor@temp 0079  SPI_Maestro_Init@port_mode 0075  
    __size_of_USART_config 0006                   stringdir 0600                   stringtab 0600  
               _SSPCONbits 0014                 _SPI_Enviar 0683               _USART_config 067D  
