

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 16 00:34:18 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    39                           	dabs	1,0x7E,2
    40  0000                     
    41                           ; Version 2.20
    42                           ; Generated 12/02/2020 GMT
    43                           ; 
    44                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F887 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  0008                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000D                     	;# 
    89  000E                     	;# 
    90  000E                     	;# 
    91  000F                     	;# 
    92  0010                     	;# 
    93  0011                     	;# 
    94  0012                     	;# 
    95  0013                     	;# 
    96  0014                     	;# 
    97  0015                     	;# 
    98  0015                     	;# 
    99  0016                     	;# 
   100  0017                     	;# 
   101  0018                     	;# 
   102  0019                     	;# 
   103  001A                     	;# 
   104  001B                     	;# 
   105  001B                     	;# 
   106  001C                     	;# 
   107  001D                     	;# 
   108  001E                     	;# 
   109  001F                     	;# 
   110  0081                     	;# 
   111  0085                     	;# 
   112  0086                     	;# 
   113  0087                     	;# 
   114  0088                     	;# 
   115  0089                     	;# 
   116  008C                     	;# 
   117  008D                     	;# 
   118  008E                     	;# 
   119  008F                     	;# 
   120  0090                     	;# 
   121  0091                     	;# 
   122  0092                     	;# 
   123  0093                     	;# 
   124  0093                     	;# 
   125  0093                     	;# 
   126  0094                     	;# 
   127  0095                     	;# 
   128  0096                     	;# 
   129  0097                     	;# 
   130  0098                     	;# 
   131  0099                     	;# 
   132  009A                     	;# 
   133  009B                     	;# 
   134  009C                     	;# 
   135  009D                     	;# 
   136  009E                     	;# 
   137  009F                     	;# 
   138  0105                     	;# 
   139  0107                     	;# 
   140  0108                     	;# 
   141  0109                     	;# 
   142  010C                     	;# 
   143  010C                     	;# 
   144  010D                     	;# 
   145  010E                     	;# 
   146  010F                     	;# 
   147  0185                     	;# 
   148  0187                     	;# 
   149  0188                     	;# 
   150  0189                     	;# 
   151  018C                     	;# 
   152  018D                     	;# 
   153  0000                     	;# 
   154  0001                     	;# 
   155  0002                     	;# 
   156  0003                     	;# 
   157  0004                     	;# 
   158  0005                     	;# 
   159  0006                     	;# 
   160  0007                     	;# 
   161  0008                     	;# 
   162  0009                     	;# 
   163  000A                     	;# 
   164  000B                     	;# 
   165  000C                     	;# 
   166  000D                     	;# 
   167  000E                     	;# 
   168  000E                     	;# 
   169  000F                     	;# 
   170  0010                     	;# 
   171  0011                     	;# 
   172  0012                     	;# 
   173  0013                     	;# 
   174  0014                     	;# 
   175  0015                     	;# 
   176  0015                     	;# 
   177  0016                     	;# 
   178  0017                     	;# 
   179  0018                     	;# 
   180  0019                     	;# 
   181  001A                     	;# 
   182  001B                     	;# 
   183  001B                     	;# 
   184  001C                     	;# 
   185  001D                     	;# 
   186  001E                     	;# 
   187  001F                     	;# 
   188  0081                     	;# 
   189  0085                     	;# 
   190  0086                     	;# 
   191  0087                     	;# 
   192  0088                     	;# 
   193  0089                     	;# 
   194  008C                     	;# 
   195  008D                     	;# 
   196  008E                     	;# 
   197  008F                     	;# 
   198  0090                     	;# 
   199  0091                     	;# 
   200  0092                     	;# 
   201  0093                     	;# 
   202  0093                     	;# 
   203  0093                     	;# 
   204  0094                     	;# 
   205  0095                     	;# 
   206  0096                     	;# 
   207  0097                     	;# 
   208  0098                     	;# 
   209  0099                     	;# 
   210  009A                     	;# 
   211  009B                     	;# 
   212  009C                     	;# 
   213  009D                     	;# 
   214  009E                     	;# 
   215  009F                     	;# 
   216  0105                     	;# 
   217  0107                     	;# 
   218  0108                     	;# 
   219  0109                     	;# 
   220  010C                     	;# 
   221  010C                     	;# 
   222  010D                     	;# 
   223  010E                     	;# 
   224  010F                     	;# 
   225  0185                     	;# 
   226  0187                     	;# 
   227  0188                     	;# 
   228  0189                     	;# 
   229  018C                     	;# 
   230  018D                     	;# 
   231  0000                     	;# 
   232  0001                     	;# 
   233  0002                     	;# 
   234  0003                     	;# 
   235  0004                     	;# 
   236  0005                     	;# 
   237  0006                     	;# 
   238  0007                     	;# 
   239  0008                     	;# 
   240  0009                     	;# 
   241  000A                     	;# 
   242  000B                     	;# 
   243  000C                     	;# 
   244  000D                     	;# 
   245  000E                     	;# 
   246  000E                     	;# 
   247  000F                     	;# 
   248  0010                     	;# 
   249  0011                     	;# 
   250  0012                     	;# 
   251  0013                     	;# 
   252  0014                     	;# 
   253  0015                     	;# 
   254  0015                     	;# 
   255  0016                     	;# 
   256  0017                     	;# 
   257  0018                     	;# 
   258  0019                     	;# 
   259  001A                     	;# 
   260  001B                     	;# 
   261  001B                     	;# 
   262  001C                     	;# 
   263  001D                     	;# 
   264  001E                     	;# 
   265  001F                     	;# 
   266  0081                     	;# 
   267  0085                     	;# 
   268  0086                     	;# 
   269  0087                     	;# 
   270  0088                     	;# 
   271  0089                     	;# 
   272  008C                     	;# 
   273  008D                     	;# 
   274  008E                     	;# 
   275  008F                     	;# 
   276  0090                     	;# 
   277  0091                     	;# 
   278  0092                     	;# 
   279  0093                     	;# 
   280  0093                     	;# 
   281  0093                     	;# 
   282  0094                     	;# 
   283  0095                     	;# 
   284  0096                     	;# 
   285  0097                     	;# 
   286  0098                     	;# 
   287  0099                     	;# 
   288  009A                     	;# 
   289  009B                     	;# 
   290  009C                     	;# 
   291  009D                     	;# 
   292  009E                     	;# 
   293  009F                     	;# 
   294  0105                     	;# 
   295  0107                     	;# 
   296  0108                     	;# 
   297  0109                     	;# 
   298  010C                     	;# 
   299  010C                     	;# 
   300  010D                     	;# 
   301  010E                     	;# 
   302  010F                     	;# 
   303  0185                     	;# 
   304  0187                     	;# 
   305  0188                     	;# 
   306  0189                     	;# 
   307  018C                     	;# 
   308  018D                     	;# 
   309  0000                     	;# 
   310  0001                     	;# 
   311  0002                     	;# 
   312  0003                     	;# 
   313  0004                     	;# 
   314  0005                     	;# 
   315  0006                     	;# 
   316  0007                     	;# 
   317  0008                     	;# 
   318  0009                     	;# 
   319  000A                     	;# 
   320  000B                     	;# 
   321  000C                     	;# 
   322  000D                     	;# 
   323  000E                     	;# 
   324  000E                     	;# 
   325  000F                     	;# 
   326  0010                     	;# 
   327  0011                     	;# 
   328  0012                     	;# 
   329  0013                     	;# 
   330  0014                     	;# 
   331  0015                     	;# 
   332  0015                     	;# 
   333  0016                     	;# 
   334  0017                     	;# 
   335  0018                     	;# 
   336  0019                     	;# 
   337  001A                     	;# 
   338  001B                     	;# 
   339  001B                     	;# 
   340  001C                     	;# 
   341  001D                     	;# 
   342  001E                     	;# 
   343  001F                     	;# 
   344  0081                     	;# 
   345  0085                     	;# 
   346  0086                     	;# 
   347  0087                     	;# 
   348  0088                     	;# 
   349  0089                     	;# 
   350  008C                     	;# 
   351  008D                     	;# 
   352  008E                     	;# 
   353  008F                     	;# 
   354  0090                     	;# 
   355  0091                     	;# 
   356  0092                     	;# 
   357  0093                     	;# 
   358  0093                     	;# 
   359  0093                     	;# 
   360  0094                     	;# 
   361  0095                     	;# 
   362  0096                     	;# 
   363  0097                     	;# 
   364  0098                     	;# 
   365  0099                     	;# 
   366  009A                     	;# 
   367  009B                     	;# 
   368  009C                     	;# 
   369  009D                     	;# 
   370  009E                     	;# 
   371  009F                     	;# 
   372  0105                     	;# 
   373  0107                     	;# 
   374  0108                     	;# 
   375  0109                     	;# 
   376  010C                     	;# 
   377  010C                     	;# 
   378  010D                     	;# 
   379  010E                     	;# 
   380  010F                     	;# 
   381  0185                     	;# 
   382  0187                     	;# 
   383  0188                     	;# 
   384  0189                     	;# 
   385  018C                     	;# 
   386  018D                     	;# 
   387  0000                     	;# 
   388  0001                     	;# 
   389  0002                     	;# 
   390  0003                     	;# 
   391  0004                     	;# 
   392  0005                     	;# 
   393  0006                     	;# 
   394  0007                     	;# 
   395  0008                     	;# 
   396  0009                     	;# 
   397  000A                     	;# 
   398  000B                     	;# 
   399  000C                     	;# 
   400  000D                     	;# 
   401  000E                     	;# 
   402  000E                     	;# 
   403  000F                     	;# 
   404  0010                     	;# 
   405  0011                     	;# 
   406  0012                     	;# 
   407  0013                     	;# 
   408  0014                     	;# 
   409  0015                     	;# 
   410  0015                     	;# 
   411  0016                     	;# 
   412  0017                     	;# 
   413  0018                     	;# 
   414  0019                     	;# 
   415  001A                     	;# 
   416  001B                     	;# 
   417  001B                     	;# 
   418  001C                     	;# 
   419  001D                     	;# 
   420  001E                     	;# 
   421  001F                     	;# 
   422  0081                     	;# 
   423  0085                     	;# 
   424  0086                     	;# 
   425  0087                     	;# 
   426  0088                     	;# 
   427  0089                     	;# 
   428  008C                     	;# 
   429  008D                     	;# 
   430  008E                     	;# 
   431  008F                     	;# 
   432  0090                     	;# 
   433  0091                     	;# 
   434  0092                     	;# 
   435  0093                     	;# 
   436  0093                     	;# 
   437  0093                     	;# 
   438  0094                     	;# 
   439  0095                     	;# 
   440  0096                     	;# 
   441  0097                     	;# 
   442  0098                     	;# 
   443  0099                     	;# 
   444  009A                     	;# 
   445  009B                     	;# 
   446  009C                     	;# 
   447  009D                     	;# 
   448  009E                     	;# 
   449  009F                     	;# 
   450  0105                     	;# 
   451  0107                     	;# 
   452  0108                     	;# 
   453  0109                     	;# 
   454  010C                     	;# 
   455  010C                     	;# 
   456  010D                     	;# 
   457  010E                     	;# 
   458  010F                     	;# 
   459  0185                     	;# 
   460  0187                     	;# 
   461  0188                     	;# 
   462  0189                     	;# 
   463  018C                     	;# 
   464  018D                     	;# 
   465  0013                     _SSPBUF	set	19
   466  0014                     _SSPCONbits	set	20
   467  0018                     _RCSTAbits	set	24
   468  0019                     _TXREG	set	25
   469  000B                     _INTCONbits	set	11
   470  0009                     _PORTE	set	9
   471  0008                     _PORTD	set	8
   472  0007                     _PORTC	set	7
   473  0006                     _PORTB	set	6
   474  0005                     _PORTA	set	5
   475  0007                     _PORTCbits	set	7
   476  000C                     _PIR1bits	set	12
   477  0085                     _TRISAbits	set	133
   478  0094                     _SSPSTATbits	set	148
   479  008C                     _PIE1bits	set	140
   480  0098                     _TXSTAbits	set	152
   481  0099                     _SPBRG	set	153
   482  008F                     _OSCCONbits	set	143
   483  0096                     _IOCB	set	150
   484  0089                     _TRISE	set	137
   485  0088                     _TRISD	set	136
   486  0087                     _TRISCbits	set	135
   487  0087                     _TRISC	set	135
   488  0086                     _TRISB	set	134
   489  0085                     _TRISA	set	133
   490  0189                     _ANSELH	set	393
   491  0188                     _ANSEL	set	392
   492                           
   493                           	psect	strings
   494  047F                     __pstrings:
   495  047F                     stringtab:
   496  047F                     __stringtab:
   497  047F                     stringcode:	
   498                           ;	String table - string pointers are 1 byte each
   499                           
   500  047F                     stringdir:
   501  047F  3004               	movlw	high stringdir
   502  0480  008A               	movwf	10
   503  0481  0804               	movf	4,w
   504  0482  0A84               	incf	4,f
   505  0483  0782               	addwf	2,f
   506  0484                     __stringbase:
   507  0484  3400               	retlw	0
   508  0485                     __end_of__stringtab:
   509  0485                     STR_1:
   510  0485  3453               	retlw	83	;'S'
   511  0486  3431               	retlw	49	;'1'
   512  0487  343A               	retlw	58	;':'
   513  0488  3420               	retlw	32	;' '
   514  0489  3420               	retlw	32	;' '
   515  048A  3420               	retlw	32	;' '
   516  048B  3453               	retlw	83	;'S'
   517  048C  3432               	retlw	50	;'2'
   518  048D  343A               	retlw	58	;':'
   519  048E  3420               	retlw	32	;' '
   520  048F  3420               	retlw	32	;' '
   521  0490  3420               	retlw	32	;' '
   522  0491  3453               	retlw	83	;'S'
   523  0492  3433               	retlw	51	;'3'
   524  0493  343A               	retlw	58	;':'
   525  0494  3420               	retlw	32	;' '
   526  0495  3400               	retlw	0
   527                           
   528                           	psect	cinit
   529  000F                     start_initialization:	
   530                           ; #config settings
   531                           
   532  000F                     __initialization:
   533                           
   534                           ; Clear objects allocated to COMMON
   535  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   536  0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   537                           
   538                           ; Clear objects allocated to BANK0
   539  0011  1383               	bcf	3,7	;select IRP bank0
   540  0012  3020               	movlw	low __pbssBANK0
   541  0013  0084               	movwf	4
   542  0014  3035               	movlw	low (__pbssBANK0+21)
   543  0015  120A  118A  24E4  120A  118A  	fcall	clear_ram0
   544  001A                     end_of_initialization:	
   545                           ;End of C runtime variable initialization code
   546                           
   547  001A                     __end_of__initialization:
   548  001A  0183               	clrf	3
   549  001B  120A  118A  290C   	ljmp	_main	;jump to C main() function
   550                           
   551                           	psect	bssCOMMON
   552  007A                     __pbssCOMMON:
   553  007A                     _x1:
   554  007A                     	ds	1
   555  007B                     _unidad:
   556  007B                     	ds	1
   557                           
   558                           	psect	bssBANK0
   559  0020                     __pbssBANK0:
   560  0020                     _dato_semaforo:
   561  0020                     	ds	1
   562  0021                     _dato_push:
   563  0021                     	ds	1
   564  0022                     _dato_pot:
   565  0022                     	ds	1
   566  0023                     _velocidad3:
   567  0023                     	ds	1
   568  0024                     _velocidad2:
   569  0024                     	ds	1
   570  0025                     _velocidad1:
   571  0025                     	ds	1
   572  0026                     _a:
   573  0026                     	ds	1
   574  0027                     _w2:
   575  0027                     	ds	1
   576  0028                     _w1:
   577  0028                     	ds	1
   578  0029                     _contador:
   579  0029                     	ds	1
   580  002A                     _leer:
   581  002A                     	ds	1
   582  002B                     _y2z:
   583  002B                     	ds	1
   584  002C                     _x2z:
   585  002C                     	ds	1
   586  002D                     _y1z:
   587  002D                     	ds	1
   588  002E                     _x1z:
   589  002E                     	ds	1
   590  002F                     _unidadz:
   591  002F                     	ds	1
   592  0030                     _voltajez:
   593  0030                     	ds	1
   594  0031                     _y2:
   595  0031                     	ds	1
   596  0032                     _x2:
   597  0032                     	ds	1
   598  0033                     _y1:
   599  0033                     	ds	1
   600  0034                     _voltaje:
   601  0034                     	ds	1
   602                           
   603                           	psect	clrtext
   604  04E4                     clear_ram0:	
   605                           ;	Called with FSR containing the base address, and
   606                           ;	W with the last address+1
   607                           
   608  04E4  0064               	clrwdt	;clear the watchdog before getting into this loop
   609  04E5                     clrloop0:
   610  04E5  0180               	clrf	0	;clear RAM location pointed to by FSR
   611  04E6  0A84               	incf	4,f	;increment pointer
   612  04E7  0604               	xorwf	4,w	;XOR with final address
   613  04E8  1903               	btfsc	3,2	;have we reached the end yet?
   614  04E9  3400               	retlw	0	;all done for this memory range, return
   615  04EA  0604               	xorwf	4,w	;XOR again to restore value
   616  04EB  2CE5               	goto	clrloop0	;do the next byte
   617                           
   618                           	psect	cstackCOMMON
   619  0070                     __pcstackCOMMON:
   620  0070                     ?_setup:
   621  0070                     ?_osc_config:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0070                     ?_interrup_config:	
   625                           ; 1 bytes @ 0x0
   626                           
   627  0070                     ?_Lcd_Init:	
   628                           ; 1 bytes @ 0x0
   629                           
   630  0070                     ?_USART_config:	
   631                           ; 1 bytes @ 0x0
   632                           
   633  0070                     ?_SPI_config:	
   634                           ; 1 bytes @ 0x0
   635                           
   636  0070                     ?_SPI_Enviar:	
   637                           ; 1 bytes @ 0x0
   638                           
   639  0070                     ?_SPI_Recibir:	
   640                           ; 1 bytes @ 0x0
   641                           
   642  0070                     ?_lcd:	
   643                           ; 1 bytes @ 0x0
   644                           
   645  0070                     ?_USART_lib_config:	
   646                           ; 1 bytes @ 0x0
   647                           
   648  0070                     ?_Lcd_Write_String:	
   649                           ; 1 bytes @ 0x0
   650                           
   651  0070                     ?_Conversion1:	
   652                           ; 1 bytes @ 0x0
   653                           
   654  0070                     ?_Conversion2:	
   655                           ; 1 bytes @ 0x0
   656                           
   657  0070                     ?_Lcd_Write_Char:	
   658                           ; 1 bytes @ 0x0
   659                           
   660  0070                     ?_virtual_display1:	
   661                           ; 1 bytes @ 0x0
   662                           
   663  0070                     ?_virtual_display2:	
   664                           ; 1 bytes @ 0x0
   665                           
   666  0070                     ?_virtual_display3:	
   667                           ; 1 bytes @ 0x0
   668                           
   669  0070                     ?_escribir_char:	
   670                           ; 1 bytes @ 0x0
   671                           
   672  0070                     ?_ISR:	
   673                           ; 1 bytes @ 0x0
   674                           
   675  0070                     ??_ISR:	
   676                           ; 1 bytes @ 0x0
   677                           
   678  0070                     ?_main:	
   679                           ; 1 bytes @ 0x0
   680                           
   681  0070                     ?_Lcd_Port:	
   682                           ; 1 bytes @ 0x0
   683                           
   684  0070                     ?_Lcd_Cmd:	
   685                           ; 1 bytes @ 0x0
   686                           
   687                           
   688                           ; 1 bytes @ 0x0
   689  0070                     	ds	2
   690  0072                     ??_setup:
   691  0072                     ??_osc_config:	
   692                           ; 1 bytes @ 0x2
   693                           
   694  0072                     ??_interrup_config:	
   695                           ; 1 bytes @ 0x2
   696                           
   697  0072                     ??_USART_config:	
   698                           ; 1 bytes @ 0x2
   699                           
   700  0072                     ??_SPI_Enviar:	
   701                           ; 1 bytes @ 0x2
   702                           
   703  0072                     ??_SPI_Recibir:	
   704                           ; 1 bytes @ 0x2
   705                           
   706  0072                     ??_USART_lib_config:	
   707                           ; 1 bytes @ 0x2
   708                           
   709  0072                     ?_SPI_Maestro_Init:	
   710                           ; 1 bytes @ 0x2
   711                           
   712  0072                     ??_escribir_char:	
   713                           ; 1 bytes @ 0x2
   714                           
   715  0072                     ??_Lcd_Port:	
   716                           ; 1 bytes @ 0x2
   717                           
   718  0072                     ?___awdiv:	
   719                           ; 1 bytes @ 0x2
   720                           
   721  0072                     ?___awmod:	
   722                           ; 2 bytes @ 0x2
   723                           
   724  0072                     escribir_char@valor:	
   725                           ; 2 bytes @ 0x2
   726                           
   727  0072                     Lcd_Port@a:	
   728                           ; 1 bytes @ 0x2
   729                           
   730  0072                     SPI_Maestro_Init@SCK:	
   731                           ; 1 bytes @ 0x2
   732                           
   733  0072                     SPI_Enviar@valor:	
   734                           ; 1 bytes @ 0x2
   735                           
   736  0072                     ___awdiv@divisor:	
   737                           ; 1 bytes @ 0x2
   738                           
   739  0072                     ___awmod@divisor:	
   740                           ; 2 bytes @ 0x2
   741                           
   742                           
   743                           ; 2 bytes @ 0x2
   744  0072                     	ds	1
   745  0073                     ??_SPI_Maestro_Init:
   746  0073                     ??_Lcd_Write_Char:	
   747                           ; 1 bytes @ 0x3
   748                           
   749  0073                     ??_virtual_display1:	
   750                           ; 1 bytes @ 0x3
   751                           
   752  0073                     ??_virtual_display2:	
   753                           ; 1 bytes @ 0x3
   754                           
   755  0073                     ??_virtual_display3:	
   756                           ; 1 bytes @ 0x3
   757                           
   758  0073                     ??_Lcd_Cmd:	
   759                           ; 1 bytes @ 0x3
   760                           
   761                           
   762                           ; 1 bytes @ 0x3
   763  0073                     	ds	1
   764  0074                     Lcd_Write_Char@a:
   765  0074                     ___awdiv@dividend:	
   766                           ; 1 bytes @ 0x4
   767                           
   768  0074                     ___awmod@dividend:	
   769                           ; 2 bytes @ 0x4
   770                           
   771                           
   772                           ; 2 bytes @ 0x4
   773  0074                     	ds	1
   774  0075                     ??_Lcd_Write_String:
   775  0075                     Lcd_Cmd@a:	
   776                           ; 1 bytes @ 0x5
   777                           
   778  0075                     SPI_Maestro_Init@port_mode:	
   779                           ; 1 bytes @ 0x5
   780                           
   781  0075                     Lcd_Write_String@i:	
   782                           ; 1 bytes @ 0x5
   783                           
   784                           
   785                           ; 2 bytes @ 0x5
   786  0075                     	ds	1
   787  0076                     ??_Lcd_Init:
   788  0076                     ??_SPI_config:	
   789                           ; 1 bytes @ 0x6
   790                           
   791  0076                     ?_Lcd_Set_Cursor:	
   792                           ; 1 bytes @ 0x6
   793                           
   794  0076                     ??___awdiv:	
   795                           ; 1 bytes @ 0x6
   796                           
   797  0076                     ??___awmod:	
   798                           ; 1 bytes @ 0x6
   799                           
   800  0076                     Lcd_Set_Cursor@b:	
   801                           ; 1 bytes @ 0x6
   802                           
   803                           
   804                           ; 1 bytes @ 0x6
   805  0076                     	ds	1
   806  0077                     ??_Lcd_Set_Cursor:
   807  0077                     Lcd_Write_String@a:	
   808                           ; 1 bytes @ 0x7
   809                           
   810  0077                     ___awmod@counter:	
   811                           ; 1 bytes @ 0x7
   812                           
   813                           
   814                           ; 1 bytes @ 0x7
   815  0077                     	ds	1
   816  0078                     Lcd_Set_Cursor@a:
   817  0078                     ___awmod@sign:	
   818                           ; 1 bytes @ 0x8
   819                           
   820                           
   821                           ; 1 bytes @ 0x8
   822  0078                     	ds	1
   823  0079                     ??_Conversion1:
   824  0079                     ??_Conversion2:	
   825                           ; 1 bytes @ 0x9
   826                           
   827  0079                     Lcd_Set_Cursor@temp:	
   828                           ; 1 bytes @ 0x9
   829                           
   830                           
   831                           ; 1 bytes @ 0x9
   832  0079                     	ds	1
   833                           
   834                           	psect	cstackBANK0
   835  0035                     __pcstackBANK0:
   836  0035                     ___awdiv@counter:
   837                           
   838                           ; 1 bytes @ 0x0
   839  0035                     	ds	1
   840  0036                     ___awdiv@sign:
   841                           
   842                           ; 1 bytes @ 0x1
   843  0036                     	ds	1
   844  0037                     ___awdiv@quotient:
   845                           
   846                           ; 2 bytes @ 0x2
   847  0037                     	ds	2
   848  0039                     ??_lcd:
   849                           
   850                           ; 1 bytes @ 0x4
   851  0039                     	ds	1
   852  003A                     ??_main:
   853                           
   854                           ; 1 bytes @ 0x5
   855  003A                     	ds	1
   856                           
   857                           	psect	maintext
   858  010C                     __pmaintext:	
   859 ;;
   860 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   861 ;;
   862 ;; *************** function _main *****************
   863 ;; Defined at:
   864 ;;		line 109 in file "MAESTRO_SPI.c"
   865 ;; Parameters:    Size  Location     Type
   866 ;;		None
   867 ;; Auto vars:     Size  Location     Type
   868 ;;		None
   869 ;; Return value:  Size  Location     Type
   870 ;;                  1    wreg      void 
   871 ;; Registers used:
   872 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   873 ;; Tracked objects:
   874 ;;		On entry : B00/0
   875 ;;		On exit  : 0/0
   876 ;;		Unchanged: 0/0
   877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   878 ;;      Params:         0       0       0       0       0
   879 ;;      Locals:         0       0       0       0       0
   880 ;;      Temps:          0       1       0       0       0
   881 ;;      Totals:         0       1       0       0       0
   882 ;;Total ram usage:        1 bytes
   883 ;; Hardware stack levels required when called:    5
   884 ;; This function calls:
   885 ;;		_Lcd_Init
   886 ;;		_SPI_Enviar
   887 ;;		_SPI_Recibir
   888 ;;		_SPI_config
   889 ;;		_USART_config
   890 ;;		_interrup_config
   891 ;;		_lcd
   892 ;;		_osc_config
   893 ;;		_setup
   894 ;; This function is called by:
   895 ;;		Startup code after reset
   896 ;; This function uses a non-reentrant model
   897 ;;
   898                           
   899                           
   900                           ;psect for function _main
   901  010C                     _main:
   902  010C                     l1807:	
   903                           ;incstack = 0
   904                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   905                           
   906                           
   907                           ;MAESTRO_SPI.c: 111:     TRISC = 0;
   908  010C  120A  118A  23A7  120A  118A  	fcall	_setup
   909                           
   910                           ;MAESTRO_SPI.c: 112:     PORTC = 0;
   911  0111  120A  118A  24D0  120A  118A  	fcall	_osc_config
   912                           
   913                           ;MAESTRO_SPI.c: 113:     TRISCbits.TRISC6 = 0;
   914  0116  120A  118A  24B9  120A  118A  	fcall	_interrup_config
   915  011B                     l1809:
   916                           
   917                           ;MAESTRO_SPI.c: 114:     TRISCbits.TRISC4 = 1;
   918  011B  120A  118A  221D  120A  118A  	fcall	_Lcd_Init
   919  0120                     l1811:
   920                           
   921                           ;MAESTRO_SPI.c: 115:     PORTCbits.RC0 = 1;
   922  0120  120A  118A  24EC  120A  118A  	fcall	_USART_config
   923  0125                     l1813:
   924                           
   925                           ;MAESTRO_SPI.c: 116:     PORTCbits.RC1 = 1;
   926  0125  120A  118A  24C5  120A  118A  	fcall	_SPI_config
   927  012A                     l1815:
   928                           
   929                           ;MAESTRO_SPI.c: 118:     TRISD = 0;;MAESTRO_SPI.c: 119:     PORTD = 0;
   930  012A  1283               	bcf	3,5	;RP0=0, select bank0
   931  012B  1303               	bcf	3,6	;RP1=0, select bank0
   932  012C  1007               	bcf	7,0	;volatile
   933  012D                     l1817:
   934                           
   935                           ;MAESTRO_SPI.c: 120:     TRISE = 0;
   936  012D  30C7               	movlw	199
   937  012E  1283               	bcf	3,5	;RP0=0, select bank0
   938  012F  1303               	bcf	3,6	;RP1=0, select bank0
   939  0130  00BA               	movwf	??_main
   940  0131                     u647:
   941  0131  2932               	nop2
   942  0132  0BBA               	decfsz	??_main,f
   943  0133  2931               	goto	u647
   944  0134  2935               	nop2
   945  0135                     l1819:
   946                           
   947                           ;MAESTRO_SPI.c: 122: }
   948  0135  3000               	movlw	0
   949  0136  120A  118A  24F2  120A  118A  	fcall	_SPI_Enviar
   950  013B                     l1821:
   951                           
   952                           ;MAESTRO_SPI.c: 123: 
   953  013B  120A  118A  24FE  120A  118A  	fcall	_SPI_Recibir
   954  0140  1283               	bcf	3,5	;RP0=0, select bank0
   955  0141  1303               	bcf	3,6	;RP1=0, select bank0
   956  0142  0085               	movwf	5	;volatile
   957  0143                     l1823:
   958                           
   959                           ;MAESTRO_SPI.c: 125: {
   960  0143  30C7               	movlw	199
   961  0144  1283               	bcf	3,5	;RP0=0, select bank0
   962  0145  1303               	bcf	3,6	;RP1=0, select bank0
   963  0146  00BA               	movwf	??_main
   964  0147                     u657:
   965  0147  2948               	nop2
   966  0148  0BBA               	decfsz	??_main,f
   967  0149  2947               	goto	u657
   968  014A  294B               	nop2
   969  014B                     l1825:
   970                           
   971                           ;MAESTRO_SPI.c: 126:     INTCONbits.GIE = 1;
   972  014B  1283               	bcf	3,5	;RP0=0, select bank0
   973  014C  1303               	bcf	3,6	;RP1=0, select bank0
   974  014D  1407               	bsf	7,0	;volatile
   975  014E                     l1827:
   976                           
   977                           ;MAESTRO_SPI.c: 128:     INTCONbits.T0IE = 0;
   978  014E  120A  118A  2369  120A  118A  	fcall	_lcd
   979  0153                     l1829:
   980                           
   981                           ;MAESTRO_SPI.c: 129:     INTCONbits.INTE = 0;
   982  0153  1283               	bcf	3,5	;RP0=0, select bank0
   983  0154  1303               	bcf	3,6	;RP1=0, select bank0
   984  0155  0825               	movf	_velocidad1,w
   985  0156  3E01               	addlw	1
   986  0157  00BA               	movwf	??_main
   987  0158  083A               	movf	??_main,w
   988  0159  00A5               	movwf	_velocidad1
   989  015A                     l1831:
   990                           
   991                           ;MAESTRO_SPI.c: 130:     INTCONbits.RBIE = 0;
   992  015A  0824               	movf	_velocidad2,w
   993  015B  3E01               	addlw	1
   994  015C  00BA               	movwf	??_main
   995  015D  083A               	movf	??_main,w
   996  015E  00A4               	movwf	_velocidad2
   997  015F                     l1833:
   998                           
   999                           ;MAESTRO_SPI.c: 131:     INTCONbits.T0IF = 0;
  1000  015F  0823               	movf	_velocidad3,w
  1001  0160  3E01               	addlw	1
  1002  0161  00BA               	movwf	??_main
  1003  0162  083A               	movf	??_main,w
  1004  0163  00A3               	movwf	_velocidad3
  1005  0164  292A               	goto	l1815
  1006  0165  120A  118A  280C   	ljmp	start
  1007  0168                     __end_of_main:
  1008                           
  1009                           	psect	text1
  1010  03A7                     __ptext1:	
  1011 ;; *************** function _setup *****************
  1012 ;; Defined at:
  1013 ;;		line 141 in file "MAESTRO_SPI.c"
  1014 ;; Parameters:    Size  Location     Type
  1015 ;;		None
  1016 ;; Auto vars:     Size  Location     Type
  1017 ;;		None
  1018 ;; Return value:  Size  Location     Type
  1019 ;;                  1    wreg      void 
  1020 ;; Registers used:
  1021 ;;		status,2
  1022 ;; Tracked objects:
  1023 ;;		On entry : 0/0
  1024 ;;		On exit  : 0/0
  1025 ;;		Unchanged: 0/0
  1026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1027 ;;      Params:         0       0       0       0       0
  1028 ;;      Locals:         0       0       0       0       0
  1029 ;;      Temps:          0       0       0       0       0
  1030 ;;      Totals:         0       0       0       0       0
  1031 ;;Total ram usage:        0 bytes
  1032 ;; Hardware stack levels used:    1
  1033 ;; Hardware stack levels required when called:    1
  1034 ;; This function calls:
  1035 ;;		Nothing
  1036 ;; This function is called by:
  1037 ;;		_main
  1038 ;; This function uses a non-reentrant model
  1039 ;;
  1040                           
  1041                           
  1042                           ;psect for function _setup
  1043  03A7                     _setup:
  1044  03A7                     l1549:	
  1045                           ;incstack = 0
  1046                           ; Regs used in _setup: [status,2]
  1047                           
  1048                           
  1049                           ;MAESTRO_SPI.c: 143:     OSCCONbits.HTS = 0;
  1050  03A7  1683               	bsf	3,5	;RP0=1, select bank3
  1051  03A8  1703               	bsf	3,6	;RP1=1, select bank3
  1052  03A9  0188               	clrf	8	;volatile
  1053                           
  1054                           ;MAESTRO_SPI.c: 144:     OSCCONbits.LTS = 1;
  1055  03AA  1683               	bsf	3,5	;RP0=1, select bank1
  1056  03AB  1303               	bcf	3,6	;RP1=0, select bank1
  1057  03AC  0185               	clrf	5	;volatile
  1058                           
  1059                           ;MAESTRO_SPI.c: 145:     OSCCONbits.SCS = 0;
  1060  03AD  1283               	bcf	3,5	;RP0=0, select bank0
  1061  03AE  1303               	bcf	3,6	;RP1=0, select bank0
  1062  03AF  0185               	clrf	5	;volatile
  1063                           
  1064                           ;MAESTRO_SPI.c: 146: }
  1065  03B0  1683               	bsf	3,5	;RP0=1, select bank3
  1066  03B1  1703               	bsf	3,6	;RP1=1, select bank3
  1067  03B2  0189               	clrf	9	;volatile
  1068                           
  1069                           ;MAESTRO_SPI.c: 147: 
  1070  03B3  1683               	bsf	3,5	;RP0=1, select bank1
  1071  03B4  1303               	bcf	3,6	;RP1=0, select bank1
  1072  03B5  0186               	clrf	6	;volatile
  1073                           
  1074                           ;MAESTRO_SPI.c: 148: 
  1075  03B6  1283               	bcf	3,5	;RP0=0, select bank0
  1076  03B7  1303               	bcf	3,6	;RP1=0, select bank0
  1077  03B8  0186               	clrf	6	;volatile
  1078                           
  1079                           ;MAESTRO_SPI.c: 149: 
  1080  03B9  1683               	bsf	3,5	;RP0=1, select bank1
  1081  03BA  1303               	bcf	3,6	;RP1=0, select bank1
  1082  03BB  0187               	clrf	7	;volatile
  1083                           
  1084                           ;MAESTRO_SPI.c: 150: 
  1085  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  1086  03BD  1303               	bcf	3,6	;RP1=0, select bank0
  1087  03BE  0187               	clrf	7	;volatile
  1088  03BF                     l1551:
  1089                           
  1090                           ;MAESTRO_SPI.c: 151: 
  1091  03BF  1683               	bsf	3,5	;RP0=1, select bank1
  1092  03C0  1303               	bcf	3,6	;RP1=0, select bank1
  1093  03C1  1307               	bcf	7,6	;volatile
  1094  03C2                     l1553:
  1095                           
  1096                           ;MAESTRO_SPI.c: 152: void USART_config(void)
  1097  03C2  1607               	bsf	7,4	;volatile
  1098  03C3                     l1555:
  1099                           
  1100                           ;MAESTRO_SPI.c: 153: {
  1101  03C3  1283               	bcf	3,5	;RP0=0, select bank0
  1102  03C4  1303               	bcf	3,6	;RP1=0, select bank0
  1103  03C5  1407               	bsf	7,0	;volatile
  1104  03C6                     l1557:
  1105                           
  1106                           ;MAESTRO_SPI.c: 154:     USART_lib_config();
  1107  03C6  1487               	bsf	7,1	;volatile
  1108  03C7                     l1559:
  1109                           
  1110                           ;MAESTRO_SPI.c: 155: }
  1111  03C7  1507               	bsf	7,2	;volatile
  1112                           
  1113                           ;MAESTRO_SPI.c: 156: 
  1114  03C8  1683               	bsf	3,5	;RP0=1, select bank1
  1115  03C9  1303               	bcf	3,6	;RP1=0, select bank1
  1116  03CA  0188               	clrf	8	;volatile
  1117                           
  1118                           ;MAESTRO_SPI.c: 157: void SPI_config (void)
  1119  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  1120  03CC  1303               	bcf	3,6	;RP1=0, select bank0
  1121  03CD  0188               	clrf	8	;volatile
  1122                           
  1123                           ;MAESTRO_SPI.c: 158: {
  1124  03CE  1683               	bsf	3,5	;RP0=1, select bank1
  1125  03CF  1303               	bcf	3,6	;RP1=0, select bank1
  1126  03D0  0189               	clrf	9	;volatile
  1127                           
  1128                           ;MAESTRO_SPI.c: 159:     SPI_Maestro_Init (0, 2);
  1129  03D1  1283               	bcf	3,5	;RP0=0, select bank0
  1130  03D2  1303               	bcf	3,6	;RP1=0, select bank0
  1131  03D3  0189               	clrf	9	;volatile
  1132  03D4                     l143:
  1133  03D4  0008               	return
  1134  03D5                     __end_of_setup:
  1135                           
  1136                           	psect	text2
  1137  04D0                     __ptext2:	
  1138 ;; *************** function _osc_config *****************
  1139 ;; Defined at:
  1140 ;;		line 175 in file "MAESTRO_SPI.c"
  1141 ;; Parameters:    Size  Location     Type
  1142 ;;		None
  1143 ;; Auto vars:     Size  Location     Type
  1144 ;;		None
  1145 ;; Return value:  Size  Location     Type
  1146 ;;                  1    wreg      void 
  1147 ;; Registers used:
  1148 ;;		None
  1149 ;; Tracked objects:
  1150 ;;		On entry : 0/0
  1151 ;;		On exit  : 0/0
  1152 ;;		Unchanged: 0/0
  1153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1154 ;;      Params:         0       0       0       0       0
  1155 ;;      Locals:         0       0       0       0       0
  1156 ;;      Temps:          0       0       0       0       0
  1157 ;;      Totals:         0       0       0       0       0
  1158 ;;Total ram usage:        0 bytes
  1159 ;; Hardware stack levels used:    1
  1160 ;; Hardware stack levels required when called:    1
  1161 ;; This function calls:
  1162 ;;		Nothing
  1163 ;; This function is called by:
  1164 ;;		_main
  1165 ;; This function uses a non-reentrant model
  1166 ;;
  1167                           
  1168                           
  1169                           ;psect for function _osc_config
  1170  04D0                     _osc_config:
  1171  04D0                     l1561:	
  1172                           ;incstack = 0
  1173                           ; Regs used in _osc_config: []
  1174                           
  1175                           
  1176                           ;MAESTRO_SPI.c: 177:         Lcd_Write_Char(contador + 48);
  1177  04D0  1683               	bsf	3,5	;RP0=1, select bank1
  1178  04D1  1303               	bcf	3,6	;RP1=0, select bank1
  1179  04D2  170F               	bsf	15,6	;volatile
  1180                           
  1181                           ;MAESTRO_SPI.c: 178:     }
  1182  04D3  168F               	bsf	15,5	;volatile
  1183                           
  1184                           ;MAESTRO_SPI.c: 179:     else if (contador >= 10)
  1185  04D4  120F               	bcf	15,4	;volatile
  1186                           
  1187                           ;MAESTRO_SPI.c: 180:     {
  1188  04D5  118F               	bcf	15,3	;volatile
  1189                           
  1190                           ;MAESTRO_SPI.c: 181:         w1 = contador/10;
  1191  04D6  110F               	bcf	15,2	;volatile
  1192                           
  1193                           ;MAESTRO_SPI.c: 182:         w2 = contador % 10;
  1194  04D7  148F               	bsf	15,1	;volatile
  1195                           
  1196                           ;MAESTRO_SPI.c: 183:         Lcd_Set_Cursor(2,13);
  1197  04D8  100F               	bcf	15,0	;volatile
  1198  04D9                     l149:
  1199  04D9  0008               	return
  1200  04DA                     __end_of_osc_config:
  1201                           
  1202                           	psect	text3
  1203  0369                     __ptext3:	
  1204 ;; *************** function _lcd *****************
  1205 ;; Defined at:
  1206 ;;		line 204 in file "MAESTRO_SPI.c"
  1207 ;; Parameters:    Size  Location     Type
  1208 ;;		None
  1209 ;; Auto vars:     Size  Location     Type
  1210 ;;		None
  1211 ;; Return value:  Size  Location     Type
  1212 ;;                  1    wreg      void 
  1213 ;; Registers used:
  1214 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1215 ;; Tracked objects:
  1216 ;;		On entry : 0/0
  1217 ;;		On exit  : 0/0
  1218 ;;		Unchanged: 0/0
  1219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1220 ;;      Params:         0       0       0       0       0
  1221 ;;      Locals:         0       0       0       0       0
  1222 ;;      Temps:          0       1       0       0       0
  1223 ;;      Totals:         0       1       0       0       0
  1224 ;;Total ram usage:        1 bytes
  1225 ;; Hardware stack levels used:    1
  1226 ;; Hardware stack levels required when called:    4
  1227 ;; This function calls:
  1228 ;;		_Conversion1
  1229 ;;		_Conversion2
  1230 ;;		_Lcd_Set_Cursor
  1231 ;;		_Lcd_Write_Char
  1232 ;;		_Lcd_Write_String
  1233 ;; This function is called by:
  1234 ;;		_main
  1235 ;; This function uses a non-reentrant model
  1236 ;;
  1237                           
  1238                           
  1239                           ;psect for function _lcd
  1240  0369                     _lcd:
  1241  0369                     l1783:	
  1242                           ;incstack = 0
  1243                           ; Regs used in _lcd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1244                           
  1245                           
  1246                           ;MAESTRO_SPI.c: 206: {
  1247  0369  01F6               	clrf	Lcd_Set_Cursor@b
  1248  036A  0AF6               	incf	Lcd_Set_Cursor@b,f
  1249  036B  3001               	movlw	1
  1250  036C  120A  118A  2424  120A  118A  	fcall	_Lcd_Set_Cursor
  1251  0371                     l1785:
  1252                           
  1253                           ;MAESTRO_SPI.c: 207: 
  1254  0371  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1255  0372  120A  118A  23FF  120A  118A  	fcall	_Lcd_Write_String
  1256  0377                     l1787:
  1257                           
  1258                           ;MAESTRO_SPI.c: 208:     unidadz = voltajez / 100;
  1259  0377  01F6               	clrf	Lcd_Set_Cursor@b
  1260  0378  3002               	movlw	2
  1261  0379  120A  118A  2424  120A  118A  	fcall	_Lcd_Set_Cursor
  1262  037E                     l1789:
  1263                           
  1264                           ;MAESTRO_SPI.c: 209:     x1z = voltajez % 100;
  1265  037E  120A  118A  2274  120A  118A  	fcall	_Conversion1
  1266  0383                     l1791:
  1267                           
  1268                           ;MAESTRO_SPI.c: 210:     x2z = x1z / 10;
  1269  0383  3006               	movlw	6
  1270  0384  1283               	bcf	3,5	;RP0=0, select bank0
  1271  0385  1303               	bcf	3,6	;RP1=0, select bank0
  1272  0386  00B9               	movwf	??_lcd
  1273  0387  0839               	movf	??_lcd,w
  1274  0388  00F6               	movwf	Lcd_Set_Cursor@b
  1275  0389  3002               	movlw	2
  1276  038A  120A  118A  2424  120A  118A  	fcall	_Lcd_Set_Cursor
  1277  038F                     l1793:
  1278                           
  1279                           ;MAESTRO_SPI.c: 212:     y2z = y1z / 1;
  1280  038F  120A  118A  2168  120A  118A  	fcall	_Conversion2
  1281  0394                     l1795:
  1282                           
  1283                           ;MAESTRO_SPI.c: 213:     Lcd_Write_Char(unidadz+48);;MAESTRO_SPI.c: 214:     Lcd_Write_C
      +                          har(46);
  1284  0394  300E               	movlw	14
  1285  0395  1283               	bcf	3,5	;RP0=0, select bank0
  1286  0396  1303               	bcf	3,6	;RP1=0, select bank0
  1287  0397  00B9               	movwf	??_lcd
  1288  0398  0839               	movf	??_lcd,w
  1289  0399  00F6               	movwf	Lcd_Set_Cursor@b
  1290  039A  3002               	movlw	2
  1291  039B  120A  118A  2424  120A  118A  	fcall	_Lcd_Set_Cursor
  1292  03A0                     l1797:
  1293                           
  1294                           ;MAESTRO_SPI.c: 215:     Lcd_Write_Char(x2z+48);
  1295  03A0  3030               	movlw	48
  1296  03A1  120A  118A  2496  120A  118A  	fcall	_Lcd_Write_Char
  1297  03A6                     l161:	
  1298                           ;MAESTRO_SPI.c: 216:     Lcd_Write_Char(y2z+48);
  1299                           
  1300  03A6  0008               	return
  1301  03A7                     __end_of_lcd:
  1302                           
  1303                           	psect	text4
  1304  03FF                     __ptext4:	
  1305 ;; *************** function _Lcd_Write_String *****************
  1306 ;; Defined at:
  1307 ;;		line 78 in file "LCD_SPI.c"
  1308 ;; Parameters:    Size  Location     Type
  1309 ;;  a               1    wreg     PTR unsigned char 
  1310 ;;		 -> STR_1(17), 
  1311 ;; Auto vars:     Size  Location     Type
  1312 ;;  a               1    7[COMMON] PTR unsigned char 
  1313 ;;		 -> STR_1(17), 
  1314 ;;  i               2    5[COMMON] int 
  1315 ;; Return value:  Size  Location     Type
  1316 ;;                  1    wreg      void 
  1317 ;; Registers used:
  1318 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1319 ;; Tracked objects:
  1320 ;;		On entry : 0/0
  1321 ;;		On exit  : 0/0
  1322 ;;		Unchanged: 0/0
  1323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1324 ;;      Params:         0       0       0       0       0
  1325 ;;      Locals:         3       0       0       0       0
  1326 ;;      Temps:          0       0       0       0       0
  1327 ;;      Totals:         3       0       0       0       0
  1328 ;;Total ram usage:        3 bytes
  1329 ;; Hardware stack levels used:    1
  1330 ;; Hardware stack levels required when called:    3
  1331 ;; This function calls:
  1332 ;;		_Lcd_Write_Char
  1333 ;; This function is called by:
  1334 ;;		_lcd
  1335 ;; This function uses a non-reentrant model
  1336 ;;
  1337                           
  1338                           
  1339                           ;psect for function _Lcd_Write_String
  1340  03FF                     _Lcd_Write_String:
  1341                           
  1342                           ;incstack = 0
  1343                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1344                           ;Lcd_Write_String@a stored from wreg
  1345  03FF  00F7               	movwf	Lcd_Write_String@a
  1346  0400                     l1499:
  1347                           
  1348                           ;LCD_SPI.c: 78: void Lcd_Write_String(char *a);LCD_SPI.c: 79: {;LCD_SPI.c: 80:     int i
      +                          ;;LCD_SPI.c: 81:     for (i = 0; a[i] != '\0'; i++)
  1349  0400  01F5               	clrf	Lcd_Write_String@i
  1350  0401  01F6               	clrf	Lcd_Write_String@i+1
  1351  0402  2C16               	goto	l1505
  1352  0403                     l1501:
  1353                           
  1354                           ;LCD_SPI.c: 82:         Lcd_Write_Char(a[i]);
  1355  0403  0875               	movf	Lcd_Write_String@i,w
  1356  0404  0777               	addwf	Lcd_Write_String@a,w
  1357  0405  0084               	movwf	4
  1358  0406  120A  118A  247F  120A  118A  	fcall	stringdir
  1359  040B  120A  118A  2496  120A  118A  	fcall	_Lcd_Write_Char
  1360  0410                     l1503:
  1361  0410  3001               	movlw	1
  1362  0411  07F5               	addwf	Lcd_Write_String@i,f
  1363  0412  1803               	skipnc
  1364  0413  0AF6               	incf	Lcd_Write_String@i+1,f
  1365  0414  3000               	movlw	0
  1366  0415  07F6               	addwf	Lcd_Write_String@i+1,f
  1367  0416                     l1505:
  1368  0416  0875               	movf	Lcd_Write_String@i,w
  1369  0417  0777               	addwf	Lcd_Write_String@a,w
  1370  0418  0084               	movwf	4
  1371  0419  120A  118A  247F  120A  118A  	fcall	stringdir
  1372  041E  3A00               	xorlw	0
  1373  041F  1D03               	skipz
  1374  0420  2C22               	goto	u531
  1375  0421  2C23               	goto	u530
  1376  0422                     u531:
  1377  0422  2C03               	goto	l1501
  1378  0423                     u530:
  1379  0423                     l232:
  1380  0423  0008               	return
  1381  0424                     __end_of_Lcd_Write_String:
  1382                           
  1383                           	psect	text5
  1384  0424                     __ptext5:	
  1385 ;; *************** function _Lcd_Set_Cursor *****************
  1386 ;; Defined at:
  1387 ;;		line 63 in file "LCD_SPI.c"
  1388 ;; Parameters:    Size  Location     Type
  1389 ;;  a               1    wreg     unsigned char 
  1390 ;;  b               1    6[COMMON] unsigned char 
  1391 ;; Auto vars:     Size  Location     Type
  1392 ;;  a               1    8[COMMON] unsigned char 
  1393 ;;  temp            1    9[COMMON] unsigned char 
  1394 ;; Return value:  Size  Location     Type
  1395 ;;                  1    wreg      void 
  1396 ;; Registers used:
  1397 ;;		wreg, status,2, status,0, pclath, cstack
  1398 ;; Tracked objects:
  1399 ;;		On entry : 0/0
  1400 ;;		On exit  : 0/0
  1401 ;;		Unchanged: 0/0
  1402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1403 ;;      Params:         1       0       0       0       0
  1404 ;;      Locals:         2       0       0       0       0
  1405 ;;      Temps:          1       0       0       0       0
  1406 ;;      Totals:         4       0       0       0       0
  1407 ;;Total ram usage:        4 bytes
  1408 ;; Hardware stack levels used:    1
  1409 ;; Hardware stack levels required when called:    3
  1410 ;; This function calls:
  1411 ;;		_Lcd_Cmd
  1412 ;; This function is called by:
  1413 ;;		_lcd
  1414 ;; This function uses a non-reentrant model
  1415 ;;
  1416                           
  1417                           
  1418                           ;psect for function _Lcd_Set_Cursor
  1419  0424                     _Lcd_Set_Cursor:
  1420                           
  1421                           ;incstack = 0
  1422                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1423                           ;Lcd_Set_Cursor@a stored from wreg
  1424  0424  00F8               	movwf	Lcd_Set_Cursor@a
  1425  0425                     l1487:
  1426                           
  1427                           ;LCD_SPI.c: 63: void Lcd_Set_Cursor(char a, char b);LCD_SPI.c: 64: {;LCD_SPI.c: 65:     
      +                          char temp;;LCD_SPI.c: 66:     if (a == 1)
  1428  0425  0378               	decf	Lcd_Set_Cursor@a,w
  1429  0426  1D03               	btfss	3,2
  1430  0427  2C29               	goto	u511
  1431  0428  2C2A               	goto	u510
  1432  0429                     u511:
  1433  0429  2C36               	goto	l1493
  1434  042A                     u510:
  1435  042A                     l1489:
  1436                           
  1437                           ;LCD_SPI.c: 67:     {;LCD_SPI.c: 68:         temp = 0x80 + b;
  1438  042A  0876               	movf	Lcd_Set_Cursor@b,w
  1439  042B  3E80               	addlw	128
  1440  042C  00F7               	movwf	??_Lcd_Set_Cursor
  1441  042D  0877               	movf	??_Lcd_Set_Cursor,w
  1442  042E  00F9               	movwf	Lcd_Set_Cursor@temp
  1443  042F                     l1491:
  1444                           
  1445                           ;LCD_SPI.c: 69:         Lcd_Cmd(temp);
  1446  042F  0879               	movf	Lcd_Set_Cursor@temp,w
  1447  0430  120A  118A  2466  120A  118A  	fcall	_Lcd_Cmd
  1448                           
  1449                           ;LCD_SPI.c: 70:     }
  1450  0435  2C47               	goto	l226
  1451  0436                     l1493:
  1452  0436  3002               	movlw	2
  1453  0437  0678               	xorwf	Lcd_Set_Cursor@a,w
  1454  0438  1D03               	btfss	3,2
  1455  0439  2C3B               	goto	u521
  1456  043A  2C3C               	goto	u520
  1457  043B                     u521:
  1458  043B  2C47               	goto	l226
  1459  043C                     u520:
  1460  043C                     l1495:
  1461                           
  1462                           ;LCD_SPI.c: 72:     {;LCD_SPI.c: 73:         temp = 0xC0 + b;
  1463  043C  0876               	movf	Lcd_Set_Cursor@b,w
  1464  043D  3EC0               	addlw	192
  1465  043E  00F7               	movwf	??_Lcd_Set_Cursor
  1466  043F  0877               	movf	??_Lcd_Set_Cursor,w
  1467  0440  00F9               	movwf	Lcd_Set_Cursor@temp
  1468  0441                     l1497:
  1469                           
  1470                           ;LCD_SPI.c: 74:         Lcd_Cmd(temp);
  1471  0441  0879               	movf	Lcd_Set_Cursor@temp,w
  1472  0442  120A  118A  2466  120A  118A  	fcall	_Lcd_Cmd
  1473  0447                     l226:
  1474  0447  0008               	return
  1475  0448                     __end_of_Lcd_Set_Cursor:
  1476                           
  1477                           	psect	text6
  1478  0168                     __ptext6:	
  1479 ;; *************** function _Conversion2 *****************
  1480 ;; Defined at:
  1481 ;;		line 243 in file "MAESTRO_SPI.c"
  1482 ;; Parameters:    Size  Location     Type
  1483 ;;		None
  1484 ;; Auto vars:     Size  Location     Type
  1485 ;;		None
  1486 ;; Return value:  Size  Location     Type
  1487 ;;                  1    wreg      void 
  1488 ;; Registers used:
  1489 ;;		wreg, status,2, status,0, pclath, cstack
  1490 ;; Tracked objects:
  1491 ;;		On entry : 0/0
  1492 ;;		On exit  : 0/0
  1493 ;;		Unchanged: 0/0
  1494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1495 ;;      Params:         0       0       0       0       0
  1496 ;;      Locals:         0       0       0       0       0
  1497 ;;      Temps:          1       0       0       0       0
  1498 ;;      Totals:         1       0       0       0       0
  1499 ;;Total ram usage:        1 bytes
  1500 ;; Hardware stack levels used:    1
  1501 ;; Hardware stack levels required when called:    3
  1502 ;; This function calls:
  1503 ;;		_Lcd_Write_Char
  1504 ;;		___awdiv
  1505 ;;		___awmod
  1506 ;;		_virtual_display2
  1507 ;;		_virtual_display3
  1508 ;; This function is called by:
  1509 ;;		_lcd
  1510 ;; This function uses a non-reentrant model
  1511 ;;
  1512                           
  1513                           
  1514                           ;psect for function _Conversion2
  1515  0168                     _Conversion2:
  1516  0168                     l1761:	
  1517                           ;incstack = 0
  1518                           ; Regs used in _Conversion2: [wreg+status,2+status,0+pclath+cstack]
  1519                           
  1520                           
  1521                           ;MAESTRO_SPI.c: 246:         escribir_char (58);
  1522  0168  1283               	bcf	3,5	;RP0=0, select bank0
  1523  0169  1303               	bcf	3,6	;RP1=0, select bank0
  1524  016A  01AF               	clrf	_unidadz
  1525                           
  1526                           ;MAESTRO_SPI.c: 247:         escribir_char (unidadz+48);
  1527  016B  01AE               	clrf	_x1z
  1528  016C                     l1763:
  1529                           
  1530                           ;MAESTRO_SPI.c: 248:         escribir_char (46);
  1531  016C  300A               	movlw	10
  1532  016D  00F2               	movwf	___awdiv@divisor
  1533  016E  3000               	movlw	0
  1534  016F  00F3               	movwf	___awdiv@divisor+1
  1535  0170  3000               	movlw	0
  1536  0171  00F4               	movwf	___awdiv@dividend
  1537  0172  00F5               	movwf	___awdiv@dividend+1
  1538  0173  120A  118A  20A3  120A  118A  	fcall	___awdiv
  1539  0178  0872               	movf	?___awdiv,w
  1540  0179  00F9               	movwf	??_Conversion2
  1541  017A  0879               	movf	??_Conversion2,w
  1542  017B  1283               	bcf	3,5	;RP0=0, select bank0
  1543  017C  1303               	bcf	3,6	;RP1=0, select bank0
  1544  017D  00AC               	movwf	_x2z
  1545  017E                     l1765:
  1546                           
  1547                           ;MAESTRO_SPI.c: 249:         escribir_char (x2z+48);
  1548  017E  300A               	movlw	10
  1549  017F  00F2               	movwf	___awmod@divisor
  1550  0180  3000               	movlw	0
  1551  0181  00F3               	movwf	___awmod@divisor+1
  1552  0182  3000               	movlw	0
  1553  0183  00F4               	movwf	___awmod@dividend
  1554  0184  00F5               	movwf	___awmod@dividend+1
  1555  0185  120A  118A  21C4  120A  118A  	fcall	___awmod
  1556  018A  0872               	movf	?___awmod,w
  1557  018B  00F9               	movwf	??_Conversion2
  1558  018C  0879               	movf	??_Conversion2,w
  1559  018D  1283               	bcf	3,5	;RP0=0, select bank0
  1560  018E  1303               	bcf	3,6	;RP1=0, select bank0
  1561  018F  00AD               	movwf	_y1z
  1562  0190                     l1767:
  1563                           
  1564                           ;MAESTRO_SPI.c: 250:         escribir_char (y2z+48);
  1565  0190  082D               	movf	_y1z,w
  1566  0191  00F9               	movwf	??_Conversion2
  1567  0192  0879               	movf	??_Conversion2,w
  1568  0193  00AB               	movwf	_y2z
  1569  0194                     l1769:
  1570                           
  1571                           ;MAESTRO_SPI.c: 251:         escribir_char (86);
  1572  0194  082F               	movf	_unidadz,w
  1573  0195  3E30               	addlw	48
  1574  0196  120A  118A  2496  120A  118A  	fcall	_Lcd_Write_Char
  1575  019B                     l1771:
  1576                           
  1577                           ;MAESTRO_SPI.c: 252:         escribir_char (32);
  1578  019B  302E               	movlw	46
  1579  019C  120A  118A  2496  120A  118A  	fcall	_Lcd_Write_Char
  1580  01A1                     l1773:
  1581                           
  1582                           ;MAESTRO_SPI.c: 253:         escribir_char (32);
  1583  01A1  1283               	bcf	3,5	;RP0=0, select bank0
  1584  01A2  1303               	bcf	3,6	;RP1=0, select bank0
  1585  01A3  082C               	movf	_x2z,w
  1586  01A4  3E30               	addlw	48
  1587  01A5  120A  118A  2496  120A  118A  	fcall	_Lcd_Write_Char
  1588  01AA                     l1775:
  1589                           
  1590                           ;MAESTRO_SPI.c: 254:         velocidad2 = 0;
  1591  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  1592  01AB  1303               	bcf	3,6	;RP1=0, select bank0
  1593  01AC  082B               	movf	_y2z,w
  1594  01AD  3E30               	addlw	48
  1595  01AE  120A  118A  2496  120A  118A  	fcall	_Lcd_Write_Char
  1596  01B3                     l1777:
  1597                           
  1598                           ;MAESTRO_SPI.c: 255:     }
  1599  01B3  3056               	movlw	86
  1600  01B4  120A  118A  2496  120A  118A  	fcall	_Lcd_Write_Char
  1601  01B9                     l1779:
  1602                           
  1603                           ;MAESTRO_SPI.c: 256: }
  1604  01B9  120A  118A  22C9  120A  118A  	fcall	_virtual_display2
  1605  01BE                     l1781:
  1606                           
  1607                           ;MAESTRO_SPI.c: 257: 
  1608  01BE  120A  118A  23D5  120A  118A  	fcall	_virtual_display3
  1609  01C3                     l167:
  1610  01C3  0008               	return
  1611  01C4                     __end_of_Conversion2:
  1612                           
  1613                           	psect	text7
  1614  03D5                     __ptext7:	
  1615 ;; *************** function _virtual_display3 *****************
  1616 ;; Defined at:
  1617 ;;		line 296 in file "MAESTRO_SPI.c"
  1618 ;; Parameters:    Size  Location     Type
  1619 ;;		None
  1620 ;; Auto vars:     Size  Location     Type
  1621 ;;		None
  1622 ;; Return value:  Size  Location     Type
  1623 ;;                  1    wreg      void 
  1624 ;; Registers used:
  1625 ;;		wreg, status,2, status,0, pclath, cstack
  1626 ;; Tracked objects:
  1627 ;;		On entry : 0/0
  1628 ;;		On exit  : 0/0
  1629 ;;		Unchanged: 0/0
  1630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1631 ;;      Params:         0       0       0       0       0
  1632 ;;      Locals:         0       0       0       0       0
  1633 ;;      Temps:          0       0       0       0       0
  1634 ;;      Totals:         0       0       0       0       0
  1635 ;;Total ram usage:        0 bytes
  1636 ;; Hardware stack levels used:    1
  1637 ;; Hardware stack levels required when called:    2
  1638 ;; This function calls:
  1639 ;;		_escribir_char
  1640 ;; This function is called by:
  1641 ;;		_Conversion2
  1642 ;; This function uses a non-reentrant model
  1643 ;;
  1644                           
  1645                           
  1646                           ;psect for function _virtual_display3
  1647  03D5                     _virtual_display3:
  1648  03D5                     l1327:	
  1649                           ;incstack = 0
  1650                           ; Regs used in _virtual_display3: [wreg+status,2+status,0+pclath+cstack]
  1651                           
  1652  03D5  3010               	movlw	16
  1653  03D6  1283               	bcf	3,5	;RP0=0, select bank0
  1654  03D7  1303               	bcf	3,6	;RP1=0, select bank0
  1655  03D8  0223               	subwf	_velocidad3,w
  1656  03D9  1C03               	skipc
  1657  03DA  2BDC               	goto	u311
  1658  03DB  2BDD               	goto	u310
  1659  03DC                     u311:
  1660  03DC  2BFE               	goto	l181
  1661  03DD                     u310:
  1662  03DD                     l1329:
  1663  03DD  3043               	movlw	67
  1664  03DE  120A  118A  24DA  120A  118A  	fcall	_escribir_char
  1665  03E3  303A               	movlw	58
  1666  03E4  120A  118A  24DA  120A  118A  	fcall	_escribir_char
  1667  03E9  3030               	movlw	48
  1668  03EA  120A  118A  24DA  120A  118A  	fcall	_escribir_char
  1669  03EF  3030               	movlw	48
  1670  03F0  120A  118A  24DA  120A  118A  	fcall	_escribir_char
  1671  03F5  300D               	movlw	13
  1672  03F6  120A  118A  24DA  120A  118A  	fcall	_escribir_char
  1673  03FB                     l1331:
  1674  03FB  1283               	bcf	3,5	;RP0=0, select bank0
  1675  03FC  1303               	bcf	3,6	;RP1=0, select bank0
  1676  03FD  01A3               	clrf	_velocidad3
  1677  03FE                     l181:
  1678  03FE  0008               	return
  1679  03FF                     __end_of_virtual_display3:
  1680                           
  1681                           	psect	text8
  1682  02C9                     __ptext8:	
  1683 ;; *************** function _virtual_display2 *****************
  1684 ;; Defined at:
  1685 ;;		line 278 in file "MAESTRO_SPI.c"
  1686 ;; Parameters:    Size  Location     Type
  1687 ;;		None
  1688 ;; Auto vars:     Size  Location     Type
  1689 ;;		None
  1690 ;; Return value:  Size  Location     Type
  1691 ;;                  1    wreg      void 
  1692 ;; Registers used:
  1693 ;;		wreg, status,2, status,0, pclath, cstack
  1694 ;; Tracked objects:
  1695 ;;		On entry : 0/0
  1696 ;;		On exit  : 0/0
  1697 ;;		Unchanged: 0/0
  1698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1699 ;;      Params:         0       0       0       0       0
  1700 ;;      Locals:         0       0       0       0       0
  1701 ;;      Temps:          0       0       0       0       0
  1702 ;;      Totals:         0       0       0       0       0
  1703 ;;Total ram usage:        0 bytes
  1704 ;; Hardware stack levels used:    1
  1705 ;; Hardware stack levels required when called:    2
  1706 ;; This function calls:
  1707 ;;		_escribir_char
  1708 ;; This function is called by:
  1709 ;;		_Conversion2
  1710 ;; This function uses a non-reentrant model
  1711 ;;
  1712                           
  1713                           
  1714                           ;psect for function _virtual_display2
  1715  02C9                     _virtual_display2:
  1716  02C9                     l1321:	
  1717                           ;incstack = 0
  1718                           ; Regs used in _virtual_display2: [wreg+status,2+status,0+pclath+cstack]
  1719                           
  1720                           
  1721                           ;MAESTRO_SPI.c: 280:     }
  1722  02C9  3010               	movlw	16
  1723  02CA  1283               	bcf	3,5	;RP0=0, select bank0
  1724  02CB  1303               	bcf	3,6	;RP1=0, select bank0
  1725  02CC  0224               	subwf	_velocidad2,w
  1726  02CD  1C03               	skipc
  1727  02CE  2AD0               	goto	u301
  1728  02CF  2AD1               	goto	u300
  1729  02D0                     u301:
  1730  02D0  2B19               	goto	l175
  1731  02D1                     u300:
  1732  02D1                     l1323:
  1733                           
  1734                           ;MAESTRO_SPI.c: 281: };MAESTRO_SPI.c: 282: 
  1735  02D1  3053               	movlw	83
  1736  02D2  120A  118A  24DA  120A  118A  	fcall	_escribir_char
  1737                           
  1738                           ;MAESTRO_SPI.c: 283: void escribir_char (uint8_t valor)
  1739  02D7  3032               	movlw	50
  1740  02D8  120A  118A  24DA  120A  118A  	fcall	_escribir_char
  1741                           
  1742                           ;MAESTRO_SPI.c: 284: {
  1743  02DD  303A               	movlw	58
  1744  02DE  120A  118A  24DA  120A  118A  	fcall	_escribir_char
  1745                           
  1746                           ;MAESTRO_SPI.c: 285:     TXREG = valor;
  1747  02E3  1283               	bcf	3,5	;RP0=0, select bank0
  1748  02E4  1303               	bcf	3,6	;RP1=0, select bank0
  1749  02E5  082F               	movf	_unidadz,w
  1750  02E6  3E30               	addlw	48
  1751  02E7  120A  118A  24DA  120A  118A  	fcall	_escribir_char
  1752                           
  1753                           ;MAESTRO_SPI.c: 286:     while (PIR1bits.TXIF == 0);
  1754  02EC  302E               	movlw	46
  1755  02ED  120A  118A  24DA  120A  118A  	fcall	_escribir_char
  1756                           
  1757                           ;MAESTRO_SPI.c: 287: }
  1758  02F2  1283               	bcf	3,5	;RP0=0, select bank0
  1759  02F3  1303               	bcf	3,6	;RP1=0, select bank0
  1760  02F4  082C               	movf	_x2z,w
  1761  02F5  3E30               	addlw	48
  1762  02F6  120A  118A  24DA  120A  118A  	fcall	_escribir_char
  1763  02FB  1283               	bcf	3,5	;RP0=0, select bank0
  1764  02FC  1303               	bcf	3,6	;RP1=0, select bank0
  1765  02FD  082B               	movf	_y2z,w
  1766  02FE  3E30               	addlw	48
  1767  02FF  120A  118A  24DA  120A  118A  	fcall	_escribir_char
  1768  0304  3056               	movlw	86
  1769  0305  120A  118A  24DA  120A  118A  	fcall	_escribir_char
  1770  030A  3020               	movlw	32
  1771  030B  120A  118A  24DA  120A  118A  	fcall	_escribir_char
  1772  0310  3020               	movlw	32
  1773  0311  120A  118A  24DA  120A  118A  	fcall	_escribir_char
  1774  0316                     l1325:
  1775  0316  1283               	bcf	3,5	;RP0=0, select bank0
  1776  0317  1303               	bcf	3,6	;RP1=0, select bank0
  1777  0318  01A4               	clrf	_velocidad2
  1778  0319                     l175:
  1779  0319  0008               	return
  1780  031A                     __end_of_virtual_display2:
  1781                           
  1782                           	psect	text9
  1783  0274                     __ptext9:	
  1784 ;; *************** function _Conversion1 *****************
  1785 ;; Defined at:
  1786 ;;		line 227 in file "MAESTRO_SPI.c"
  1787 ;; Parameters:    Size  Location     Type
  1788 ;;		None
  1789 ;; Auto vars:     Size  Location     Type
  1790 ;;		None
  1791 ;; Return value:  Size  Location     Type
  1792 ;;                  1    wreg      void 
  1793 ;; Registers used:
  1794 ;;		wreg, status,2, status,0, pclath, cstack
  1795 ;; Tracked objects:
  1796 ;;		On entry : 0/0
  1797 ;;		On exit  : 0/0
  1798 ;;		Unchanged: 0/0
  1799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1800 ;;      Params:         0       0       0       0       0
  1801 ;;      Locals:         0       0       0       0       0
  1802 ;;      Temps:          1       0       0       0       0
  1803 ;;      Totals:         1       0       0       0       0
  1804 ;;Total ram usage:        1 bytes
  1805 ;; Hardware stack levels used:    1
  1806 ;; Hardware stack levels required when called:    3
  1807 ;; This function calls:
  1808 ;;		_Lcd_Write_Char
  1809 ;;		___awdiv
  1810 ;;		___awmod
  1811 ;;		_virtual_display1
  1812 ;; This function is called by:
  1813 ;;		_lcd
  1814 ;; This function uses a non-reentrant model
  1815 ;;
  1816                           
  1817                           
  1818                           ;psect for function _Conversion1
  1819  0274                     _Conversion1:
  1820  0274                     l1741:	
  1821                           ;incstack = 0
  1822                           ; Regs used in _Conversion1: [wreg+status,2+status,0+pclath+cstack]
  1823                           
  1824                           
  1825                           ;MAESTRO_SPI.c: 230:         escribir_char (46);
  1826  0274  01FB               	clrf	_unidad
  1827                           
  1828                           ;MAESTRO_SPI.c: 231:         escribir_char (x2+48);
  1829  0275  01FA               	clrf	_x1
  1830  0276                     l1743:
  1831                           
  1832                           ;MAESTRO_SPI.c: 232:         escribir_char (y2+48);
  1833  0276  300A               	movlw	10
  1834  0277  00F2               	movwf	___awdiv@divisor
  1835  0278  3000               	movlw	0
  1836  0279  00F3               	movwf	___awdiv@divisor+1
  1837  027A  3000               	movlw	0
  1838  027B  00F4               	movwf	___awdiv@dividend
  1839  027C  00F5               	movwf	___awdiv@dividend+1
  1840  027D  120A  118A  20A3  120A  118A  	fcall	___awdiv
  1841  0282  0872               	movf	?___awdiv,w
  1842  0283  00F9               	movwf	??_Conversion1
  1843  0284  0879               	movf	??_Conversion1,w
  1844  0285  1283               	bcf	3,5	;RP0=0, select bank0
  1845  0286  1303               	bcf	3,6	;RP1=0, select bank0
  1846  0287  00B2               	movwf	_x2
  1847  0288                     l1745:
  1848                           
  1849                           ;MAESTRO_SPI.c: 233:         escribir_char (86);
  1850  0288  300A               	movlw	10
  1851  0289  00F2               	movwf	___awmod@divisor
  1852  028A  3000               	movlw	0
  1853  028B  00F3               	movwf	___awmod@divisor+1
  1854  028C  3000               	movlw	0
  1855  028D  00F4               	movwf	___awmod@dividend
  1856  028E  00F5               	movwf	___awmod@dividend+1
  1857  028F  120A  118A  21C4  120A  118A  	fcall	___awmod
  1858  0294  0872               	movf	?___awmod,w
  1859  0295  00F9               	movwf	??_Conversion1
  1860  0296  0879               	movf	??_Conversion1,w
  1861  0297  1283               	bcf	3,5	;RP0=0, select bank0
  1862  0298  1303               	bcf	3,6	;RP1=0, select bank0
  1863  0299  00B3               	movwf	_y1
  1864  029A                     l1747:
  1865                           
  1866                           ;MAESTRO_SPI.c: 234:         escribir_char (32);
  1867  029A  0833               	movf	_y1,w
  1868  029B  00F9               	movwf	??_Conversion1
  1869  029C  0879               	movf	??_Conversion1,w
  1870  029D  00B1               	movwf	_y2
  1871  029E                     l1749:
  1872                           
  1873                           ;MAESTRO_SPI.c: 235:         escribir_char (32);
  1874  029E  087B               	movf	_unidad,w
  1875  029F  3E30               	addlw	48
  1876  02A0  120A  118A  2496  120A  118A  	fcall	_Lcd_Write_Char
  1877  02A5                     l1751:
  1878                           
  1879                           ;MAESTRO_SPI.c: 236:         velocidad1 = 0;
  1880  02A5  302E               	movlw	46
  1881  02A6  120A  118A  2496  120A  118A  	fcall	_Lcd_Write_Char
  1882  02AB                     l1753:
  1883                           
  1884                           ;MAESTRO_SPI.c: 237:     }
  1885  02AB  1283               	bcf	3,5	;RP0=0, select bank0
  1886  02AC  1303               	bcf	3,6	;RP1=0, select bank0
  1887  02AD  0832               	movf	_x2,w
  1888  02AE  3E30               	addlw	48
  1889  02AF  120A  118A  2496  120A  118A  	fcall	_Lcd_Write_Char
  1890  02B4                     l1755:
  1891                           
  1892                           ;MAESTRO_SPI.c: 238: }
  1893  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  1894  02B5  1303               	bcf	3,6	;RP1=0, select bank0
  1895  02B6  0831               	movf	_y2,w
  1896  02B7  3E30               	addlw	48
  1897  02B8  120A  118A  2496  120A  118A  	fcall	_Lcd_Write_Char
  1898  02BD                     l1757:
  1899                           
  1900                           ;MAESTRO_SPI.c: 239: 
  1901  02BD  3056               	movlw	86
  1902  02BE  120A  118A  2496  120A  118A  	fcall	_Lcd_Write_Char
  1903  02C3                     l1759:
  1904                           
  1905                           ;MAESTRO_SPI.c: 240: void virtual_display2 (void)
  1906  02C3  120A  118A  231A  120A  118A  	fcall	_virtual_display1
  1907  02C8                     l164:
  1908  02C8  0008               	return
  1909  02C9                     __end_of_Conversion1:
  1910                           
  1911                           	psect	text10
  1912  031A                     __ptext10:	
  1913 ;; *************** function _virtual_display1 *****************
  1914 ;; Defined at:
  1915 ;;		line 260 in file "MAESTRO_SPI.c"
  1916 ;; Parameters:    Size  Location     Type
  1917 ;;		None
  1918 ;; Auto vars:     Size  Location     Type
  1919 ;;		None
  1920 ;; Return value:  Size  Location     Type
  1921 ;;                  1    wreg      void 
  1922 ;; Registers used:
  1923 ;;		wreg, status,2, status,0, pclath, cstack
  1924 ;; Tracked objects:
  1925 ;;		On entry : 0/0
  1926 ;;		On exit  : 0/0
  1927 ;;		Unchanged: 0/0
  1928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1929 ;;      Params:         0       0       0       0       0
  1930 ;;      Locals:         0       0       0       0       0
  1931 ;;      Temps:          0       0       0       0       0
  1932 ;;      Totals:         0       0       0       0       0
  1933 ;;Total ram usage:        0 bytes
  1934 ;; Hardware stack levels used:    1
  1935 ;; Hardware stack levels required when called:    2
  1936 ;; This function calls:
  1937 ;;		_escribir_char
  1938 ;; This function is called by:
  1939 ;;		_Conversion1
  1940 ;; This function uses a non-reentrant model
  1941 ;;
  1942                           
  1943                           
  1944                           ;psect for function _virtual_display1
  1945  031A                     _virtual_display1:
  1946  031A                     l1315:	
  1947                           ;incstack = 0
  1948                           ; Regs used in _virtual_display1: [wreg+status,2+status,0+pclath+cstack]
  1949                           
  1950                           
  1951                           ;MAESTRO_SPI.c: 262:         if (contador < 10)
  1952  031A  3010               	movlw	16
  1953  031B  1283               	bcf	3,5	;RP0=0, select bank0
  1954  031C  1303               	bcf	3,6	;RP1=0, select bank0
  1955  031D  0225               	subwf	_velocidad1,w
  1956  031E  1C03               	skipc
  1957  031F  2B21               	goto	u291
  1958  0320  2B22               	goto	u290
  1959  0321                     u291:
  1960  0321  2B68               	goto	l171
  1961  0322                     u290:
  1962  0322                     l1317:
  1963                           
  1964                           ;MAESTRO_SPI.c: 263:         {;MAESTRO_SPI.c: 264:             escribir_char (67);
  1965  0322  3053               	movlw	83
  1966  0323  120A  118A  24DA  120A  118A  	fcall	_escribir_char
  1967                           
  1968                           ;MAESTRO_SPI.c: 265:             escribir_char (58);
  1969  0328  3031               	movlw	49
  1970  0329  120A  118A  24DA  120A  118A  	fcall	_escribir_char
  1971                           
  1972                           ;MAESTRO_SPI.c: 266:             escribir_char (48);
  1973  032E  303A               	movlw	58
  1974  032F  120A  118A  24DA  120A  118A  	fcall	_escribir_char
  1975                           
  1976                           ;MAESTRO_SPI.c: 267:             escribir_char (contador+48);
  1977  0334  087B               	movf	_unidad,w
  1978  0335  3E30               	addlw	48
  1979  0336  120A  118A  24DA  120A  118A  	fcall	_escribir_char
  1980                           
  1981                           ;MAESTRO_SPI.c: 268:             escribir_char ('\r');
  1982  033B  302E               	movlw	46
  1983  033C  120A  118A  24DA  120A  118A  	fcall	_escribir_char
  1984                           
  1985                           ;MAESTRO_SPI.c: 269:             velocidad3 = 0;
  1986  0341  1283               	bcf	3,5	;RP0=0, select bank0
  1987  0342  1303               	bcf	3,6	;RP1=0, select bank0
  1988  0343  0832               	movf	_x2,w
  1989  0344  3E30               	addlw	48
  1990  0345  120A  118A  24DA  120A  118A  	fcall	_escribir_char
  1991                           
  1992                           ;MAESTRO_SPI.c: 270:         }
  1993  034A  1283               	bcf	3,5	;RP0=0, select bank0
  1994  034B  1303               	bcf	3,6	;RP1=0, select bank0
  1995  034C  0831               	movf	_y2,w
  1996  034D  3E30               	addlw	48
  1997  034E  120A  118A  24DA  120A  118A  	fcall	_escribir_char
  1998                           
  1999                           ;MAESTRO_SPI.c: 271:         else
  2000  0353  3056               	movlw	86
  2001  0354  120A  118A  24DA  120A  118A  	fcall	_escribir_char
  2002                           
  2003                           ;MAESTRO_SPI.c: 272:         {
  2004  0359  3020               	movlw	32
  2005  035A  120A  118A  24DA  120A  118A  	fcall	_escribir_char
  2006                           
  2007                           ;MAESTRO_SPI.c: 273:             escribir_char (67);
  2008  035F  3020               	movlw	32
  2009  0360  120A  118A  24DA  120A  118A  	fcall	_escribir_char
  2010  0365                     l1319:
  2011                           
  2012                           ;MAESTRO_SPI.c: 274:             escribir_char (58);
  2013  0365  1283               	bcf	3,5	;RP0=0, select bank0
  2014  0366  1303               	bcf	3,6	;RP1=0, select bank0
  2015  0367  01A5               	clrf	_velocidad1
  2016  0368                     l171:
  2017  0368  0008               	return
  2018  0369                     __end_of_virtual_display1:
  2019                           
  2020                           	psect	text11
  2021  04DA                     __ptext11:	
  2022 ;; *************** function _escribir_char *****************
  2023 ;; Defined at:
  2024 ;;		line 321 in file "MAESTRO_SPI.c"
  2025 ;; Parameters:    Size  Location     Type
  2026 ;;  valor           1    wreg     unsigned char 
  2027 ;; Auto vars:     Size  Location     Type
  2028 ;;  valor           1    2[COMMON] unsigned char 
  2029 ;; Return value:  Size  Location     Type
  2030 ;;                  1    wreg      void 
  2031 ;; Registers used:
  2032 ;;		wreg
  2033 ;; Tracked objects:
  2034 ;;		On entry : 0/0
  2035 ;;		On exit  : 0/0
  2036 ;;		Unchanged: 0/0
  2037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2038 ;;      Params:         0       0       0       0       0
  2039 ;;      Locals:         1       0       0       0       0
  2040 ;;      Temps:          0       0       0       0       0
  2041 ;;      Totals:         1       0       0       0       0
  2042 ;;Total ram usage:        1 bytes
  2043 ;; Hardware stack levels used:    1
  2044 ;; Hardware stack levels required when called:    1
  2045 ;; This function calls:
  2046 ;;		Nothing
  2047 ;; This function is called by:
  2048 ;;		_virtual_display1
  2049 ;;		_virtual_display2
  2050 ;;		_virtual_display3
  2051 ;; This function uses a non-reentrant model
  2052 ;;
  2053                           
  2054                           
  2055                           ;psect for function _escribir_char
  2056  04DA                     _escribir_char:
  2057                           
  2058                           ;incstack = 0
  2059                           ; Regs used in _escribir_char: [wreg]
  2060                           ;escribir_char@valor stored from wreg
  2061  04DA  00F2               	movwf	escribir_char@valor
  2062  04DB                     l1301:
  2063  04DB  0872               	movf	escribir_char@valor,w
  2064  04DC  1283               	bcf	3,5	;RP0=0, select bank0
  2065  04DD  1303               	bcf	3,6	;RP1=0, select bank0
  2066  04DE  0099               	movwf	25	;volatile
  2067  04DF                     l184:
  2068  04DF  1E0C               	btfss	12,4	;volatile
  2069  04E0  2CE2               	goto	u281
  2070  04E1  2CE3               	goto	u280
  2071  04E2                     u281:
  2072  04E2  2CDF               	goto	l184
  2073  04E3                     u280:
  2074  04E3                     l187:
  2075  04E3  0008               	return
  2076  04E4                     __end_of_escribir_char:
  2077                           
  2078                           	psect	text12
  2079  01C4                     __ptext12:	
  2080 ;; *************** function ___awmod *****************
  2081 ;; Defined at:
  2082 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  2083 ;; Parameters:    Size  Location     Type
  2084 ;;  divisor         2    2[COMMON] int 
  2085 ;;  dividend        2    4[COMMON] int 
  2086 ;; Auto vars:     Size  Location     Type
  2087 ;;  sign            1    8[COMMON] unsigned char 
  2088 ;;  counter         1    7[COMMON] unsigned char 
  2089 ;; Return value:  Size  Location     Type
  2090 ;;                  2    2[COMMON] int 
  2091 ;; Registers used:
  2092 ;;		wreg, status,2, status,0
  2093 ;; Tracked objects:
  2094 ;;		On entry : 0/0
  2095 ;;		On exit  : 0/0
  2096 ;;		Unchanged: 0/0
  2097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2098 ;;      Params:         4       0       0       0       0
  2099 ;;      Locals:         2       0       0       0       0
  2100 ;;      Temps:          1       0       0       0       0
  2101 ;;      Totals:         7       0       0       0       0
  2102 ;;Total ram usage:        7 bytes
  2103 ;; Hardware stack levels used:    1
  2104 ;; Hardware stack levels required when called:    1
  2105 ;; This function calls:
  2106 ;;		Nothing
  2107 ;; This function is called by:
  2108 ;;		_lcd
  2109 ;;		_Conversion1
  2110 ;;		_Conversion2
  2111 ;; This function uses a non-reentrant model
  2112 ;;
  2113                           
  2114                           
  2115                           ;psect for function ___awmod
  2116  01C4                     ___awmod:
  2117  01C4                     l1391:	
  2118                           ;incstack = 0
  2119                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2120                           
  2121  01C4  01F8               	clrf	___awmod@sign
  2122  01C5                     l1393:
  2123  01C5  1FF5               	btfss	___awmod@dividend+1,7
  2124  01C6  29C8               	goto	u421
  2125  01C7  29C9               	goto	u420
  2126  01C8                     u421:
  2127  01C8  29D0               	goto	l1399
  2128  01C9                     u420:
  2129  01C9                     l1395:
  2130  01C9  09F4               	comf	___awmod@dividend,f
  2131  01CA  09F5               	comf	___awmod@dividend+1,f
  2132  01CB  0AF4               	incf	___awmod@dividend,f
  2133  01CC  1903               	skipnz
  2134  01CD  0AF5               	incf	___awmod@dividend+1,f
  2135  01CE                     l1397:
  2136  01CE  01F8               	clrf	___awmod@sign
  2137  01CF  0AF8               	incf	___awmod@sign,f
  2138  01D0                     l1399:
  2139  01D0  1FF3               	btfss	___awmod@divisor+1,7
  2140  01D1  29D3               	goto	u431
  2141  01D2  29D4               	goto	u430
  2142  01D3                     u431:
  2143  01D3  29D9               	goto	l1403
  2144  01D4                     u430:
  2145  01D4                     l1401:
  2146  01D4  09F2               	comf	___awmod@divisor,f
  2147  01D5  09F3               	comf	___awmod@divisor+1,f
  2148  01D6  0AF2               	incf	___awmod@divisor,f
  2149  01D7  1903               	skipnz
  2150  01D8  0AF3               	incf	___awmod@divisor+1,f
  2151  01D9                     l1403:
  2152  01D9  0872               	movf	___awmod@divisor,w
  2153  01DA  0473               	iorwf	___awmod@divisor+1,w
  2154  01DB  1903               	btfsc	3,2
  2155  01DC  29DE               	goto	u441
  2156  01DD  29DF               	goto	u440
  2157  01DE                     u441:
  2158  01DE  2A0E               	goto	l1421
  2159  01DF                     u440:
  2160  01DF                     l1405:
  2161  01DF  01F7               	clrf	___awmod@counter
  2162  01E0  0AF7               	incf	___awmod@counter,f
  2163  01E1  29ED               	goto	l1411
  2164  01E2                     l1407:
  2165  01E2  3001               	movlw	1
  2166  01E3                     u455:
  2167  01E3  1003               	clrc
  2168  01E4  0DF2               	rlf	___awmod@divisor,f
  2169  01E5  0DF3               	rlf	___awmod@divisor+1,f
  2170  01E6  3EFF               	addlw	-1
  2171  01E7  1D03               	skipz
  2172  01E8  29E3               	goto	u455
  2173  01E9                     l1409:
  2174  01E9  3001               	movlw	1
  2175  01EA  00F6               	movwf	??___awmod
  2176  01EB  0876               	movf	??___awmod,w
  2177  01EC  07F7               	addwf	___awmod@counter,f
  2178  01ED                     l1411:
  2179  01ED  1FF3               	btfss	___awmod@divisor+1,7
  2180  01EE  29F0               	goto	u461
  2181  01EF  29F1               	goto	u460
  2182  01F0                     u461:
  2183  01F0  29E2               	goto	l1407
  2184  01F1                     u460:
  2185  01F1                     l1413:
  2186  01F1  0873               	movf	___awmod@divisor+1,w
  2187  01F2  0275               	subwf	___awmod@dividend+1,w
  2188  01F3  1D03               	skipz
  2189  01F4  29F7               	goto	u475
  2190  01F5  0872               	movf	___awmod@divisor,w
  2191  01F6  0274               	subwf	___awmod@dividend,w
  2192  01F7                     u475:
  2193  01F7  1C03               	skipc
  2194  01F8  29FA               	goto	u471
  2195  01F9  29FB               	goto	u470
  2196  01FA                     u471:
  2197  01FA  2A01               	goto	l1417
  2198  01FB                     u470:
  2199  01FB                     l1415:
  2200  01FB  0872               	movf	___awmod@divisor,w
  2201  01FC  02F4               	subwf	___awmod@dividend,f
  2202  01FD  0873               	movf	___awmod@divisor+1,w
  2203  01FE  1C03               	skipc
  2204  01FF  03F5               	decf	___awmod@dividend+1,f
  2205  0200  02F5               	subwf	___awmod@dividend+1,f
  2206  0201                     l1417:
  2207  0201  3001               	movlw	1
  2208  0202                     u485:
  2209  0202  1003               	clrc
  2210  0203  0CF3               	rrf	___awmod@divisor+1,f
  2211  0204  0CF2               	rrf	___awmod@divisor,f
  2212  0205  3EFF               	addlw	-1
  2213  0206  1D03               	skipz
  2214  0207  2A02               	goto	u485
  2215  0208                     l1419:
  2216  0208  3001               	movlw	1
  2217  0209  02F7               	subwf	___awmod@counter,f
  2218  020A  1D03               	btfss	3,2
  2219  020B  2A0D               	goto	u491
  2220  020C  2A0E               	goto	u490
  2221  020D                     u491:
  2222  020D  29F1               	goto	l1413
  2223  020E                     u490:
  2224  020E                     l1421:
  2225  020E  0878               	movf	___awmod@sign,w
  2226  020F  1903               	btfsc	3,2
  2227  0210  2A12               	goto	u501
  2228  0211  2A13               	goto	u500
  2229  0212                     u501:
  2230  0212  2A18               	goto	l1425
  2231  0213                     u500:
  2232  0213                     l1423:
  2233  0213  09F4               	comf	___awmod@dividend,f
  2234  0214  09F5               	comf	___awmod@dividend+1,f
  2235  0215  0AF4               	incf	___awmod@dividend,f
  2236  0216  1903               	skipnz
  2237  0217  0AF5               	incf	___awmod@dividend+1,f
  2238  0218                     l1425:
  2239  0218  0875               	movf	___awmod@dividend+1,w
  2240  0219  00F3               	movwf	?___awmod+1
  2241  021A  0874               	movf	___awmod@dividend,w
  2242  021B  00F2               	movwf	?___awmod
  2243  021C                     l543:
  2244  021C  0008               	return
  2245  021D                     __end_of___awmod:
  2246                           
  2247                           	psect	text13
  2248  00A3                     __ptext13:	
  2249 ;; *************** function ___awdiv *****************
  2250 ;; Defined at:
  2251 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2252 ;; Parameters:    Size  Location     Type
  2253 ;;  divisor         2    2[COMMON] int 
  2254 ;;  dividend        2    4[COMMON] int 
  2255 ;; Auto vars:     Size  Location     Type
  2256 ;;  quotient        2    2[BANK0 ] int 
  2257 ;;  sign            1    1[BANK0 ] unsigned char 
  2258 ;;  counter         1    0[BANK0 ] unsigned char 
  2259 ;; Return value:  Size  Location     Type
  2260 ;;                  2    2[COMMON] int 
  2261 ;; Registers used:
  2262 ;;		wreg, status,2, status,0
  2263 ;; Tracked objects:
  2264 ;;		On entry : 0/0
  2265 ;;		On exit  : 0/0
  2266 ;;		Unchanged: 0/0
  2267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2268 ;;      Params:         4       0       0       0       0
  2269 ;;      Locals:         0       4       0       0       0
  2270 ;;      Temps:          1       0       0       0       0
  2271 ;;      Totals:         5       4       0       0       0
  2272 ;;Total ram usage:        9 bytes
  2273 ;; Hardware stack levels used:    1
  2274 ;; Hardware stack levels required when called:    1
  2275 ;; This function calls:
  2276 ;;		Nothing
  2277 ;; This function is called by:
  2278 ;;		_lcd
  2279 ;;		_Conversion1
  2280 ;;		_Conversion2
  2281 ;; This function uses a non-reentrant model
  2282 ;;
  2283                           
  2284                           
  2285                           ;psect for function ___awdiv
  2286  00A3                     ___awdiv:
  2287  00A3                     l1697:	
  2288                           ;incstack = 0
  2289                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2290                           
  2291  00A3  1283               	bcf	3,5	;RP0=0, select bank0
  2292  00A4  1303               	bcf	3,6	;RP1=0, select bank0
  2293  00A5  01B6               	clrf	___awdiv@sign
  2294  00A6                     l1699:
  2295  00A6  1FF3               	btfss	___awdiv@divisor+1,7
  2296  00A7  28A9               	goto	u541
  2297  00A8  28AA               	goto	u540
  2298  00A9                     u541:
  2299  00A9  28B1               	goto	l1705
  2300  00AA                     u540:
  2301  00AA                     l1701:
  2302  00AA  09F2               	comf	___awdiv@divisor,f
  2303  00AB  09F3               	comf	___awdiv@divisor+1,f
  2304  00AC  0AF2               	incf	___awdiv@divisor,f
  2305  00AD  1903               	skipnz
  2306  00AE  0AF3               	incf	___awdiv@divisor+1,f
  2307  00AF                     l1703:
  2308  00AF  01B6               	clrf	___awdiv@sign
  2309  00B0  0AB6               	incf	___awdiv@sign,f
  2310  00B1                     l1705:
  2311  00B1  1FF5               	btfss	___awdiv@dividend+1,7
  2312  00B2  28B4               	goto	u551
  2313  00B3  28B5               	goto	u550
  2314  00B4                     u551:
  2315  00B4  28BE               	goto	l1711
  2316  00B5                     u550:
  2317  00B5                     l1707:
  2318  00B5  09F4               	comf	___awdiv@dividend,f
  2319  00B6  09F5               	comf	___awdiv@dividend+1,f
  2320  00B7  0AF4               	incf	___awdiv@dividend,f
  2321  00B8  1903               	skipnz
  2322  00B9  0AF5               	incf	___awdiv@dividend+1,f
  2323  00BA                     l1709:
  2324  00BA  3001               	movlw	1
  2325  00BB  00F6               	movwf	??___awdiv
  2326  00BC  0876               	movf	??___awdiv,w
  2327  00BD  06B6               	xorwf	___awdiv@sign,f
  2328  00BE                     l1711:
  2329  00BE  01B7               	clrf	___awdiv@quotient
  2330  00BF  01B8               	clrf	___awdiv@quotient+1
  2331  00C0                     l1713:
  2332  00C0  0872               	movf	___awdiv@divisor,w
  2333  00C1  0473               	iorwf	___awdiv@divisor+1,w
  2334  00C2  1903               	btfsc	3,2
  2335  00C3  28C5               	goto	u561
  2336  00C4  28C6               	goto	u560
  2337  00C5                     u561:
  2338  00C5  28FD               	goto	l1733
  2339  00C6                     u560:
  2340  00C6                     l1715:
  2341  00C6  01B5               	clrf	___awdiv@counter
  2342  00C7  0AB5               	incf	___awdiv@counter,f
  2343  00C8  28D4               	goto	l1721
  2344  00C9                     l1717:
  2345  00C9  3001               	movlw	1
  2346  00CA                     u575:
  2347  00CA  1003               	clrc
  2348  00CB  0DF2               	rlf	___awdiv@divisor,f
  2349  00CC  0DF3               	rlf	___awdiv@divisor+1,f
  2350  00CD  3EFF               	addlw	-1
  2351  00CE  1D03               	skipz
  2352  00CF  28CA               	goto	u575
  2353  00D0                     l1719:
  2354  00D0  3001               	movlw	1
  2355  00D1  00F6               	movwf	??___awdiv
  2356  00D2  0876               	movf	??___awdiv,w
  2357  00D3  07B5               	addwf	___awdiv@counter,f
  2358  00D4                     l1721:
  2359  00D4  1FF3               	btfss	___awdiv@divisor+1,7
  2360  00D5  28D7               	goto	u581
  2361  00D6  28D8               	goto	u580
  2362  00D7                     u581:
  2363  00D7  28C9               	goto	l1717
  2364  00D8                     u580:
  2365  00D8                     l1723:
  2366  00D8  3001               	movlw	1
  2367  00D9                     u595:
  2368  00D9  1003               	clrc
  2369  00DA  0DB7               	rlf	___awdiv@quotient,f
  2370  00DB  0DB8               	rlf	___awdiv@quotient+1,f
  2371  00DC  3EFF               	addlw	-1
  2372  00DD  1D03               	skipz
  2373  00DE  28D9               	goto	u595
  2374  00DF  0873               	movf	___awdiv@divisor+1,w
  2375  00E0  0275               	subwf	___awdiv@dividend+1,w
  2376  00E1  1D03               	skipz
  2377  00E2  28E5               	goto	u605
  2378  00E3  0872               	movf	___awdiv@divisor,w
  2379  00E4  0274               	subwf	___awdiv@dividend,w
  2380  00E5                     u605:
  2381  00E5  1C03               	skipc
  2382  00E6  28E8               	goto	u601
  2383  00E7  28E9               	goto	u600
  2384  00E8                     u601:
  2385  00E8  28F0               	goto	l1729
  2386  00E9                     u600:
  2387  00E9                     l1725:
  2388  00E9  0872               	movf	___awdiv@divisor,w
  2389  00EA  02F4               	subwf	___awdiv@dividend,f
  2390  00EB  0873               	movf	___awdiv@divisor+1,w
  2391  00EC  1C03               	skipc
  2392  00ED  03F5               	decf	___awdiv@dividend+1,f
  2393  00EE  02F5               	subwf	___awdiv@dividend+1,f
  2394  00EF                     l1727:
  2395  00EF  1437               	bsf	___awdiv@quotient,0
  2396  00F0                     l1729:
  2397  00F0  3001               	movlw	1
  2398  00F1                     u615:
  2399  00F1  1003               	clrc
  2400  00F2  0CF3               	rrf	___awdiv@divisor+1,f
  2401  00F3  0CF2               	rrf	___awdiv@divisor,f
  2402  00F4  3EFF               	addlw	-1
  2403  00F5  1D03               	skipz
  2404  00F6  28F1               	goto	u615
  2405  00F7                     l1731:
  2406  00F7  3001               	movlw	1
  2407  00F8  02B5               	subwf	___awdiv@counter,f
  2408  00F9  1D03               	btfss	3,2
  2409  00FA  28FC               	goto	u621
  2410  00FB  28FD               	goto	u620
  2411  00FC                     u621:
  2412  00FC  28D8               	goto	l1723
  2413  00FD                     u620:
  2414  00FD                     l1733:
  2415  00FD  0836               	movf	___awdiv@sign,w
  2416  00FE  1903               	btfsc	3,2
  2417  00FF  2901               	goto	u631
  2418  0100  2902               	goto	u630
  2419  0101                     u631:
  2420  0101  2907               	goto	l1737
  2421  0102                     u630:
  2422  0102                     l1735:
  2423  0102  09B7               	comf	___awdiv@quotient,f
  2424  0103  09B8               	comf	___awdiv@quotient+1,f
  2425  0104  0AB7               	incf	___awdiv@quotient,f
  2426  0105  1903               	skipnz
  2427  0106  0AB8               	incf	___awdiv@quotient+1,f
  2428  0107                     l1737:
  2429  0107  0838               	movf	___awdiv@quotient+1,w
  2430  0108  00F3               	movwf	?___awdiv+1
  2431  0109  0837               	movf	___awdiv@quotient,w
  2432  010A  00F2               	movwf	?___awdiv
  2433  010B                     l530:
  2434  010B  0008               	return
  2435  010C                     __end_of___awdiv:
  2436                           
  2437                           	psect	text14
  2438  0496                     __ptext14:	
  2439 ;; *************** function _Lcd_Write_Char *****************
  2440 ;; Defined at:
  2441 ;;		line 95 in file "LCD_SPI.c"
  2442 ;; Parameters:    Size  Location     Type
  2443 ;;  a               1    wreg     unsigned char 
  2444 ;; Auto vars:     Size  Location     Type
  2445 ;;  a               1    4[COMMON] unsigned char 
  2446 ;; Return value:  Size  Location     Type
  2447 ;;                  1    wreg      void 
  2448 ;; Registers used:
  2449 ;;		wreg, status,2, status,0, pclath, cstack
  2450 ;; Tracked objects:
  2451 ;;		On entry : 0/0
  2452 ;;		On exit  : 0/0
  2453 ;;		Unchanged: 0/0
  2454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2455 ;;      Params:         0       0       0       0       0
  2456 ;;      Locals:         1       0       0       0       0
  2457 ;;      Temps:          1       0       0       0       0
  2458 ;;      Totals:         2       0       0       0       0
  2459 ;;Total ram usage:        2 bytes
  2460 ;; Hardware stack levels used:    1
  2461 ;; Hardware stack levels required when called:    2
  2462 ;; This function calls:
  2463 ;;		_Lcd_Port
  2464 ;; This function is called by:
  2465 ;;		_lcd
  2466 ;;		_Conversion1
  2467 ;;		_Conversion2
  2468 ;;		_Lcd_Write_String
  2469 ;; This function uses a non-reentrant model
  2470 ;;
  2471                           
  2472                           
  2473                           ;psect for function _Lcd_Write_Char
  2474  0496                     _Lcd_Write_Char:
  2475                           
  2476                           ;incstack = 0
  2477                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2478                           ;Lcd_Write_Char@a stored from wreg
  2479  0496  00F4               	movwf	Lcd_Write_Char@a
  2480  0497                     l1305:
  2481                           
  2482                           ;LCD_SPI.c: 95: void Lcd_Write_Char(char a);LCD_SPI.c: 96: {;LCD_SPI.c: 97:     PORTCbit
      +                          s.RC0 = 1;
  2483  0497  1283               	bcf	3,5	;RP0=0, select bank0
  2484  0498  1303               	bcf	3,6	;RP1=0, select bank0
  2485  0499  1407               	bsf	7,0	;volatile
  2486  049A                     l1307:
  2487                           
  2488                           ;LCD_SPI.c: 98:     Lcd_Port(a);
  2489  049A  0874               	movf	Lcd_Write_Char@a,w
  2490  049B  120A  118A  24F8  120A  118A  	fcall	_Lcd_Port
  2491  04A0                     l1309:
  2492                           
  2493                           ;LCD_SPI.c: 99:     PORTCbits.RC2 = 1;
  2494  04A0  1283               	bcf	3,5	;RP0=0, select bank0
  2495  04A1  1303               	bcf	3,6	;RP1=0, select bank0
  2496  04A2  1507               	bsf	7,2	;volatile
  2497  04A3                     l1311:
  2498                           
  2499                           ;LCD_SPI.c: 100:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2500  04A3  300D               	movlw	13
  2501  04A4  00F3               	movwf	??_Lcd_Write_Char
  2502  04A5                     u667:
  2503  04A5  0BF3               	decfsz	??_Lcd_Write_Char,f
  2504  04A6  2CA5               	goto	u667
  2505  04A7                     l1313:
  2506                           
  2507                           ;LCD_SPI.c: 101:     PORTCbits.RC2 = 0;
  2508  04A7  1283               	bcf	3,5	;RP0=0, select bank0
  2509  04A8  1303               	bcf	3,6	;RP1=0, select bank0
  2510  04A9  1107               	bcf	7,2	;volatile
  2511  04AA                     l241:
  2512  04AA  0008               	return
  2513  04AB                     __end_of_Lcd_Write_Char:
  2514                           
  2515                           	psect	text15
  2516  04B9                     __ptext15:	
  2517 ;; *************** function _interrup_config *****************
  2518 ;; Defined at:
  2519 ;;		line 162 in file "MAESTRO_SPI.c"
  2520 ;; Parameters:    Size  Location     Type
  2521 ;;		None
  2522 ;; Auto vars:     Size  Location     Type
  2523 ;;		None
  2524 ;; Return value:  Size  Location     Type
  2525 ;;                  1    wreg      void 
  2526 ;; Registers used:
  2527 ;;		status,2
  2528 ;; Tracked objects:
  2529 ;;		On entry : 0/0
  2530 ;;		On exit  : 0/0
  2531 ;;		Unchanged: 0/0
  2532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2533 ;;      Params:         0       0       0       0       0
  2534 ;;      Locals:         0       0       0       0       0
  2535 ;;      Temps:          0       0       0       0       0
  2536 ;;      Totals:         0       0       0       0       0
  2537 ;;Total ram usage:        0 bytes
  2538 ;; Hardware stack levels used:    1
  2539 ;; Hardware stack levels required when called:    1
  2540 ;; This function calls:
  2541 ;;		Nothing
  2542 ;; This function is called by:
  2543 ;;		_main
  2544 ;; This function uses a non-reentrant model
  2545 ;;
  2546                           
  2547                           
  2548                           ;psect for function _interrup_config
  2549  04B9                     _interrup_config:
  2550  04B9                     l1563:	
  2551                           ;incstack = 0
  2552                           ; Regs used in _interrup_config: [status,2]
  2553                           
  2554                           
  2555                           ;MAESTRO_SPI.c: 164: 
  2556  04B9  178B               	bsf	11,7	;volatile
  2557                           
  2558                           ;MAESTRO_SPI.c: 165: 
  2559  04BA  170B               	bsf	11,6	;volatile
  2560                           
  2561                           ;MAESTRO_SPI.c: 166: void lcd (void)
  2562  04BB  128B               	bcf	11,5	;volatile
  2563                           
  2564                           ;MAESTRO_SPI.c: 167: {
  2565  04BC  120B               	bcf	11,4	;volatile
  2566                           
  2567                           ;MAESTRO_SPI.c: 168:     Lcd_Set_Cursor(1,1);
  2568  04BD  118B               	bcf	11,3	;volatile
  2569                           
  2570                           ;MAESTRO_SPI.c: 169:     Lcd_Write_String("S1:   S2:   S3: ");
  2571  04BE  110B               	bcf	11,2	;volatile
  2572                           
  2573                           ;MAESTRO_SPI.c: 170:     Lcd_Set_Cursor(2,0);
  2574  04BF  108B               	bcf	11,1	;volatile
  2575                           
  2576                           ;MAESTRO_SPI.c: 171:     Conversion1 ();
  2577  04C0  100B               	bcf	11,0	;volatile
  2578  04C1                     l1565:
  2579                           
  2580                           ;MAESTRO_SPI.c: 172:     Lcd_Set_Cursor(2,6);
  2581  04C1  1683               	bsf	3,5	;RP0=1, select bank1
  2582  04C2  1303               	bcf	3,6	;RP1=0, select bank1
  2583  04C3  0196               	clrf	22	;volatile
  2584  04C4                     l146:
  2585  04C4  0008               	return
  2586  04C5                     __end_of_interrup_config:
  2587                           
  2588                           	psect	text16
  2589  04EC                     __ptext16:	
  2590 ;; *************** function _USART_config *****************
  2591 ;; Defined at:
  2592 ;;		line 190 in file "MAESTRO_SPI.c"
  2593 ;; Parameters:    Size  Location     Type
  2594 ;;		None
  2595 ;; Auto vars:     Size  Location     Type
  2596 ;;		None
  2597 ;; Return value:  Size  Location     Type
  2598 ;;                  1    wreg      void 
  2599 ;; Registers used:
  2600 ;;		wreg, status,2, status,0, pclath, cstack
  2601 ;; Tracked objects:
  2602 ;;		On entry : 0/0
  2603 ;;		On exit  : 0/0
  2604 ;;		Unchanged: 0/0
  2605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2606 ;;      Params:         0       0       0       0       0
  2607 ;;      Locals:         0       0       0       0       0
  2608 ;;      Temps:          0       0       0       0       0
  2609 ;;      Totals:         0       0       0       0       0
  2610 ;;Total ram usage:        0 bytes
  2611 ;; Hardware stack levels used:    1
  2612 ;; Hardware stack levels required when called:    2
  2613 ;; This function calls:
  2614 ;;		_USART_lib_config
  2615 ;; This function is called by:
  2616 ;;		_main
  2617 ;; This function uses a non-reentrant model
  2618 ;;
  2619                           
  2620                           
  2621                           ;psect for function _USART_config
  2622  04EC                     _USART_config:
  2623  04EC                     l1589:	
  2624                           ;incstack = 0
  2625                           ; Regs used in _USART_config: [wreg+status,2+status,0+pclath+cstack]
  2626                           
  2627                           
  2628                           ;MAESTRO_SPI.c: 192:     unidad = voltaje / 100;
  2629  04EC  120A  118A  2448  120A  118A  	fcall	_USART_lib_config
  2630  04F1                     l152:
  2631  04F1  0008               	return
  2632  04F2                     __end_of_USART_config:
  2633                           
  2634                           	psect	text17
  2635  0448                     __ptext17:	
  2636 ;; *************** function _USART_lib_config *****************
  2637 ;; Defined at:
  2638 ;;		line 19 in file "USART_SPI.c"
  2639 ;; Parameters:    Size  Location     Type
  2640 ;;		None
  2641 ;; Auto vars:     Size  Location     Type
  2642 ;;		None
  2643 ;; Return value:  Size  Location     Type
  2644 ;;                  1    wreg      void 
  2645 ;; Registers used:
  2646 ;;		wreg
  2647 ;; Tracked objects:
  2648 ;;		On entry : 0/0
  2649 ;;		On exit  : 0/0
  2650 ;;		Unchanged: 0/0
  2651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2652 ;;      Params:         0       0       0       0       0
  2653 ;;      Locals:         0       0       0       0       0
  2654 ;;      Temps:          0       0       0       0       0
  2655 ;;      Totals:         0       0       0       0       0
  2656 ;;Total ram usage:        0 bytes
  2657 ;; Hardware stack levels used:    1
  2658 ;; Hardware stack levels required when called:    1
  2659 ;; This function calls:
  2660 ;;		Nothing
  2661 ;; This function is called by:
  2662 ;;		_USART_config
  2663 ;; This function uses a non-reentrant model
  2664 ;;
  2665                           
  2666                           
  2667                           ;psect for function _USART_lib_config
  2668  0448                     _USART_lib_config:
  2669  0448                     l1429:	
  2670                           ;incstack = 0
  2671                           ; Regs used in _USART_lib_config: [wreg]
  2672                           
  2673                           
  2674                           ;USART_SPI.c: 21:     SPBRG = 25;
  2675  0448  3019               	movlw	25
  2676  0449  1683               	bsf	3,5	;RP0=1, select bank1
  2677  044A  1303               	bcf	3,6	;RP1=0, select bank1
  2678  044B  0099               	movwf	25	;volatile
  2679  044C                     l1431:
  2680                           
  2681                           ;USART_SPI.c: 23:     TXSTAbits.CSRC = 0;
  2682  044C  1398               	bcf	24,7	;volatile
  2683  044D                     l1433:
  2684                           
  2685                           ;USART_SPI.c: 24:     TXSTAbits.TX9 = 0;
  2686  044D  1318               	bcf	24,6	;volatile
  2687  044E                     l1435:
  2688                           
  2689                           ;USART_SPI.c: 25:     TXSTAbits.TXEN = 1;
  2690  044E  1698               	bsf	24,5	;volatile
  2691  044F                     l1437:
  2692                           
  2693                           ;USART_SPI.c: 26:     TXSTAbits.SYNC = 0;
  2694  044F  1218               	bcf	24,4	;volatile
  2695  0450                     l1439:
  2696                           
  2697                           ;USART_SPI.c: 27:     TXSTAbits.SENDB= 0;
  2698  0450  1198               	bcf	24,3	;volatile
  2699  0451                     l1441:
  2700                           
  2701                           ;USART_SPI.c: 28:     TXSTAbits.BRGH = 1;
  2702  0451  1518               	bsf	24,2	;volatile
  2703  0452                     l1443:
  2704                           
  2705                           ;USART_SPI.c: 29:     TXSTAbits.TRMT = 0;
  2706  0452  1098               	bcf	24,1	;volatile
  2707  0453                     l1445:
  2708                           
  2709                           ;USART_SPI.c: 30:     TXSTAbits.TX9D = 0;
  2710  0453  1018               	bcf	24,0	;volatile
  2711  0454                     l1447:
  2712                           
  2713                           ;USART_SPI.c: 32:     RCSTAbits.SPEN = 1;
  2714  0454  1283               	bcf	3,5	;RP0=0, select bank0
  2715  0455  1303               	bcf	3,6	;RP1=0, select bank0
  2716  0456  1798               	bsf	24,7	;volatile
  2717  0457                     l1449:
  2718                           
  2719                           ;USART_SPI.c: 33:     RCSTAbits.RX9 = 0;
  2720  0457  1318               	bcf	24,6	;volatile
  2721  0458                     l1451:
  2722                           
  2723                           ;USART_SPI.c: 34:     RCSTAbits.SREN = 0;
  2724  0458  1298               	bcf	24,5	;volatile
  2725  0459                     l1453:
  2726                           
  2727                           ;USART_SPI.c: 35:     RCSTAbits.CREN = 1;
  2728  0459  1618               	bsf	24,4	;volatile
  2729  045A                     l1455:
  2730                           
  2731                           ;USART_SPI.c: 36:     RCSTAbits.ADDEN= 0;
  2732  045A  1198               	bcf	24,3	;volatile
  2733  045B                     l1457:
  2734                           
  2735                           ;USART_SPI.c: 37:     RCSTAbits.FERR = 0;
  2736  045B  1118               	bcf	24,2	;volatile
  2737  045C                     l1459:
  2738                           
  2739                           ;USART_SPI.c: 38:     RCSTAbits.OERR = 0;
  2740  045C  1098               	bcf	24,1	;volatile
  2741  045D                     l1461:
  2742                           
  2743                           ;USART_SPI.c: 39:     RCSTAbits.RX9D = 0;
  2744  045D  1018               	bcf	24,0	;volatile
  2745  045E                     l1463:
  2746                           
  2747                           ;USART_SPI.c: 41:     PIR1bits.RCIF = 0;
  2748  045E  128C               	bcf	12,5	;volatile
  2749  045F                     l1465:
  2750                           
  2751                           ;USART_SPI.c: 42:     PIE1bits.RCIE = 1;
  2752  045F  1683               	bsf	3,5	;RP0=1, select bank1
  2753  0460  1303               	bcf	3,6	;RP1=0, select bank1
  2754  0461  168C               	bsf	12,5	;volatile
  2755  0462                     l1467:
  2756                           
  2757                           ;USART_SPI.c: 43:     PIR1bits.TXIF = 0;
  2758  0462  1283               	bcf	3,5	;RP0=0, select bank0
  2759  0463  1303               	bcf	3,6	;RP1=0, select bank0
  2760  0464  120C               	bcf	12,4	;volatile
  2761  0465                     l200:
  2762  0465  0008               	return
  2763  0466                     __end_of_USART_lib_config:
  2764                           
  2765                           	psect	text18
  2766  04C5                     __ptext18:	
  2767 ;; *************** function _SPI_config *****************
  2768 ;; Defined at:
  2769 ;;		line 195 in file "MAESTRO_SPI.c"
  2770 ;; Parameters:    Size  Location     Type
  2771 ;;		None
  2772 ;; Auto vars:     Size  Location     Type
  2773 ;;		None
  2774 ;; Return value:  Size  Location     Type
  2775 ;;                  1    wreg      void 
  2776 ;; Registers used:
  2777 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2778 ;; Tracked objects:
  2779 ;;		On entry : 0/0
  2780 ;;		On exit  : 0/0
  2781 ;;		Unchanged: 0/0
  2782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2783 ;;      Params:         0       0       0       0       0
  2784 ;;      Locals:         0       0       0       0       0
  2785 ;;      Temps:          1       0       0       0       0
  2786 ;;      Totals:         1       0       0       0       0
  2787 ;;Total ram usage:        1 bytes
  2788 ;; Hardware stack levels used:    1
  2789 ;; Hardware stack levels required when called:    2
  2790 ;; This function calls:
  2791 ;;		_SPI_Maestro_Init
  2792 ;; This function is called by:
  2793 ;;		_main
  2794 ;; This function uses a non-reentrant model
  2795 ;;
  2796                           
  2797                           
  2798                           ;psect for function _SPI_config
  2799  04C5                     _SPI_config:
  2800  04C5                     l1591:	
  2801                           ;incstack = 0
  2802                           ; Regs used in _SPI_config: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2803                           
  2804                           
  2805                           ;MAESTRO_SPI.c: 197:     Lcd_Write_Char(unidad+48);
  2806  04C5  3002               	movlw	2
  2807  04C6  00F6               	movwf	??_SPI_config
  2808  04C7  0876               	movf	??_SPI_config,w
  2809  04C8  00F2               	movwf	SPI_Maestro_Init@SCK
  2810  04C9  3000               	movlw	0
  2811  04CA  120A  118A  201E  120A  118A  	fcall	_SPI_Maestro_Init
  2812  04CF                     l155:
  2813  04CF  0008               	return
  2814  04D0                     __end_of_SPI_config:
  2815                           
  2816                           	psect	text19
  2817  001E                     __ptext19:	
  2818 ;; *************** function _SPI_Maestro_Init *****************
  2819 ;; Defined at:
  2820 ;;		line 4 in file "SPI_SPI.c"
  2821 ;; Parameters:    Size  Location     Type
  2822 ;;  port_mode       1    wreg     unsigned char 
  2823 ;;  SCK             1    2[COMMON] unsigned char 
  2824 ;; Auto vars:     Size  Location     Type
  2825 ;;  port_mode       1    5[COMMON] unsigned char 
  2826 ;; Return value:  Size  Location     Type
  2827 ;;                  1    wreg      void 
  2828 ;; Registers used:
  2829 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2830 ;; Tracked objects:
  2831 ;;		On entry : 0/0
  2832 ;;		On exit  : 0/0
  2833 ;;		Unchanged: 0/0
  2834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2835 ;;      Params:         1       0       0       0       0
  2836 ;;      Locals:         1       0       0       0       0
  2837 ;;      Temps:          2       0       0       0       0
  2838 ;;      Totals:         4       0       0       0       0
  2839 ;;Total ram usage:        4 bytes
  2840 ;; Hardware stack levels used:    1
  2841 ;; Hardware stack levels required when called:    1
  2842 ;; This function calls:
  2843 ;;		Nothing
  2844 ;; This function is called by:
  2845 ;;		_SPI_config
  2846 ;; This function uses a non-reentrant model
  2847 ;;
  2848                           
  2849                           
  2850                           ;psect for function _SPI_Maestro_Init
  2851  001E                     _SPI_Maestro_Init:
  2852                           
  2853                           ;incstack = 0
  2854                           ; Regs used in _SPI_Maestro_Init: [wreg-fsr0h+status,2+status,0]
  2855                           ;SPI_Maestro_Init@port_mode stored from wreg
  2856  001E  00F5               	movwf	SPI_Maestro_Init@port_mode
  2857  001F                     l1469:
  2858                           
  2859                           ;SPI_SPI.c: 4: void SPI_Maestro_Init (char port_mode, char SCK);SPI_SPI.c: 5: {;SPI_SPI.
      +                          c: 6:     TRISCbits.TRISC0 = 0;
  2860  001F  1683               	bsf	3,5	;RP0=1, select bank1
  2861  0020  1303               	bcf	3,6	;RP1=0, select bank1
  2862  0021  1007               	bcf	7,0	;volatile
  2863                           
  2864                           ;SPI_SPI.c: 7:     TRISCbits.TRISC1 = 0;
  2865  0022  1087               	bcf	7,1	;volatile
  2866                           
  2867                           ;SPI_SPI.c: 8:     TRISCbits.TRISC2 = 0;
  2868  0023  1107               	bcf	7,2	;volatile
  2869                           
  2870                           ;SPI_SPI.c: 9:     TRISCbits.TRISC5 = 0;
  2871  0024  1287               	bcf	7,5	;volatile
  2872                           
  2873                           ;SPI_SPI.c: 10:     TRISCbits.TRISC4 = 1;
  2874  0025  1607               	bsf	7,4	;volatile
  2875                           
  2876                           ;SPI_SPI.c: 11:     TRISCbits.TRISC3 = 0;
  2877  0026  1187               	bcf	7,3	;volatile
  2878                           
  2879                           ;SPI_SPI.c: 13:     switch (port_mode)
  2880  0027  2852               	goto	l1473
  2881  0028                     l255:	
  2882                           ;SPI_SPI.c: 14:     {;SPI_SPI.c: 15:         case 0:
  2883                           
  2884                           
  2885                           ;SPI_SPI.c: 16:             SSPCONbits.SSPM3 = 0;
  2886  0028  1283               	bcf	3,5	;RP0=0, select bank0
  2887  0029  1303               	bcf	3,6	;RP1=0, select bank0
  2888  002A  1194               	bcf	20,3	;volatile
  2889                           
  2890                           ;SPI_SPI.c: 17:             SSPCONbits.SSPM2 = 0;
  2891  002B  1114               	bcf	20,2	;volatile
  2892                           
  2893                           ;SPI_SPI.c: 18:             SSPCONbits.SSPM1 = 0;
  2894  002C  1094               	bcf	20,1	;volatile
  2895                           
  2896                           ;SPI_SPI.c: 19:             SSPCONbits.SSPM0 = 0;
  2897  002D  1014               	bcf	20,0	;volatile
  2898                           
  2899                           ;SPI_SPI.c: 21:             break;
  2900  002E  2886               	goto	l1477
  2901  002F                     l257:	
  2902                           ;SPI_SPI.c: 22:          case 1:
  2903                           
  2904                           
  2905                           ;SPI_SPI.c: 23:             SSPCONbits.SSPM3 = 0;
  2906  002F  1283               	bcf	3,5	;RP0=0, select bank0
  2907  0030  1303               	bcf	3,6	;RP1=0, select bank0
  2908  0031  1194               	bcf	20,3	;volatile
  2909                           
  2910                           ;SPI_SPI.c: 24:             SSPCONbits.SSPM2 = 0;
  2911  0032  1114               	bcf	20,2	;volatile
  2912                           
  2913                           ;SPI_SPI.c: 25:             SSPCONbits.SSPM1 = 0;
  2914  0033  1094               	bcf	20,1	;volatile
  2915                           
  2916                           ;SPI_SPI.c: 26:             SSPCONbits.SSPM0 = 1;
  2917  0034  1414               	bsf	20,0	;volatile
  2918                           
  2919                           ;SPI_SPI.c: 28:             break;
  2920  0035  2886               	goto	l1477
  2921  0036                     l258:	
  2922                           ;SPI_SPI.c: 29:          case 2:
  2923                           
  2924                           
  2925                           ;SPI_SPI.c: 30:             SSPCONbits.SSPM3 = 0;
  2926  0036  1283               	bcf	3,5	;RP0=0, select bank0
  2927  0037  1303               	bcf	3,6	;RP1=0, select bank0
  2928  0038  1194               	bcf	20,3	;volatile
  2929                           
  2930                           ;SPI_SPI.c: 31:             SSPCONbits.SSPM2 = 0;
  2931  0039  1114               	bcf	20,2	;volatile
  2932                           
  2933                           ;SPI_SPI.c: 32:             SSPCONbits.SSPM1 = 1;
  2934  003A  1494               	bsf	20,1	;volatile
  2935                           
  2936                           ;SPI_SPI.c: 33:             SSPCONbits.SSPM0 = 0;
  2937  003B  1014               	bcf	20,0	;volatile
  2938                           
  2939                           ;SPI_SPI.c: 35:             break;
  2940  003C  2886               	goto	l1477
  2941  003D                     l259:	
  2942                           ;SPI_SPI.c: 36:          case 3:
  2943                           
  2944                           
  2945                           ;SPI_SPI.c: 37:             SSPCONbits.SSPM3 = 0;
  2946  003D  1283               	bcf	3,5	;RP0=0, select bank0
  2947  003E  1303               	bcf	3,6	;RP1=0, select bank0
  2948  003F  1194               	bcf	20,3	;volatile
  2949                           
  2950                           ;SPI_SPI.c: 38:             SSPCONbits.SSPM2 = 0;
  2951  0040  1114               	bcf	20,2	;volatile
  2952                           
  2953                           ;SPI_SPI.c: 39:             SSPCONbits.SSPM1 = 1;
  2954  0041  1494               	bsf	20,1	;volatile
  2955                           
  2956                           ;SPI_SPI.c: 40:             SSPCONbits.SSPM0 = 1;
  2957  0042  1414               	bsf	20,0	;volatile
  2958                           
  2959                           ;SPI_SPI.c: 41:             break;
  2960  0043  2886               	goto	l1477
  2961  0044                     l260:	
  2962                           ;SPI_SPI.c: 42:          case 4:
  2963                           
  2964                           
  2965                           ;SPI_SPI.c: 43:             SSPCONbits.SSPM3 = 0;
  2966  0044  1283               	bcf	3,5	;RP0=0, select bank0
  2967  0045  1303               	bcf	3,6	;RP1=0, select bank0
  2968  0046  1194               	bcf	20,3	;volatile
  2969                           
  2970                           ;SPI_SPI.c: 44:             SSPCONbits.SSPM2 = 1;
  2971  0047  1514               	bsf	20,2	;volatile
  2972                           
  2973                           ;SPI_SPI.c: 45:             SSPCONbits.SSPM1 = 0;
  2974  0048  1094               	bcf	20,1	;volatile
  2975                           
  2976                           ;SPI_SPI.c: 46:             SSPCONbits.SSPM0 = 0;
  2977  0049  1014               	bcf	20,0	;volatile
  2978                           
  2979                           ;SPI_SPI.c: 48:             break;
  2980  004A  2886               	goto	l1477
  2981  004B                     l261:	
  2982                           ;SPI_SPI.c: 49:          case 5:
  2983                           
  2984                           
  2985                           ;SPI_SPI.c: 50:             SSPCONbits.SSPM3 = 0;
  2986  004B  1283               	bcf	3,5	;RP0=0, select bank0
  2987  004C  1303               	bcf	3,6	;RP1=0, select bank0
  2988  004D  1194               	bcf	20,3	;volatile
  2989                           
  2990                           ;SPI_SPI.c: 51:             SSPCONbits.SSPM2 = 1;
  2991  004E  1514               	bsf	20,2	;volatile
  2992                           
  2993                           ;SPI_SPI.c: 52:             SSPCONbits.SSPM1 = 0;
  2994  004F  1094               	bcf	20,1	;volatile
  2995                           
  2996                           ;SPI_SPI.c: 53:             SSPCONbits.SSPM0 = 1;
  2997  0050  1414               	bsf	20,0	;volatile
  2998                           
  2999                           ;SPI_SPI.c: 54:             break;
  3000  0051  2886               	goto	l1477
  3001  0052                     l1473:
  3002  0052  0875               	movf	SPI_Maestro_Init@port_mode,w
  3003  0053  00F3               	movwf	??_SPI_Maestro_Init
  3004  0054  01F4               	clrf	??_SPI_Maestro_Init+1
  3005                           
  3006                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3007                           ; Switch size 1, requested type "simple"
  3008                           ; Number of cases is 1, Range of values is 0 to 0
  3009                           ; switch strategies available:
  3010                           ; Name         Instructions Cycles
  3011                           ; simple_byte            4     3 (average)
  3012                           ; direct_byte           11     8 (fixed)
  3013                           ; jumptable            260     6 (fixed)
  3014                           ;	Chosen strategy is simple_byte
  3015  0055  0874               	movf	??_SPI_Maestro_Init+1,w
  3016  0056  3A00               	xorlw	0	; case 0
  3017  0057  1903               	skipnz
  3018  0058  285A               	goto	l1875
  3019  0059  2886               	goto	l1477
  3020  005A                     l1875:
  3021                           
  3022                           ; Switch size 1, requested type "simple"
  3023                           ; Number of cases is 6, Range of values is 0 to 5
  3024                           ; switch strategies available:
  3025                           ; Name         Instructions Cycles
  3026                           ; simple_byte           19    10 (average)
  3027                           ; direct_byte           26     8 (fixed)
  3028                           ; jumptable            260     6 (fixed)
  3029                           ;	Chosen strategy is simple_byte
  3030  005A  0873               	movf	??_SPI_Maestro_Init,w
  3031  005B  3A00               	xorlw	0	; case 0
  3032  005C  1903               	skipnz
  3033  005D  2828               	goto	l255
  3034  005E  3A01               	xorlw	1	; case 1
  3035  005F  1903               	skipnz
  3036  0060  282F               	goto	l257
  3037  0061  3A03               	xorlw	3	; case 2
  3038  0062  1903               	skipnz
  3039  0063  2836               	goto	l258
  3040  0064  3A01               	xorlw	1	; case 3
  3041  0065  1903               	skipnz
  3042  0066  283D               	goto	l259
  3043  0067  3A07               	xorlw	7	; case 4
  3044  0068  1903               	skipnz
  3045  0069  2844               	goto	l260
  3046  006A  3A01               	xorlw	1	; case 5
  3047  006B  1903               	skipnz
  3048  006C  284B               	goto	l261
  3049  006D  2886               	goto	l1477
  3050  006E                     l263:	
  3051                           ;SPI_SPI.c: 58:     {;SPI_SPI.c: 59:         case 0:
  3052                           
  3053                           
  3054                           ;SPI_SPI.c: 60:             SSPCONbits.CKP = 0;
  3055  006E  1283               	bcf	3,5	;RP0=0, select bank0
  3056  006F  1214               	bcf	20,4	;volatile
  3057                           
  3058                           ;SPI_SPI.c: 61:             SSPSTATbits.CKE = 0;
  3059  0070  1683               	bsf	3,5	;RP0=1, select bank1
  3060  0071  1303               	bcf	3,6	;RP1=0, select bank1
  3061  0072  1314               	bcf	20,6	;volatile
  3062                           
  3063                           ;SPI_SPI.c: 63:             break;
  3064  0073  289C               	goto	l264
  3065  0074                     l265:	
  3066                           ;SPI_SPI.c: 64:          case 1:
  3067                           
  3068                           
  3069                           ;SPI_SPI.c: 65:             SSPCONbits.CKP = 1;
  3070  0074  1283               	bcf	3,5	;RP0=0, select bank0
  3071  0075  1614               	bsf	20,4	;volatile
  3072                           
  3073                           ;SPI_SPI.c: 66:             SSPSTATbits.CKE = 0;
  3074  0076  1683               	bsf	3,5	;RP0=1, select bank1
  3075  0077  1303               	bcf	3,6	;RP1=0, select bank1
  3076  0078  1314               	bcf	20,6	;volatile
  3077                           
  3078                           ;SPI_SPI.c: 68:             break;
  3079  0079  289C               	goto	l264
  3080  007A                     l266:	
  3081                           ;SPI_SPI.c: 69:          case 2:
  3082                           
  3083                           
  3084                           ;SPI_SPI.c: 70:             SSPCONbits.CKP = 0;
  3085  007A  1283               	bcf	3,5	;RP0=0, select bank0
  3086  007B  1214               	bcf	20,4	;volatile
  3087                           
  3088                           ;SPI_SPI.c: 71:             SSPSTATbits.CKE = 1;
  3089  007C  1683               	bsf	3,5	;RP0=1, select bank1
  3090  007D  1303               	bcf	3,6	;RP1=0, select bank1
  3091  007E  1714               	bsf	20,6	;volatile
  3092                           
  3093                           ;SPI_SPI.c: 73:             break;
  3094  007F  289C               	goto	l264
  3095  0080                     l267:	
  3096                           ;SPI_SPI.c: 74:          case 3:
  3097                           
  3098                           
  3099                           ;SPI_SPI.c: 75:             SSPCONbits.CKP = 1;
  3100  0080  1283               	bcf	3,5	;RP0=0, select bank0
  3101  0081  1614               	bsf	20,4	;volatile
  3102                           
  3103                           ;SPI_SPI.c: 76:             SSPSTATbits.CKE = 1;
  3104  0082  1683               	bsf	3,5	;RP0=1, select bank1
  3105  0083  1303               	bcf	3,6	;RP1=0, select bank1
  3106  0084  1714               	bsf	20,6	;volatile
  3107                           
  3108                           ;SPI_SPI.c: 77:             break;
  3109  0085  289C               	goto	l264
  3110  0086                     l1477:
  3111  0086  0872               	movf	SPI_Maestro_Init@SCK,w
  3112  0087  00F3               	movwf	??_SPI_Maestro_Init
  3113  0088  01F4               	clrf	??_SPI_Maestro_Init+1
  3114                           
  3115                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3116                           ; Switch size 1, requested type "simple"
  3117                           ; Number of cases is 1, Range of values is 0 to 0
  3118                           ; switch strategies available:
  3119                           ; Name         Instructions Cycles
  3120                           ; simple_byte            4     3 (average)
  3121                           ; direct_byte           11     8 (fixed)
  3122                           ; jumptable            260     6 (fixed)
  3123                           ;	Chosen strategy is simple_byte
  3124  0089  0874               	movf	??_SPI_Maestro_Init+1,w
  3125  008A  3A00               	xorlw	0	; case 0
  3126  008B  1903               	skipnz
  3127  008C  288E               	goto	l1877
  3128  008D  289C               	goto	l264
  3129  008E                     l1877:
  3130                           
  3131                           ; Switch size 1, requested type "simple"
  3132                           ; Number of cases is 4, Range of values is 0 to 3
  3133                           ; switch strategies available:
  3134                           ; Name         Instructions Cycles
  3135                           ; simple_byte           13     7 (average)
  3136                           ; direct_byte           20     8 (fixed)
  3137                           ; jumptable            260     6 (fixed)
  3138                           ;	Chosen strategy is simple_byte
  3139  008E  0873               	movf	??_SPI_Maestro_Init,w
  3140  008F  3A00               	xorlw	0	; case 0
  3141  0090  1903               	skipnz
  3142  0091  286E               	goto	l263
  3143  0092  3A01               	xorlw	1	; case 1
  3144  0093  1903               	skipnz
  3145  0094  2874               	goto	l265
  3146  0095  3A03               	xorlw	3	; case 2
  3147  0096  1903               	skipnz
  3148  0097  287A               	goto	l266
  3149  0098  3A01               	xorlw	1	; case 3
  3150  0099  1903               	skipnz
  3151  009A  2880               	goto	l267
  3152  009B  289C               	goto	l264
  3153  009C                     l264:
  3154                           
  3155                           ;SPI_SPI.c: 79:     SSPSTATbits.SMP = 0;
  3156  009C  1683               	bsf	3,5	;RP0=1, select bank1
  3157  009D  1303               	bcf	3,6	;RP1=0, select bank1
  3158  009E  1394               	bcf	20,7	;volatile
  3159                           
  3160                           ;SPI_SPI.c: 80:     SSPCONbits.SSPEN = 1;
  3161  009F  1283               	bcf	3,5	;RP0=0, select bank0
  3162  00A0  1303               	bcf	3,6	;RP1=0, select bank0
  3163  00A1  1694               	bsf	20,5	;volatile
  3164  00A2                     l268:
  3165  00A2  0008               	return
  3166  00A3                     __end_of_SPI_Maestro_Init:
  3167                           
  3168                           	psect	text20
  3169  04FE                     __ptext20:	
  3170 ;; *************** function _SPI_Recibir *****************
  3171 ;; Defined at:
  3172 ;;		line 167 in file "SPI_SPI.c"
  3173 ;; Parameters:    Size  Location     Type
  3174 ;;		None
  3175 ;; Auto vars:     Size  Location     Type
  3176 ;;		None
  3177 ;; Return value:  Size  Location     Type
  3178 ;;                  1    wreg      unsigned char 
  3179 ;; Registers used:
  3180 ;;		wreg
  3181 ;; Tracked objects:
  3182 ;;		On entry : 0/0
  3183 ;;		On exit  : 0/0
  3184 ;;		Unchanged: 0/0
  3185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3186 ;;      Params:         0       0       0       0       0
  3187 ;;      Locals:         0       0       0       0       0
  3188 ;;      Temps:          0       0       0       0       0
  3189 ;;      Totals:         0       0       0       0       0
  3190 ;;Total ram usage:        0 bytes
  3191 ;; Hardware stack levels used:    1
  3192 ;; Hardware stack levels required when called:    1
  3193 ;; This function calls:
  3194 ;;		Nothing
  3195 ;; This function is called by:
  3196 ;;		_main
  3197 ;; This function uses a non-reentrant model
  3198 ;;
  3199                           
  3200                           
  3201                           ;psect for function _SPI_Recibir
  3202  04FE                     _SPI_Recibir:
  3203  04FE                     l1595:	
  3204                           ;incstack = 0
  3205                           ; Regs used in _SPI_Recibir: [wreg]
  3206                           
  3207                           
  3208                           ;SPI_SPI.c: 169:     return SSPBUF;
  3209  04FE  1283               	bcf	3,5	;RP0=0, select bank0
  3210  04FF  1303               	bcf	3,6	;RP1=0, select bank0
  3211  0500  0813               	movf	19,w	;volatile
  3212  0501                     l291:
  3213  0501  0008               	return
  3214  0502                     __end_of_SPI_Recibir:
  3215                           
  3216                           	psect	text21
  3217  04F2                     __ptext21:	
  3218 ;; *************** function _SPI_Enviar *****************
  3219 ;; Defined at:
  3220 ;;		line 161 in file "SPI_SPI.c"
  3221 ;; Parameters:    Size  Location     Type
  3222 ;;  valor           1    wreg     unsigned char 
  3223 ;; Auto vars:     Size  Location     Type
  3224 ;;  valor           1    2[COMMON] unsigned char 
  3225 ;; Return value:  Size  Location     Type
  3226 ;;                  1    wreg      void 
  3227 ;; Registers used:
  3228 ;;		wreg
  3229 ;; Tracked objects:
  3230 ;;		On entry : 0/0
  3231 ;;		On exit  : 0/0
  3232 ;;		Unchanged: 0/0
  3233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3234 ;;      Params:         0       0       0       0       0
  3235 ;;      Locals:         1       0       0       0       0
  3236 ;;      Temps:          0       0       0       0       0
  3237 ;;      Totals:         1       0       0       0       0
  3238 ;;Total ram usage:        1 bytes
  3239 ;; Hardware stack levels used:    1
  3240 ;; Hardware stack levels required when called:    1
  3241 ;; This function calls:
  3242 ;;		Nothing
  3243 ;; This function is called by:
  3244 ;;		_main
  3245 ;; This function uses a non-reentrant model
  3246 ;;
  3247                           
  3248                           
  3249                           ;psect for function _SPI_Enviar
  3250  04F2                     _SPI_Enviar:
  3251                           
  3252                           ;incstack = 0
  3253                           ; Regs used in _SPI_Enviar: [wreg]
  3254                           ;SPI_Enviar@valor stored from wreg
  3255  04F2  00F2               	movwf	SPI_Enviar@valor
  3256  04F3                     l1593:
  3257                           
  3258                           ;SPI_SPI.c: 161: void SPI_Enviar (char valor);SPI_SPI.c: 162: {;SPI_SPI.c: 163:     SSPB
      +                          UF = valor;
  3259  04F3  0872               	movf	SPI_Enviar@valor,w
  3260  04F4  1283               	bcf	3,5	;RP0=0, select bank0
  3261  04F5  1303               	bcf	3,6	;RP1=0, select bank0
  3262  04F6  0093               	movwf	19	;volatile
  3263  04F7                     l288:
  3264  04F7  0008               	return
  3265  04F8                     __end_of_SPI_Enviar:
  3266                           
  3267                           	psect	text22
  3268  021D                     __ptext22:	
  3269 ;; *************** function _Lcd_Init *****************
  3270 ;; Defined at:
  3271 ;;		line 37 in file "LCD_SPI.c"
  3272 ;; Parameters:    Size  Location     Type
  3273 ;;		None
  3274 ;; Auto vars:     Size  Location     Type
  3275 ;;		None
  3276 ;; Return value:  Size  Location     Type
  3277 ;;                  1    wreg      void 
  3278 ;; Registers used:
  3279 ;;		wreg, status,2, status,0, pclath, cstack
  3280 ;; Tracked objects:
  3281 ;;		On entry : 0/0
  3282 ;;		On exit  : 0/0
  3283 ;;		Unchanged: 0/0
  3284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3285 ;;      Params:         0       0       0       0       0
  3286 ;;      Locals:         0       0       0       0       0
  3287 ;;      Temps:          2       0       0       0       0
  3288 ;;      Totals:         2       0       0       0       0
  3289 ;;Total ram usage:        2 bytes
  3290 ;; Hardware stack levels used:    1
  3291 ;; Hardware stack levels required when called:    3
  3292 ;; This function calls:
  3293 ;;		_Lcd_Cmd
  3294 ;;		_Lcd_Port
  3295 ;; This function is called by:
  3296 ;;		_main
  3297 ;; This function uses a non-reentrant model
  3298 ;;
  3299                           
  3300                           
  3301                           ;psect for function _Lcd_Init
  3302  021D                     _Lcd_Init:
  3303  021D                     l1567:	
  3304                           ;incstack = 0
  3305                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3306                           
  3307                           
  3308                           ;LCD_SPI.c: 39:     Lcd_Port(0b0000000);
  3309  021D  3000               	movlw	0
  3310  021E  120A  118A  24F8  120A  118A  	fcall	_Lcd_Port
  3311  0223                     l1569:
  3312                           
  3313                           ;LCD_SPI.c: 40:     _delay((unsigned long)((20)*(4000000/4000.0)));
  3314  0223  301A               	movlw	26
  3315  0224  00F7               	movwf	??_Lcd_Init+1
  3316  0225  30F8               	movlw	248
  3317  0226  00F6               	movwf	??_Lcd_Init
  3318  0227                     u677:
  3319  0227  0BF6               	decfsz	??_Lcd_Init,f
  3320  0228  2A27               	goto	u677
  3321  0229  0BF7               	decfsz	??_Lcd_Init+1,f
  3322  022A  2A27               	goto	u677
  3323  022B  0000               	nop
  3324  022C                     l1571:
  3325                           
  3326                           ;LCD_SPI.c: 41:     Lcd_Cmd(0b00110000);
  3327  022C  3030               	movlw	48
  3328  022D  120A  118A  2466  120A  118A  	fcall	_Lcd_Cmd
  3329  0232                     l1573:
  3330                           
  3331                           ;LCD_SPI.c: 42:     PORTCbits.RC0 = 0;
  3332  0232  1283               	bcf	3,5	;RP0=0, select bank0
  3333  0233  1303               	bcf	3,6	;RP1=0, select bank0
  3334  0234  1007               	bcf	7,0	;volatile
  3335  0235                     l1575:
  3336                           
  3337                           ;LCD_SPI.c: 43:     PORTCbits.RC1 = 0;
  3338  0235  1087               	bcf	7,1	;volatile
  3339                           
  3340                           ;LCD_SPI.c: 44:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3341  0236  3007               	movlw	7
  3342  0237  00F7               	movwf	??_Lcd_Init+1
  3343  0238  307D               	movlw	125
  3344  0239  00F6               	movwf	??_Lcd_Init
  3345  023A                     u687:
  3346  023A  0BF6               	decfsz	??_Lcd_Init,f
  3347  023B  2A3A               	goto	u687
  3348  023C  0BF7               	decfsz	??_Lcd_Init+1,f
  3349  023D  2A3A               	goto	u687
  3350  023E                     l1577:
  3351                           
  3352                           ;LCD_SPI.c: 45:     Lcd_Cmd(0b00110000);
  3353  023E  3030               	movlw	48
  3354  023F  120A  118A  2466  120A  118A  	fcall	_Lcd_Cmd
  3355  0244                     l1579:
  3356                           
  3357                           ;LCD_SPI.c: 46:      PORTCbits.RC0 = 0;
  3358  0244  1283               	bcf	3,5	;RP0=0, select bank0
  3359  0245  1303               	bcf	3,6	;RP1=0, select bank0
  3360  0246  1007               	bcf	7,0	;volatile
  3361  0247                     l1581:
  3362                           
  3363                           ;LCD_SPI.c: 47:     PORTCbits.RC1 = 0;
  3364  0247  1087               	bcf	7,1	;volatile
  3365  0248                     l1583:
  3366                           
  3367                           ;LCD_SPI.c: 48:     _delay((unsigned long)((11)*(4000000/4000.0)));
  3368  0248  300F               	movlw	15
  3369  0249  00F7               	movwf	??_Lcd_Init+1
  3370  024A  3047               	movlw	71
  3371  024B  00F6               	movwf	??_Lcd_Init
  3372  024C                     u697:
  3373  024C  0BF6               	decfsz	??_Lcd_Init,f
  3374  024D  2A4C               	goto	u697
  3375  024E  0BF7               	decfsz	??_Lcd_Init+1,f
  3376  024F  2A4C               	goto	u697
  3377  0250  2A51               	nop2
  3378                           
  3379                           ;LCD_SPI.c: 49:     Lcd_Cmd(0b00110000);
  3380  0251  3030               	movlw	48
  3381  0252  120A  118A  2466  120A  118A  	fcall	_Lcd_Cmd
  3382  0257                     l1585:
  3383                           
  3384                           ;LCD_SPI.c: 50:     PORTCbits.RC0 = 0;
  3385  0257  1283               	bcf	3,5	;RP0=0, select bank0
  3386  0258  1303               	bcf	3,6	;RP1=0, select bank0
  3387  0259  1007               	bcf	7,0	;volatile
  3388  025A                     l1587:
  3389                           
  3390                           ;LCD_SPI.c: 51:     PORTCbits.RC1 = 0;
  3391  025A  1087               	bcf	7,1	;volatile
  3392                           
  3393                           ;LCD_SPI.c: 52:     Lcd_Cmd(0b00111000);
  3394  025B  3038               	movlw	56
  3395  025C  120A  118A  2466  120A  118A  	fcall	_Lcd_Cmd
  3396                           
  3397                           ;LCD_SPI.c: 53:     Lcd_Cmd(0b00001100);
  3398  0261  300C               	movlw	12
  3399  0262  120A  118A  2466  120A  118A  	fcall	_Lcd_Cmd
  3400                           
  3401                           ;LCD_SPI.c: 54:     Lcd_Cmd(0b00000001);
  3402  0267  3001               	movlw	1
  3403  0268  120A  118A  2466  120A  118A  	fcall	_Lcd_Cmd
  3404                           
  3405                           ;LCD_SPI.c: 55:     Lcd_Cmd(0b00000110);
  3406  026D  3006               	movlw	6
  3407  026E  120A  118A  2466  120A  118A  	fcall	_Lcd_Cmd
  3408  0273                     l217:
  3409  0273  0008               	return
  3410  0274                     __end_of_Lcd_Init:
  3411                           
  3412                           	psect	text23
  3413  0466                     __ptext23:	
  3414 ;; *************** function _Lcd_Cmd *****************
  3415 ;; Defined at:
  3416 ;;		line 28 in file "LCD_SPI.c"
  3417 ;; Parameters:    Size  Location     Type
  3418 ;;  a               1    wreg     unsigned char 
  3419 ;; Auto vars:     Size  Location     Type
  3420 ;;  a               1    5[COMMON] unsigned char 
  3421 ;; Return value:  Size  Location     Type
  3422 ;;                  1    wreg      void 
  3423 ;; Registers used:
  3424 ;;		wreg, status,2, status,0, pclath, cstack
  3425 ;; Tracked objects:
  3426 ;;		On entry : 0/0
  3427 ;;		On exit  : 0/0
  3428 ;;		Unchanged: 0/0
  3429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3430 ;;      Params:         0       0       0       0       0
  3431 ;;      Locals:         1       0       0       0       0
  3432 ;;      Temps:          2       0       0       0       0
  3433 ;;      Totals:         3       0       0       0       0
  3434 ;;Total ram usage:        3 bytes
  3435 ;; Hardware stack levels used:    1
  3436 ;; Hardware stack levels required when called:    2
  3437 ;; This function calls:
  3438 ;;		_Lcd_Port
  3439 ;; This function is called by:
  3440 ;;		_Lcd_Init
  3441 ;;		_Lcd_Set_Cursor
  3442 ;;		_Lcd_Clear
  3443 ;;		_Lcd_Shift_Left
  3444 ;;		_Lcd_Shift_Right
  3445 ;; This function uses a non-reentrant model
  3446 ;;
  3447                           
  3448                           
  3449                           ;psect for function _Lcd_Cmd
  3450  0466                     _Lcd_Cmd:
  3451                           
  3452                           ;incstack = 0
  3453                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3454                           ;Lcd_Cmd@a stored from wreg
  3455  0466  00F5               	movwf	Lcd_Cmd@a
  3456  0467                     l1337:
  3457                           
  3458                           ;LCD_SPI.c: 28: void Lcd_Cmd (char a);LCD_SPI.c: 29: {;LCD_SPI.c: 30:     PORTCbits.RC0 
      +                          = 0;
  3459  0467  1283               	bcf	3,5	;RP0=0, select bank0
  3460  0468  1303               	bcf	3,6	;RP1=0, select bank0
  3461  0469  1007               	bcf	7,0	;volatile
  3462  046A                     l1339:
  3463                           
  3464                           ;LCD_SPI.c: 31:     Lcd_Port(a);
  3465  046A  0875               	movf	Lcd_Cmd@a,w
  3466  046B  120A  118A  24F8  120A  118A  	fcall	_Lcd_Port
  3467  0470                     l1341:
  3468                           
  3469                           ;LCD_SPI.c: 32:     PORTCbits.RC2 = 1;
  3470  0470  1283               	bcf	3,5	;RP0=0, select bank0
  3471  0471  1303               	bcf	3,6	;RP1=0, select bank0
  3472  0472  1507               	bsf	7,2	;volatile
  3473  0473                     l1343:
  3474                           
  3475                           ;LCD_SPI.c: 33:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3476  0473  3007               	movlw	7
  3477  0474  00F4               	movwf	??_Lcd_Cmd+1
  3478  0475  307D               	movlw	125
  3479  0476  00F3               	movwf	??_Lcd_Cmd
  3480  0477                     u707:
  3481  0477  0BF3               	decfsz	??_Lcd_Cmd,f
  3482  0478  2C77               	goto	u707
  3483  0479  0BF4               	decfsz	??_Lcd_Cmd+1,f
  3484  047A  2C77               	goto	u707
  3485  047B                     l1345:
  3486                           
  3487                           ;LCD_SPI.c: 34:     PORTCbits.RC2 = 0;
  3488  047B  1283               	bcf	3,5	;RP0=0, select bank0
  3489  047C  1303               	bcf	3,6	;RP1=0, select bank0
  3490  047D  1107               	bcf	7,2	;volatile
  3491  047E                     l214:
  3492  047E  0008               	return
  3493  047F                     __end_of_Lcd_Cmd:
  3494                           
  3495                           	psect	text24
  3496  04F8                     __ptext24:	
  3497 ;; *************** function _Lcd_Port *****************
  3498 ;; Defined at:
  3499 ;;		line 23 in file "LCD_SPI.c"
  3500 ;; Parameters:    Size  Location     Type
  3501 ;;  a               1    wreg     unsigned char 
  3502 ;; Auto vars:     Size  Location     Type
  3503 ;;  a               1    2[COMMON] unsigned char 
  3504 ;; Return value:  Size  Location     Type
  3505 ;;                  1    wreg      void 
  3506 ;; Registers used:
  3507 ;;		wreg
  3508 ;; Tracked objects:
  3509 ;;		On entry : 0/0
  3510 ;;		On exit  : 0/0
  3511 ;;		Unchanged: 0/0
  3512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3513 ;;      Params:         0       0       0       0       0
  3514 ;;      Locals:         1       0       0       0       0
  3515 ;;      Temps:          0       0       0       0       0
  3516 ;;      Totals:         1       0       0       0       0
  3517 ;;Total ram usage:        1 bytes
  3518 ;; Hardware stack levels used:    1
  3519 ;; Hardware stack levels required when called:    1
  3520 ;; This function calls:
  3521 ;;		Nothing
  3522 ;; This function is called by:
  3523 ;;		_Lcd_Cmd
  3524 ;;		_Lcd_Init
  3525 ;;		_Lcd_Write_Char
  3526 ;; This function uses a non-reentrant model
  3527 ;;
  3528                           
  3529                           
  3530                           ;psect for function _Lcd_Port
  3531  04F8                     _Lcd_Port:
  3532                           
  3533                           ;incstack = 0
  3534                           ; Regs used in _Lcd_Port: [wreg]
  3535                           ;Lcd_Port@a stored from wreg
  3536  04F8  00F2               	movwf	Lcd_Port@a
  3537  04F9                     l1303:
  3538                           
  3539                           ;LCD_SPI.c: 23: void Lcd_Port (char a);LCD_SPI.c: 24: {;LCD_SPI.c: 25:     PORTD = a;
  3540  04F9  0872               	movf	Lcd_Port@a,w
  3541  04FA  1283               	bcf	3,5	;RP0=0, select bank0
  3542  04FB  1303               	bcf	3,6	;RP1=0, select bank0
  3543  04FC  0088               	movwf	8	;volatile
  3544  04FD                     l211:
  3545  04FD  0008               	return
  3546  04FE                     __end_of_Lcd_Port:
  3547                           
  3548                           	psect	text25
  3549  04AB                     __ptext25:	
  3550 ;; *************** function _ISR *****************
  3551 ;; Defined at:
  3552 ;;		line 97 in file "MAESTRO_SPI.c"
  3553 ;; Parameters:    Size  Location     Type
  3554 ;;		None
  3555 ;; Auto vars:     Size  Location     Type
  3556 ;;		None
  3557 ;; Return value:  Size  Location     Type
  3558 ;;                  1    wreg      void 
  3559 ;; Registers used:
  3560 ;;		None
  3561 ;; Tracked objects:
  3562 ;;		On entry : 0/0
  3563 ;;		On exit  : 0/0
  3564 ;;		Unchanged: 0/0
  3565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3566 ;;      Params:         0       0       0       0       0
  3567 ;;      Locals:         0       0       0       0       0
  3568 ;;      Temps:          2       0       0       0       0
  3569 ;;      Totals:         2       0       0       0       0
  3570 ;;Total ram usage:        2 bytes
  3571 ;; Hardware stack levels used:    1
  3572 ;; This function calls:
  3573 ;;		Nothing
  3574 ;; This function is called by:
  3575 ;;		Interrupt level 1
  3576 ;; This function uses a non-reentrant model
  3577 ;;
  3578                           
  3579                           
  3580                           ;psect for function _ISR
  3581  04AB                     _ISR:
  3582  04AB                     i1l1205:
  3583                           
  3584                           ;MAESTRO_SPI.c: 99: 
  3585  04AB  1283               	bcf	3,5	;RP0=0, select bank0
  3586  04AC  1303               	bcf	3,6	;RP1=0, select bank0
  3587  04AD  1E8C               	btfss	12,5	;volatile
  3588  04AE  2CB0               	goto	u27_21
  3589  04AF  2CB1               	goto	u27_20
  3590  04B0                     u27_21:
  3591  04B0  2CB2               	goto	i1l132
  3592  04B1                     u27_20:
  3593  04B1                     i1l1207:
  3594                           
  3595                           ;MAESTRO_SPI.c: 100: ;MAESTRO_SPI.c: 101: 
  3596  04B1  128C               	bcf	12,5	;volatile
  3597  04B2                     i1l132:
  3598  04B2  0871               	movf	??_ISR+1,w
  3599  04B3  008A               	movwf	10
  3600  04B4  0E70               	swapf	??_ISR,w
  3601  04B5  0083               	movwf	3
  3602  04B6  0EFE               	swapf	btemp,f
  3603  04B7  0E7E               	swapf	btemp,w
  3604  04B8  0009               	retfie
  3605  04B9                     __end_of_ISR:
  3606  007E                     btemp	set	126	;btemp
  3607  007E                     wtemp0	set	126
  3608                           
  3609                           	psect	intentry
  3610  0004                     __pintentry:	
  3611                           ;incstack = 0
  3612                           ; Regs used in _ISR: []
  3613                           
  3614  0004                     interrupt_function:
  3615  007E                     saved_w	set	btemp
  3616  0004  00FE               	movwf	btemp
  3617  0005  0E03               	swapf	3,w
  3618  0006  00F0               	movwf	??_ISR
  3619  0007  080A               	movf	10,w
  3620  0008  00F1               	movwf	??_ISR+1
  3621  0009  120A  118A  2CAB   	ljmp	_ISR
  3622                           
  3623                           	psect	config
  3624                           
  3625                           ;Config register CONFIG1 @ 0x2007
  3626                           ;	Oscillator Selection bits
  3627                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3628                           ;	Watchdog Timer Enable bit
  3629                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3630                           ;	Power-up Timer Enable bit
  3631                           ;	PWRTE = OFF, PWRT disabled
  3632                           ;	RE3/MCLR pin function select bit
  3633                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3634                           ;	Code Protection bit
  3635                           ;	CP = OFF, Program memory code protection is disabled
  3636                           ;	Data Code Protection bit
  3637                           ;	CPD = OFF, Data memory code protection is disabled
  3638                           ;	Brown Out Reset Selection bits
  3639                           ;	BOREN = OFF, BOR disabled
  3640                           ;	Internal External Switchover bit
  3641                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3642                           ;	Fail-Safe Clock Monitor Enabled bit
  3643                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3644                           ;	Low Voltage Programming Enable bit
  3645                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3646                           ;	In-Circuit Debugger Mode bit
  3647                           ;	DEBUG = 0x1, unprogrammed default
  3648  2007                     	org	8199
  3649  2007  20D4               	dw	8404
  3650                           
  3651                           ;Config register CONFIG2 @ 0x2008
  3652                           ;	Brown-out Reset Selection bit
  3653                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3654                           ;	Flash Program Memory Self Write Enable bits
  3655                           ;	WRT = OFF, Write protection off
  3656  2008                     	org	8200
  3657  2008  3FFF               	dw	16383

Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         23
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80      6      27
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _lcd->_Conversion1
    _lcd->_Conversion2
    _lcd->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Conversion2->___awmod
    _virtual_display3->_escribir_char
    _virtual_display2->_escribir_char
    _Conversion1->___awmod
    _virtual_display1->_escribir_char
    _Lcd_Write_Char->_Lcd_Port
    _SPI_config->_SPI_Maestro_Init
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_lcd
    _Conversion2->___awdiv
    _Conversion1->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    5669
                                              5 BANK0      1     1      0
                           _Lcd_Init
                         _SPI_Enviar
                        _SPI_Recibir
                         _SPI_config
                       _USART_config
                    _interrup_config
                                _lcd
                         _osc_config
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _osc_config                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd                                                  1     1      0    5461
                                              4 BANK0      1     1      0
                        _Conversion1
                        _Conversion2
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     3     3      0     167
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       4     3      1     558
                                              6 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Conversion2                                          1     1      0    2357
                                              9 COMMON     1     1      0
                     _Lcd_Write_Char
                            ___awdiv
                            ___awmod
                   _virtual_display2
                   _virtual_display3
 ---------------------------------------------------------------------------------
 (3) _virtual_display3                                     0     0      0      22
                      _escribir_char
 ---------------------------------------------------------------------------------
 (3) _virtual_display2                                     0     0      0      22
                      _escribir_char
 ---------------------------------------------------------------------------------
 (2) _Conversion1                                          1     1      0    2335
                                              9 COMMON     1     1      0
                     _Lcd_Write_Char
                            ___awdiv
                            ___awmod
                   _virtual_display1
 ---------------------------------------------------------------------------------
 (3) _virtual_display1                                     0     0      0      22
                      _escribir_char
 ---------------------------------------------------------------------------------
 (4) _escribir_char                                        1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1008
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1261
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      44
                                              3 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _interrup_config                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_config                                         0     0      0       0
                   _USART_lib_config
 ---------------------------------------------------------------------------------
 (2) _USART_lib_config                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_config                                           1     1      0     120
                                              6 COMMON     1     1      0
                   _SPI_Maestro_Init
 ---------------------------------------------------------------------------------
 (2) _SPI_Maestro_Init                                     4     3      1     120
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _SPI_Recibir                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Enviar                                           1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      44
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _SPI_Enviar
   _SPI_Recibir
   _SPI_config
     _SPI_Maestro_Init
   _USART_config
     _USART_lib_config
   _interrup_config
   _lcd
     _Conversion1
       _Lcd_Write_Char
         _Lcd_Port
       ___awdiv
       ___awmod
       _virtual_display1
         _escribir_char
     _Conversion2
       _Lcd_Write_Char
         _Lcd_Port
       ___awdiv
       ___awmod
       _virtual_display2
         _escribir_char
       _virtual_display3
         _escribir_char
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_Char
       _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
   _osc_config
   _setup

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      27       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      6      1B       5       33.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      27      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 16 00:34:18 2021

              _SPI_Recibir 04FE            SPI_Enviar@valor 0072                          _a 0026  
                        pc 0002                _SSPSTATbits 0094               ___awdiv@sign 0036  
                       _w1 0028                         _w2 0027                         _x1 007A  
                       _x2 0032                         _y1 0033                         _y2 0031  
               _SPI_config 04C5     __size_of_escribir_char 000A                         fsr 0004  
                      l200 0465                        l211 04FD                        l214 047E  
                      l143 03D4                        l152 04F1                        l232 0423  
                      l217 0273                        l241 04AA                        l161 03A6  
                      l146 04C4                        l226 0447                        l155 04CF  
                      l171 0368                        l260 0044                        l164 02C8  
                      l261 004B                        l181 03FE                        l149 04D9  
                      l263 006E                        l255 0028                        l175 0319  
                      l167 01C3                        l264 009C                        l184 04DF  
                      l265 0074                        l257 002F                        l266 007A  
                      l258 0036                        l530 010B                        l291 0501  
                      l267 0080                        l259 003D                        l187 04E3  
                      l268 00A2                        l543 021C                        l288 04F7  
  __end_of_interrup_config 04C5                        u300 02D1                        u301 02D0  
                      u310 03DD                        u311 03DC                        u500 0213  
                      u420 01C9                        u501 0212                        u421 01C8  
                      u430 01D4                        u510 042A                        u431 01D3  
                      u511 0429                        u600 00E9                        u440 01DF  
                      u280 04E3                        u520 043C                        u601 00E8  
                      u441 01DE                        u281 04E2                        u521 043B  
                      u290 0322                        u530 0423                        u291 0321  
                      u531 0422                        u620 00FD                        u540 00AA  
                      u460 01F1                        _ISR 04AB                        u621 00FC  
                      u605 00E5                        u541 00A9                        u461 01F0  
                      u630 0102                        u550 00B5                        u470 01FB  
                      u631 0101                        u615 00F1                        u551 00B4  
                      u471 01FA                        u455 01E3                        u560 00C6  
                      u561 00C5                        u490 020E                        u707 0477  
                      u491 020D                        u475 01F7                        u580 00D8  
                      u581 00D7                        u485 0202                        u575 00CA  
                      u647 0131                        u657 0147                        u667 04A5  
                      u595 00D9                        u677 0227                        u687 023A  
                      u697 024C           _USART_lib_config 0448                        _x1z 002E  
                      _x2z 002C                        _y1z 002D                        _y2z 002B  
                      _lcd 0369              ??_Conversion1 0079              ??_Conversion2 0079  
                      fsr0 0004                        indf 0000               ___awmod@sign 0078  
                     ?_ISR 0070                       l1301 04DB                       l1303 04F9  
                     l1311 04A3                       l1313 04A7                       l1305 0497  
                     l1401 01D4                       l1321 02C9                       l1307 049A  
                     l1411 01ED                       l1403 01D9                       l1315 031A  
                     l1323 02D1                       l1331 03FB                       l1341 0470  
                     l1309 04A0                       l1413 01F1                       l1405 01DF  
                     l1421 020E                       l1317 0322                       l1325 0316  
                     l1501 0403                       l1343 0473                       l1431 044C  
                     l1423 0213                       l1415 01FB                       l1407 01E2  
                     l1319 0365                       l1327 03D5                       l1503 0410  
                     l1345 047B                       l1337 0467                       l1441 0451  
                     l1433 044D                       l1425 0218                       l1417 0201  
                     l1409 01E9                       l1329 03DD                       l1505 0416  
                     l1339 046A                       l1451 0458                       l1443 0452  
                     l1435 044E                       l1419 0208                       l1461 045D  
                     l1453 0459                       l1445 0453                       l1437 044F  
                     l1429 0448                       l1701 00AA                       l1463 045E  
                     l1455 045A                       l1447 0454                       l1439 0450  
                     l1711 00BE                       l1703 00AF                       l1391 01C4  
                     l1551 03BF                       l1473 0052                       l1465 045F  
                     l1457 045B                       l1449 0457                       l1721 00D4  
                     l1713 00C0                       l1705 00B1                       l1393 01C5  
                     l1561 04D0                       l1553 03C2                       l1571 022C  
                     l1467 0462                       l1459 045C                       l1563 04B9  
                     l1731 00F7                       l1723 00D8                       l1715 00C6  
                     l1707 00B5                       l1395 01C9                       l1491 042F  
                     l1555 03C3                       l1811 0120                       l1581 0247  
                     l1573 0232                       l1477 0086                       l1469 001F  
                     l1565 04C1                       l1725 00E9                       l1717 00C9  
                     l1733 00FD                       l1709 00BA                       l1397 01CE  
                     l1741 0274                       l1493 0436                       l1557 03C6  
                     l1549 03A7                       l1821 013B                       l1813 0125  
                     l1583 0248                       l1575 0235                       l1567 021D  
                     l1591 04C5                       l1735 0102                       l1727 00EF  
                     l1719 00D0                       l1399 01D0                       l1751 02A5  
                     l1743 0276                       l1495 043C                       l1487 0425  
                     l1559 03C7                       l1831 015A                       l1823 0143  
                     l1815 012A                       l1807 010C                       l1585 0257  
                     l1577 023E                       l1569 0223                       l1593 04F3  
                     l1737 0107                       l1729 00F0                       l1753 02AB  
                     l1745 0288                       l1761 0168                       l1497 0441  
                     l1489 042A                       l1833 015F                       l1825 014B  
                     l1817 012D                       l1809 011B                       ?_lcd 0070  
                     l1587 025A                       l1579 0244                       l1595 04FE  
                     l1755 02B4                       l1747 029A                       l1771 019B  
                     l1763 016C                       l1499 0400                       l1827 014E  
                     l1819 0135                       l1589 04EC                       l1757 02BD  
                     l1749 029E                       l1781 01BE                       l1773 01A1  
                     l1765 017E                       l1829 0153                       l1759 02C3  
                     l1775 01AA                       l1767 0190                       l1791 0383  
                     l1783 0369                       l1697 00A3                       l1777 01B3  
                     l1769 0194                       l1793 038F                       l1785 0371  
                     l1875 005A                       l1699 00A6                       l1779 01B9  
                     l1795 0394                       l1787 0377                       l1877 008E  
                     l1797 03A0                       l1789 037E                       STR_1 0485  
                     _IOCB 0096          ?_Lcd_Write_String 0070                       _main 010C  
                     _leer 002A                       btemp 007E                       start 000C  
       ??_Lcd_Write_String 0075            __end_of_Lcd_Cmd 047F                      ??_ISR 0070  
                    ??_lcd 0039                      ?_main 0070            __end_of___awdiv 010C  
          __end_of___awmod 021D                      _ANSEL 0188            ___awdiv@divisor 0072  
                    i1l132 04B2            ___awdiv@counter 0035                      _SPBRG 0099  
                    u27_20 04B1                      u27_21 04B0                      _PORTA 0005  
                    _PORTB 0006                      _PORTC 0007                      _PORTD 0008  
                    _PORTE 0009    __size_of_Lcd_Set_Cursor 0024                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    _TRISE 0089                      _TXREG 0019                      _setup 03A7  
      __end_of_Conversion1 02C9        __end_of_Conversion2 01C4              _escribir_char 04DA  
                    pclath 000A                      status 0003                      wtemp0 007E  
         __end_of_Lcd_Init 0274           __end_of_Lcd_Port 04FE                ?_SPI_Enviar 0070  
          __initialization 000F               __end_of_main 0168        SPI_Maestro_Init@SCK 0072  
              ?_SPI_config 0070                     ??_main 003A           ?_interrup_config 0070  
 __end_of_virtual_display1 0369   __end_of_virtual_display2 031A   __end_of_virtual_display3 03FF  
 __end_of_SPI_Maestro_Init 00A3           ___awdiv@dividend 0074             ?_escribir_char 0070  
                   ?_setup 0070                     _ANSELH 0189                     i1l1205 04AB  
                   i1l1207 04B1                  ??_Lcd_Cmd 0073    __size_of_Lcd_Write_Char 0015  
                   _SSPBUF 0013                  ??___awdiv 0076                  ??___awmod 0076  
         ___awdiv@quotient 0037            ___awmod@divisor 0072            ___awmod@counter 0077  
                   _unidad 007B                _Conversion1 0274                _Conversion2 0168  
                   saved_w 007E        __size_of_SPI_Enviar 0006            Lcd_Set_Cursor@a 0078  
          Lcd_Set_Cursor@b 0076    __end_of__initialization 001A        __size_of_SPI_config 000B  
 __end_of_USART_lib_config 0466               ?_SPI_Recibir 0070             __pcstackCOMMON 0070  
            __end_of_setup 03D5             _Lcd_Set_Cursor 0424            ??_escribir_char 0072  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070                    ??_setup 0072  
               __pbssBANK0 0020                 __pmaintext 010C                 __pintentry 0004  
__size_of_Lcd_Write_String 0025     __end_of_Lcd_Set_Cursor 0448                 ??_Lcd_Init 0076  
               ??_Lcd_Port 0072                 __stringtab 047F             _Lcd_Write_Char 0496  
                  _Lcd_Cmd 0466               ??_SPI_Enviar 0072                    ___awdiv 00A3  
                  ___awmod 01C4               ??_SPI_config 0076            ?_Lcd_Set_Cursor 0076  
                  __ptext1 03A7                    __ptext2 04D0                    __ptext3 0369  
                  __ptext4 03FF                    __ptext5 0424                    __ptext6 0168  
                  __ptext7 03D5                    __ptext8 02C9                    __ptext9 0274  
             __size_of_ISR 000E               __size_of_lcd 003E           ___awmod@dividend 0074  
        ?_virtual_display1 0070          ?_virtual_display2 0070          ?_virtual_display3 0070  
        ?_SPI_Maestro_Init 0072                    _unidadz 002F         __end_of_SPI_Enviar 04F8  
       ??_virtual_display1 0073         ??_virtual_display2 0073         ??_virtual_display3 0073  
                  clrloop0 04E5         ??_SPI_Maestro_Init 0073                    _voltaje 0034  
   __end_of_Lcd_Write_Char 04AB       end_of_initialization 001A                 _osc_config 04D0  
       __end_of_SPI_config 04D0                  _RCSTAbits 0018                  Lcd_Port@a 0072  
     __size_of_SPI_Recibir 0004                 _velocidad1 0025                 _velocidad2 0024  
               _velocidad3 0023                  _PORTCbits 0007               ?_Conversion1 0070  
             ?_Conversion2 0070                  _TRISAbits 0085                  _TRISCbits 0087  
          ?_Lcd_Write_Char 0070   __size_of_interrup_config 000C          Lcd_Write_String@a 0077  
        Lcd_Write_String@i 0075                  _TXSTAbits 0098          ?_USART_lib_config 0070  
            ?_USART_config 0070         ??_USART_lib_config 0072           _Lcd_Write_String 03FF  
      start_initialization 000F                __end_of_ISR 04B9                __end_of_lcd 03A7  
        __size_of_Lcd_Init 0057          __size_of_Lcd_Port 0006                ?_osc_config 0070  
           ??_USART_config 0072            Lcd_Write_Char@a 0074                __pbssCOMMON 007A  
                ___latbits 0002              __pcstackBANK0 0035      __end_of_escribir_char 04E4  
                 ?_Lcd_Cmd 0070          ??_interrup_config 0072                  _dato_push 0021  
         ??_Lcd_Set_Cursor 0077                   ?___awdiv 0072                   ?___awmod 0072  
                __pstrings 047F              _dato_semaforo 0020        __size_of_osc_config 000A  
     __size_of_Conversion1 0055       __size_of_Conversion2 005C             __size_of_setup 002E  
        interrupt_function 0004                  clear_ram0 04E4                   _PIE1bits 008C  
__size_of_virtual_display1 004F  __size_of_virtual_display2 0051  __size_of_virtual_display3 002A  
__size_of_SPI_Maestro_Init 0085                   Lcd_Cmd@a 0075                   _PIR1bits 000C  
              __stringbase 0484           ??_Lcd_Write_Char 0073       __end_of_USART_config 04F2  
                 _Lcd_Init 021D                   _Lcd_Port 04F8   __end_of_Lcd_Write_String 0424  
         __size_of_Lcd_Cmd 0019              ??_SPI_Recibir 0072           __size_of___awdiv 0069  
         __size_of___awmod 0059         __end_of__stringtab 0485  __size_of_USART_lib_config 001E  
                 _dato_pot 0022                   __ptext10 031A                   __ptext11 04DA  
                 __ptext20 04FE                   __ptext12 01C4                   __ptext21 04F2  
                 __ptext13 00A3                   __ptext22 021D                   __ptext14 0496  
                 __ptext23 0466                   __ptext15 04B9                   __ptext24 04F8  
                 __ptext16 04EC                   __ptext25 04AB                   __ptext17 0448  
                 __ptext18 04C5                   __ptext19 001E         escribir_char@valor 0072  
                 _contador 0029               ??_osc_config 0072              __size_of_main 005C  
                 _voltajez 0030        __end_of_SPI_Recibir 0502                 _INTCONbits 000B  
       __end_of_osc_config 04DA            _interrup_config 04B9                   intlevel1 0000  
         _virtual_display1 031A           _virtual_display2 02C9           _virtual_display3 03D5  
         _SPI_Maestro_Init 001E                  stringcode 047F                 _OSCCONbits 008F  
       Lcd_Set_Cursor@temp 0079  SPI_Maestro_Init@port_mode 0075      __size_of_USART_config 0006  
                 stringdir 047F                   stringtab 047F                 _SSPCONbits 0014  
               _SPI_Enviar 04F2               _USART_config 04EC  
