

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Feb 10 00:53:26 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    32                           	dabs	1,0x7E,2
    33  0000                     
    34                           ; Version 2.20
    35                           ; Generated 12/02/2020 GMT
    36                           ; 
    37                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC16F887 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     	;# 
    69  0001                     	;# 
    70  0002                     	;# 
    71  0003                     	;# 
    72  0004                     	;# 
    73  0005                     	;# 
    74  0006                     	;# 
    75  0007                     	;# 
    76  0008                     	;# 
    77  0009                     	;# 
    78  000A                     	;# 
    79  000B                     	;# 
    80  000C                     	;# 
    81  000D                     	;# 
    82  000E                     	;# 
    83  000E                     	;# 
    84  000F                     	;# 
    85  0010                     	;# 
    86  0011                     	;# 
    87  0012                     	;# 
    88  0013                     	;# 
    89  0014                     	;# 
    90  0015                     	;# 
    91  0015                     	;# 
    92  0016                     	;# 
    93  0017                     	;# 
    94  0018                     	;# 
    95  0019                     	;# 
    96  001A                     	;# 
    97  001B                     	;# 
    98  001B                     	;# 
    99  001C                     	;# 
   100  001D                     	;# 
   101  001E                     	;# 
   102  001F                     	;# 
   103  0081                     	;# 
   104  0085                     	;# 
   105  0086                     	;# 
   106  0087                     	;# 
   107  0088                     	;# 
   108  0089                     	;# 
   109  008C                     	;# 
   110  008D                     	;# 
   111  008E                     	;# 
   112  008F                     	;# 
   113  0090                     	;# 
   114  0091                     	;# 
   115  0092                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0093                     	;# 
   119  0094                     	;# 
   120  0095                     	;# 
   121  0096                     	;# 
   122  0097                     	;# 
   123  0098                     	;# 
   124  0099                     	;# 
   125  009A                     	;# 
   126  009B                     	;# 
   127  009C                     	;# 
   128  009D                     	;# 
   129  009E                     	;# 
   130  009F                     	;# 
   131  0105                     	;# 
   132  0107                     	;# 
   133  0108                     	;# 
   134  0109                     	;# 
   135  010C                     	;# 
   136  010C                     	;# 
   137  010D                     	;# 
   138  010E                     	;# 
   139  010F                     	;# 
   140  0185                     	;# 
   141  0187                     	;# 
   142  0188                     	;# 
   143  0189                     	;# 
   144  018C                     	;# 
   145  018D                     	;# 
   146  0000                     	;# 
   147  0001                     	;# 
   148  0002                     	;# 
   149  0003                     	;# 
   150  0004                     	;# 
   151  0005                     	;# 
   152  0006                     	;# 
   153  0007                     	;# 
   154  0008                     	;# 
   155  0009                     	;# 
   156  000A                     	;# 
   157  000B                     	;# 
   158  000C                     	;# 
   159  000D                     	;# 
   160  000E                     	;# 
   161  000E                     	;# 
   162  000F                     	;# 
   163  0010                     	;# 
   164  0011                     	;# 
   165  0012                     	;# 
   166  0013                     	;# 
   167  0014                     	;# 
   168  0015                     	;# 
   169  0015                     	;# 
   170  0016                     	;# 
   171  0017                     	;# 
   172  0018                     	;# 
   173  0019                     	;# 
   174  001A                     	;# 
   175  001B                     	;# 
   176  001B                     	;# 
   177  001C                     	;# 
   178  001D                     	;# 
   179  001E                     	;# 
   180  001F                     	;# 
   181  0081                     	;# 
   182  0085                     	;# 
   183  0086                     	;# 
   184  0087                     	;# 
   185  0088                     	;# 
   186  0089                     	;# 
   187  008C                     	;# 
   188  008D                     	;# 
   189  008E                     	;# 
   190  008F                     	;# 
   191  0090                     	;# 
   192  0091                     	;# 
   193  0092                     	;# 
   194  0093                     	;# 
   195  0093                     	;# 
   196  0093                     	;# 
   197  0094                     	;# 
   198  0095                     	;# 
   199  0096                     	;# 
   200  0097                     	;# 
   201  0098                     	;# 
   202  0099                     	;# 
   203  009A                     	;# 
   204  009B                     	;# 
   205  009C                     	;# 
   206  009D                     	;# 
   207  009E                     	;# 
   208  009F                     	;# 
   209  0105                     	;# 
   210  0107                     	;# 
   211  0108                     	;# 
   212  0109                     	;# 
   213  010C                     	;# 
   214  010C                     	;# 
   215  010D                     	;# 
   216  010E                     	;# 
   217  010F                     	;# 
   218  0185                     	;# 
   219  0187                     	;# 
   220  0188                     	;# 
   221  0189                     	;# 
   222  018C                     	;# 
   223  018D                     	;# 
   224  0000                     	;# 
   225  0001                     	;# 
   226  0002                     	;# 
   227  0003                     	;# 
   228  0004                     	;# 
   229  0005                     	;# 
   230  0006                     	;# 
   231  0007                     	;# 
   232  0008                     	;# 
   233  0009                     	;# 
   234  000A                     	;# 
   235  000B                     	;# 
   236  000C                     	;# 
   237  000D                     	;# 
   238  000E                     	;# 
   239  000E                     	;# 
   240  000F                     	;# 
   241  0010                     	;# 
   242  0011                     	;# 
   243  0012                     	;# 
   244  0013                     	;# 
   245  0014                     	;# 
   246  0015                     	;# 
   247  0015                     	;# 
   248  0016                     	;# 
   249  0017                     	;# 
   250  0018                     	;# 
   251  0019                     	;# 
   252  001A                     	;# 
   253  001B                     	;# 
   254  001B                     	;# 
   255  001C                     	;# 
   256  001D                     	;# 
   257  001E                     	;# 
   258  001F                     	;# 
   259  0081                     	;# 
   260  0085                     	;# 
   261  0086                     	;# 
   262  0087                     	;# 
   263  0088                     	;# 
   264  0089                     	;# 
   265  008C                     	;# 
   266  008D                     	;# 
   267  008E                     	;# 
   268  008F                     	;# 
   269  0090                     	;# 
   270  0091                     	;# 
   271  0092                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0093                     	;# 
   275  0094                     	;# 
   276  0095                     	;# 
   277  0096                     	;# 
   278  0097                     	;# 
   279  0098                     	;# 
   280  0099                     	;# 
   281  009A                     	;# 
   282  009B                     	;# 
   283  009C                     	;# 
   284  009D                     	;# 
   285  009E                     	;# 
   286  009F                     	;# 
   287  0105                     	;# 
   288  0107                     	;# 
   289  0108                     	;# 
   290  0109                     	;# 
   291  010C                     	;# 
   292  010C                     	;# 
   293  010D                     	;# 
   294  010E                     	;# 
   295  010F                     	;# 
   296  0185                     	;# 
   297  0187                     	;# 
   298  0188                     	;# 
   299  0189                     	;# 
   300  018C                     	;# 
   301  018D                     	;# 
   302  0000                     	;# 
   303  0001                     	;# 
   304  0002                     	;# 
   305  0003                     	;# 
   306  0004                     	;# 
   307  0005                     	;# 
   308  0006                     	;# 
   309  0007                     	;# 
   310  0008                     	;# 
   311  0009                     	;# 
   312  000A                     	;# 
   313  000B                     	;# 
   314  000C                     	;# 
   315  000D                     	;# 
   316  000E                     	;# 
   317  000E                     	;# 
   318  000F                     	;# 
   319  0010                     	;# 
   320  0011                     	;# 
   321  0012                     	;# 
   322  0013                     	;# 
   323  0014                     	;# 
   324  0015                     	;# 
   325  0015                     	;# 
   326  0016                     	;# 
   327  0017                     	;# 
   328  0018                     	;# 
   329  0019                     	;# 
   330  001A                     	;# 
   331  001B                     	;# 
   332  001B                     	;# 
   333  001C                     	;# 
   334  001D                     	;# 
   335  001E                     	;# 
   336  001F                     	;# 
   337  0081                     	;# 
   338  0085                     	;# 
   339  0086                     	;# 
   340  0087                     	;# 
   341  0088                     	;# 
   342  0089                     	;# 
   343  008C                     	;# 
   344  008D                     	;# 
   345  008E                     	;# 
   346  008F                     	;# 
   347  0090                     	;# 
   348  0091                     	;# 
   349  0092                     	;# 
   350  0093                     	;# 
   351  0093                     	;# 
   352  0093                     	;# 
   353  0094                     	;# 
   354  0095                     	;# 
   355  0096                     	;# 
   356  0097                     	;# 
   357  0098                     	;# 
   358  0099                     	;# 
   359  009A                     	;# 
   360  009B                     	;# 
   361  009C                     	;# 
   362  009D                     	;# 
   363  009E                     	;# 
   364  009F                     	;# 
   365  0105                     	;# 
   366  0107                     	;# 
   367  0108                     	;# 
   368  0109                     	;# 
   369  010C                     	;# 
   370  010C                     	;# 
   371  010D                     	;# 
   372  010E                     	;# 
   373  010F                     	;# 
   374  0185                     	;# 
   375  0187                     	;# 
   376  0188                     	;# 
   377  0189                     	;# 
   378  018C                     	;# 
   379  018D                     	;# 
   380  0000                     	;# 
   381  0001                     	;# 
   382  0002                     	;# 
   383  0003                     	;# 
   384  0004                     	;# 
   385  0005                     	;# 
   386  0006                     	;# 
   387  0007                     	;# 
   388  0008                     	;# 
   389  0009                     	;# 
   390  000A                     	;# 
   391  000B                     	;# 
   392  000C                     	;# 
   393  000D                     	;# 
   394  000E                     	;# 
   395  000E                     	;# 
   396  000F                     	;# 
   397  0010                     	;# 
   398  0011                     	;# 
   399  0012                     	;# 
   400  0013                     	;# 
   401  0014                     	;# 
   402  0015                     	;# 
   403  0015                     	;# 
   404  0016                     	;# 
   405  0017                     	;# 
   406  0018                     	;# 
   407  0019                     	;# 
   408  001A                     	;# 
   409  001B                     	;# 
   410  001B                     	;# 
   411  001C                     	;# 
   412  001D                     	;# 
   413  001E                     	;# 
   414  001F                     	;# 
   415  0081                     	;# 
   416  0085                     	;# 
   417  0086                     	;# 
   418  0087                     	;# 
   419  0088                     	;# 
   420  0089                     	;# 
   421  008C                     	;# 
   422  008D                     	;# 
   423  008E                     	;# 
   424  008F                     	;# 
   425  0090                     	;# 
   426  0091                     	;# 
   427  0092                     	;# 
   428  0093                     	;# 
   429  0093                     	;# 
   430  0093                     	;# 
   431  0094                     	;# 
   432  0095                     	;# 
   433  0096                     	;# 
   434  0097                     	;# 
   435  0098                     	;# 
   436  0099                     	;# 
   437  009A                     	;# 
   438  009B                     	;# 
   439  009C                     	;# 
   440  009D                     	;# 
   441  009E                     	;# 
   442  009F                     	;# 
   443  0105                     	;# 
   444  0107                     	;# 
   445  0108                     	;# 
   446  0109                     	;# 
   447  010C                     	;# 
   448  010C                     	;# 
   449  010D                     	;# 
   450  010E                     	;# 
   451  010F                     	;# 
   452  0185                     	;# 
   453  0187                     	;# 
   454  0188                     	;# 
   455  0189                     	;# 
   456  018C                     	;# 
   457  018D                     	;# 
   458  0018                     _RCSTAbits	set	24
   459  0007                     _PORTCbits	set	7
   460  0009                     _PORTE	set	9
   461  0008                     _PORTD	set	8
   462  0007                     _PORTC	set	7
   463  0006                     _PORTB	set	6
   464  0005                     _PORTA	set	5
   465  0019                     _TXREG	set	25
   466  000C                     _PIR1bits	set	12
   467  001E                     _ADRESH	set	30
   468  001F                     _ADCON0bits	set	31
   469  0001                     _TMR0	set	1
   470  000B                     _INTCONbits	set	11
   471  009A                     _SPBRGH	set	154
   472  0099                     _SPBRG	set	153
   473  0098                     _TXSTAbits	set	152
   474  009F                     _ADCON1bits	set	159
   475  0081                     _OPTION_REGbits	set	129
   476  008F                     _OSCCONbits	set	143
   477  0096                     _IOCB	set	150
   478  0089                     _TRISE	set	137
   479  0088                     _TRISD	set	136
   480  0087                     _TRISC	set	135
   481  0086                     _TRISB	set	134
   482  0085                     _TRISA	set	133
   483  0189                     _ANSELH	set	393
   484  0188                     _ANSEL	set	392
   485                           
   486                           	psect	strings
   487  0364                     __pstrings:
   488  0364                     stringtab:
   489  0364                     __stringtab:
   490  0364                     stringcode:	
   491                           ;	String table - string pointers are 1 byte each
   492                           
   493  0364                     stringdir:
   494  0364  3003               	movlw	high stringdir
   495  0365  008A               	movwf	10
   496  0366  0804               	movf	4,w
   497  0367  0A84               	incf	4,f
   498  0368  0782               	addwf	2,f
   499  0369                     __stringbase:
   500  0369  3400               	retlw	0
   501  036A                     __end_of__stringtab:
   502  036A                     STR_1:
   503  036A  3453               	retlw	83	;'S'
   504  036B  3431               	retlw	49	;'1'
   505  036C  343A               	retlw	58	;':'
   506  036D  3420               	retlw	32	;' '
   507  036E  3420               	retlw	32	;' '
   508  036F  3420               	retlw	32	;' '
   509  0370  3453               	retlw	83	;'S'
   510  0371  3432               	retlw	50	;'2'
   511  0372  343A               	retlw	58	;':'
   512  0373  3420               	retlw	32	;' '
   513  0374  3420               	retlw	32	;' '
   514  0375  3420               	retlw	32	;' '
   515  0376  3453               	retlw	83	;'S'
   516  0377  3433               	retlw	51	;'3'
   517  0378  343A               	retlw	58	;':'
   518  0379  3420               	retlw	32	;' '
   519  037A  3400               	retlw	0
   520                           
   521                           	psect	cinit
   522  000F                     start_initialization:	
   523                           ; #config settings
   524                           
   525  000F                     __initialization:
   526                           
   527                           ; Clear objects allocated to COMMON
   528  000F  01FB               	clrf	__pbssCOMMON& (0+127)
   529                           
   530                           ; Clear objects allocated to BANK0
   531  0010  1283               	bcf	3,5	;RP0=0, select bank0
   532  0011  1303               	bcf	3,6	;RP1=0, select bank0
   533  0012  01AB               	clrf	__pbssBANK0& (0+127)
   534  0013  01AC               	clrf	(__pbssBANK0+1)& (0+127)
   535  0014  01AD               	clrf	(__pbssBANK0+2)& (0+127)
   536  0015                     end_of_initialization:	
   537                           ;End of C runtime variable initialization code
   538                           
   539  0015                     __end_of__initialization:
   540  0015  0183               	clrf	3
   541  0016  120A  118A  2A63   	ljmp	_main	;jump to C main() function
   542                           
   543                           	psect	bssCOMMON
   544  007B                     __pbssCOMMON:
   545  007B                     _adc_value:
   546  007B                     	ds	1
   547                           
   548                           	psect	bssBANK0
   549  002B                     __pbssBANK0:
   550  002B                     _i:
   551  002B                     	ds	2
   552  002D                     _voltaje:
   553  002D                     	ds	1
   554                           
   555                           	psect	cstackCOMMON
   556  0070                     __pcstackCOMMON:
   557  0070                     ?_setup:
   558  0070                     ?_osc_config:	
   559                           ; 1 bytes @ 0x0
   560                           
   561  0070                     ?_interrup_config:	
   562                           ; 1 bytes @ 0x0
   563                           
   564  0070                     ?_Lcd_Init:	
   565                           ; 1 bytes @ 0x0
   566                           
   567  0070                     ?_tmr0_config:	
   568                           ; 1 bytes @ 0x0
   569                           
   570  0070                     ?_adc_config:	
   571                           ; 1 bytes @ 0x0
   572                           
   573  0070                     ?_USART_config:	
   574                           ; 1 bytes @ 0x0
   575                           
   576  0070                     ?_lcd:	
   577                           ; 1 bytes @ 0x0
   578                           
   579  0070                     ?_initADC:	
   580                           ; 1 bytes @ 0x0
   581                           
   582  0070                     ?_USART_lib_config:	
   583                           ; 1 bytes @ 0x0
   584                           
   585  0070                     ?_Lcd_Write_String:	
   586                           ; 1 bytes @ 0x0
   587                           
   588  0070                     ?_Conversion:	
   589                           ; 1 bytes @ 0x0
   590                           
   591  0070                     ?_Lcd_Write_Char:	
   592                           ; 1 bytes @ 0x0
   593                           
   594  0070                     ?_ISR:	
   595                           ; 1 bytes @ 0x0
   596                           
   597  0070                     ??_ISR:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  0070                     ?_main:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  0070                     ?_Lcd_Port:	
   604                           ; 1 bytes @ 0x0
   605                           
   606  0070                     ?_Lcd_Cmd:	
   607                           ; 1 bytes @ 0x0
   608                           
   609                           
   610                           ; 1 bytes @ 0x0
   611  0070                     	ds	2
   612  0072                     ??_setup:
   613  0072                     ??_osc_config:	
   614                           ; 1 bytes @ 0x2
   615                           
   616  0072                     ??_interrup_config:	
   617                           ; 1 bytes @ 0x2
   618                           
   619  0072                     ??_tmr0_config:	
   620                           ; 1 bytes @ 0x2
   621                           
   622  0072                     ??_USART_config:	
   623                           ; 1 bytes @ 0x2
   624                           
   625  0072                     ??_initADC:	
   626                           ; 1 bytes @ 0x2
   627                           
   628  0072                     ??_USART_lib_config:	
   629                           ; 1 bytes @ 0x2
   630                           
   631  0072                     ??_Lcd_Port:	
   632                           ; 1 bytes @ 0x2
   633                           
   634  0072                     ?___awdiv:	
   635                           ; 1 bytes @ 0x2
   636                           
   637  0072                     ?___awmod:	
   638                           ; 2 bytes @ 0x2
   639                           
   640  0072                     Lcd_Port@a:	
   641                           ; 2 bytes @ 0x2
   642                           
   643  0072                     ___awdiv@divisor:	
   644                           ; 1 bytes @ 0x2
   645                           
   646  0072                     ___awmod@divisor:	
   647                           ; 2 bytes @ 0x2
   648                           
   649                           
   650                           ; 2 bytes @ 0x2
   651  0072                     	ds	1
   652  0073                     ??_Lcd_Write_Char:
   653  0073                     ??_Lcd_Cmd:	
   654                           ; 1 bytes @ 0x3
   655                           
   656                           
   657                           ; 1 bytes @ 0x3
   658  0073                     	ds	1
   659  0074                     initADC@CHS:
   660  0074                     Lcd_Write_Char@a:	
   661                           ; 1 bytes @ 0x4
   662                           
   663  0074                     ___awdiv@dividend:	
   664                           ; 1 bytes @ 0x4
   665                           
   666  0074                     ___awmod@dividend:	
   667                           ; 2 bytes @ 0x4
   668                           
   669                           
   670                           ; 2 bytes @ 0x4
   671  0074                     	ds	1
   672  0075                     ??_adc_config:
   673  0075                     ??_Lcd_Write_String:	
   674                           ; 1 bytes @ 0x5
   675                           
   676  0075                     Lcd_Cmd@a:	
   677                           ; 1 bytes @ 0x5
   678                           
   679  0075                     Lcd_Write_String@i:	
   680                           ; 1 bytes @ 0x5
   681                           
   682                           
   683                           ; 2 bytes @ 0x5
   684  0075                     	ds	1
   685  0076                     ??_Lcd_Init:
   686  0076                     ?_Lcd_Set_Cursor:	
   687                           ; 1 bytes @ 0x6
   688                           
   689  0076                     ??___awdiv:	
   690                           ; 1 bytes @ 0x6
   691                           
   692  0076                     ??___awmod:	
   693                           ; 1 bytes @ 0x6
   694                           
   695  0076                     Lcd_Set_Cursor@b:	
   696                           ; 1 bytes @ 0x6
   697                           
   698                           
   699                           ; 1 bytes @ 0x6
   700  0076                     	ds	1
   701  0077                     ??_Lcd_Set_Cursor:
   702  0077                     Lcd_Write_String@a:	
   703                           ; 1 bytes @ 0x7
   704                           
   705  0077                     ___awdiv@counter:	
   706                           ; 1 bytes @ 0x7
   707                           
   708  0077                     ___awmod@counter:	
   709                           ; 1 bytes @ 0x7
   710                           
   711                           
   712                           ; 1 bytes @ 0x7
   713  0077                     	ds	1
   714  0078                     Lcd_Set_Cursor@a:
   715  0078                     ___awdiv@sign:	
   716                           ; 1 bytes @ 0x8
   717                           
   718  0078                     ___awmod@sign:	
   719                           ; 1 bytes @ 0x8
   720                           
   721                           
   722                           ; 1 bytes @ 0x8
   723  0078                     	ds	1
   724  0079                     Lcd_Set_Cursor@temp:
   725  0079                     ___awdiv@quotient:	
   726                           ; 1 bytes @ 0x9
   727                           
   728                           
   729                           ; 2 bytes @ 0x9
   730  0079                     	ds	2
   731                           
   732                           	psect	cstackBANK0
   733  0020                     __pcstackBANK0:
   734  0020                     ??_Conversion:
   735                           
   736                           ; 1 bytes @ 0x0
   737  0020                     	ds	3
   738  0023                     Conversion@unidad:
   739                           
   740                           ; 1 bytes @ 0x3
   741  0023                     	ds	1
   742  0024                     Conversion@x2:
   743                           
   744                           ; 1 bytes @ 0x4
   745  0024                     	ds	1
   746  0025                     Conversion@y1:
   747                           
   748                           ; 1 bytes @ 0x5
   749  0025                     	ds	1
   750  0026                     Conversion@y2:
   751                           
   752                           ; 1 bytes @ 0x6
   753  0026                     	ds	1
   754  0027                     Conversion@x1:
   755                           
   756                           ; 1 bytes @ 0x7
   757  0027                     	ds	1
   758  0028                     ??_lcd:
   759                           
   760                           ; 1 bytes @ 0x8
   761  0028                     	ds	1
   762  0029                     ??_main:
   763                           
   764                           ; 1 bytes @ 0x9
   765  0029                     	ds	2
   766                           
   767                           	psect	maintext
   768  0263                     __pmaintext:	
   769 ;;
   770 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   771 ;;
   772 ;; *************** function _main *****************
   773 ;; Defined at:
   774 ;;		line 95 in file "LCD.c"
   775 ;; Parameters:    Size  Location     Type
   776 ;;		None
   777 ;; Auto vars:     Size  Location     Type
   778 ;;		None
   779 ;; Return value:  Size  Location     Type
   780 ;;                  1    wreg      void 
   781 ;; Registers used:
   782 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   783 ;; Tracked objects:
   784 ;;		On entry : B00/0
   785 ;;		On exit  : 0/0
   786 ;;		Unchanged: 0/0
   787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   788 ;;      Params:         0       0       0       0       0
   789 ;;      Locals:         0       0       0       0       0
   790 ;;      Temps:          0       2       0       0       0
   791 ;;      Totals:         0       2       0       0       0
   792 ;;Total ram usage:        2 bytes
   793 ;; Hardware stack levels required when called:    5
   794 ;; This function calls:
   795 ;;		_Lcd_Init
   796 ;;		_USART_config
   797 ;;		_adc_config
   798 ;;		_interrup_config
   799 ;;		_lcd
   800 ;;		_osc_config
   801 ;;		_setup
   802 ;;		_tmr0_config
   803 ;; This function is called by:
   804 ;;		Startup code after reset
   805 ;; This function uses a non-reentrant model
   806 ;;
   807                           
   808                           
   809                           ;psect for function _main
   810  0263                     _main:
   811  0263                     l1326:	
   812                           ;incstack = 0
   813                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   814                           
   815                           
   816                           ;LCD.c: 97:     INTCONbits.INTF = 0;
   817  0263  120A  118A  22DA  120A  118A  	fcall	_setup
   818  0268                     l1328:
   819                           
   820                           ;LCD.c: 98:     INTCONbits.RBIF = 0;
   821  0268  120A  118A  23CA  120A  118A  	fcall	_osc_config
   822  026D                     l1330:
   823                           
   824                           ;LCD.c: 99:     IOCB = 0b00000000;
   825  026D  120A  118A  23BE  120A  118A  	fcall	_interrup_config
   826                           
   827                           ;LCD.c: 100: }
   828  0272  120A  118A  220C  120A  118A  	fcall	_Lcd_Init
   829                           
   830                           ;LCD.c: 101: 
   831  0277  120A  118A  23B1  120A  118A  	fcall	_tmr0_config
   832  027C                     l1332:
   833                           
   834                           ;LCD.c: 102: void osc_config (void)
   835  027C  120A  118A  23D4  120A  118A  	fcall	_adc_config
   836  0281                     l1334:
   837                           
   838                           ;LCD.c: 103: {
   839  0281  120A  118A  23DB  120A  118A  	fcall	_USART_config
   840  0286                     l1336:
   841                           
   842                           ;LCD.c: 105:     OSCCONbits.IRCF1 = 1;;LCD.c: 106:     OSCCONbits.IRCF0 = 0;
   843  0286  120A  118A  22AE  120A  118A  	fcall	_lcd
   844  028B                     l1338:
   845                           
   846                           ;LCD.c: 107:     OSCCONbits.OSTS = 0;
   847  028B  1283               	bcf	3,5	;RP0=0, select bank0
   848  028C  1303               	bcf	3,6	;RP1=0, select bank0
   849  028D  149F               	bsf	31,1	;volatile
   850                           
   851                           ;LCD.c: 108:     OSCCONbits.HTS = 0;
   852  028E  301A               	movlw	26
   853  028F  1283               	bcf	3,5	;RP0=0, select bank0
   854  0290  1303               	bcf	3,6	;RP1=0, select bank0
   855  0291  00AA               	movwf	??_main+1
   856  0292  30F7               	movlw	247
   857  0293  00A9               	movwf	??_main
   858  0294                     u527:
   859  0294  0BA9               	decfsz	??_main,f
   860  0295  2A94               	goto	u527
   861  0296  0BAA               	decfsz	??_main+1,f
   862  0297  2A94               	goto	u527
   863  0298  2A99               	nop2
   864  0299                     l1340:
   865                           
   866                           ;LCD.c: 109:     OSCCONbits.LTS = 1;
   867  0299  1283               	bcf	3,5	;RP0=0, select bank0
   868  029A  1303               	bcf	3,6	;RP1=0, select bank0
   869  029B  189F               	btfsc	31,1	;volatile
   870  029C  2A9E               	goto	u501
   871  029D  2A9F               	goto	u500
   872  029E                     u501:
   873  029E  2A86               	goto	l1336
   874  029F                     u500:
   875  029F                     l1342:
   876                           
   877                           ;LCD.c: 110:     OSCCONbits.SCS = 0;;LCD.c: 111: }
   878  029F  149F               	bsf	31,1	;volatile
   879  02A0                     l1344:
   880                           
   881                           ;LCD.c: 112: 
   882  02A0  081E               	movf	30,w	;volatile
   883  02A1  00A9               	movwf	??_main
   884  02A2  0829               	movf	??_main,w
   885  02A3  00FB               	movwf	_adc_value
   886  02A4                     l1346:
   887                           
   888                           ;LCD.c: 113: void tmr0_config (void)
   889  02A4  1E0C               	btfss	12,4	;volatile
   890  02A5  2AA7               	goto	u511
   891  02A6  2AA8               	goto	u510
   892  02A7                     u511:
   893  02A7  2A86               	goto	l1336
   894  02A8                     u510:
   895  02A8                     l1348:
   896                           
   897                           ;LCD.c: 114: {;LCD.c: 115:     OPTION_REGbits.nRBPU = 1;
   898  02A8  081E               	movf	30,w	;volatile
   899  02A9  0099               	movwf	25	;volatile
   900  02AA  2A86               	goto	l1336
   901  02AB  120A  118A  280C   	ljmp	start
   902  02AE                     __end_of_main:
   903                           
   904                           	psect	text1
   905  03B1                     __ptext1:	
   906 ;; *************** function _tmr0_config *****************
   907 ;; Defined at:
   908 ;;		line 165 in file "LCD.c"
   909 ;; Parameters:    Size  Location     Type
   910 ;;		None
   911 ;; Auto vars:     Size  Location     Type
   912 ;;		None
   913 ;; Return value:  Size  Location     Type
   914 ;;                  1    wreg      void 
   915 ;; Registers used:
   916 ;;		wreg
   917 ;; Tracked objects:
   918 ;;		On entry : 0/0
   919 ;;		On exit  : 0/0
   920 ;;		Unchanged: 0/0
   921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   922 ;;      Params:         0       0       0       0       0
   923 ;;      Locals:         0       0       0       0       0
   924 ;;      Temps:          0       0       0       0       0
   925 ;;      Totals:         0       0       0       0       0
   926 ;;Total ram usage:        0 bytes
   927 ;; Hardware stack levels used:    1
   928 ;; Hardware stack levels required when called:    1
   929 ;; This function calls:
   930 ;;		Nothing
   931 ;; This function is called by:
   932 ;;		_main
   933 ;; This function uses a non-reentrant model
   934 ;;
   935                           
   936                           
   937                           ;psect for function _tmr0_config
   938  03B1                     _tmr0_config:
   939  03B1                     l1008:	
   940                           ;incstack = 0
   941                           ; Regs used in _tmr0_config: [wreg]
   942                           
   943  03B1  1683               	bsf	3,5	;RP0=1, select bank1
   944  03B2  1303               	bcf	3,6	;RP1=0, select bank1
   945  03B3  1781               	bsf	1,7	;volatile
   946  03B4  1281               	bcf	1,5	;volatile
   947  03B5  1181               	bcf	1,3	;volatile
   948  03B6  1101               	bcf	1,2	;volatile
   949  03B7  1481               	bsf	1,1	;volatile
   950  03B8  1001               	bcf	1,0	;volatile
   951  03B9                     l1010:
   952  03B9  30E7               	movlw	231
   953  03BA  1283               	bcf	3,5	;RP0=0, select bank0
   954  03BB  1303               	bcf	3,6	;RP1=0, select bank0
   955  03BC  0081               	movwf	1	;volatile
   956  03BD                     l106:
   957  03BD  0008               	return
   958  03BE                     __end_of_tmr0_config:
   959                           
   960                           	psect	text2
   961  02DA                     __ptext2:	
   962 ;; *************** function _setup *****************
   963 ;; Defined at:
   964 ;;		line 125 in file "LCD.c"
   965 ;; Parameters:    Size  Location     Type
   966 ;;		None
   967 ;; Auto vars:     Size  Location     Type
   968 ;;		None
   969 ;; Return value:  Size  Location     Type
   970 ;;                  1    wreg      void 
   971 ;; Registers used:
   972 ;;		wreg, status,2
   973 ;; Tracked objects:
   974 ;;		On entry : 0/0
   975 ;;		On exit  : 0/0
   976 ;;		Unchanged: 0/0
   977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   978 ;;      Params:         0       0       0       0       0
   979 ;;      Locals:         0       0       0       0       0
   980 ;;      Temps:          0       0       0       0       0
   981 ;;      Totals:         0       0       0       0       0
   982 ;;Total ram usage:        0 bytes
   983 ;; Hardware stack levels used:    1
   984 ;; Hardware stack levels required when called:    1
   985 ;; This function calls:
   986 ;;		Nothing
   987 ;; This function is called by:
   988 ;;		_main
   989 ;; This function uses a non-reentrant model
   990 ;;
   991                           
   992                           
   993                           ;psect for function _setup
   994  02DA                     _setup:
   995  02DA                     l958:	
   996                           ;incstack = 0
   997                           ; Regs used in _setup: [wreg+status,2]
   998                           
   999                           
  1000                           ;LCD.c: 127: 
  1001  02DA  3001               	movlw	1
  1002  02DB  1683               	bsf	3,5	;RP0=1, select bank3
  1003  02DC  1703               	bsf	3,6	;RP1=1, select bank3
  1004  02DD  0088               	movwf	8	;volatile
  1005                           
  1006                           ;LCD.c: 128: void adc_config (void)
  1007  02DE  3001               	movlw	1
  1008  02DF  1683               	bsf	3,5	;RP0=1, select bank1
  1009  02E0  1303               	bcf	3,6	;RP1=0, select bank1
  1010  02E1  0085               	movwf	5	;volatile
  1011  02E2                     l960:
  1012                           
  1013                           ;LCD.c: 129: {
  1014  02E2  1283               	bcf	3,5	;RP0=0, select bank0
  1015  02E3  1303               	bcf	3,6	;RP1=0, select bank0
  1016  02E4  0185               	clrf	5	;volatile
  1017  02E5                     l962:
  1018                           
  1019                           ;LCD.c: 130:     initADC (0);
  1020  02E5  1683               	bsf	3,5	;RP0=1, select bank3
  1021  02E6  1703               	bsf	3,6	;RP1=1, select bank3
  1022  02E7  0189               	clrf	9	;volatile
  1023  02E8                     l964:
  1024                           
  1025                           ;LCD.c: 131: }
  1026  02E8  1683               	bsf	3,5	;RP0=1, select bank1
  1027  02E9  1303               	bcf	3,6	;RP1=0, select bank1
  1028  02EA  0186               	clrf	6	;volatile
  1029  02EB                     l966:
  1030                           
  1031                           ;LCD.c: 132: 
  1032  02EB  1283               	bcf	3,5	;RP0=0, select bank0
  1033  02EC  1303               	bcf	3,6	;RP1=0, select bank0
  1034  02ED  0186               	clrf	6	;volatile
  1035  02EE                     l968:
  1036                           
  1037                           ;LCD.c: 133: void USART_config(void)
  1038  02EE  1683               	bsf	3,5	;RP0=1, select bank1
  1039  02EF  1303               	bcf	3,6	;RP1=0, select bank1
  1040  02F0  0187               	clrf	7	;volatile
  1041  02F1                     l970:
  1042                           
  1043                           ;LCD.c: 134: {
  1044  02F1  1283               	bcf	3,5	;RP0=0, select bank0
  1045  02F2  1303               	bcf	3,6	;RP1=0, select bank0
  1046  02F3  0187               	clrf	7	;volatile
  1047  02F4                     l972:
  1048                           
  1049                           ;LCD.c: 135:     USART_lib_config();
  1050  02F4  1683               	bsf	3,5	;RP0=1, select bank1
  1051  02F5  1303               	bcf	3,6	;RP1=0, select bank1
  1052  02F6  0188               	clrf	8	;volatile
  1053  02F7                     l974:
  1054                           
  1055                           ;LCD.c: 136: }
  1056  02F7  1283               	bcf	3,5	;RP0=0, select bank0
  1057  02F8  1303               	bcf	3,6	;RP1=0, select bank0
  1058  02F9  0188               	clrf	8	;volatile
  1059  02FA                     l976:
  1060  02FA  1683               	bsf	3,5	;RP0=1, select bank1
  1061  02FB  1303               	bcf	3,6	;RP1=0, select bank1
  1062  02FC  0189               	clrf	9	;volatile
  1063  02FD                     l978:
  1064  02FD  1283               	bcf	3,5	;RP0=0, select bank0
  1065  02FE  1303               	bcf	3,6	;RP1=0, select bank0
  1066  02FF  0189               	clrf	9	;volatile
  1067  0300                     l97:
  1068  0300  0008               	return
  1069  0301                     __end_of_setup:
  1070                           
  1071                           	psect	text3
  1072  03CA                     __ptext3:	
  1073 ;; *************** function _osc_config *****************
  1074 ;; Defined at:
  1075 ;;		line 154 in file "LCD.c"
  1076 ;; Parameters:    Size  Location     Type
  1077 ;;		None
  1078 ;; Auto vars:     Size  Location     Type
  1079 ;;		None
  1080 ;; Return value:  Size  Location     Type
  1081 ;;                  1    wreg      void 
  1082 ;; Registers used:
  1083 ;;		None
  1084 ;; Tracked objects:
  1085 ;;		On entry : 0/0
  1086 ;;		On exit  : 0/0
  1087 ;;		Unchanged: 0/0
  1088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1089 ;;      Params:         0       0       0       0       0
  1090 ;;      Locals:         0       0       0       0       0
  1091 ;;      Temps:          0       0       0       0       0
  1092 ;;      Totals:         0       0       0       0       0
  1093 ;;Total ram usage:        0 bytes
  1094 ;; Hardware stack levels used:    1
  1095 ;; Hardware stack levels required when called:    1
  1096 ;; This function calls:
  1097 ;;		Nothing
  1098 ;; This function is called by:
  1099 ;;		_main
  1100 ;; This function uses a non-reentrant model
  1101 ;;
  1102                           
  1103                           
  1104                           ;psect for function _osc_config
  1105  03CA                     _osc_config:
  1106  03CA                     l980:	
  1107                           ;incstack = 0
  1108                           ; Regs used in _osc_config: []
  1109                           
  1110  03CA  1683               	bsf	3,5	;RP0=1, select bank1
  1111  03CB  1303               	bcf	3,6	;RP1=0, select bank1
  1112  03CC  170F               	bsf	15,6	;volatile
  1113  03CD  168F               	bsf	15,5	;volatile
  1114  03CE  120F               	bcf	15,4	;volatile
  1115  03CF  118F               	bcf	15,3	;volatile
  1116  03D0  110F               	bcf	15,2	;volatile
  1117  03D1  148F               	bsf	15,1	;volatile
  1118  03D2  100F               	bcf	15,0	;volatile
  1119  03D3                     l103:
  1120  03D3  0008               	return
  1121  03D4                     __end_of_osc_config:
  1122                           
  1123                           	psect	text4
  1124  02AE                     __ptext4:	
  1125 ;; *************** function _lcd *****************
  1126 ;; Defined at:
  1127 ;;		line 197 in file "LCD.c"
  1128 ;; Parameters:    Size  Location     Type
  1129 ;;		None
  1130 ;; Auto vars:     Size  Location     Type
  1131 ;;  a               2    0        unsigned int 
  1132 ;; Return value:  Size  Location     Type
  1133 ;;                  1    wreg      void 
  1134 ;; Registers used:
  1135 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1136 ;; Tracked objects:
  1137 ;;		On entry : 0/0
  1138 ;;		On exit  : 0/0
  1139 ;;		Unchanged: 0/0
  1140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1141 ;;      Params:         0       0       0       0       0
  1142 ;;      Locals:         0       0       0       0       0
  1143 ;;      Temps:          0       1       0       0       0
  1144 ;;      Totals:         0       1       0       0       0
  1145 ;;Total ram usage:        1 bytes
  1146 ;; Hardware stack levels used:    1
  1147 ;; Hardware stack levels required when called:    4
  1148 ;; This function calls:
  1149 ;;		_Conversion
  1150 ;;		_Lcd_Set_Cursor
  1151 ;;		_Lcd_Write_String
  1152 ;; This function is called by:
  1153 ;;		_main
  1154 ;; This function uses a non-reentrant model
  1155 ;;
  1156                           
  1157                           
  1158                           ;psect for function _lcd
  1159  02AE                     _lcd:
  1160  02AE                     l1314:	
  1161                           ;incstack = 0
  1162                           ; Regs used in _lcd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1163                           
  1164                           
  1165                           ;LCD.c: 199:     unsigned int a;;LCD.c: 200:     Lcd_Set_Cursor(1,1);
  1166  02AE  01F6               	clrf	Lcd_Set_Cursor@b
  1167  02AF  0AF6               	incf	Lcd_Set_Cursor@b,f
  1168  02B0  3001               	movlw	1
  1169  02B1  120A  118A  2326  120A  118A  	fcall	_Lcd_Set_Cursor
  1170  02B6                     l1316:
  1171                           
  1172                           ;LCD.c: 201:     Lcd_Write_String("S1:   S2:   S3: ");
  1173  02B6  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1174  02B7  120A  118A  2301  120A  118A  	fcall	_Lcd_Write_String
  1175  02BC                     l1318:
  1176                           
  1177                           ;LCD.c: 202:     Lcd_Set_Cursor(2,0);
  1178  02BC  01F6               	clrf	Lcd_Set_Cursor@b
  1179  02BD  3002               	movlw	2
  1180  02BE  120A  118A  2326  120A  118A  	fcall	_Lcd_Set_Cursor
  1181  02C3                     l1320:
  1182                           
  1183                           ;LCD.c: 203:     Conversion ();
  1184  02C3  120A  118A  20C2  120A  118A  	fcall	_Conversion
  1185  02C8                     l1322:
  1186                           
  1187                           ;LCD.c: 204:     Lcd_Set_Cursor(2,6);
  1188  02C8  3006               	movlw	6
  1189  02C9  1283               	bcf	3,5	;RP0=0, select bank0
  1190  02CA  1303               	bcf	3,6	;RP1=0, select bank0
  1191  02CB  00A8               	movwf	??_lcd
  1192  02CC  0828               	movf	??_lcd,w
  1193  02CD  00F6               	movwf	Lcd_Set_Cursor@b
  1194  02CE  3002               	movlw	2
  1195  02CF  120A  118A  2326  120A  118A  	fcall	_Lcd_Set_Cursor
  1196  02D4                     l1324:
  1197                           
  1198                           ;LCD.c: 205:     Conversion ();
  1199  02D4  120A  118A  20C2  120A  118A  	fcall	_Conversion
  1200  02D9                     l115:
  1201  02D9  0008               	return
  1202  02DA                     __end_of_lcd:
  1203                           
  1204                           	psect	text5
  1205  0301                     __ptext5:	
  1206 ;; *************** function _Lcd_Write_String *****************
  1207 ;; Defined at:
  1208 ;;		line 69 in file "LCD_8bits.c"
  1209 ;; Parameters:    Size  Location     Type
  1210 ;;  a               1    wreg     PTR unsigned char 
  1211 ;;		 -> STR_1(17), 
  1212 ;; Auto vars:     Size  Location     Type
  1213 ;;  a               1    7[COMMON] PTR unsigned char 
  1214 ;;		 -> STR_1(17), 
  1215 ;;  i               2    5[COMMON] int 
  1216 ;; Return value:  Size  Location     Type
  1217 ;;                  1    wreg      void 
  1218 ;; Registers used:
  1219 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1220 ;; Tracked objects:
  1221 ;;		On entry : 0/0
  1222 ;;		On exit  : 0/0
  1223 ;;		Unchanged: 0/0
  1224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1225 ;;      Params:         0       0       0       0       0
  1226 ;;      Locals:         3       0       0       0       0
  1227 ;;      Temps:          0       0       0       0       0
  1228 ;;      Totals:         3       0       0       0       0
  1229 ;;Total ram usage:        3 bytes
  1230 ;; Hardware stack levels used:    1
  1231 ;; Hardware stack levels required when called:    3
  1232 ;; This function calls:
  1233 ;;		_Lcd_Write_Char
  1234 ;; This function is called by:
  1235 ;;		_lcd
  1236 ;; This function uses a non-reentrant model
  1237 ;;
  1238                           
  1239                           
  1240                           ;psect for function _Lcd_Write_String
  1241  0301                     _Lcd_Write_String:
  1242                           
  1243                           ;incstack = 0
  1244                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1245                           ;Lcd_Write_String@a stored from wreg
  1246  0301  00F7               	movwf	Lcd_Write_String@a
  1247  0302                     l1200:
  1248                           
  1249                           ;LCD_8bits.c: 69: void Lcd_Write_String(char *a);LCD_8bits.c: 70: {;LCD_8bits.c: 71:    
      +                           int i;;LCD_8bits.c: 72:     for (i = 0; a[i] != '\0'; i++)
  1250  0302  01F5               	clrf	Lcd_Write_String@i
  1251  0303  01F6               	clrf	Lcd_Write_String@i+1
  1252  0304  2B18               	goto	l1206
  1253  0305                     l1202:
  1254                           
  1255                           ;LCD_8bits.c: 73:         Lcd_Write_Char(a[i]);
  1256  0305  0875               	movf	Lcd_Write_String@i,w
  1257  0306  0777               	addwf	Lcd_Write_String@a,w
  1258  0307  0084               	movwf	4
  1259  0308  120A  118A  2364  120A  118A  	fcall	stringdir
  1260  030D  120A  118A  237B  120A  118A  	fcall	_Lcd_Write_Char
  1261  0312                     l1204:
  1262  0312  3001               	movlw	1
  1263  0313  07F5               	addwf	Lcd_Write_String@i,f
  1264  0314  1803               	skipnc
  1265  0315  0AF6               	incf	Lcd_Write_String@i+1,f
  1266  0316  3000               	movlw	0
  1267  0317  07F6               	addwf	Lcd_Write_String@i+1,f
  1268  0318                     l1206:
  1269  0318  0875               	movf	Lcd_Write_String@i,w
  1270  0319  0777               	addwf	Lcd_Write_String@a,w
  1271  031A  0084               	movwf	4
  1272  031B  120A  118A  2364  120A  118A  	fcall	stringdir
  1273  0320  3A00               	xorlw	0
  1274  0321  1D03               	skipz
  1275  0322  2B24               	goto	u471
  1276  0323  2B25               	goto	u470
  1277  0324                     u471:
  1278  0324  2B05               	goto	l1202
  1279  0325                     u470:
  1280  0325                     l174:
  1281  0325  0008               	return
  1282  0326                     __end_of_Lcd_Write_String:
  1283                           
  1284                           	psect	text6
  1285  0326                     __ptext6:	
  1286 ;; *************** function _Lcd_Set_Cursor *****************
  1287 ;; Defined at:
  1288 ;;		line 54 in file "LCD_8bits.c"
  1289 ;; Parameters:    Size  Location     Type
  1290 ;;  a               1    wreg     unsigned char 
  1291 ;;  b               1    6[COMMON] unsigned char 
  1292 ;; Auto vars:     Size  Location     Type
  1293 ;;  a               1    8[COMMON] unsigned char 
  1294 ;;  temp            1    9[COMMON] unsigned char 
  1295 ;; Return value:  Size  Location     Type
  1296 ;;                  1    wreg      void 
  1297 ;; Registers used:
  1298 ;;		wreg, status,2, status,0, pclath, cstack
  1299 ;; Tracked objects:
  1300 ;;		On entry : 0/0
  1301 ;;		On exit  : 0/0
  1302 ;;		Unchanged: 0/0
  1303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1304 ;;      Params:         1       0       0       0       0
  1305 ;;      Locals:         2       0       0       0       0
  1306 ;;      Temps:          1       0       0       0       0
  1307 ;;      Totals:         4       0       0       0       0
  1308 ;;Total ram usage:        4 bytes
  1309 ;; Hardware stack levels used:    1
  1310 ;; Hardware stack levels required when called:    3
  1311 ;; This function calls:
  1312 ;;		_Lcd_Cmd
  1313 ;; This function is called by:
  1314 ;;		_lcd
  1315 ;; This function uses a non-reentrant model
  1316 ;;
  1317                           
  1318                           
  1319                           ;psect for function _Lcd_Set_Cursor
  1320  0326                     _Lcd_Set_Cursor:
  1321                           
  1322                           ;incstack = 0
  1323                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1324                           ;Lcd_Set_Cursor@a stored from wreg
  1325  0326  00F8               	movwf	Lcd_Set_Cursor@a
  1326  0327                     l1188:
  1327                           
  1328                           ;LCD_8bits.c: 54: void Lcd_Set_Cursor(char a, char b);LCD_8bits.c: 55: {;LCD_8bits.c: 56
      +                          :     char temp;;LCD_8bits.c: 57:     if (a == 1)
  1329  0327  0378               	decf	Lcd_Set_Cursor@a,w
  1330  0328  1D03               	btfss	3,2
  1331  0329  2B2B               	goto	u451
  1332  032A  2B2C               	goto	u450
  1333  032B                     u451:
  1334  032B  2B38               	goto	l1194
  1335  032C                     u450:
  1336  032C                     l1190:
  1337                           
  1338                           ;LCD_8bits.c: 58:     {;LCD_8bits.c: 59:         temp = 0x80 + b;
  1339  032C  0876               	movf	Lcd_Set_Cursor@b,w
  1340  032D  3E80               	addlw	128
  1341  032E  00F7               	movwf	??_Lcd_Set_Cursor
  1342  032F  0877               	movf	??_Lcd_Set_Cursor,w
  1343  0330  00F9               	movwf	Lcd_Set_Cursor@temp
  1344  0331                     l1192:
  1345                           
  1346                           ;LCD_8bits.c: 60:         Lcd_Cmd(temp);
  1347  0331  0879               	movf	Lcd_Set_Cursor@temp,w
  1348  0332  120A  118A  234A  120A  118A  	fcall	_Lcd_Cmd
  1349                           
  1350                           ;LCD_8bits.c: 61:     }
  1351  0337  2B49               	goto	l168
  1352  0338                     l1194:
  1353  0338  3002               	movlw	2
  1354  0339  0678               	xorwf	Lcd_Set_Cursor@a,w
  1355  033A  1D03               	btfss	3,2
  1356  033B  2B3D               	goto	u461
  1357  033C  2B3E               	goto	u460
  1358  033D                     u461:
  1359  033D  2B49               	goto	l168
  1360  033E                     u460:
  1361  033E                     l1196:
  1362                           
  1363                           ;LCD_8bits.c: 63:     {;LCD_8bits.c: 64:         temp = 0xC0 + b;
  1364  033E  0876               	movf	Lcd_Set_Cursor@b,w
  1365  033F  3EC0               	addlw	192
  1366  0340  00F7               	movwf	??_Lcd_Set_Cursor
  1367  0341  0877               	movf	??_Lcd_Set_Cursor,w
  1368  0342  00F9               	movwf	Lcd_Set_Cursor@temp
  1369  0343                     l1198:
  1370                           
  1371                           ;LCD_8bits.c: 65:         Lcd_Cmd(temp);
  1372  0343  0879               	movf	Lcd_Set_Cursor@temp,w
  1373  0344  120A  118A  234A  120A  118A  	fcall	_Lcd_Cmd
  1374  0349                     l168:
  1375  0349  0008               	return
  1376  034A                     __end_of_Lcd_Set_Cursor:
  1377                           
  1378                           	psect	text7
  1379  00C2                     __ptext7:	
  1380 ;; *************** function _Conversion *****************
  1381 ;; Defined at:
  1382 ;;		line 210 in file "LCD.c"
  1383 ;; Parameters:    Size  Location     Type
  1384 ;;		None
  1385 ;; Auto vars:     Size  Location     Type
  1386 ;;  x1              1    7[BANK0 ] unsigned char 
  1387 ;;  y2              1    6[BANK0 ] unsigned char 
  1388 ;;  y1              1    5[BANK0 ] unsigned char 
  1389 ;;  x2              1    4[BANK0 ] unsigned char 
  1390 ;;  unidad          1    3[BANK0 ] unsigned char 
  1391 ;; Return value:  Size  Location     Type
  1392 ;;                  1    wreg      void 
  1393 ;; Registers used:
  1394 ;;		wreg, status,2, status,0, pclath, cstack
  1395 ;; Tracked objects:
  1396 ;;		On entry : 0/0
  1397 ;;		On exit  : 0/0
  1398 ;;		Unchanged: 0/0
  1399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1400 ;;      Params:         0       0       0       0       0
  1401 ;;      Locals:         0       5       0       0       0
  1402 ;;      Temps:          0       3       0       0       0
  1403 ;;      Totals:         0       8       0       0       0
  1404 ;;Total ram usage:        8 bytes
  1405 ;; Hardware stack levels used:    1
  1406 ;; Hardware stack levels required when called:    3
  1407 ;; This function calls:
  1408 ;;		_Lcd_Write_Char
  1409 ;;		___awdiv
  1410 ;;		___awmod
  1411 ;; This function is called by:
  1412 ;;		_lcd
  1413 ;; This function uses a non-reentrant model
  1414 ;;
  1415                           
  1416                           
  1417                           ;psect for function _Conversion
  1418  00C2                     _Conversion:
  1419  00C2                     l1208:	
  1420                           ;incstack = 0
  1421                           ; Regs used in _Conversion: [wreg+status,2+status,0+pclath+cstack]
  1422                           
  1423                           
  1424                           ;LCD.c: 212:     voltaje = ADRESH * 2;
  1425  00C2  1283               	bcf	3,5	;RP0=0, select bank0
  1426  00C3  1303               	bcf	3,6	;RP1=0, select bank0
  1427  00C4  081E               	movf	30,w	;volatile
  1428  00C5  00A0               	movwf	??_Conversion
  1429  00C6  0720               	addwf	??_Conversion,w
  1430  00C7  00A1               	movwf	??_Conversion+1
  1431  00C8  0821               	movf	??_Conversion+1,w
  1432  00C9  00AD               	movwf	_voltaje
  1433  00CA                     l1210:
  1434                           
  1435                           ;LCD.c: 213:     char unidad = voltaje / 100;
  1436  00CA  3064               	movlw	100
  1437  00CB  00F2               	movwf	___awdiv@divisor
  1438  00CC  3000               	movlw	0
  1439  00CD  00F3               	movwf	___awdiv@divisor+1
  1440  00CE  082D               	movf	_voltaje,w
  1441  00CF  00A0               	movwf	??_Conversion
  1442  00D0  01A1               	clrf	??_Conversion+1
  1443  00D1  0820               	movf	??_Conversion,w
  1444  00D2  00F4               	movwf	___awdiv@dividend
  1445  00D3  0821               	movf	??_Conversion+1,w
  1446  00D4  00F5               	movwf	___awdiv@dividend+1
  1447  00D5  120A  118A  214C  120A  118A  	fcall	___awdiv
  1448  00DA  0872               	movf	?___awdiv,w
  1449  00DB  1283               	bcf	3,5	;RP0=0, select bank0
  1450  00DC  1303               	bcf	3,6	;RP1=0, select bank0
  1451  00DD  00A2               	movwf	??_Conversion+2
  1452  00DE  0822               	movf	??_Conversion+2,w
  1453  00DF  00A3               	movwf	Conversion@unidad
  1454  00E0                     l1212:
  1455                           
  1456                           ;LCD.c: 215:     char x1 = voltaje % 100;
  1457  00E0  3064               	movlw	100
  1458  00E1  00F2               	movwf	___awmod@divisor
  1459  00E2  3000               	movlw	0
  1460  00E3  00F3               	movwf	___awmod@divisor+1
  1461  00E4  082D               	movf	_voltaje,w
  1462  00E5  00A0               	movwf	??_Conversion
  1463  00E6  01A1               	clrf	??_Conversion+1
  1464  00E7  0820               	movf	??_Conversion,w
  1465  00E8  00F4               	movwf	___awmod@dividend
  1466  00E9  0821               	movf	??_Conversion+1,w
  1467  00EA  00F5               	movwf	___awmod@dividend+1
  1468  00EB  120A  118A  21B3  120A  118A  	fcall	___awmod
  1469  00F0  0872               	movf	?___awmod,w
  1470  00F1  1283               	bcf	3,5	;RP0=0, select bank0
  1471  00F2  1303               	bcf	3,6	;RP1=0, select bank0
  1472  00F3  00A2               	movwf	??_Conversion+2
  1473  00F4  0822               	movf	??_Conversion+2,w
  1474  00F5  00A7               	movwf	Conversion@x1
  1475  00F6                     l1214:
  1476                           
  1477                           ;LCD.c: 216:     char x2 = x1 / 10;
  1478  00F6  300A               	movlw	10
  1479  00F7  00F2               	movwf	___awdiv@divisor
  1480  00F8  3000               	movlw	0
  1481  00F9  00F3               	movwf	___awdiv@divisor+1
  1482  00FA  0827               	movf	Conversion@x1,w
  1483  00FB  00A0               	movwf	??_Conversion
  1484  00FC  01A1               	clrf	??_Conversion+1
  1485  00FD  0820               	movf	??_Conversion,w
  1486  00FE  00F4               	movwf	___awdiv@dividend
  1487  00FF  0821               	movf	??_Conversion+1,w
  1488  0100  00F5               	movwf	___awdiv@dividend+1
  1489  0101  120A  118A  214C  120A  118A  	fcall	___awdiv
  1490  0106  0872               	movf	?___awdiv,w
  1491  0107  1283               	bcf	3,5	;RP0=0, select bank0
  1492  0108  1303               	bcf	3,6	;RP1=0, select bank0
  1493  0109  00A2               	movwf	??_Conversion+2
  1494  010A  0822               	movf	??_Conversion+2,w
  1495  010B  00A4               	movwf	Conversion@x2
  1496  010C                     l1216:
  1497                           
  1498                           ;LCD.c: 218:     char y1 = x1 % 10;
  1499  010C  300A               	movlw	10
  1500  010D  00F2               	movwf	___awmod@divisor
  1501  010E  3000               	movlw	0
  1502  010F  00F3               	movwf	___awmod@divisor+1
  1503  0110  0827               	movf	Conversion@x1,w
  1504  0111  00A0               	movwf	??_Conversion
  1505  0112  01A1               	clrf	??_Conversion+1
  1506  0113  0820               	movf	??_Conversion,w
  1507  0114  00F4               	movwf	___awmod@dividend
  1508  0115  0821               	movf	??_Conversion+1,w
  1509  0116  00F5               	movwf	___awmod@dividend+1
  1510  0117  120A  118A  21B3  120A  118A  	fcall	___awmod
  1511  011C  0872               	movf	?___awmod,w
  1512  011D  1283               	bcf	3,5	;RP0=0, select bank0
  1513  011E  1303               	bcf	3,6	;RP1=0, select bank0
  1514  011F  00A2               	movwf	??_Conversion+2
  1515  0120  0822               	movf	??_Conversion+2,w
  1516  0121  00A5               	movwf	Conversion@y1
  1517  0122                     l1218:
  1518                           
  1519                           ;LCD.c: 219:     char y2 = y1 / 1;
  1520  0122  0825               	movf	Conversion@y1,w
  1521  0123  00A0               	movwf	??_Conversion
  1522  0124  0820               	movf	??_Conversion,w
  1523  0125  00A6               	movwf	Conversion@y2
  1524  0126                     l1220:
  1525                           
  1526                           ;LCD.c: 221:     Lcd_Write_Char(unidad+48);
  1527  0126  0823               	movf	Conversion@unidad,w
  1528  0127  3E30               	addlw	48
  1529  0128  120A  118A  237B  120A  118A  	fcall	_Lcd_Write_Char
  1530  012D                     l1222:
  1531                           
  1532                           ;LCD.c: 222:     Lcd_Write_Char(46);
  1533  012D  302E               	movlw	46
  1534  012E  120A  118A  237B  120A  118A  	fcall	_Lcd_Write_Char
  1535  0133                     l1224:
  1536                           
  1537                           ;LCD.c: 223:     Lcd_Write_Char(x2+48);
  1538  0133  1283               	bcf	3,5	;RP0=0, select bank0
  1539  0134  1303               	bcf	3,6	;RP1=0, select bank0
  1540  0135  0824               	movf	Conversion@x2,w
  1541  0136  3E30               	addlw	48
  1542  0137  120A  118A  237B  120A  118A  	fcall	_Lcd_Write_Char
  1543  013C                     l1226:
  1544                           
  1545                           ;LCD.c: 224:     Lcd_Write_Char(y2+48);
  1546  013C  1283               	bcf	3,5	;RP0=0, select bank0
  1547  013D  1303               	bcf	3,6	;RP1=0, select bank0
  1548  013E  0826               	movf	Conversion@y2,w
  1549  013F  3E30               	addlw	48
  1550  0140  120A  118A  237B  120A  118A  	fcall	_Lcd_Write_Char
  1551  0145                     l1228:
  1552                           
  1553                           ;LCD.c: 225:     Lcd_Write_Char(86);
  1554  0145  3056               	movlw	86
  1555  0146  120A  118A  237B  120A  118A  	fcall	_Lcd_Write_Char
  1556  014B                     l118:
  1557  014B  0008               	return
  1558  014C                     __end_of_Conversion:
  1559                           
  1560                           	psect	text8
  1561  01B3                     __ptext8:	
  1562 ;; *************** function ___awmod *****************
  1563 ;; Defined at:
  1564 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  1565 ;; Parameters:    Size  Location     Type
  1566 ;;  divisor         2    2[COMMON] int 
  1567 ;;  dividend        2    4[COMMON] int 
  1568 ;; Auto vars:     Size  Location     Type
  1569 ;;  sign            1    8[COMMON] unsigned char 
  1570 ;;  counter         1    7[COMMON] unsigned char 
  1571 ;; Return value:  Size  Location     Type
  1572 ;;                  2    2[COMMON] int 
  1573 ;; Registers used:
  1574 ;;		wreg, status,2, status,0
  1575 ;; Tracked objects:
  1576 ;;		On entry : 0/0
  1577 ;;		On exit  : 0/0
  1578 ;;		Unchanged: 0/0
  1579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1580 ;;      Params:         4       0       0       0       0
  1581 ;;      Locals:         2       0       0       0       0
  1582 ;;      Temps:          1       0       0       0       0
  1583 ;;      Totals:         7       0       0       0       0
  1584 ;;Total ram usage:        7 bytes
  1585 ;; Hardware stack levels used:    1
  1586 ;; Hardware stack levels required when called:    1
  1587 ;; This function calls:
  1588 ;;		Nothing
  1589 ;; This function is called by:
  1590 ;;		_Conversion
  1591 ;; This function uses a non-reentrant model
  1592 ;;
  1593                           
  1594                           
  1595                           ;psect for function ___awmod
  1596  01B3                     ___awmod:
  1597  01B3                     l1150:	
  1598                           ;incstack = 0
  1599                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1600                           
  1601  01B3  01F8               	clrf	___awmod@sign
  1602  01B4                     l1152:
  1603  01B4  1FF5               	btfss	___awmod@dividend+1,7
  1604  01B5  29B7               	goto	u361
  1605  01B6  29B8               	goto	u360
  1606  01B7                     u361:
  1607  01B7  29BF               	goto	l1158
  1608  01B8                     u360:
  1609  01B8                     l1154:
  1610  01B8  09F4               	comf	___awmod@dividend,f
  1611  01B9  09F5               	comf	___awmod@dividend+1,f
  1612  01BA  0AF4               	incf	___awmod@dividend,f
  1613  01BB  1903               	skipnz
  1614  01BC  0AF5               	incf	___awmod@dividend+1,f
  1615  01BD                     l1156:
  1616  01BD  01F8               	clrf	___awmod@sign
  1617  01BE  0AF8               	incf	___awmod@sign,f
  1618  01BF                     l1158:
  1619  01BF  1FF3               	btfss	___awmod@divisor+1,7
  1620  01C0  29C2               	goto	u371
  1621  01C1  29C3               	goto	u370
  1622  01C2                     u371:
  1623  01C2  29C8               	goto	l1162
  1624  01C3                     u370:
  1625  01C3                     l1160:
  1626  01C3  09F2               	comf	___awmod@divisor,f
  1627  01C4  09F3               	comf	___awmod@divisor+1,f
  1628  01C5  0AF2               	incf	___awmod@divisor,f
  1629  01C6  1903               	skipnz
  1630  01C7  0AF3               	incf	___awmod@divisor+1,f
  1631  01C8                     l1162:
  1632  01C8  0872               	movf	___awmod@divisor,w
  1633  01C9  0473               	iorwf	___awmod@divisor+1,w
  1634  01CA  1903               	btfsc	3,2
  1635  01CB  29CD               	goto	u381
  1636  01CC  29CE               	goto	u380
  1637  01CD                     u381:
  1638  01CD  29FD               	goto	l1180
  1639  01CE                     u380:
  1640  01CE                     l1164:
  1641  01CE  01F7               	clrf	___awmod@counter
  1642  01CF  0AF7               	incf	___awmod@counter,f
  1643  01D0  29DC               	goto	l1170
  1644  01D1                     l1166:
  1645  01D1  3001               	movlw	1
  1646  01D2                     u395:
  1647  01D2  1003               	clrc
  1648  01D3  0DF2               	rlf	___awmod@divisor,f
  1649  01D4  0DF3               	rlf	___awmod@divisor+1,f
  1650  01D5  3EFF               	addlw	-1
  1651  01D6  1D03               	skipz
  1652  01D7  29D2               	goto	u395
  1653  01D8                     l1168:
  1654  01D8  3001               	movlw	1
  1655  01D9  00F6               	movwf	??___awmod
  1656  01DA  0876               	movf	??___awmod,w
  1657  01DB  07F7               	addwf	___awmod@counter,f
  1658  01DC                     l1170:
  1659  01DC  1FF3               	btfss	___awmod@divisor+1,7
  1660  01DD  29DF               	goto	u401
  1661  01DE  29E0               	goto	u400
  1662  01DF                     u401:
  1663  01DF  29D1               	goto	l1166
  1664  01E0                     u400:
  1665  01E0                     l1172:
  1666  01E0  0873               	movf	___awmod@divisor+1,w
  1667  01E1  0275               	subwf	___awmod@dividend+1,w
  1668  01E2  1D03               	skipz
  1669  01E3  29E6               	goto	u415
  1670  01E4  0872               	movf	___awmod@divisor,w
  1671  01E5  0274               	subwf	___awmod@dividend,w
  1672  01E6                     u415:
  1673  01E6  1C03               	skipc
  1674  01E7  29E9               	goto	u411
  1675  01E8  29EA               	goto	u410
  1676  01E9                     u411:
  1677  01E9  29F0               	goto	l1176
  1678  01EA                     u410:
  1679  01EA                     l1174:
  1680  01EA  0872               	movf	___awmod@divisor,w
  1681  01EB  02F4               	subwf	___awmod@dividend,f
  1682  01EC  0873               	movf	___awmod@divisor+1,w
  1683  01ED  1C03               	skipc
  1684  01EE  03F5               	decf	___awmod@dividend+1,f
  1685  01EF  02F5               	subwf	___awmod@dividend+1,f
  1686  01F0                     l1176:
  1687  01F0  3001               	movlw	1
  1688  01F1                     u425:
  1689  01F1  1003               	clrc
  1690  01F2  0CF3               	rrf	___awmod@divisor+1,f
  1691  01F3  0CF2               	rrf	___awmod@divisor,f
  1692  01F4  3EFF               	addlw	-1
  1693  01F5  1D03               	skipz
  1694  01F6  29F1               	goto	u425
  1695  01F7                     l1178:
  1696  01F7  3001               	movlw	1
  1697  01F8  02F7               	subwf	___awmod@counter,f
  1698  01F9  1D03               	btfss	3,2
  1699  01FA  29FC               	goto	u431
  1700  01FB  29FD               	goto	u430
  1701  01FC                     u431:
  1702  01FC  29E0               	goto	l1172
  1703  01FD                     u430:
  1704  01FD                     l1180:
  1705  01FD  0878               	movf	___awmod@sign,w
  1706  01FE  1903               	btfsc	3,2
  1707  01FF  2A01               	goto	u441
  1708  0200  2A02               	goto	u440
  1709  0201                     u441:
  1710  0201  2A07               	goto	l1184
  1711  0202                     u440:
  1712  0202                     l1182:
  1713  0202  09F4               	comf	___awmod@dividend,f
  1714  0203  09F5               	comf	___awmod@dividend+1,f
  1715  0204  0AF4               	incf	___awmod@dividend,f
  1716  0205  1903               	skipnz
  1717  0206  0AF5               	incf	___awmod@dividend+1,f
  1718  0207                     l1184:
  1719  0207  0875               	movf	___awmod@dividend+1,w
  1720  0208  00F3               	movwf	?___awmod+1
  1721  0209  0874               	movf	___awmod@dividend,w
  1722  020A  00F2               	movwf	?___awmod
  1723  020B                     l448:
  1724  020B  0008               	return
  1725  020C                     __end_of___awmod:
  1726                           
  1727                           	psect	text9
  1728  014C                     __ptext9:	
  1729 ;; *************** function ___awdiv *****************
  1730 ;; Defined at:
  1731 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1732 ;; Parameters:    Size  Location     Type
  1733 ;;  divisor         2    2[COMMON] int 
  1734 ;;  dividend        2    4[COMMON] int 
  1735 ;; Auto vars:     Size  Location     Type
  1736 ;;  quotient        2    9[COMMON] int 
  1737 ;;  sign            1    8[COMMON] unsigned char 
  1738 ;;  counter         1    7[COMMON] unsigned char 
  1739 ;; Return value:  Size  Location     Type
  1740 ;;                  2    2[COMMON] int 
  1741 ;; Registers used:
  1742 ;;		wreg, status,2, status,0
  1743 ;; Tracked objects:
  1744 ;;		On entry : 0/0
  1745 ;;		On exit  : 0/0
  1746 ;;		Unchanged: 0/0
  1747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1748 ;;      Params:         4       0       0       0       0
  1749 ;;      Locals:         4       0       0       0       0
  1750 ;;      Temps:          1       0       0       0       0
  1751 ;;      Totals:         9       0       0       0       0
  1752 ;;Total ram usage:        9 bytes
  1753 ;; Hardware stack levels used:    1
  1754 ;; Hardware stack levels required when called:    1
  1755 ;; This function calls:
  1756 ;;		Nothing
  1757 ;; This function is called by:
  1758 ;;		_Conversion
  1759 ;; This function uses a non-reentrant model
  1760 ;;
  1761                           
  1762                           
  1763                           ;psect for function ___awdiv
  1764  014C                     ___awdiv:
  1765  014C                     l1106:	
  1766                           ;incstack = 0
  1767                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1768                           
  1769  014C  01F8               	clrf	___awdiv@sign
  1770  014D                     l1108:
  1771  014D  1FF3               	btfss	___awdiv@divisor+1,7
  1772  014E  2950               	goto	u261
  1773  014F  2951               	goto	u260
  1774  0150                     u261:
  1775  0150  2958               	goto	l1114
  1776  0151                     u260:
  1777  0151                     l1110:
  1778  0151  09F2               	comf	___awdiv@divisor,f
  1779  0152  09F3               	comf	___awdiv@divisor+1,f
  1780  0153  0AF2               	incf	___awdiv@divisor,f
  1781  0154  1903               	skipnz
  1782  0155  0AF3               	incf	___awdiv@divisor+1,f
  1783  0156                     l1112:
  1784  0156  01F8               	clrf	___awdiv@sign
  1785  0157  0AF8               	incf	___awdiv@sign,f
  1786  0158                     l1114:
  1787  0158  1FF5               	btfss	___awdiv@dividend+1,7
  1788  0159  295B               	goto	u271
  1789  015A  295C               	goto	u270
  1790  015B                     u271:
  1791  015B  2965               	goto	l1120
  1792  015C                     u270:
  1793  015C                     l1116:
  1794  015C  09F4               	comf	___awdiv@dividend,f
  1795  015D  09F5               	comf	___awdiv@dividend+1,f
  1796  015E  0AF4               	incf	___awdiv@dividend,f
  1797  015F  1903               	skipnz
  1798  0160  0AF5               	incf	___awdiv@dividend+1,f
  1799  0161                     l1118:
  1800  0161  3001               	movlw	1
  1801  0162  00F6               	movwf	??___awdiv
  1802  0163  0876               	movf	??___awdiv,w
  1803  0164  06F8               	xorwf	___awdiv@sign,f
  1804  0165                     l1120:
  1805  0165  01F9               	clrf	___awdiv@quotient
  1806  0166  01FA               	clrf	___awdiv@quotient+1
  1807  0167                     l1122:
  1808  0167  0872               	movf	___awdiv@divisor,w
  1809  0168  0473               	iorwf	___awdiv@divisor+1,w
  1810  0169  1903               	btfsc	3,2
  1811  016A  296C               	goto	u281
  1812  016B  296D               	goto	u280
  1813  016C                     u281:
  1814  016C  29A4               	goto	l1142
  1815  016D                     u280:
  1816  016D                     l1124:
  1817  016D  01F7               	clrf	___awdiv@counter
  1818  016E  0AF7               	incf	___awdiv@counter,f
  1819  016F  297B               	goto	l1130
  1820  0170                     l1126:
  1821  0170  3001               	movlw	1
  1822  0171                     u295:
  1823  0171  1003               	clrc
  1824  0172  0DF2               	rlf	___awdiv@divisor,f
  1825  0173  0DF3               	rlf	___awdiv@divisor+1,f
  1826  0174  3EFF               	addlw	-1
  1827  0175  1D03               	skipz
  1828  0176  2971               	goto	u295
  1829  0177                     l1128:
  1830  0177  3001               	movlw	1
  1831  0178  00F6               	movwf	??___awdiv
  1832  0179  0876               	movf	??___awdiv,w
  1833  017A  07F7               	addwf	___awdiv@counter,f
  1834  017B                     l1130:
  1835  017B  1FF3               	btfss	___awdiv@divisor+1,7
  1836  017C  297E               	goto	u301
  1837  017D  297F               	goto	u300
  1838  017E                     u301:
  1839  017E  2970               	goto	l1126
  1840  017F                     u300:
  1841  017F                     l1132:
  1842  017F  3001               	movlw	1
  1843  0180                     u315:
  1844  0180  1003               	clrc
  1845  0181  0DF9               	rlf	___awdiv@quotient,f
  1846  0182  0DFA               	rlf	___awdiv@quotient+1,f
  1847  0183  3EFF               	addlw	-1
  1848  0184  1D03               	skipz
  1849  0185  2980               	goto	u315
  1850  0186  0873               	movf	___awdiv@divisor+1,w
  1851  0187  0275               	subwf	___awdiv@dividend+1,w
  1852  0188  1D03               	skipz
  1853  0189  298C               	goto	u325
  1854  018A  0872               	movf	___awdiv@divisor,w
  1855  018B  0274               	subwf	___awdiv@dividend,w
  1856  018C                     u325:
  1857  018C  1C03               	skipc
  1858  018D  298F               	goto	u321
  1859  018E  2990               	goto	u320
  1860  018F                     u321:
  1861  018F  2997               	goto	l1138
  1862  0190                     u320:
  1863  0190                     l1134:
  1864  0190  0872               	movf	___awdiv@divisor,w
  1865  0191  02F4               	subwf	___awdiv@dividend,f
  1866  0192  0873               	movf	___awdiv@divisor+1,w
  1867  0193  1C03               	skipc
  1868  0194  03F5               	decf	___awdiv@dividend+1,f
  1869  0195  02F5               	subwf	___awdiv@dividend+1,f
  1870  0196                     l1136:
  1871  0196  1479               	bsf	___awdiv@quotient,0
  1872  0197                     l1138:
  1873  0197  3001               	movlw	1
  1874  0198                     u335:
  1875  0198  1003               	clrc
  1876  0199  0CF3               	rrf	___awdiv@divisor+1,f
  1877  019A  0CF2               	rrf	___awdiv@divisor,f
  1878  019B  3EFF               	addlw	-1
  1879  019C  1D03               	skipz
  1880  019D  2998               	goto	u335
  1881  019E                     l1140:
  1882  019E  3001               	movlw	1
  1883  019F  02F7               	subwf	___awdiv@counter,f
  1884  01A0  1D03               	btfss	3,2
  1885  01A1  29A3               	goto	u341
  1886  01A2  29A4               	goto	u340
  1887  01A3                     u341:
  1888  01A3  297F               	goto	l1132
  1889  01A4                     u340:
  1890  01A4                     l1142:
  1891  01A4  0878               	movf	___awdiv@sign,w
  1892  01A5  1903               	btfsc	3,2
  1893  01A6  29A8               	goto	u351
  1894  01A7  29A9               	goto	u350
  1895  01A8                     u351:
  1896  01A8  29AE               	goto	l1146
  1897  01A9                     u350:
  1898  01A9                     l1144:
  1899  01A9  09F9               	comf	___awdiv@quotient,f
  1900  01AA  09FA               	comf	___awdiv@quotient+1,f
  1901  01AB  0AF9               	incf	___awdiv@quotient,f
  1902  01AC  1903               	skipnz
  1903  01AD  0AFA               	incf	___awdiv@quotient+1,f
  1904  01AE                     l1146:
  1905  01AE  087A               	movf	___awdiv@quotient+1,w
  1906  01AF  00F3               	movwf	?___awdiv+1
  1907  01B0  0879               	movf	___awdiv@quotient,w
  1908  01B1  00F2               	movwf	?___awdiv
  1909  01B2                     l435:
  1910  01B2  0008               	return
  1911  01B3                     __end_of___awdiv:
  1912                           
  1913                           	psect	text10
  1914  037B                     __ptext10:	
  1915 ;; *************** function _Lcd_Write_Char *****************
  1916 ;; Defined at:
  1917 ;;		line 86 in file "LCD_8bits.c"
  1918 ;; Parameters:    Size  Location     Type
  1919 ;;  a               1    wreg     unsigned char 
  1920 ;; Auto vars:     Size  Location     Type
  1921 ;;  a               1    4[COMMON] unsigned char 
  1922 ;; Return value:  Size  Location     Type
  1923 ;;                  1    wreg      void 
  1924 ;; Registers used:
  1925 ;;		wreg, status,2, status,0, pclath, cstack
  1926 ;; Tracked objects:
  1927 ;;		On entry : 0/0
  1928 ;;		On exit  : 0/0
  1929 ;;		Unchanged: 0/0
  1930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1931 ;;      Params:         0       0       0       0       0
  1932 ;;      Locals:         1       0       0       0       0
  1933 ;;      Temps:          1       0       0       0       0
  1934 ;;      Totals:         2       0       0       0       0
  1935 ;;Total ram usage:        2 bytes
  1936 ;; Hardware stack levels used:    1
  1937 ;; Hardware stack levels required when called:    2
  1938 ;; This function calls:
  1939 ;;		_Lcd_Port
  1940 ;; This function is called by:
  1941 ;;		_Conversion
  1942 ;;		_Lcd_Write_String
  1943 ;; This function uses a non-reentrant model
  1944 ;;
  1945                           
  1946                           
  1947                           ;psect for function _Lcd_Write_Char
  1948  037B                     _Lcd_Write_Char:
  1949                           
  1950                           ;incstack = 0
  1951                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1952                           ;Lcd_Write_Char@a stored from wreg
  1953  037B  00F4               	movwf	Lcd_Write_Char@a
  1954  037C                     l1086:
  1955                           
  1956                           ;LCD_8bits.c: 86: void Lcd_Write_Char(char a);LCD_8bits.c: 87: {;LCD_8bits.c: 88:     PO
      +                          RTCbits.RC0 = 1;
  1957  037C  1283               	bcf	3,5	;RP0=0, select bank0
  1958  037D  1303               	bcf	3,6	;RP1=0, select bank0
  1959  037E  1407               	bsf	7,0	;volatile
  1960  037F                     l1088:
  1961                           
  1962                           ;LCD_8bits.c: 89:     Lcd_Port(a);
  1963  037F  0874               	movf	Lcd_Write_Char@a,w
  1964  0380  120A  118A  23E1  120A  118A  	fcall	_Lcd_Port
  1965  0385                     l1090:
  1966                           
  1967                           ;LCD_8bits.c: 90:     PORTCbits.RC2 = 1;
  1968  0385  1283               	bcf	3,5	;RP0=0, select bank0
  1969  0386  1303               	bcf	3,6	;RP1=0, select bank0
  1970  0387  1507               	bsf	7,2	;volatile
  1971  0388                     l1092:
  1972                           
  1973                           ;LCD_8bits.c: 91:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1974  0388  301A               	movlw	26
  1975  0389  00F3               	movwf	??_Lcd_Write_Char
  1976  038A                     u537:
  1977  038A  0BF3               	decfsz	??_Lcd_Write_Char,f
  1978  038B  2B8A               	goto	u537
  1979  038C  0000               	nop
  1980  038D                     l1094:
  1981                           
  1982                           ;LCD_8bits.c: 92:     PORTCbits.RC2 = 0;
  1983  038D  1283               	bcf	3,5	;RP0=0, select bank0
  1984  038E  1303               	bcf	3,6	;RP1=0, select bank0
  1985  038F  1107               	bcf	7,2	;volatile
  1986  0390                     l183:
  1987  0390  0008               	return
  1988  0391                     __end_of_Lcd_Write_Char:
  1989                           
  1990                           	psect	text11
  1991  03BE                     __ptext11:	
  1992 ;; *************** function _interrup_config *****************
  1993 ;; Defined at:
  1994 ;;		line 141 in file "LCD.c"
  1995 ;; Parameters:    Size  Location     Type
  1996 ;;		None
  1997 ;; Auto vars:     Size  Location     Type
  1998 ;;		None
  1999 ;; Return value:  Size  Location     Type
  2000 ;;                  1    wreg      void 
  2001 ;; Registers used:
  2002 ;;		status,2
  2003 ;; Tracked objects:
  2004 ;;		On entry : 0/0
  2005 ;;		On exit  : 0/0
  2006 ;;		Unchanged: 0/0
  2007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2008 ;;      Params:         0       0       0       0       0
  2009 ;;      Locals:         0       0       0       0       0
  2010 ;;      Temps:          0       0       0       0       0
  2011 ;;      Totals:         0       0       0       0       0
  2012 ;;Total ram usage:        0 bytes
  2013 ;; Hardware stack levels used:    1
  2014 ;; Hardware stack levels required when called:    1
  2015 ;; This function calls:
  2016 ;;		Nothing
  2017 ;; This function is called by:
  2018 ;;		_main
  2019 ;; This function uses a non-reentrant model
  2020 ;;
  2021                           
  2022                           
  2023                           ;psect for function _interrup_config
  2024  03BE                     _interrup_config:
  2025  03BE                     l982:	
  2026                           ;incstack = 0
  2027                           ; Regs used in _interrup_config: [status,2]
  2028                           
  2029  03BE  178B               	bsf	11,7	;volatile
  2030  03BF  130B               	bcf	11,6	;volatile
  2031  03C0  168B               	bsf	11,5	;volatile
  2032  03C1  120B               	bcf	11,4	;volatile
  2033  03C2  118B               	bcf	11,3	;volatile
  2034  03C3  110B               	bcf	11,2	;volatile
  2035  03C4  108B               	bcf	11,1	;volatile
  2036  03C5  100B               	bcf	11,0	;volatile
  2037  03C6                     l984:
  2038  03C6  1683               	bsf	3,5	;RP0=1, select bank1
  2039  03C7  1303               	bcf	3,6	;RP1=0, select bank1
  2040  03C8  0196               	clrf	22	;volatile
  2041  03C9                     l100:
  2042  03C9  0008               	return
  2043  03CA                     __end_of_interrup_config:
  2044                           
  2045                           	psect	text12
  2046  03D4                     __ptext12:	
  2047 ;; *************** function _adc_config *****************
  2048 ;; Defined at:
  2049 ;;		line 180 in file "LCD.c"
  2050 ;; Parameters:    Size  Location     Type
  2051 ;;		None
  2052 ;; Auto vars:     Size  Location     Type
  2053 ;;		None
  2054 ;; Return value:  Size  Location     Type
  2055 ;;                  1    wreg      void 
  2056 ;; Registers used:
  2057 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2058 ;; Tracked objects:
  2059 ;;		On entry : 0/0
  2060 ;;		On exit  : 0/0
  2061 ;;		Unchanged: 0/0
  2062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2063 ;;      Params:         0       0       0       0       0
  2064 ;;      Locals:         0       0       0       0       0
  2065 ;;      Temps:          0       0       0       0       0
  2066 ;;      Totals:         0       0       0       0       0
  2067 ;;Total ram usage:        0 bytes
  2068 ;; Hardware stack levels used:    1
  2069 ;; Hardware stack levels required when called:    2
  2070 ;; This function calls:
  2071 ;;		_initADC
  2072 ;; This function is called by:
  2073 ;;		_main
  2074 ;; This function uses a non-reentrant model
  2075 ;;
  2076                           
  2077                           
  2078                           ;psect for function _adc_config
  2079  03D4                     _adc_config:
  2080  03D4                     l1012:	
  2081                           ;incstack = 0
  2082                           ; Regs used in _adc_config: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2083                           
  2084  03D4  3000               	movlw	0
  2085  03D5  120A  118A  2019  120A  118A  	fcall	_initADC
  2086  03DA                     l109:
  2087  03DA  0008               	return
  2088  03DB                     __end_of_adc_config:
  2089                           
  2090                           	psect	text13
  2091  0019                     __ptext13:	
  2092 ;; *************** function _initADC *****************
  2093 ;; Defined at:
  2094 ;;		line 11 in file "ADC_lib.c"
  2095 ;; Parameters:    Size  Location     Type
  2096 ;;  CHS             1    wreg     unsigned char 
  2097 ;; Auto vars:     Size  Location     Type
  2098 ;;  CHS             1    4[COMMON] unsigned char 
  2099 ;; Return value:  Size  Location     Type
  2100 ;;                  1    wreg      void 
  2101 ;; Registers used:
  2102 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2103 ;; Tracked objects:
  2104 ;;		On entry : 0/0
  2105 ;;		On exit  : 0/0
  2106 ;;		Unchanged: 0/0
  2107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2108 ;;      Params:         0       0       0       0       0
  2109 ;;      Locals:         1       0       0       0       0
  2110 ;;      Temps:          2       0       0       0       0
  2111 ;;      Totals:         3       0       0       0       0
  2112 ;;Total ram usage:        3 bytes
  2113 ;; Hardware stack levels used:    1
  2114 ;; Hardware stack levels required when called:    1
  2115 ;; This function calls:
  2116 ;;		Nothing
  2117 ;; This function is called by:
  2118 ;;		_adc_config
  2119 ;; This function uses a non-reentrant model
  2120 ;;
  2121                           
  2122                           
  2123                           ;psect for function _initADC
  2124  0019                     _initADC:
  2125                           
  2126                           ;incstack = 0
  2127                           ; Regs used in _initADC: [wreg-fsr0h+status,2+status,0]
  2128                           ;initADC@CHS stored from wreg
  2129  0019  00F4               	movwf	initADC@CHS
  2130  001A                     l892:
  2131                           
  2132                           ;ADC_lib.c: 11: void initADC (uint8_t CHS);ADC_lib.c: 12: {;ADC_lib.c: 13:     switch (C
      +                          HS)
  2133  001A  2884               	goto	l896
  2134  001B                     l126:	
  2135                           ;ADC_lib.c: 14:     {;ADC_lib.c: 15:         case 0:
  2136                           
  2137                           
  2138                           ;ADC_lib.c: 16:             ADCON0bits.CHS3 = 0;
  2139  001B  1283               	bcf	3,5	;RP0=0, select bank0
  2140  001C  1303               	bcf	3,6	;RP1=0, select bank0
  2141  001D  129F               	bcf	31,5	;volatile
  2142                           
  2143                           ;ADC_lib.c: 17:             ADCON0bits.CHS2 = 0;
  2144  001E  121F               	bcf	31,4	;volatile
  2145                           
  2146                           ;ADC_lib.c: 18:             ADCON0bits.CHS1 = 0;
  2147  001F  119F               	bcf	31,3	;volatile
  2148                           
  2149                           ;ADC_lib.c: 19:             ADCON0bits.CHS0 = 0;
  2150  0020  111F               	bcf	31,2	;volatile
  2151                           
  2152                           ;ADC_lib.c: 20:             break;
  2153  0021  28B8               	goto	l127
  2154  0022                     l128:	
  2155                           ;ADC_lib.c: 21:         case 1:
  2156                           
  2157                           
  2158                           ;ADC_lib.c: 22:             ADCON0bits.CHS3 = 0;
  2159  0022  1283               	bcf	3,5	;RP0=0, select bank0
  2160  0023  1303               	bcf	3,6	;RP1=0, select bank0
  2161  0024  129F               	bcf	31,5	;volatile
  2162                           
  2163                           ;ADC_lib.c: 23:             ADCON0bits.CHS2 = 0;
  2164  0025  121F               	bcf	31,4	;volatile
  2165                           
  2166                           ;ADC_lib.c: 24:             ADCON0bits.CHS1 = 0;
  2167  0026  119F               	bcf	31,3	;volatile
  2168                           
  2169                           ;ADC_lib.c: 25:             ADCON0bits.CHS0 = 1;
  2170  0027  151F               	bsf	31,2	;volatile
  2171                           
  2172                           ;ADC_lib.c: 26:             break;
  2173  0028  28B8               	goto	l127
  2174  0029                     l129:	
  2175                           ;ADC_lib.c: 28:         case 2:
  2176                           
  2177                           
  2178                           ;ADC_lib.c: 29:             ADCON0bits.CHS3 = 0;
  2179  0029  1283               	bcf	3,5	;RP0=0, select bank0
  2180  002A  1303               	bcf	3,6	;RP1=0, select bank0
  2181  002B  129F               	bcf	31,5	;volatile
  2182                           
  2183                           ;ADC_lib.c: 30:             ADCON0bits.CHS2 = 0;
  2184  002C  121F               	bcf	31,4	;volatile
  2185                           
  2186                           ;ADC_lib.c: 31:             ADCON0bits.CHS1 = 1;
  2187  002D  159F               	bsf	31,3	;volatile
  2188                           
  2189                           ;ADC_lib.c: 32:             ADCON0bits.CHS0 = 0;
  2190  002E  111F               	bcf	31,2	;volatile
  2191                           
  2192                           ;ADC_lib.c: 33:             break;
  2193  002F  28B8               	goto	l127
  2194  0030                     l130:	
  2195                           ;ADC_lib.c: 35:         case 3:
  2196                           
  2197                           
  2198                           ;ADC_lib.c: 36:             ADCON0bits.CHS3 = 0;
  2199  0030  1283               	bcf	3,5	;RP0=0, select bank0
  2200  0031  1303               	bcf	3,6	;RP1=0, select bank0
  2201  0032  129F               	bcf	31,5	;volatile
  2202                           
  2203                           ;ADC_lib.c: 37:             ADCON0bits.CHS2 = 0;
  2204  0033  121F               	bcf	31,4	;volatile
  2205                           
  2206                           ;ADC_lib.c: 38:             ADCON0bits.CHS1 = 1;
  2207  0034  159F               	bsf	31,3	;volatile
  2208                           
  2209                           ;ADC_lib.c: 39:             ADCON0bits.CHS0 = 1;
  2210  0035  151F               	bsf	31,2	;volatile
  2211                           
  2212                           ;ADC_lib.c: 40:             break;
  2213  0036  28B8               	goto	l127
  2214  0037                     l131:	
  2215                           ;ADC_lib.c: 42:         case 4:
  2216                           
  2217                           
  2218                           ;ADC_lib.c: 43:             ADCON0bits.CHS3 = 0;
  2219  0037  1283               	bcf	3,5	;RP0=0, select bank0
  2220  0038  1303               	bcf	3,6	;RP1=0, select bank0
  2221  0039  129F               	bcf	31,5	;volatile
  2222                           
  2223                           ;ADC_lib.c: 44:             ADCON0bits.CHS2 = 1;
  2224  003A  161F               	bsf	31,4	;volatile
  2225                           
  2226                           ;ADC_lib.c: 45:             ADCON0bits.CHS1 = 0;
  2227  003B  119F               	bcf	31,3	;volatile
  2228                           
  2229                           ;ADC_lib.c: 46:             ADCON0bits.CHS0 = 0;
  2230  003C  111F               	bcf	31,2	;volatile
  2231                           
  2232                           ;ADC_lib.c: 47:             break;
  2233  003D  28B8               	goto	l127
  2234  003E                     l132:	
  2235                           ;ADC_lib.c: 49:         case 5:
  2236                           
  2237                           
  2238                           ;ADC_lib.c: 50:             ADCON0bits.CHS3 = 0;
  2239  003E  1283               	bcf	3,5	;RP0=0, select bank0
  2240  003F  1303               	bcf	3,6	;RP1=0, select bank0
  2241  0040  129F               	bcf	31,5	;volatile
  2242                           
  2243                           ;ADC_lib.c: 51:             ADCON0bits.CHS2 = 1;
  2244  0041  161F               	bsf	31,4	;volatile
  2245                           
  2246                           ;ADC_lib.c: 52:             ADCON0bits.CHS1 = 0;
  2247  0042  119F               	bcf	31,3	;volatile
  2248                           
  2249                           ;ADC_lib.c: 53:             ADCON0bits.CHS0 = 1;
  2250  0043  151F               	bsf	31,2	;volatile
  2251                           
  2252                           ;ADC_lib.c: 54:             break;
  2253  0044  28B8               	goto	l127
  2254  0045                     l133:	
  2255                           ;ADC_lib.c: 56:         case 6:
  2256                           
  2257                           
  2258                           ;ADC_lib.c: 57:             ADCON0bits.CHS3 = 0;
  2259  0045  1283               	bcf	3,5	;RP0=0, select bank0
  2260  0046  1303               	bcf	3,6	;RP1=0, select bank0
  2261  0047  129F               	bcf	31,5	;volatile
  2262                           
  2263                           ;ADC_lib.c: 58:             ADCON0bits.CHS2 = 1;
  2264  0048  161F               	bsf	31,4	;volatile
  2265                           
  2266                           ;ADC_lib.c: 59:             ADCON0bits.CHS1 = 1;
  2267  0049  159F               	bsf	31,3	;volatile
  2268                           
  2269                           ;ADC_lib.c: 60:             ADCON0bits.CHS0 = 0;
  2270  004A  111F               	bcf	31,2	;volatile
  2271                           
  2272                           ;ADC_lib.c: 61:             break;
  2273  004B  28B8               	goto	l127
  2274  004C                     l134:	
  2275                           ;ADC_lib.c: 63:         case 7:
  2276                           
  2277                           
  2278                           ;ADC_lib.c: 64:             ADCON0bits.CHS3 = 0;
  2279  004C  1283               	bcf	3,5	;RP0=0, select bank0
  2280  004D  1303               	bcf	3,6	;RP1=0, select bank0
  2281  004E  129F               	bcf	31,5	;volatile
  2282                           
  2283                           ;ADC_lib.c: 65:             ADCON0bits.CHS2 = 1;
  2284  004F  161F               	bsf	31,4	;volatile
  2285                           
  2286                           ;ADC_lib.c: 66:             ADCON0bits.CHS1 = 1;
  2287  0050  159F               	bsf	31,3	;volatile
  2288                           
  2289                           ;ADC_lib.c: 67:             ADCON0bits.CHS0 = 1;
  2290  0051  151F               	bsf	31,2	;volatile
  2291                           
  2292                           ;ADC_lib.c: 68:             break;
  2293  0052  28B8               	goto	l127
  2294  0053                     l135:	
  2295                           ;ADC_lib.c: 70:         case 8:
  2296                           
  2297                           
  2298                           ;ADC_lib.c: 71:             ADCON0bits.CHS3 = 1;
  2299  0053  1283               	bcf	3,5	;RP0=0, select bank0
  2300  0054  1303               	bcf	3,6	;RP1=0, select bank0
  2301  0055  169F               	bsf	31,5	;volatile
  2302                           
  2303                           ;ADC_lib.c: 72:             ADCON0bits.CHS2 = 0;
  2304  0056  121F               	bcf	31,4	;volatile
  2305                           
  2306                           ;ADC_lib.c: 73:             ADCON0bits.CHS1 = 0;
  2307  0057  119F               	bcf	31,3	;volatile
  2308                           
  2309                           ;ADC_lib.c: 74:             ADCON0bits.CHS0 = 0;
  2310  0058  111F               	bcf	31,2	;volatile
  2311                           
  2312                           ;ADC_lib.c: 75:             break;
  2313  0059  28B8               	goto	l127
  2314  005A                     l136:	
  2315                           ;ADC_lib.c: 77:         case 9:
  2316                           
  2317                           
  2318                           ;ADC_lib.c: 78:             ADCON0bits.CHS3 = 1;
  2319  005A  1283               	bcf	3,5	;RP0=0, select bank0
  2320  005B  1303               	bcf	3,6	;RP1=0, select bank0
  2321  005C  169F               	bsf	31,5	;volatile
  2322                           
  2323                           ;ADC_lib.c: 79:             ADCON0bits.CHS2 = 0;
  2324  005D  121F               	bcf	31,4	;volatile
  2325                           
  2326                           ;ADC_lib.c: 80:             ADCON0bits.CHS1 = 0;
  2327  005E  119F               	bcf	31,3	;volatile
  2328                           
  2329                           ;ADC_lib.c: 81:             ADCON0bits.CHS0 = 1;
  2330  005F  151F               	bsf	31,2	;volatile
  2331                           
  2332                           ;ADC_lib.c: 82:             break;
  2333  0060  28B8               	goto	l127
  2334  0061                     l137:	
  2335                           ;ADC_lib.c: 84:         case 10:
  2336                           
  2337                           
  2338                           ;ADC_lib.c: 85:             ADCON0bits.CHS3 = 1;
  2339  0061  1283               	bcf	3,5	;RP0=0, select bank0
  2340  0062  1303               	bcf	3,6	;RP1=0, select bank0
  2341  0063  169F               	bsf	31,5	;volatile
  2342                           
  2343                           ;ADC_lib.c: 86:             ADCON0bits.CHS2 = 0;
  2344  0064  121F               	bcf	31,4	;volatile
  2345                           
  2346                           ;ADC_lib.c: 87:             ADCON0bits.CHS1 = 1;
  2347  0065  159F               	bsf	31,3	;volatile
  2348                           
  2349                           ;ADC_lib.c: 88:             ADCON0bits.CHS0 = 0;
  2350  0066  111F               	bcf	31,2	;volatile
  2351                           
  2352                           ;ADC_lib.c: 89:             break;
  2353  0067  28B8               	goto	l127
  2354  0068                     l138:	
  2355                           ;ADC_lib.c: 91:         case 11:
  2356                           
  2357                           
  2358                           ;ADC_lib.c: 92:             ADCON0bits.CHS3 = 1;
  2359  0068  1283               	bcf	3,5	;RP0=0, select bank0
  2360  0069  1303               	bcf	3,6	;RP1=0, select bank0
  2361  006A  169F               	bsf	31,5	;volatile
  2362                           
  2363                           ;ADC_lib.c: 93:             ADCON0bits.CHS2 = 0;
  2364  006B  121F               	bcf	31,4	;volatile
  2365                           
  2366                           ;ADC_lib.c: 94:             ADCON0bits.CHS1 = 1;
  2367  006C  159F               	bsf	31,3	;volatile
  2368                           
  2369                           ;ADC_lib.c: 95:             ADCON0bits.CHS0 = 1;
  2370  006D  151F               	bsf	31,2	;volatile
  2371                           
  2372                           ;ADC_lib.c: 96:             break;
  2373  006E  28B8               	goto	l127
  2374  006F                     l139:	
  2375                           ;ADC_lib.c: 98:         case 12:
  2376                           
  2377                           
  2378                           ;ADC_lib.c: 99:             ADCON0bits.CHS3 = 1;
  2379  006F  1283               	bcf	3,5	;RP0=0, select bank0
  2380  0070  1303               	bcf	3,6	;RP1=0, select bank0
  2381  0071  169F               	bsf	31,5	;volatile
  2382                           
  2383                           ;ADC_lib.c: 100:             ADCON0bits.CHS2 = 1;
  2384  0072  161F               	bsf	31,4	;volatile
  2385                           
  2386                           ;ADC_lib.c: 101:             ADCON0bits.CHS1 = 0;
  2387  0073  119F               	bcf	31,3	;volatile
  2388                           
  2389                           ;ADC_lib.c: 102:             ADCON0bits.CHS0 = 0;
  2390  0074  111F               	bcf	31,2	;volatile
  2391                           
  2392                           ;ADC_lib.c: 103:             break;
  2393  0075  28B8               	goto	l127
  2394  0076                     l140:	
  2395                           ;ADC_lib.c: 105:         case 13:
  2396                           
  2397                           
  2398                           ;ADC_lib.c: 106:             ADCON0bits.CHS3 = 1;
  2399  0076  1283               	bcf	3,5	;RP0=0, select bank0
  2400  0077  1303               	bcf	3,6	;RP1=0, select bank0
  2401  0078  169F               	bsf	31,5	;volatile
  2402                           
  2403                           ;ADC_lib.c: 107:             ADCON0bits.CHS2 = 1;
  2404  0079  161F               	bsf	31,4	;volatile
  2405                           
  2406                           ;ADC_lib.c: 108:             ADCON0bits.CHS1 = 0;
  2407  007A  119F               	bcf	31,3	;volatile
  2408                           
  2409                           ;ADC_lib.c: 109:             ADCON0bits.CHS0 = 1;
  2410  007B  151F               	bsf	31,2	;volatile
  2411                           
  2412                           ;ADC_lib.c: 110:             break;
  2413  007C  28B8               	goto	l127
  2414  007D                     l141:	
  2415                           ;ADC_lib.c: 112:         default:
  2416                           
  2417                           
  2418                           ;ADC_lib.c: 113:             ADCON0bits.CHS3 = 1;
  2419  007D  1283               	bcf	3,5	;RP0=0, select bank0
  2420  007E  1303               	bcf	3,6	;RP1=0, select bank0
  2421  007F  169F               	bsf	31,5	;volatile
  2422                           
  2423                           ;ADC_lib.c: 114:             ADCON0bits.CHS2 = 1;
  2424  0080  161F               	bsf	31,4	;volatile
  2425                           
  2426                           ;ADC_lib.c: 115:             ADCON0bits.CHS1 = 1;
  2427  0081  159F               	bsf	31,3	;volatile
  2428                           
  2429                           ;ADC_lib.c: 116:             ADCON0bits.CHS0 = 0;
  2430  0082  111F               	bcf	31,2	;volatile
  2431                           
  2432                           ;ADC_lib.c: 117:             break;
  2433  0083  28B8               	goto	l127
  2434  0084                     l896:
  2435  0084  0874               	movf	initADC@CHS,w
  2436  0085  00F2               	movwf	??_initADC
  2437  0086  01F3               	clrf	??_initADC+1
  2438                           
  2439                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2440                           ; Switch size 1, requested type "simple"
  2441                           ; Number of cases is 1, Range of values is 0 to 0
  2442                           ; switch strategies available:
  2443                           ; Name         Instructions Cycles
  2444                           ; simple_byte            4     3 (average)
  2445                           ; direct_byte           11     8 (fixed)
  2446                           ; jumptable            260     6 (fixed)
  2447                           ;	Chosen strategy is simple_byte
  2448  0087  0873               	movf	??_initADC+1,w
  2449  0088  3A00               	xorlw	0	; case 0
  2450  0089  1903               	skipnz
  2451  008A  288C               	goto	l1370
  2452  008B  287D               	goto	l141
  2453  008C                     l1370:
  2454                           
  2455                           ; Switch size 1, requested type "simple"
  2456                           ; Number of cases is 14, Range of values is 0 to 13
  2457                           ; switch strategies available:
  2458                           ; Name         Instructions Cycles
  2459                           ; simple_byte           43    22 (average)
  2460                           ; direct_byte           50     8 (fixed)
  2461                           ; jumptable            260     6 (fixed)
  2462                           ;	Chosen strategy is simple_byte
  2463  008C  0872               	movf	??_initADC,w
  2464  008D  3A00               	xorlw	0	; case 0
  2465  008E  1903               	skipnz
  2466  008F  281B               	goto	l126
  2467  0090  3A01               	xorlw	1	; case 1
  2468  0091  1903               	skipnz
  2469  0092  2822               	goto	l128
  2470  0093  3A03               	xorlw	3	; case 2
  2471  0094  1903               	skipnz
  2472  0095  2829               	goto	l129
  2473  0096  3A01               	xorlw	1	; case 3
  2474  0097  1903               	skipnz
  2475  0098  2830               	goto	l130
  2476  0099  3A07               	xorlw	7	; case 4
  2477  009A  1903               	skipnz
  2478  009B  2837               	goto	l131
  2479  009C  3A01               	xorlw	1	; case 5
  2480  009D  1903               	skipnz
  2481  009E  283E               	goto	l132
  2482  009F  3A03               	xorlw	3	; case 6
  2483  00A0  1903               	skipnz
  2484  00A1  2845               	goto	l133
  2485  00A2  3A01               	xorlw	1	; case 7
  2486  00A3  1903               	skipnz
  2487  00A4  284C               	goto	l134
  2488  00A5  3A0F               	xorlw	15	; case 8
  2489  00A6  1903               	skipnz
  2490  00A7  2853               	goto	l135
  2491  00A8  3A01               	xorlw	1	; case 9
  2492  00A9  1903               	skipnz
  2493  00AA  285A               	goto	l136
  2494  00AB  3A03               	xorlw	3	; case 10
  2495  00AC  1903               	skipnz
  2496  00AD  2861               	goto	l137
  2497  00AE  3A01               	xorlw	1	; case 11
  2498  00AF  1903               	skipnz
  2499  00B0  2868               	goto	l138
  2500  00B1  3A07               	xorlw	7	; case 12
  2501  00B2  1903               	skipnz
  2502  00B3  286F               	goto	l139
  2503  00B4  3A01               	xorlw	1	; case 13
  2504  00B5  1903               	skipnz
  2505  00B6  2876               	goto	l140
  2506  00B7  287D               	goto	l141
  2507  00B8                     l127:
  2508                           
  2509                           ;ADC_lib.c: 119:     ADCON0bits.ADCS1 = 1;
  2510  00B8  179F               	bsf	31,7	;volatile
  2511                           
  2512                           ;ADC_lib.c: 120:     ADCON0bits.ADCS0 = 0;
  2513  00B9  131F               	bcf	31,6	;volatile
  2514                           
  2515                           ;ADC_lib.c: 121:     ADCON0bits.GO_DONE= 0;
  2516  00BA  109F               	bcf	31,1	;volatile
  2517                           
  2518                           ;ADC_lib.c: 122:     ADCON0bits.ADON = 1;
  2519  00BB  141F               	bsf	31,0	;volatile
  2520                           
  2521                           ;ADC_lib.c: 124:     ADCON1bits.ADFM = 0;
  2522  00BC  1683               	bsf	3,5	;RP0=1, select bank1
  2523  00BD  1303               	bcf	3,6	;RP1=0, select bank1
  2524  00BE  139F               	bcf	31,7	;volatile
  2525                           
  2526                           ;ADC_lib.c: 125:     ADCON1bits.VCFG1 = 0;
  2527  00BF  129F               	bcf	31,5	;volatile
  2528                           
  2529                           ;ADC_lib.c: 126:     ADCON1bits.VCFG0 = 0;
  2530  00C0  121F               	bcf	31,4	;volatile
  2531  00C1                     l142:
  2532  00C1  0008               	return
  2533  00C2                     __end_of_initADC:
  2534                           
  2535                           	psect	text14
  2536  03DB                     __ptext14:	
  2537 ;; *************** function _USART_config *****************
  2538 ;; Defined at:
  2539 ;;		line 185 in file "LCD.c"
  2540 ;; Parameters:    Size  Location     Type
  2541 ;;		None
  2542 ;; Auto vars:     Size  Location     Type
  2543 ;;		None
  2544 ;; Return value:  Size  Location     Type
  2545 ;;                  1    wreg      void 
  2546 ;; Registers used:
  2547 ;;		status,2, status,0, pclath, cstack
  2548 ;; Tracked objects:
  2549 ;;		On entry : 0/0
  2550 ;;		On exit  : 0/0
  2551 ;;		Unchanged: 0/0
  2552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2553 ;;      Params:         0       0       0       0       0
  2554 ;;      Locals:         0       0       0       0       0
  2555 ;;      Temps:          0       0       0       0       0
  2556 ;;      Totals:         0       0       0       0       0
  2557 ;;Total ram usage:        0 bytes
  2558 ;; Hardware stack levels used:    1
  2559 ;; Hardware stack levels required when called:    2
  2560 ;; This function calls:
  2561 ;;		_USART_lib_config
  2562 ;; This function is called by:
  2563 ;;		_main
  2564 ;; This function uses a non-reentrant model
  2565 ;;
  2566                           
  2567                           
  2568                           ;psect for function _USART_config
  2569  03DB                     _USART_config:
  2570  03DB                     l1014:	
  2571                           ;incstack = 0
  2572                           ; Regs used in _USART_config: [status,2+status,0+pclath+cstack]
  2573                           
  2574  03DB  120A  118A  2391  120A  118A  	fcall	_USART_lib_config
  2575  03E0                     l112:
  2576  03E0  0008               	return
  2577  03E1                     __end_of_USART_config:
  2578                           
  2579                           	psect	text15
  2580  0391                     __ptext15:	
  2581 ;; *************** function _USART_lib_config *****************
  2582 ;; Defined at:
  2583 ;;		line 15 in file "USART.c"
  2584 ;; Parameters:    Size  Location     Type
  2585 ;;		None
  2586 ;; Auto vars:     Size  Location     Type
  2587 ;;		None
  2588 ;; Return value:  Size  Location     Type
  2589 ;;                  1    wreg      void 
  2590 ;; Registers used:
  2591 ;;		status,2
  2592 ;; Tracked objects:
  2593 ;;		On entry : 0/0
  2594 ;;		On exit  : 0/0
  2595 ;;		Unchanged: 0/0
  2596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2597 ;;      Params:         0       0       0       0       0
  2598 ;;      Locals:         0       0       0       0       0
  2599 ;;      Temps:          0       0       0       0       0
  2600 ;;      Totals:         0       0       0       0       0
  2601 ;;Total ram usage:        0 bytes
  2602 ;; Hardware stack levels used:    1
  2603 ;; Hardware stack levels required when called:    1
  2604 ;; This function calls:
  2605 ;;		Nothing
  2606 ;; This function is called by:
  2607 ;;		_USART_config
  2608 ;; This function uses a non-reentrant model
  2609 ;;
  2610                           
  2611                           
  2612                           ;psect for function _USART_lib_config
  2613  0391                     _USART_lib_config:
  2614  0391                     l902:	
  2615                           ;incstack = 0
  2616                           ; Regs used in _USART_lib_config: [status,2]
  2617                           
  2618                           
  2619                           ;USART.c: 17:     TXSTAbits.TX9 = 0;
  2620  0391  1683               	bsf	3,5	;RP0=1, select bank1
  2621  0392  1303               	bcf	3,6	;RP1=0, select bank1
  2622  0393  1318               	bcf	24,6	;volatile
  2623                           
  2624                           ;USART.c: 18:     TXSTAbits.SYNC = 0;
  2625  0394  1218               	bcf	24,4	;volatile
  2626                           
  2627                           ;USART.c: 19:     TXSTAbits.BRGH = 0;
  2628  0395  1118               	bcf	24,2	;volatile
  2629                           
  2630                           ;USART.c: 20:     TXSTAbits.TXEN = 1;
  2631  0396  1698               	bsf	24,5	;volatile
  2632  0397                     l904:
  2633                           
  2634                           ;USART.c: 22:     SPBRG = .12;
  2635  0397  0199               	clrf	25	;volatile
  2636                           
  2637                           ;USART.c: 23:     SPBRGH = 0;
  2638  0398  019A               	clrf	26	;volatile
  2639  0399                     l906:
  2640                           
  2641                           ;USART.c: 25:     RCSTAbits.RX9 = 0;
  2642  0399  1283               	bcf	3,5	;RP0=0, select bank0
  2643  039A  1303               	bcf	3,6	;RP1=0, select bank0
  2644  039B  1318               	bcf	24,6	;volatile
  2645  039C                     l908:
  2646                           
  2647                           ;USART.c: 26:     RCSTAbits.CREN = 1;
  2648  039C  1618               	bsf	24,4	;volatile
  2649  039D                     l910:
  2650                           
  2651                           ;USART.c: 27:     RCSTAbits.SPEN = 1;
  2652  039D  1798               	bsf	24,7	;volatile
  2653  039E                     l912:
  2654                           
  2655                           ;USART.c: 29:     PIR1bits.RCIF = 0;
  2656  039E  128C               	bcf	12,5	;volatile
  2657  039F                     l914:
  2658                           
  2659                           ;USART.c: 30:     PIR1bits.TXIF = 0;
  2660  039F  120C               	bcf	12,4	;volatile
  2661  03A0                     l196:
  2662  03A0  0008               	return
  2663  03A1                     __end_of_USART_lib_config:
  2664                           
  2665                           	psect	text16
  2666  020C                     __ptext16:	
  2667 ;; *************** function _Lcd_Init *****************
  2668 ;; Defined at:
  2669 ;;		line 28 in file "LCD_8bits.c"
  2670 ;; Parameters:    Size  Location     Type
  2671 ;;		None
  2672 ;; Auto vars:     Size  Location     Type
  2673 ;;		None
  2674 ;; Return value:  Size  Location     Type
  2675 ;;                  1    wreg      void 
  2676 ;; Registers used:
  2677 ;;		wreg, status,2, status,0, pclath, cstack
  2678 ;; Tracked objects:
  2679 ;;		On entry : 0/0
  2680 ;;		On exit  : 0/0
  2681 ;;		Unchanged: 0/0
  2682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2683 ;;      Params:         0       0       0       0       0
  2684 ;;      Locals:         0       0       0       0       0
  2685 ;;      Temps:          2       0       0       0       0
  2686 ;;      Totals:         2       0       0       0       0
  2687 ;;Total ram usage:        2 bytes
  2688 ;; Hardware stack levels used:    1
  2689 ;; Hardware stack levels required when called:    3
  2690 ;; This function calls:
  2691 ;;		_Lcd_Cmd
  2692 ;;		_Lcd_Port
  2693 ;; This function is called by:
  2694 ;;		_main
  2695 ;; This function uses a non-reentrant model
  2696 ;;
  2697                           
  2698                           
  2699                           ;psect for function _Lcd_Init
  2700  020C                     _Lcd_Init:
  2701  020C                     l1230:	
  2702                           ;incstack = 0
  2703                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2704                           
  2705                           
  2706                           ;LCD_8bits.c: 30:     Lcd_Port(0b0000000);
  2707  020C  3000               	movlw	0
  2708  020D  120A  118A  23E1  120A  118A  	fcall	_Lcd_Port
  2709  0212                     l1232:
  2710                           
  2711                           ;LCD_8bits.c: 31:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2712  0212  3034               	movlw	52
  2713  0213  00F7               	movwf	??_Lcd_Init+1
  2714  0214  30F1               	movlw	241
  2715  0215  00F6               	movwf	??_Lcd_Init
  2716  0216                     u547:
  2717  0216  0BF6               	decfsz	??_Lcd_Init,f
  2718  0217  2A16               	goto	u547
  2719  0218  0BF7               	decfsz	??_Lcd_Init+1,f
  2720  0219  2A16               	goto	u547
  2721  021A  2A1B               	nop2
  2722  021B                     l1234:
  2723                           
  2724                           ;LCD_8bits.c: 32:     Lcd_Cmd(0b00110000);
  2725  021B  3030               	movlw	48
  2726  021C  120A  118A  234A  120A  118A  	fcall	_Lcd_Cmd
  2727  0221                     l1236:
  2728                           
  2729                           ;LCD_8bits.c: 33:     PORTCbits.RC0 = 0;
  2730  0221  1283               	bcf	3,5	;RP0=0, select bank0
  2731  0222  1303               	bcf	3,6	;RP1=0, select bank0
  2732  0223  1007               	bcf	7,0	;volatile
  2733  0224                     l1238:
  2734                           
  2735                           ;LCD_8bits.c: 34:     PORTCbits.RC1 = 0;
  2736  0224  1087               	bcf	7,1	;volatile
  2737                           
  2738                           ;LCD_8bits.c: 35:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2739  0225  300D               	movlw	13
  2740  0226  00F7               	movwf	??_Lcd_Init+1
  2741  0227  30FB               	movlw	251
  2742  0228  00F6               	movwf	??_Lcd_Init
  2743  0229                     u557:
  2744  0229  0BF6               	decfsz	??_Lcd_Init,f
  2745  022A  2A29               	goto	u557
  2746  022B  0BF7               	decfsz	??_Lcd_Init+1,f
  2747  022C  2A29               	goto	u557
  2748  022D  2A2E               	nop2
  2749  022E                     l1240:
  2750                           
  2751                           ;LCD_8bits.c: 36:     Lcd_Cmd(0b00110000);
  2752  022E  3030               	movlw	48
  2753  022F  120A  118A  234A  120A  118A  	fcall	_Lcd_Cmd
  2754  0234                     l1242:
  2755                           
  2756                           ;LCD_8bits.c: 37:      PORTCbits.RC0 = 0;
  2757  0234  1283               	bcf	3,5	;RP0=0, select bank0
  2758  0235  1303               	bcf	3,6	;RP1=0, select bank0
  2759  0236  1007               	bcf	7,0	;volatile
  2760  0237                     l1244:
  2761                           
  2762                           ;LCD_8bits.c: 38:     PORTCbits.RC1 = 0;
  2763  0237  1087               	bcf	7,1	;volatile
  2764  0238                     l1246:
  2765                           
  2766                           ;LCD_8bits.c: 39:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2767  0238  301D               	movlw	29
  2768  0239  00F7               	movwf	??_Lcd_Init+1
  2769  023A  3091               	movlw	145
  2770  023B  00F6               	movwf	??_Lcd_Init
  2771  023C                     u567:
  2772  023C  0BF6               	decfsz	??_Lcd_Init,f
  2773  023D  2A3C               	goto	u567
  2774  023E  0BF7               	decfsz	??_Lcd_Init+1,f
  2775  023F  2A3C               	goto	u567
  2776                           
  2777                           ;LCD_8bits.c: 40:     Lcd_Cmd(0b00110000);
  2778  0240  3030               	movlw	48
  2779  0241  120A  118A  234A  120A  118A  	fcall	_Lcd_Cmd
  2780  0246                     l1248:
  2781                           
  2782                           ;LCD_8bits.c: 41:     PORTCbits.RC0 = 0;
  2783  0246  1283               	bcf	3,5	;RP0=0, select bank0
  2784  0247  1303               	bcf	3,6	;RP1=0, select bank0
  2785  0248  1007               	bcf	7,0	;volatile
  2786  0249                     l1250:
  2787                           
  2788                           ;LCD_8bits.c: 42:     PORTCbits.RC1 = 0;
  2789  0249  1087               	bcf	7,1	;volatile
  2790                           
  2791                           ;LCD_8bits.c: 43:     Lcd_Cmd(0b00111000);
  2792  024A  3038               	movlw	56
  2793  024B  120A  118A  234A  120A  118A  	fcall	_Lcd_Cmd
  2794                           
  2795                           ;LCD_8bits.c: 44:     Lcd_Cmd(0b00001100);
  2796  0250  300C               	movlw	12
  2797  0251  120A  118A  234A  120A  118A  	fcall	_Lcd_Cmd
  2798                           
  2799                           ;LCD_8bits.c: 45:     Lcd_Cmd(0b00000001);
  2800  0256  3001               	movlw	1
  2801  0257  120A  118A  234A  120A  118A  	fcall	_Lcd_Cmd
  2802                           
  2803                           ;LCD_8bits.c: 46:     Lcd_Cmd(0b00000110);
  2804  025C  3006               	movlw	6
  2805  025D  120A  118A  234A  120A  118A  	fcall	_Lcd_Cmd
  2806  0262                     l159:
  2807  0262  0008               	return
  2808  0263                     __end_of_Lcd_Init:
  2809                           
  2810                           	psect	text17
  2811  034A                     __ptext17:	
  2812 ;; *************** function _Lcd_Cmd *****************
  2813 ;; Defined at:
  2814 ;;		line 19 in file "LCD_8bits.c"
  2815 ;; Parameters:    Size  Location     Type
  2816 ;;  a               1    wreg     unsigned char 
  2817 ;; Auto vars:     Size  Location     Type
  2818 ;;  a               1    5[COMMON] unsigned char 
  2819 ;; Return value:  Size  Location     Type
  2820 ;;                  1    wreg      void 
  2821 ;; Registers used:
  2822 ;;		wreg, status,2, status,0, pclath, cstack
  2823 ;; Tracked objects:
  2824 ;;		On entry : 0/0
  2825 ;;		On exit  : 0/0
  2826 ;;		Unchanged: 0/0
  2827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2828 ;;      Params:         0       0       0       0       0
  2829 ;;      Locals:         1       0       0       0       0
  2830 ;;      Temps:          2       0       0       0       0
  2831 ;;      Totals:         3       0       0       0       0
  2832 ;;Total ram usage:        3 bytes
  2833 ;; Hardware stack levels used:    1
  2834 ;; Hardware stack levels required when called:    2
  2835 ;; This function calls:
  2836 ;;		_Lcd_Port
  2837 ;; This function is called by:
  2838 ;;		_Lcd_Init
  2839 ;;		_Lcd_Set_Cursor
  2840 ;;		_Lcd_Clear
  2841 ;;		_Lcd_Shift_Left
  2842 ;;		_Lcd_Shift_Right
  2843 ;; This function uses a non-reentrant model
  2844 ;;
  2845                           
  2846                           
  2847                           ;psect for function _Lcd_Cmd
  2848  034A                     _Lcd_Cmd:
  2849                           
  2850                           ;incstack = 0
  2851                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2852                           ;Lcd_Cmd@a stored from wreg
  2853  034A  00F5               	movwf	Lcd_Cmd@a
  2854  034B                     l1096:
  2855                           
  2856                           ;LCD_8bits.c: 19: void Lcd_Cmd (char a);LCD_8bits.c: 20: {;LCD_8bits.c: 21:     PORTCbit
      +                          s.RC0 = 0;
  2857  034B  1283               	bcf	3,5	;RP0=0, select bank0
  2858  034C  1303               	bcf	3,6	;RP1=0, select bank0
  2859  034D  1007               	bcf	7,0	;volatile
  2860  034E                     l1098:
  2861                           
  2862                           ;LCD_8bits.c: 22:     Lcd_Port(a);
  2863  034E  0875               	movf	Lcd_Cmd@a,w
  2864  034F  120A  118A  23E1  120A  118A  	fcall	_Lcd_Port
  2865  0354                     l1100:
  2866                           
  2867                           ;LCD_8bits.c: 23:     PORTCbits.RC2 = 1;
  2868  0354  1283               	bcf	3,5	;RP0=0, select bank0
  2869  0355  1303               	bcf	3,6	;RP1=0, select bank0
  2870  0356  1507               	bsf	7,2	;volatile
  2871  0357                     l1102:
  2872                           
  2873                           ;LCD_8bits.c: 24:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2874  0357  300D               	movlw	13
  2875  0358  00F4               	movwf	??_Lcd_Cmd+1
  2876  0359  30FB               	movlw	251
  2877  035A  00F3               	movwf	??_Lcd_Cmd
  2878  035B                     u577:
  2879  035B  0BF3               	decfsz	??_Lcd_Cmd,f
  2880  035C  2B5B               	goto	u577
  2881  035D  0BF4               	decfsz	??_Lcd_Cmd+1,f
  2882  035E  2B5B               	goto	u577
  2883  035F  2B60               	nop2
  2884  0360                     l1104:
  2885                           
  2886                           ;LCD_8bits.c: 25:     PORTCbits.RC2 = 0;
  2887  0360  1283               	bcf	3,5	;RP0=0, select bank0
  2888  0361  1303               	bcf	3,6	;RP1=0, select bank0
  2889  0362  1107               	bcf	7,2	;volatile
  2890  0363                     l156:
  2891  0363  0008               	return
  2892  0364                     __end_of_Lcd_Cmd:
  2893                           
  2894                           	psect	text18
  2895  03E1                     __ptext18:	
  2896 ;; *************** function _Lcd_Port *****************
  2897 ;; Defined at:
  2898 ;;		line 14 in file "LCD_8bits.c"
  2899 ;; Parameters:    Size  Location     Type
  2900 ;;  a               1    wreg     unsigned char 
  2901 ;; Auto vars:     Size  Location     Type
  2902 ;;  a               1    2[COMMON] unsigned char 
  2903 ;; Return value:  Size  Location     Type
  2904 ;;                  1    wreg      void 
  2905 ;; Registers used:
  2906 ;;		wreg
  2907 ;; Tracked objects:
  2908 ;;		On entry : 0/0
  2909 ;;		On exit  : 0/0
  2910 ;;		Unchanged: 0/0
  2911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2912 ;;      Params:         0       0       0       0       0
  2913 ;;      Locals:         1       0       0       0       0
  2914 ;;      Temps:          0       0       0       0       0
  2915 ;;      Totals:         1       0       0       0       0
  2916 ;;Total ram usage:        1 bytes
  2917 ;; Hardware stack levels used:    1
  2918 ;; Hardware stack levels required when called:    1
  2919 ;; This function calls:
  2920 ;;		Nothing
  2921 ;; This function is called by:
  2922 ;;		_Lcd_Cmd
  2923 ;;		_Lcd_Init
  2924 ;;		_Lcd_Write_Char
  2925 ;; This function uses a non-reentrant model
  2926 ;;
  2927                           
  2928                           
  2929                           ;psect for function _Lcd_Port
  2930  03E1                     _Lcd_Port:
  2931                           
  2932                           ;incstack = 0
  2933                           ; Regs used in _Lcd_Port: [wreg]
  2934                           ;Lcd_Port@a stored from wreg
  2935  03E1  00F2               	movwf	Lcd_Port@a
  2936  03E2                     l1084:
  2937                           
  2938                           ;LCD_8bits.c: 14: void Lcd_Port (char a);LCD_8bits.c: 15: {;LCD_8bits.c: 16:     PORTD =
      +                           a;
  2939  03E2  0872               	movf	Lcd_Port@a,w
  2940  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  2941  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  2942  03E5  0088               	movwf	8	;volatile
  2943  03E6                     l153:
  2944  03E6  0008               	return
  2945  03E7                     __end_of_Lcd_Port:
  2946                           
  2947                           	psect	text19
  2948  03A1                     __ptext19:	
  2949 ;; *************** function _ISR *****************
  2950 ;; Defined at:
  2951 ;;		line 79 in file "LCD.c"
  2952 ;; Parameters:    Size  Location     Type
  2953 ;;		None
  2954 ;; Auto vars:     Size  Location     Type
  2955 ;;		None
  2956 ;; Return value:  Size  Location     Type
  2957 ;;                  1    wreg      void 
  2958 ;; Registers used:
  2959 ;;		wreg
  2960 ;; Tracked objects:
  2961 ;;		On entry : 0/0
  2962 ;;		On exit  : 0/0
  2963 ;;		Unchanged: 0/0
  2964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2965 ;;      Params:         0       0       0       0       0
  2966 ;;      Locals:         0       0       0       0       0
  2967 ;;      Temps:          2       0       0       0       0
  2968 ;;      Totals:         2       0       0       0       0
  2969 ;;Total ram usage:        2 bytes
  2970 ;; Hardware stack levels used:    1
  2971 ;; This function calls:
  2972 ;;		Nothing
  2973 ;; This function is called by:
  2974 ;;		Interrupt level 1
  2975 ;; This function uses a non-reentrant model
  2976 ;;
  2977                           
  2978                           
  2979                           ;psect for function _ISR
  2980  03A1                     _ISR:
  2981  03A1                     i1l1028:
  2982                           
  2983                           ;LCD.c: 82:     PORTC = 0;
  2984  03A1  1D0B               	btfss	11,2	;volatile
  2985  03A2  2BA4               	goto	u23_21
  2986  03A3  2BA5               	goto	u23_20
  2987  03A4                     u23_21:
  2988  03A4  2BAA               	goto	i1l84
  2989  03A5                     u23_20:
  2990  03A5                     i1l1030:
  2991                           
  2992                           ;LCD.c: 83:     TRISD = 0;;LCD.c: 84:     PORTD = 0;
  2993  03A5  110B               	bcf	11,2	;volatile
  2994  03A6                     i1l1032:
  2995                           
  2996                           ;LCD.c: 85:     TRISE = 0;
  2997  03A6  30E7               	movlw	231
  2998  03A7  1283               	bcf	3,5	;RP0=0, select bank0
  2999  03A8  1303               	bcf	3,6	;RP1=0, select bank0
  3000  03A9  0081               	movwf	1	;volatile
  3001  03AA                     i1l84:
  3002  03AA  0871               	movf	??_ISR+1,w
  3003  03AB  008A               	movwf	10
  3004  03AC  0E70               	swapf	??_ISR,w
  3005  03AD  0083               	movwf	3
  3006  03AE  0EFE               	swapf	btemp,f
  3007  03AF  0E7E               	swapf	btemp,w
  3008  03B0  0009               	retfie
  3009  03B1                     __end_of_ISR:
  3010  007E                     btemp	set	126	;btemp
  3011  007E                     wtemp0	set	126
  3012                           
  3013                           	psect	intentry
  3014  0004                     __pintentry:	
  3015                           ;incstack = 0
  3016                           ; Regs used in _ISR: [wreg]
  3017                           
  3018  0004                     interrupt_function:
  3019  007E                     saved_w	set	btemp
  3020  0004  00FE               	movwf	btemp
  3021  0005  0E03               	swapf	3,w
  3022  0006  00F0               	movwf	??_ISR
  3023  0007  080A               	movf	10,w
  3024  0008  00F1               	movwf	??_ISR+1
  3025  0009  120A  118A  2BA1   	ljmp	_ISR
  3026                           
  3027                           	psect	config
  3028                           
  3029                           ;Config register CONFIG1 @ 0x2007
  3030                           ;	Oscillator Selection bits
  3031                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3032                           ;	Watchdog Timer Enable bit
  3033                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3034                           ;	Power-up Timer Enable bit
  3035                           ;	PWRTE = OFF, PWRT disabled
  3036                           ;	RE3/MCLR pin function select bit
  3037                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3038                           ;	Code Protection bit
  3039                           ;	CP = OFF, Program memory code protection is disabled
  3040                           ;	Data Code Protection bit
  3041                           ;	CPD = OFF, Data memory code protection is disabled
  3042                           ;	Brown Out Reset Selection bits
  3043                           ;	BOREN = OFF, BOR disabled
  3044                           ;	Internal External Switchover bit
  3045                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3046                           ;	Fail-Safe Clock Monitor Enabled bit
  3047                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3048                           ;	Low Voltage Programming Enable bit
  3049                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3050                           ;	In-Circuit Debugger Mode bit
  3051                           ;	DEBUG = 0x1, unprogrammed default
  3052  2007                     	org	8199
  3053  2007  20D4               	dw	8404
  3054                           
  3055                           ;Config register CONFIG2 @ 0x2008
  3056                           ;	Brown-out Reset Selection bit
  3057                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3058                           ;	Flash Program Memory Self Write Enable bits
  3059                           ;	WRT = OFF, Write protection off
  3060  2008                     	org	8200
  3061  2008  3FFF               	dw	16383

Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80     11      14
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Conversion->___awdiv
    _Lcd_Write_Char->_Lcd_Port
    _adc_config->_initADC
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_lcd
    _lcd->_Conversion

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2039
                                              9 BANK0      2     2      0
                           _Lcd_Init
                       _USART_config
                         _adc_config
                    _interrup_config
                                _lcd
                         _osc_config
                              _setup
                        _tmr0_config
 ---------------------------------------------------------------------------------
 (1) _tmr0_config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _osc_config                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd                                                  3     3      0    1958
                                              8 BANK0      1     1      0
                         _Conversion
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     3     3      0     167
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       4     3      1     406
                                              6 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Conversion                                           8     8      0    1385
                                              0 BANK0      8     8      0
                     _Lcd_Write_Char
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     600
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     604
                                              2 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      44
                                              3 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _interrup_config                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_config                                           0     0      0      15
                            _initADC
 ---------------------------------------------------------------------------------
 (2) _initADC                                              3     3      0      15
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _USART_config                                         0     0      0       0
                   _USART_lib_config
 ---------------------------------------------------------------------------------
 (2) _USART_lib_config                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      44
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _USART_config
     _USART_lib_config
   _adc_config
     _initADC
   _interrup_config
   _lcd
     _Conversion
       _Lcd_Write_Char
         _Lcd_Port
       ___awdiv
       ___awmod
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
   _osc_config
   _setup
   _tmr0_config

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      B       E       5       17.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1A      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Feb 10 00:53:26 2021

                        _i 002B                          pc 0002                         l97 0300  
             ___awdiv@sign 0078                         fsr 0004                        l100 03C9  
                      l103 03D3                        l112 03E0                        l130 0030  
                      l106 03BD                        l131 0037                        l115 02D9  
                      l140 0076                        l132 003E                        l141 007D  
                      l133 0045                        l109 03DA                        l142 00C1  
                      l134 004C                        l126 001B                        l118 014B  
                      l135 0053                        l127 00B8                        l136 005A  
                      l128 0022                        l153 03E6                        l137 0061  
                      l129 0029                        l138 0068                        l139 006F  
                      l156 0363                        l174 0325                        l159 0262  
                      l183 0390                        l168 0349                        l435 01B2  
                      l196 03A0                        l448 020B                        l910 039D  
                      l902 0391                        l912 039E                        l904 0397  
                      l914 039F                        l906 0399                        l908 039C  
                      l960 02E2                        l970 02F1                        l962 02E5  
                      l892 001A                        l980 03CA                        l972 02F4  
                      l964 02E8    __end_of_interrup_config 03CA                        l982 03BE  
                      l974 02F7                        l966 02EB                        l958 02DA  
                      l896 0084                        l984 03C6                        l976 02FA  
                      l968 02EE                        l978 02FD                        u300 017F  
                      u301 017E                        u320 0190                        u400 01E0  
                      u321 018F                        u401 01DF                        u410 01EA  
                      u315 0180                        u411 01E9                        u340 01A4  
                      u260 0151                        u500 029F                        u341 01A3  
                      u325 018C                        u261 0150                        u501 029E  
                      u350 01A9                        u270 015C                        u430 01FD  
                      u510 02A8                        u351 01A8                        u335 0198  
                      u271 015B                        u431 01FC                        u415 01E6  
                      u511 02A7                        u280 016D                        u440 0202  
                      u360 01B8                        u281 016C                        u441 0201  
                      u425 01F1                        u361 01B7                        u370 01C3  
                      u450 032C                        u371 01C2                        u451 032B  
                      u380 01CE                        u460 033E                        _ISR 03A1  
                      u381 01CD                        u461 033D                        u470 0325  
                      u295 0171                        u471 0324                        u527 0294  
                      u537 038A                        u547 0216                        u395 01D2  
                      u557 0229                        u567 023C                        u577 035B  
         _USART_lib_config 0391                        _lcd 02AE                        fsr0 0004  
             ___awmod@sign 0078                       ?_ISR 0070                       l1010 03B9  
                     l1100 0354                       l1012 03D4                       l1102 0357  
                     l1014 03DB                       l1110 0151                       l1104 0360  
                     l1120 0165                       l1112 0156                       l1200 0302  
                     l1008 03B1                       l1130 017B                       l1122 0167  
                     l1114 0158                       l1106 014C                       l1210 00CA  
                     l1202 0305                       l1140 019E                       l1132 017F  
                     l1124 016D                       l1116 015C                       l1108 014D  
                     l1220 0126                       l1212 00E0                       l1204 0312  
                     l1230 020C                       l1134 0190                       l1126 0170  
                     l1142 01A4                       l1118 0161                       l1150 01B3  
                     l1222 012D                       l1214 00F6                       l1206 0318  
                     l1240 022E                       l1232 0212                       l1144 01A9  
                     l1136 0196                       l1128 0177                       l1160 01C3  
                     l1152 01B4                       l1224 0133                       l1216 010C  
                     l1208 00C2                       l1320 02C3                       l1250 0249  
                     l1242 0234                       l1234 021B                       l1090 0385  
                     l1146 01AE                       l1138 0197                       l1170 01DC  
                     l1162 01C8                       l1154 01B8                       l1226 013C  
                     l1218 0122                       l1322 02C8                       l1314 02AE  
                     l1330 026D                       l1084 03E2                       l1244 0237  
                     l1236 0221                       l1092 0388                       l1172 01E0  
                     l1164 01CE                       l1180 01FD                       l1156 01BD  
                     l1228 0145                       l1324 02D4                       l1316 02B6  
                     l1340 0299                       l1332 027C                       l1246 0238  
                     l1238 0224                       l1094 038D                       l1086 037C  
                     l1182 0202                       l1174 01EA                       l1166 01D1  
                     l1158 01BF                       l1190 032C                       l1318 02BC  
                     l1342 029F                       l1334 0281                       l1326 0263  
                     l1096 034B                       l1248 0246                       l1088 037F  
                     l1184 0207                       l1176 01F0                       l1168 01D8  
                     l1192 0331                       l1344 02A0                       l1336 0286  
                     l1328 0268                       l1098 034E                       l1370 008C  
                     l1178 01F7                       l1194 0338                       l1346 02A4  
                     l1338 028B                       l1196 033E                       l1188 0327  
                     l1348 02A8                       l1198 0343                       ?_lcd 0070  
                     STR_1 036A                       _IOCB 0096                       i1l84 03AA  
                     _TMR0 0001          ?_Lcd_Write_String 0070                       _main 0263  
                     btemp 007E               Conversion@x1 0027               Conversion@x2 0024  
             Conversion@y1 0025               Conversion@y2 0026                       start 000C  
       ??_Lcd_Write_String 0075            __end_of_Lcd_Cmd 0364                      ??_ISR 0070  
                    ??_lcd 0028                      ?_main 0070            __end_of___awdiv 01B3  
          __end_of___awmod 020C                      _ANSEL 0188            ___awdiv@divisor 0072  
          ___awdiv@counter 0077                      u23_20 03A5                      u23_21 03A4  
                    _SPBRG 0099                      _PORTA 0005                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008                      _PORTE 0009  
  __size_of_Lcd_Set_Cursor 0024                      _TRISA 0085                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088                      _TRISE 0089  
                    _TXREG 0019            __end_of_initADC 00C2                      _setup 02DA  
                    pclath 000A                 _Conversion 00C2                      status 0003  
                    wtemp0 007E           __end_of_Lcd_Init 0263           __end_of_Lcd_Port 03E7  
          __initialization 000F               __end_of_main 02AE                     ??_main 0029  
         ?_interrup_config 0070               ?_tmr0_config 0070                     _ADRESH 001E  
         ___awdiv@dividend 0074                     ?_setup 0070                     _ANSELH 0189  
                   i1l1030 03A5                     i1l1032 03A6                     i1l1028 03A1  
                ??_Lcd_Cmd 0073                     _SPBRGH 009A    __size_of_Lcd_Write_Char 0016  
                ??___awdiv 0076                  ??___awmod 0076           ___awdiv@quotient 0079  
          ___awmod@divisor 0072            ___awmod@counter 0077                  ??_initADC 0072  
                   saved_w 007E            Lcd_Set_Cursor@a 0078            Lcd_Set_Cursor@b 0076  
              ?_Conversion 0070    __end_of__initialization 0015   __end_of_USART_lib_config 03A1  
           __pcstackCOMMON 0070                 _adc_config 03D4              __end_of_setup 0301  
           _Lcd_Set_Cursor 0326             _OPTION_REGbits 0081                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070                    ??_setup 0072                 __pbssBANK0 002B  
               __pmaintext 0263                 __pintentry 0004  __size_of_Lcd_Write_String 0025  
   __end_of_Lcd_Set_Cursor 034A        __size_of_Conversion 008A                 ??_Lcd_Init 0076  
               ??_Lcd_Port 0072       __size_of_tmr0_config 000D                 __stringtab 0364  
           _Lcd_Write_Char 037B                    _Lcd_Cmd 034A                ?_adc_config 0070  
                  ___awdiv 014C                    ___awmod 01B3            ?_Lcd_Set_Cursor 0076  
                  __ptext1 03B1                    __ptext2 02DA                    __ptext3 03CA  
                  __ptext4 02AE                    __ptext5 0301                    __ptext6 0326  
                  __ptext7 00C2                    __ptext8 01B3                    __ptext9 014C  
                  _initADC 0019               __size_of_ISR 0010               __size_of_lcd 002C  
         ___awmod@dividend 0074                    _voltaje 002D     __end_of_Lcd_Write_Char 0391  
     end_of_initialization 0015                 _osc_config 03CA                  _RCSTAbits 0018  
                Lcd_Port@a 0072                  _PORTCbits 0007            ?_Lcd_Write_Char 0070  
      __size_of_adc_config 0007   __size_of_interrup_config 000C          Lcd_Write_String@a 0077  
        Lcd_Write_String@i 0075               ??_Conversion 0020                  _TXSTAbits 0098  
        ?_USART_lib_config 0070              ?_USART_config 0070         ??_USART_lib_config 0072  
               initADC@CHS 0074           _Lcd_Write_String 0301         __end_of_Conversion 014C  
      start_initialization 000F                __end_of_ISR 03B1                __end_of_lcd 02DA  
        __size_of_Lcd_Init 0057          __size_of_Lcd_Port 0006                ?_osc_config 0070  
           ??_USART_config 0072            Lcd_Write_Char@a 0074                __pbssCOMMON 007B  
                ___latbits 0002              __pcstackBANK0 0020                  _adc_value 007B  
                 ?_Lcd_Cmd 0070          ??_interrup_config 0072           ??_Lcd_Set_Cursor 0077  
             ??_adc_config 0075                   ?___awdiv 0072                   ?___awmod 0072  
                __pstrings 0364                   ?_initADC 0070        __size_of_osc_config 000A  
            ??_tmr0_config 0072             __size_of_setup 0027         __end_of_adc_config 03DB  
        interrupt_function 0004                   Lcd_Cmd@a 0075                   _PIR1bits 000C  
               _ADCON0bits 001F                __stringbase 0369                 _ADCON1bits 009F  
         ??_Lcd_Write_Char 0073       __end_of_USART_config 03E1                   _Lcd_Init 020C  
                 _Lcd_Port 03E1        __end_of_tmr0_config 03BE   __end_of_Lcd_Write_String 0326  
         __size_of_Lcd_Cmd 001A           __size_of___awdiv 0067           __size_of___awmod 0059  
       __end_of__stringtab 036A  __size_of_USART_lib_config 0010           __size_of_initADC 00A9  
                 __ptext10 037B                   __ptext11 03BE                   __ptext12 03D4  
                 __ptext13 0019                   __ptext14 03DB                   __ptext15 0391  
                 __ptext16 020C                   __ptext17 034A                   __ptext18 03E1  
                 __ptext19 03A1               ??_osc_config 0072              __size_of_main 004B  
               _INTCONbits 000B         __end_of_osc_config 03D4                _tmr0_config 03B1  
          _interrup_config 03BE           Conversion@unidad 0023                   intlevel1 0000  
                stringcode 0364                 _OSCCONbits 008F         Lcd_Set_Cursor@temp 0079  
    __size_of_USART_config 0006                   stringdir 0364                   stringtab 0364  
             _USART_config 03DB  
