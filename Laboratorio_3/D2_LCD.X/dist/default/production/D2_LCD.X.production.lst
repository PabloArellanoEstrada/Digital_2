

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Feb 11 01:24:50 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    41                           	dabs	1,0x7E,2
    42  0000                     
    43                           ; Version 2.20
    44                           ; Generated 12/02/2020 GMT
    45                           ; 
    46                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F887 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     	;# 
    78  0001                     	;# 
    79  0002                     	;# 
    80  0003                     	;# 
    81  0004                     	;# 
    82  0005                     	;# 
    83  0006                     	;# 
    84  0007                     	;# 
    85  0008                     	;# 
    86  0009                     	;# 
    87  000A                     	;# 
    88  000B                     	;# 
    89  000C                     	;# 
    90  000D                     	;# 
    91  000E                     	;# 
    92  000E                     	;# 
    93  000F                     	;# 
    94  0010                     	;# 
    95  0011                     	;# 
    96  0012                     	;# 
    97  0013                     	;# 
    98  0014                     	;# 
    99  0015                     	;# 
   100  0015                     	;# 
   101  0016                     	;# 
   102  0017                     	;# 
   103  0018                     	;# 
   104  0019                     	;# 
   105  001A                     	;# 
   106  001B                     	;# 
   107  001B                     	;# 
   108  001C                     	;# 
   109  001D                     	;# 
   110  001E                     	;# 
   111  001F                     	;# 
   112  0081                     	;# 
   113  0085                     	;# 
   114  0086                     	;# 
   115  0087                     	;# 
   116  0088                     	;# 
   117  0089                     	;# 
   118  008C                     	;# 
   119  008D                     	;# 
   120  008E                     	;# 
   121  008F                     	;# 
   122  0090                     	;# 
   123  0091                     	;# 
   124  0092                     	;# 
   125  0093                     	;# 
   126  0093                     	;# 
   127  0093                     	;# 
   128  0094                     	;# 
   129  0095                     	;# 
   130  0096                     	;# 
   131  0097                     	;# 
   132  0098                     	;# 
   133  0099                     	;# 
   134  009A                     	;# 
   135  009B                     	;# 
   136  009C                     	;# 
   137  009D                     	;# 
   138  009E                     	;# 
   139  009F                     	;# 
   140  0105                     	;# 
   141  0107                     	;# 
   142  0108                     	;# 
   143  0109                     	;# 
   144  010C                     	;# 
   145  010C                     	;# 
   146  010D                     	;# 
   147  010E                     	;# 
   148  010F                     	;# 
   149  0185                     	;# 
   150  0187                     	;# 
   151  0188                     	;# 
   152  0189                     	;# 
   153  018C                     	;# 
   154  018D                     	;# 
   155  0000                     	;# 
   156  0001                     	;# 
   157  0002                     	;# 
   158  0003                     	;# 
   159  0004                     	;# 
   160  0005                     	;# 
   161  0006                     	;# 
   162  0007                     	;# 
   163  0008                     	;# 
   164  0009                     	;# 
   165  000A                     	;# 
   166  000B                     	;# 
   167  000C                     	;# 
   168  000D                     	;# 
   169  000E                     	;# 
   170  000E                     	;# 
   171  000F                     	;# 
   172  0010                     	;# 
   173  0011                     	;# 
   174  0012                     	;# 
   175  0013                     	;# 
   176  0014                     	;# 
   177  0015                     	;# 
   178  0015                     	;# 
   179  0016                     	;# 
   180  0017                     	;# 
   181  0018                     	;# 
   182  0019                     	;# 
   183  001A                     	;# 
   184  001B                     	;# 
   185  001B                     	;# 
   186  001C                     	;# 
   187  001D                     	;# 
   188  001E                     	;# 
   189  001F                     	;# 
   190  0081                     	;# 
   191  0085                     	;# 
   192  0086                     	;# 
   193  0087                     	;# 
   194  0088                     	;# 
   195  0089                     	;# 
   196  008C                     	;# 
   197  008D                     	;# 
   198  008E                     	;# 
   199  008F                     	;# 
   200  0090                     	;# 
   201  0091                     	;# 
   202  0092                     	;# 
   203  0093                     	;# 
   204  0093                     	;# 
   205  0093                     	;# 
   206  0094                     	;# 
   207  0095                     	;# 
   208  0096                     	;# 
   209  0097                     	;# 
   210  0098                     	;# 
   211  0099                     	;# 
   212  009A                     	;# 
   213  009B                     	;# 
   214  009C                     	;# 
   215  009D                     	;# 
   216  009E                     	;# 
   217  009F                     	;# 
   218  0105                     	;# 
   219  0107                     	;# 
   220  0108                     	;# 
   221  0109                     	;# 
   222  010C                     	;# 
   223  010C                     	;# 
   224  010D                     	;# 
   225  010E                     	;# 
   226  010F                     	;# 
   227  0185                     	;# 
   228  0187                     	;# 
   229  0188                     	;# 
   230  0189                     	;# 
   231  018C                     	;# 
   232  018D                     	;# 
   233  0000                     	;# 
   234  0001                     	;# 
   235  0002                     	;# 
   236  0003                     	;# 
   237  0004                     	;# 
   238  0005                     	;# 
   239  0006                     	;# 
   240  0007                     	;# 
   241  0008                     	;# 
   242  0009                     	;# 
   243  000A                     	;# 
   244  000B                     	;# 
   245  000C                     	;# 
   246  000D                     	;# 
   247  000E                     	;# 
   248  000E                     	;# 
   249  000F                     	;# 
   250  0010                     	;# 
   251  0011                     	;# 
   252  0012                     	;# 
   253  0013                     	;# 
   254  0014                     	;# 
   255  0015                     	;# 
   256  0015                     	;# 
   257  0016                     	;# 
   258  0017                     	;# 
   259  0018                     	;# 
   260  0019                     	;# 
   261  001A                     	;# 
   262  001B                     	;# 
   263  001B                     	;# 
   264  001C                     	;# 
   265  001D                     	;# 
   266  001E                     	;# 
   267  001F                     	;# 
   268  0081                     	;# 
   269  0085                     	;# 
   270  0086                     	;# 
   271  0087                     	;# 
   272  0088                     	;# 
   273  0089                     	;# 
   274  008C                     	;# 
   275  008D                     	;# 
   276  008E                     	;# 
   277  008F                     	;# 
   278  0090                     	;# 
   279  0091                     	;# 
   280  0092                     	;# 
   281  0093                     	;# 
   282  0093                     	;# 
   283  0093                     	;# 
   284  0094                     	;# 
   285  0095                     	;# 
   286  0096                     	;# 
   287  0097                     	;# 
   288  0098                     	;# 
   289  0099                     	;# 
   290  009A                     	;# 
   291  009B                     	;# 
   292  009C                     	;# 
   293  009D                     	;# 
   294  009E                     	;# 
   295  009F                     	;# 
   296  0105                     	;# 
   297  0107                     	;# 
   298  0108                     	;# 
   299  0109                     	;# 
   300  010C                     	;# 
   301  010C                     	;# 
   302  010D                     	;# 
   303  010E                     	;# 
   304  010F                     	;# 
   305  0185                     	;# 
   306  0187                     	;# 
   307  0188                     	;# 
   308  0189                     	;# 
   309  018C                     	;# 
   310  018D                     	;# 
   311  0000                     	;# 
   312  0001                     	;# 
   313  0002                     	;# 
   314  0003                     	;# 
   315  0004                     	;# 
   316  0005                     	;# 
   317  0006                     	;# 
   318  0007                     	;# 
   319  0008                     	;# 
   320  0009                     	;# 
   321  000A                     	;# 
   322  000B                     	;# 
   323  000C                     	;# 
   324  000D                     	;# 
   325  000E                     	;# 
   326  000E                     	;# 
   327  000F                     	;# 
   328  0010                     	;# 
   329  0011                     	;# 
   330  0012                     	;# 
   331  0013                     	;# 
   332  0014                     	;# 
   333  0015                     	;# 
   334  0015                     	;# 
   335  0016                     	;# 
   336  0017                     	;# 
   337  0018                     	;# 
   338  0019                     	;# 
   339  001A                     	;# 
   340  001B                     	;# 
   341  001B                     	;# 
   342  001C                     	;# 
   343  001D                     	;# 
   344  001E                     	;# 
   345  001F                     	;# 
   346  0081                     	;# 
   347  0085                     	;# 
   348  0086                     	;# 
   349  0087                     	;# 
   350  0088                     	;# 
   351  0089                     	;# 
   352  008C                     	;# 
   353  008D                     	;# 
   354  008E                     	;# 
   355  008F                     	;# 
   356  0090                     	;# 
   357  0091                     	;# 
   358  0092                     	;# 
   359  0093                     	;# 
   360  0093                     	;# 
   361  0093                     	;# 
   362  0094                     	;# 
   363  0095                     	;# 
   364  0096                     	;# 
   365  0097                     	;# 
   366  0098                     	;# 
   367  0099                     	;# 
   368  009A                     	;# 
   369  009B                     	;# 
   370  009C                     	;# 
   371  009D                     	;# 
   372  009E                     	;# 
   373  009F                     	;# 
   374  0105                     	;# 
   375  0107                     	;# 
   376  0108                     	;# 
   377  0109                     	;# 
   378  010C                     	;# 
   379  010C                     	;# 
   380  010D                     	;# 
   381  010E                     	;# 
   382  010F                     	;# 
   383  0185                     	;# 
   384  0187                     	;# 
   385  0188                     	;# 
   386  0189                     	;# 
   387  018C                     	;# 
   388  018D                     	;# 
   389  0000                     	;# 
   390  0001                     	;# 
   391  0002                     	;# 
   392  0003                     	;# 
   393  0004                     	;# 
   394  0005                     	;# 
   395  0006                     	;# 
   396  0007                     	;# 
   397  0008                     	;# 
   398  0009                     	;# 
   399  000A                     	;# 
   400  000B                     	;# 
   401  000C                     	;# 
   402  000D                     	;# 
   403  000E                     	;# 
   404  000E                     	;# 
   405  000F                     	;# 
   406  0010                     	;# 
   407  0011                     	;# 
   408  0012                     	;# 
   409  0013                     	;# 
   410  0014                     	;# 
   411  0015                     	;# 
   412  0015                     	;# 
   413  0016                     	;# 
   414  0017                     	;# 
   415  0018                     	;# 
   416  0019                     	;# 
   417  001A                     	;# 
   418  001B                     	;# 
   419  001B                     	;# 
   420  001C                     	;# 
   421  001D                     	;# 
   422  001E                     	;# 
   423  001F                     	;# 
   424  0081                     	;# 
   425  0085                     	;# 
   426  0086                     	;# 
   427  0087                     	;# 
   428  0088                     	;# 
   429  0089                     	;# 
   430  008C                     	;# 
   431  008D                     	;# 
   432  008E                     	;# 
   433  008F                     	;# 
   434  0090                     	;# 
   435  0091                     	;# 
   436  0092                     	;# 
   437  0093                     	;# 
   438  0093                     	;# 
   439  0093                     	;# 
   440  0094                     	;# 
   441  0095                     	;# 
   442  0096                     	;# 
   443  0097                     	;# 
   444  0098                     	;# 
   445  0099                     	;# 
   446  009A                     	;# 
   447  009B                     	;# 
   448  009C                     	;# 
   449  009D                     	;# 
   450  009E                     	;# 
   451  009F                     	;# 
   452  0105                     	;# 
   453  0107                     	;# 
   454  0108                     	;# 
   455  0109                     	;# 
   456  010C                     	;# 
   457  010C                     	;# 
   458  010D                     	;# 
   459  010E                     	;# 
   460  010F                     	;# 
   461  0185                     	;# 
   462  0187                     	;# 
   463  0188                     	;# 
   464  0189                     	;# 
   465  018C                     	;# 
   466  018D                     	;# 
   467  0007                     _PORTCbits	set	7
   468  001A                     _RCREG	set	26
   469  0018                     _RCSTAbits	set	24
   470  0019                     _TXREG	set	25
   471  001E                     _ADRESH	set	30
   472  001F                     _ADCON0bits	set	31
   473  0009                     _PORTE	set	9
   474  0008                     _PORTD	set	8
   475  0007                     _PORTC	set	7
   476  0006                     _PORTB	set	6
   477  0005                     _PORTA	set	5
   478  0001                     _TMR0	set	1
   479  000B                     _INTCONbits	set	11
   480  000C                     _PIR1bits	set	12
   481  00C4                     _CREN	set	196
   482  008C                     _PIE1bits	set	140
   483  0098                     _TXSTAbits	set	152
   484  0099                     _SPBRG	set	153
   485  009F                     _ADCON1bits	set	159
   486  0081                     _OPTION_REGbits	set	129
   487  008F                     _OSCCONbits	set	143
   488  0096                     _IOCB	set	150
   489  0089                     _TRISE	set	137
   490  0088                     _TRISD	set	136
   491  0087                     _TRISCbits	set	135
   492  0087                     _TRISC	set	135
   493  0086                     _TRISB	set	134
   494  0085                     _TRISAbits	set	133
   495  0085                     _TRISA	set	133
   496  0189                     _ANSELH	set	393
   497  0188                     _ANSELbits	set	392
   498                           
   499                           	psect	strings
   500  05BA                     __pstrings:
   501  05BA                     stringtab:
   502  05BA                     __stringtab:
   503  05BA                     stringcode:	
   504                           ;	String table - string pointers are 1 byte each
   505                           
   506  05BA                     stringdir:
   507  05BA  3005               	movlw	high stringdir
   508  05BB  008A               	movwf	10
   509  05BC  0804               	movf	4,w
   510  05BD  0A84               	incf	4,f
   511  05BE  0782               	addwf	2,f
   512  05BF                     __stringbase:
   513  05BF  3400               	retlw	0
   514  05C0                     __end_of__stringtab:
   515  05C0                     STR_1:
   516  05C0  3453               	retlw	83	;'S'
   517  05C1  3431               	retlw	49	;'1'
   518  05C2  343A               	retlw	58	;':'
   519  05C3  3420               	retlw	32	;' '
   520  05C4  3420               	retlw	32	;' '
   521  05C5  3420               	retlw	32	;' '
   522  05C6  3453               	retlw	83	;'S'
   523  05C7  3432               	retlw	50	;'2'
   524  05C8  343A               	retlw	58	;':'
   525  05C9  3420               	retlw	32	;' '
   526  05CA  3420               	retlw	32	;' '
   527  05CB  3420               	retlw	32	;' '
   528  05CC  3453               	retlw	83	;'S'
   529  05CD  3433               	retlw	51	;'3'
   530  05CE  343A               	retlw	58	;':'
   531  05CF  3420               	retlw	32	;' '
   532  05D0  3400               	retlw	0
   533                           
   534                           	psect	cinit
   535  000F                     start_initialization:	
   536                           ; #config settings
   537                           
   538  000F                     __initialization:
   539                           
   540                           ; Clear objects allocated to COMMON
   541  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   542  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   543  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   544                           
   545                           ; Clear objects allocated to BANK0
   546  0012  1383               	bcf	3,7	;select IRP bank0
   547  0013  3020               	movlw	low __pbssBANK0
   548  0014  0084               	movwf	4
   549  0015  3037               	movlw	low (__pbssBANK0+23)
   550  0016  120A  118A  2620  120A  118A  	fcall	clear_ram0
   551  001B                     end_of_initialization:	
   552                           ;End of C runtime variable initialization code
   553                           
   554  001B                     __end_of__initialization:
   555  001B  0183               	clrf	3
   556  001C  120A  118A  2BF7   	ljmp	_main	;jump to C main() function
   557                           
   558                           	psect	bssCOMMON
   559  0078                     __pbssCOMMON:
   560  0078                     _x1:
   561  0078                     	ds	1
   562  0079                     _unidad:
   563  0079                     	ds	1
   564  007A                     _voltaje:
   565  007A                     	ds	1
   566                           
   567                           	psect	bssBANK0
   568  0020                     __pbssBANK0:
   569  0020                     _pressed_ok1:
   570  0020                     	ds	2
   571  0022                     _pressed_ok2:
   572  0022                     	ds	2
   573  0024                     _i:
   574  0024                     	ds	2
   575  0026                     _aux2:
   576  0026                     	ds	1
   577  0027                     _aux1:
   578  0027                     	ds	1
   579  0028                     _compu_valor2:
   580  0028                     	ds	1
   581  0029                     _compu_valor1:
   582  0029                     	ds	1
   583  002A                     _contador:
   584  002A                     	ds	1
   585  002B                     _leer:
   586  002B                     	ds	1
   587  002C                     _y2z:
   588  002C                     	ds	1
   589  002D                     _x2z:
   590  002D                     	ds	1
   591  002E                     _y1z:
   592  002E                     	ds	1
   593  002F                     _x1z:
   594  002F                     	ds	1
   595  0030                     _unidadz:
   596  0030                     	ds	1
   597  0031                     _voltajez:
   598  0031                     	ds	1
   599  0032                     _y2:
   600  0032                     	ds	1
   601  0033                     _x2:
   602  0033                     	ds	1
   603  0034                     _y1:
   604  0034                     	ds	1
   605  0035                     _adc_value2:
   606  0035                     	ds	1
   607  0036                     _adc_value1:
   608  0036                     	ds	1
   609                           
   610                           	psect	clrtext
   611  0620                     clear_ram0:	
   612                           ;	Called with FSR containing the base address, and
   613                           ;	W with the last address+1
   614                           
   615  0620  0064               	clrwdt	;clear the watchdog before getting into this loop
   616  0621                     clrloop0:
   617  0621  0180               	clrf	0	;clear RAM location pointed to by FSR
   618  0622  0A84               	incf	4,f	;increment pointer
   619  0623  0604               	xorwf	4,w	;XOR with final address
   620  0624  1903               	btfsc	3,2	;have we reached the end yet?
   621  0625  3400               	retlw	0	;all done for this memory range, return
   622  0626  0604               	xorwf	4,w	;XOR again to restore value
   623  0627  2E21               	goto	clrloop0	;do the next byte
   624                           
   625                           	psect	cstackCOMMON
   626  0070                     __pcstackCOMMON:
   627  0070                     ?_leer_char:
   628  0070                     ??_leer_char:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0070                     ?_setup:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ?_osc_config:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0070                     ?_interrup_config:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0070                     ?_tmr0_config:	
   641                           ; 1 bytes @ 0x0
   642                           
   643  0070                     ?_Lcd_Init:	
   644                           ; 1 bytes @ 0x0
   645                           
   646  0070                     ?_adc_config:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0070                     ?_USART_config:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0070                     ?_lcd:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0070                     ?_initADC:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0070                     ?_adc_conversion1:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0070                     ?_adc_conversion2:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0070                     ?_USART_lib_config:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0070                     ?_Lcd_Write_String:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0070                     ?_Conversion1:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0070                     ?_Conversion2:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0070                     ?_contador_lcd:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0070                     ?_Lcd_Write_Char:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ?_virtual_display1:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0070                     ?_virtual_display2:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0070                     ?_escribir_char:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0070                     ?_ISR:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0070                     ??_ISR:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0070                     ?_main:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  0070                     ?_Lcd_Port:	
   701                           ; 1 bytes @ 0x0
   702                           
   703  0070                     ?_Lcd_Cmd:	
   704                           ; 1 bytes @ 0x0
   705                           
   706                           
   707                           ; 1 bytes @ 0x0
   708  0070                     	ds	3
   709  0073                     ??_setup:
   710  0073                     ??_osc_config:	
   711                           ; 1 bytes @ 0x3
   712                           
   713  0073                     ??_interrup_config:	
   714                           ; 1 bytes @ 0x3
   715                           
   716  0073                     ??_tmr0_config:	
   717                           ; 1 bytes @ 0x3
   718                           
   719  0073                     ??_USART_config:	
   720                           ; 1 bytes @ 0x3
   721                           
   722  0073                     ??_initADC:	
   723                           ; 1 bytes @ 0x3
   724                           
   725  0073                     ??_adc_conversion1:	
   726                           ; 1 bytes @ 0x3
   727                           
   728  0073                     ??_adc_conversion2:	
   729                           ; 1 bytes @ 0x3
   730                           
   731  0073                     ??_USART_lib_config:	
   732                           ; 1 bytes @ 0x3
   733                           
   734  0073                     ??_contador_lcd:	
   735                           ; 1 bytes @ 0x3
   736                           
   737  0073                     ??_escribir_char:	
   738                           ; 1 bytes @ 0x3
   739                           
   740  0073                     ??_Lcd_Port:	
   741                           ; 1 bytes @ 0x3
   742                           
   743  0073                     ?___awdiv:	
   744                           ; 1 bytes @ 0x3
   745                           
   746  0073                     ?___awmod:	
   747                           ; 2 bytes @ 0x3
   748                           
   749  0073                     escribir_char@valor:	
   750                           ; 2 bytes @ 0x3
   751                           
   752  0073                     Lcd_Port@a:	
   753                           ; 1 bytes @ 0x3
   754                           
   755  0073                     ___awdiv@divisor:	
   756                           ; 1 bytes @ 0x3
   757                           
   758  0073                     ___awmod@divisor:	
   759                           ; 2 bytes @ 0x3
   760                           
   761                           
   762                           ; 2 bytes @ 0x3
   763  0073                     	ds	1
   764  0074                     ??_Lcd_Write_Char:
   765  0074                     ??_virtual_display1:	
   766                           ; 1 bytes @ 0x4
   767                           
   768  0074                     ??_virtual_display2:	
   769                           ; 1 bytes @ 0x4
   770                           
   771  0074                     ??_Lcd_Cmd:	
   772                           ; 1 bytes @ 0x4
   773                           
   774                           
   775                           ; 1 bytes @ 0x4
   776  0074                     	ds	1
   777  0075                     initADC@CHS:
   778  0075                     Lcd_Write_Char@a:	
   779                           ; 1 bytes @ 0x5
   780                           
   781  0075                     ___awdiv@dividend:	
   782                           ; 1 bytes @ 0x5
   783                           
   784  0075                     ___awmod@dividend:	
   785                           ; 2 bytes @ 0x5
   786                           
   787                           
   788                           ; 2 bytes @ 0x5
   789  0075                     	ds	1
   790  0076                     ??_adc_config:
   791  0076                     ??_Lcd_Write_String:	
   792                           ; 1 bytes @ 0x6
   793                           
   794  0076                     Lcd_Cmd@a:	
   795                           ; 1 bytes @ 0x6
   796                           
   797                           
   798                           ; 1 bytes @ 0x6
   799  0076                     	ds	1
   800  0077                     ?_Lcd_Set_Cursor:
   801  0077                     ??___awdiv:	
   802                           ; 1 bytes @ 0x7
   803                           
   804  0077                     ??___awmod:	
   805                           ; 1 bytes @ 0x7
   806                           
   807  0077                     Lcd_Set_Cursor@b:	
   808                           ; 1 bytes @ 0x7
   809                           
   810                           
   811                           ; 1 bytes @ 0x7
   812  0077                     	ds	1
   813  0078                     ??_main:
   814                           
   815                           	psect	cstackBANK0
   816  0037                     __pcstackBANK0:	
   817                           ; 1 bytes @ 0x8
   818                           
   819  0037                     ??_Lcd_Init:
   820  0037                     ??_Lcd_Set_Cursor:	
   821                           ; 1 bytes @ 0x0
   822                           
   823  0037                     Lcd_Write_String@a:	
   824                           ; 1 bytes @ 0x0
   825                           
   826  0037                     ___awdiv@counter:	
   827                           ; 1 bytes @ 0x0
   828                           
   829  0037                     ___awmod@counter:	
   830                           ; 1 bytes @ 0x0
   831                           
   832                           
   833                           ; 1 bytes @ 0x0
   834  0037                     	ds	1
   835  0038                     Lcd_Set_Cursor@a:
   836  0038                     ___awdiv@sign:	
   837                           ; 1 bytes @ 0x1
   838                           
   839  0038                     ___awmod@sign:	
   840                           ; 1 bytes @ 0x1
   841                           
   842  0038                     Lcd_Write_String@i:	
   843                           ; 1 bytes @ 0x1
   844                           
   845                           
   846                           ; 2 bytes @ 0x1
   847  0038                     	ds	1
   848  0039                     Lcd_Set_Cursor@temp:
   849  0039                     ___awdiv@quotient:	
   850                           ; 1 bytes @ 0x2
   851                           
   852                           
   853                           ; 2 bytes @ 0x2
   854  0039                     	ds	2
   855  003B                     ??_Conversion1:
   856  003B                     ??_Conversion2:	
   857                           ; 1 bytes @ 0x4
   858                           
   859                           
   860                           ; 1 bytes @ 0x4
   861  003B                     	ds	3
   862  003E                     ??_lcd:
   863                           
   864                           ; 1 bytes @ 0x7
   865  003E                     	ds	3
   866  0041                     lcd@w1:
   867                           
   868                           ; 1 bytes @ 0xA
   869  0041                     	ds	1
   870  0042                     lcd@w2:
   871                           
   872                           ; 1 bytes @ 0xB
   873  0042                     	ds	1
   874                           
   875                           	psect	maintext
   876  03F7                     __pmaintext:	
   877 ;;
   878 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   879 ;;
   880 ;; *************** function _main *****************
   881 ;; Defined at:
   882 ;;		line 141 in file "LCD.c"
   883 ;; Parameters:    Size  Location     Type
   884 ;;		None
   885 ;; Auto vars:     Size  Location     Type
   886 ;;		None
   887 ;; Return value:  Size  Location     Type
   888 ;;                  1    wreg      void 
   889 ;; Registers used:
   890 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   891 ;; Tracked objects:
   892 ;;		On entry : B00/0
   893 ;;		On exit  : 0/0
   894 ;;		Unchanged: 0/0
   895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   896 ;;      Params:         0       0       0       0       0
   897 ;;      Locals:         0       0       0       0       0
   898 ;;      Temps:          0       0       0       0       0
   899 ;;      Totals:         0       0       0       0       0
   900 ;;Total ram usage:        0 bytes
   901 ;; Hardware stack levels required when called:    6
   902 ;; This function calls:
   903 ;;		_Lcd_Init
   904 ;;		_USART_config
   905 ;;		_adc_config
   906 ;;		_adc_conversion1
   907 ;;		_adc_conversion2
   908 ;;		_initADC
   909 ;;		_interrup_config
   910 ;;		_lcd
   911 ;;		_osc_config
   912 ;;		_setup
   913 ;;		_tmr0_config
   914 ;; This function is called by:
   915 ;;		Startup code after reset
   916 ;; This function uses a non-reentrant model
   917 ;;
   918                           
   919                           
   920                           ;psect for function _main
   921  03F7                     _main:
   922  03F7                     l1909:	
   923                           ;incstack = 0
   924                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   925                           
   926                           
   927                           ;LCD.c: 143:     INTCONbits.RBIE = 0;
   928  03F7  120A  118A  249E  120A  118A  	fcall	_setup
   929  03FC                     l1911:
   930                           
   931                           ;LCD.c: 144:     INTCONbits.T0IF = 0;
   932  03FC  120A  118A  260C  120A  118A  	fcall	_osc_config
   933  0401                     l1913:
   934                           
   935                           ;LCD.c: 145:     INTCONbits.INTF = 0;
   936  0401  120A  118A  2600  120A  118A  	fcall	_interrup_config
   937                           
   938                           ;LCD.c: 146:     INTCONbits.RBIF = 0;
   939  0406  120A  118A  25E6  120A  118A  	fcall	_tmr0_config
   940                           
   941                           ;LCD.c: 147:     IOCB = 0b00000000;
   942  040B  120A  118A  22EA  120A  118A  	fcall	_Lcd_Init
   943  0410                     l1915:
   944                           
   945                           ;LCD.c: 148: }
   946  0410  120A  118A  2628  120A  118A  	fcall	_adc_config
   947  0415                     l1917:
   948                           
   949                           ;LCD.c: 149: 
   950  0415  120A  118A  262F  120A  118A  	fcall	_USART_config
   951  041A                     l158:	
   952                           ;LCD.c: 151: {
   953                           
   954                           
   955                           ;LCD.c: 152:     OSCCONbits.IRCF2 = 1;;LCD.c: 153:     OSCCONbits.IRCF1 = 1;
   956  041A  120A  118A  20C8  120A  118A  	fcall	_lcd
   957  041F                     l1919:
   958                           
   959                           ;LCD.c: 154:     OSCCONbits.IRCF0 = 0;
   960  041F  1283               	bcf	3,5	;RP0=0, select bank0
   961  0420  1303               	bcf	3,6	;RP1=0, select bank0
   962  0421  0820               	movf	_pressed_ok1,w
   963  0422  3E01               	addlw	1
   964  0423  00A0               	movwf	_pressed_ok1
   965  0424  0821               	movf	_pressed_ok1+1,w
   966  0425  1803               	skipnc
   967  0426  3E01               	addlw	1
   968  0427  3E00               	addlw	0
   969  0428  00A1               	movwf	_pressed_ok1+1
   970  0429                     l1921:
   971                           
   972                           ;LCD.c: 155:     OSCCONbits.OSTS = 0;
   973  0429  0822               	movf	_pressed_ok2,w
   974  042A  3E01               	addlw	1
   975  042B  00A2               	movwf	_pressed_ok2
   976  042C  0823               	movf	_pressed_ok2+1,w
   977  042D  1803               	skipnc
   978  042E  3E01               	addlw	1
   979  042F  3E00               	addlw	0
   980  0430  00A3               	movwf	_pressed_ok2+1
   981                           
   982                           ;LCD.c: 157:     OSCCONbits.LTS = 1;
   983  0431  3000               	movlw	0
   984  0432  120A  118A  201F  120A  118A  	fcall	_initADC
   985  0437                     l1923:
   986                           
   987                           ;LCD.c: 158:     OSCCONbits.SCS = 0;
   988  0437  120A  118A  25A2  120A  118A  	fcall	_adc_conversion1
   989  043C                     l1925:
   990                           
   991                           ;LCD.c: 159: }
   992  043C  3001               	movlw	1
   993  043D  120A  118A  201F  120A  118A  	fcall	_initADC
   994                           
   995                           ;LCD.c: 160: 
   996  0442  120A  118A  258A  120A  118A  	fcall	_adc_conversion2
   997  0447  2C1A               	goto	l158
   998  0448  120A  118A  280C   	ljmp	start
   999  044B                     __end_of_main:
  1000                           
  1001                           	psect	text1
  1002  05E6                     __ptext1:	
  1003 ;; *************** function _tmr0_config *****************
  1004 ;; Defined at:
  1005 ;;		line 213 in file "LCD.c"
  1006 ;; Parameters:    Size  Location     Type
  1007 ;;		None
  1008 ;; Auto vars:     Size  Location     Type
  1009 ;;		None
  1010 ;; Return value:  Size  Location     Type
  1011 ;;                  1    wreg      void 
  1012 ;; Registers used:
  1013 ;;		wreg
  1014 ;; Tracked objects:
  1015 ;;		On entry : 0/0
  1016 ;;		On exit  : 0/0
  1017 ;;		Unchanged: 0/0
  1018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1019 ;;      Params:         0       0       0       0       0
  1020 ;;      Locals:         0       0       0       0       0
  1021 ;;      Temps:          0       0       0       0       0
  1022 ;;      Totals:         0       0       0       0       0
  1023 ;;Total ram usage:        0 bytes
  1024 ;; Hardware stack levels used:    1
  1025 ;; Hardware stack levels required when called:    2
  1026 ;; This function calls:
  1027 ;;		Nothing
  1028 ;; This function is called by:
  1029 ;;		_main
  1030 ;; This function uses a non-reentrant model
  1031 ;;
  1032                           
  1033                           
  1034                           ;psect for function _tmr0_config
  1035  05E6                     _tmr0_config:
  1036  05E6                     l1609:	
  1037                           ;incstack = 0
  1038                           ; Regs used in _tmr0_config: [wreg]
  1039                           
  1040                           
  1041                           ;LCD.c: 215:     Lcd_Set_Cursor(1,1);
  1042  05E6  1683               	bsf	3,5	;RP0=1, select bank1
  1043  05E7  1303               	bcf	3,6	;RP1=0, select bank1
  1044  05E8  1781               	bsf	1,7	;volatile
  1045                           
  1046                           ;LCD.c: 216:     Lcd_Write_String("S1:   S2:   S3: ");
  1047  05E9  1281               	bcf	1,5	;volatile
  1048                           
  1049                           ;LCD.c: 217:     Lcd_Set_Cursor(2,0);
  1050  05EA  1181               	bcf	1,3	;volatile
  1051                           
  1052                           ;LCD.c: 218:     Conversion1 ();
  1053  05EB  1101               	bcf	1,2	;volatile
  1054                           
  1055                           ;LCD.c: 219:     Lcd_Set_Cursor(2,6);
  1056  05EC  1481               	bsf	1,1	;volatile
  1057                           
  1058                           ;LCD.c: 220:     Conversion2 ();
  1059  05ED  1001               	bcf	1,0	;volatile
  1060  05EE                     l1611:
  1061                           
  1062                           ;LCD.c: 221:     contador_lcd();
  1063  05EE  30C8               	movlw	200
  1064  05EF  1283               	bcf	3,5	;RP0=0, select bank0
  1065  05F0  1303               	bcf	3,6	;RP1=0, select bank0
  1066  05F1  0081               	movwf	1	;volatile
  1067  05F2                     l173:
  1068  05F2  0008               	return
  1069  05F3                     __end_of_tmr0_config:
  1070                           
  1071                           	psect	text2
  1072  049E                     __ptext2:	
  1073 ;; *************** function _setup *****************
  1074 ;; Defined at:
  1075 ;;		line 168 in file "LCD.c"
  1076 ;; Parameters:    Size  Location     Type
  1077 ;;		None
  1078 ;; Auto vars:     Size  Location     Type
  1079 ;;		None
  1080 ;; Return value:  Size  Location     Type
  1081 ;;                  1    wreg      void 
  1082 ;; Registers used:
  1083 ;;		wreg, status,2
  1084 ;; Tracked objects:
  1085 ;;		On entry : 0/0
  1086 ;;		On exit  : 0/0
  1087 ;;		Unchanged: 0/0
  1088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1089 ;;      Params:         0       0       0       0       0
  1090 ;;      Locals:         0       0       0       0       0
  1091 ;;      Temps:          0       0       0       0       0
  1092 ;;      Totals:         0       0       0       0       0
  1093 ;;Total ram usage:        0 bytes
  1094 ;; Hardware stack levels used:    1
  1095 ;; Hardware stack levels required when called:    2
  1096 ;; This function calls:
  1097 ;;		Nothing
  1098 ;; This function is called by:
  1099 ;;		_main
  1100 ;; This function uses a non-reentrant model
  1101 ;;
  1102                           
  1103                           
  1104                           ;psect for function _setup
  1105  049E                     _setup:
  1106  049E                     l1571:	
  1107                           ;incstack = 0
  1108                           ; Regs used in _setup: [wreg+status,2]
  1109                           
  1110                           
  1111                           ;LCD.c: 170: }
  1112  049E  1683               	bsf	3,5	;RP0=1, select bank3
  1113  049F  1703               	bsf	3,6	;RP1=1, select bank3
  1114  04A0  1408               	bsf	8,0	;volatile
  1115                           
  1116                           ;LCD.c: 171: 
  1117  04A1  1488               	bsf	8,1	;volatile
  1118  04A2                     l1573:
  1119                           
  1120                           ;LCD.c: 172: 
  1121  04A2  3001               	movlw	1
  1122  04A3  1683               	bsf	3,5	;RP0=1, select bank1
  1123  04A4  1303               	bcf	3,6	;RP1=0, select bank1
  1124  04A5  0085               	movwf	5	;volatile
  1125  04A6                     l1575:
  1126                           
  1127                           ;LCD.c: 173: 
  1128  04A6  1405               	bsf	5,0	;volatile
  1129  04A7                     l1577:
  1130                           
  1131                           ;LCD.c: 174: 
  1132  04A7  1485               	bsf	5,1	;volatile
  1133  04A8                     l1579:
  1134                           
  1135                           ;LCD.c: 175: 
  1136  04A8  1283               	bcf	3,5	;RP0=0, select bank0
  1137  04A9  1303               	bcf	3,6	;RP1=0, select bank0
  1138  04AA  0185               	clrf	5	;volatile
  1139  04AB                     l1581:
  1140                           
  1141                           ;LCD.c: 176: void adc_config (void)
  1142  04AB  1683               	bsf	3,5	;RP0=1, select bank3
  1143  04AC  1703               	bsf	3,6	;RP1=1, select bank3
  1144  04AD  0189               	clrf	9	;volatile
  1145  04AE                     l1583:
  1146                           
  1147                           ;LCD.c: 177: {
  1148  04AE  1683               	bsf	3,5	;RP0=1, select bank1
  1149  04AF  1303               	bcf	3,6	;RP1=0, select bank1
  1150  04B0  0186               	clrf	6	;volatile
  1151  04B1                     l1585:
  1152                           
  1153                           ;LCD.c: 178:     initADC (0);
  1154  04B1  1283               	bcf	3,5	;RP0=0, select bank0
  1155  04B2  1303               	bcf	3,6	;RP1=0, select bank0
  1156  04B3  0186               	clrf	6	;volatile
  1157  04B4                     l1587:
  1158                           
  1159                           ;LCD.c: 179: }
  1160  04B4  1683               	bsf	3,5	;RP0=1, select bank1
  1161  04B5  1303               	bcf	3,6	;RP1=0, select bank1
  1162  04B6  0187               	clrf	7	;volatile
  1163  04B7                     l1589:
  1164                           
  1165                           ;LCD.c: 180: 
  1166  04B7  1307               	bcf	7,6	;volatile
  1167  04B8                     l1591:
  1168                           
  1169                           ;LCD.c: 181: void USART_config(void)
  1170  04B8  1787               	bsf	7,7	;volatile
  1171  04B9                     l1593:
  1172                           
  1173                           ;LCD.c: 182: {
  1174  04B9  1283               	bcf	3,5	;RP0=0, select bank0
  1175  04BA  1303               	bcf	3,6	;RP1=0, select bank0
  1176  04BB  0187               	clrf	7	;volatile
  1177  04BC                     l1595:
  1178                           
  1179                           ;LCD.c: 183:     USART_lib_config();
  1180  04BC  1683               	bsf	3,5	;RP0=1, select bank1
  1181  04BD  1303               	bcf	3,6	;RP1=0, select bank1
  1182  04BE  0188               	clrf	8	;volatile
  1183  04BF                     l1597:
  1184                           
  1185                           ;LCD.c: 184: }
  1186  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  1187  04C0  1303               	bcf	3,6	;RP1=0, select bank0
  1188  04C1  0188               	clrf	8	;volatile
  1189  04C2                     l1599:
  1190                           
  1191                           ;LCD.c: 185: 
  1192  04C2  1683               	bsf	3,5	;RP0=1, select bank1
  1193  04C3  1303               	bcf	3,6	;RP1=0, select bank1
  1194  04C4  0189               	clrf	9	;volatile
  1195  04C5                     l1601:
  1196                           
  1197                           ;LCD.c: 186: 
  1198  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  1199  04C6  1303               	bcf	3,6	;RP1=0, select bank0
  1200  04C7  0189               	clrf	9	;volatile
  1201  04C8                     l164:
  1202  04C8  0008               	return
  1203  04C9                     __end_of_setup:
  1204                           
  1205                           	psect	text3
  1206  060C                     __ptext3:	
  1207 ;; *************** function _osc_config *****************
  1208 ;; Defined at:
  1209 ;;		line 202 in file "LCD.c"
  1210 ;; Parameters:    Size  Location     Type
  1211 ;;		None
  1212 ;; Auto vars:     Size  Location     Type
  1213 ;;		None
  1214 ;; Return value:  Size  Location     Type
  1215 ;;                  1    wreg      void 
  1216 ;; Registers used:
  1217 ;;		None
  1218 ;; Tracked objects:
  1219 ;;		On entry : 0/0
  1220 ;;		On exit  : 0/0
  1221 ;;		Unchanged: 0/0
  1222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1223 ;;      Params:         0       0       0       0       0
  1224 ;;      Locals:         0       0       0       0       0
  1225 ;;      Temps:          0       0       0       0       0
  1226 ;;      Totals:         0       0       0       0       0
  1227 ;;Total ram usage:        0 bytes
  1228 ;; Hardware stack levels used:    1
  1229 ;; Hardware stack levels required when called:    2
  1230 ;; This function calls:
  1231 ;;		Nothing
  1232 ;; This function is called by:
  1233 ;;		_main
  1234 ;; This function uses a non-reentrant model
  1235 ;;
  1236                           
  1237                           
  1238                           ;psect for function _osc_config
  1239  060C                     _osc_config:
  1240  060C                     l1603:	
  1241                           ;incstack = 0
  1242                           ; Regs used in _osc_config: []
  1243                           
  1244                           
  1245                           ;LCD.c: 204:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1246  060C  1683               	bsf	3,5	;RP0=1, select bank1
  1247  060D  1303               	bcf	3,6	;RP1=0, select bank1
  1248  060E  170F               	bsf	15,6	;volatile
  1249                           
  1250                           ;LCD.c: 205:         if (ADCON0bits.GO_DONE == 0)
  1251  060F  168F               	bsf	15,5	;volatile
  1252                           
  1253                           ;LCD.c: 206:         {
  1254  0610  120F               	bcf	15,4	;volatile
  1255                           
  1256                           ;LCD.c: 207:             ADCON0bits.GO_DONE = 1;
  1257  0611  118F               	bcf	15,3	;volatile
  1258                           
  1259                           ;LCD.c: 208:             adc_value2 = ADRESH;
  1260  0612  110F               	bcf	15,2	;volatile
  1261                           
  1262                           ;LCD.c: 209:         }
  1263  0613  148F               	bsf	15,1	;volatile
  1264                           
  1265                           ;LCD.c: 210: }
  1266  0614  100F               	bcf	15,0	;volatile
  1267  0615                     l170:
  1268  0615  0008               	return
  1269  0616                     __end_of_osc_config:
  1270                           
  1271                           	psect	text4
  1272  00C8                     __ptext4:	
  1273 ;; *************** function _lcd *****************
  1274 ;; Defined at:
  1275 ;;		line 264 in file "LCD.c"
  1276 ;; Parameters:    Size  Location     Type
  1277 ;;		None
  1278 ;; Auto vars:     Size  Location     Type
  1279 ;;  w2              1   11[BANK0 ] unsigned char 
  1280 ;;  w1              1   10[BANK0 ] unsigned char 
  1281 ;;  a               2    0        unsigned int 
  1282 ;; Return value:  Size  Location     Type
  1283 ;;                  1    wreg      void 
  1284 ;; Registers used:
  1285 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1286 ;; Tracked objects:
  1287 ;;		On entry : 0/0
  1288 ;;		On exit  : 0/0
  1289 ;;		Unchanged: 0/0
  1290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1291 ;;      Params:         0       0       0       0       0
  1292 ;;      Locals:         0       2       0       0       0
  1293 ;;      Temps:          0       3       0       0       0
  1294 ;;      Totals:         0       5       0       0       0
  1295 ;;Total ram usage:        5 bytes
  1296 ;; Hardware stack levels used:    1
  1297 ;; Hardware stack levels required when called:    5
  1298 ;; This function calls:
  1299 ;;		_Conversion1
  1300 ;;		_Conversion2
  1301 ;;		_Lcd_Set_Cursor
  1302 ;;		_Lcd_Write_Char
  1303 ;;		_Lcd_Write_String
  1304 ;;		___awdiv
  1305 ;;		___awmod
  1306 ;;		_contador_lcd
  1307 ;; This function is called by:
  1308 ;;		_main
  1309 ;; This function uses a non-reentrant model
  1310 ;;
  1311                           
  1312                           
  1313                           ;psect for function _lcd
  1314  00C8                     _lcd:
  1315  00C8                     l1887:	
  1316                           ;incstack = 0
  1317                           ; Regs used in _lcd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1318                           
  1319                           
  1320                           ;LCD.c: 266: ;LCD.c: 267:     Lcd_Write_Char(unidadz+48);
  1321  00C8  01F7               	clrf	Lcd_Set_Cursor@b
  1322  00C9  0AF7               	incf	Lcd_Set_Cursor@b,f
  1323  00CA  3001               	movlw	1
  1324  00CB  120A  118A  24F2  120A  118A  	fcall	_Lcd_Set_Cursor
  1325  00D0                     l1889:
  1326                           
  1327                           ;LCD.c: 268:     Lcd_Write_Char(46);
  1328  00D0  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1329  00D1  120A  118A  24C9  120A  118A  	fcall	_Lcd_Write_String
  1330  00D6                     l1891:
  1331                           
  1332                           ;LCD.c: 269:     Lcd_Write_Char(x2z+48);
  1333  00D6  01F7               	clrf	Lcd_Set_Cursor@b
  1334  00D7  3002               	movlw	2
  1335  00D8  120A  118A  24F2  120A  118A  	fcall	_Lcd_Set_Cursor
  1336  00DD                     l1893:
  1337                           
  1338                           ;LCD.c: 270:     Lcd_Write_Char(y2z+48);
  1339  00DD  120A  118A  21F2  120A  118A  	fcall	_Conversion1
  1340  00E2                     l1895:
  1341                           
  1342                           ;LCD.c: 271:     Lcd_Write_Char(86);
  1343  00E2  3006               	movlw	6
  1344  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  1345  00E4  1303               	bcf	3,6	;RP1=0, select bank0
  1346  00E5  00BE               	movwf	??_lcd
  1347  00E6  083E               	movf	??_lcd,w
  1348  00E7  00F7               	movwf	Lcd_Set_Cursor@b
  1349  00E8  3002               	movlw	2
  1350  00E9  120A  118A  24F2  120A  118A  	fcall	_Lcd_Set_Cursor
  1351  00EE                     l1897:
  1352                           
  1353                           ;LCD.c: 272:     virtual_display2();
  1354  00EE  120A  118A  2163  120A  118A  	fcall	_Conversion2
  1355  00F3                     l1899:
  1356                           
  1357                           ;LCD.c: 273: }
  1358  00F3  120A  118A  2555  120A  118A  	fcall	_contador_lcd
  1359  00F8                     l1901:
  1360                           
  1361                           ;LCD.c: 274: 
  1362  00F8  300A               	movlw	10
  1363  00F9  1283               	bcf	3,5	;RP0=0, select bank0
  1364  00FA  1303               	bcf	3,6	;RP1=0, select bank0
  1365  00FB  022A               	subwf	_contador,w
  1366  00FC  1803               	skipnc
  1367  00FD  28FF               	goto	u811
  1368  00FE  2900               	goto	u810
  1369  00FF                     u811:
  1370  00FF  2914               	goto	l1905
  1371  0100                     u810:
  1372  0100                     l1903:
  1373                           
  1374                           ;LCD.c: 275: void virtual_display1 (void);LCD.c: 276: {
  1375  0100  300E               	movlw	14
  1376  0101  00BE               	movwf	??_lcd
  1377  0102  083E               	movf	??_lcd,w
  1378  0103  00F7               	movwf	Lcd_Set_Cursor@b
  1379  0104  3002               	movlw	2
  1380  0105  120A  118A  24F2  120A  118A  	fcall	_Lcd_Set_Cursor
  1381                           
  1382                           ;LCD.c: 277: 
  1383  010A  1283               	bcf	3,5	;RP0=0, select bank0
  1384  010B  1303               	bcf	3,6	;RP1=0, select bank0
  1385  010C  082A               	movf	_contador,w
  1386  010D  3E30               	addlw	48
  1387  010E  120A  118A  25D1  120A  118A  	fcall	_Lcd_Write_Char
  1388                           
  1389                           ;LCD.c: 278:     if (pressed_ok1 > 25)
  1390  0113  2962               	goto	l193
  1391  0114                     l1905:
  1392  0114  300A               	movlw	10
  1393  0115  022A               	subwf	_contador,w
  1394  0116  1C03               	skipc
  1395  0117  2919               	goto	u821
  1396  0118  291A               	goto	u820
  1397  0119                     u821:
  1398  0119  2962               	goto	l193
  1399  011A                     u820:
  1400  011A                     l1907:
  1401                           
  1402                           ;LCD.c: 280:             escribir_char (83);;LCD.c: 281:             escribir_char (49);
  1403  011A  300A               	movlw	10
  1404  011B  00F3               	movwf	___awdiv@divisor
  1405  011C  3000               	movlw	0
  1406  011D  00F4               	movwf	___awdiv@divisor+1
  1407  011E  082A               	movf	_contador,w
  1408  011F  00BE               	movwf	??_lcd
  1409  0120  01BF               	clrf	??_lcd+1
  1410  0121  083E               	movf	??_lcd,w
  1411  0122  00F5               	movwf	___awdiv@dividend
  1412  0123  083F               	movf	??_lcd+1,w
  1413  0124  00F6               	movwf	___awdiv@dividend+1
  1414  0125  120A  118A  2281  120A  118A  	fcall	___awdiv
  1415  012A  0873               	movf	?___awdiv,w
  1416  012B  1283               	bcf	3,5	;RP0=0, select bank0
  1417  012C  1303               	bcf	3,6	;RP1=0, select bank0
  1418  012D  00C0               	movwf	??_lcd+2
  1419  012E  0840               	movf	??_lcd+2,w
  1420  012F  00C1               	movwf	lcd@w1
  1421                           
  1422                           ;LCD.c: 282:             escribir_char (58);
  1423  0130  300A               	movlw	10
  1424  0131  00F3               	movwf	___awmod@divisor
  1425  0132  3000               	movlw	0
  1426  0133  00F4               	movwf	___awmod@divisor+1
  1427  0134  082A               	movf	_contador,w
  1428  0135  00BE               	movwf	??_lcd
  1429  0136  01BF               	clrf	??_lcd+1
  1430  0137  083E               	movf	??_lcd,w
  1431  0138  00F5               	movwf	___awmod@dividend
  1432  0139  083F               	movf	??_lcd+1,w
  1433  013A  00F6               	movwf	___awmod@dividend+1
  1434  013B  120A  118A  2347  120A  118A  	fcall	___awmod
  1435  0140  0873               	movf	?___awmod,w
  1436  0141  1283               	bcf	3,5	;RP0=0, select bank0
  1437  0142  1303               	bcf	3,6	;RP1=0, select bank0
  1438  0143  00C0               	movwf	??_lcd+2
  1439  0144  0840               	movf	??_lcd+2,w
  1440  0145  00C2               	movwf	lcd@w2
  1441                           
  1442                           ;LCD.c: 283:             escribir_char (unidad+48);
  1443  0146  300D               	movlw	13
  1444  0147  00BE               	movwf	??_lcd
  1445  0148  083E               	movf	??_lcd,w
  1446  0149  00F7               	movwf	Lcd_Set_Cursor@b
  1447  014A  3002               	movlw	2
  1448  014B  120A  118A  24F2  120A  118A  	fcall	_Lcd_Set_Cursor
  1449                           
  1450                           ;LCD.c: 284:             escribir_char (46);
  1451  0150  1283               	bcf	3,5	;RP0=0, select bank0
  1452  0151  1303               	bcf	3,6	;RP1=0, select bank0
  1453  0152  0841               	movf	lcd@w1,w
  1454  0153  3E30               	addlw	48
  1455  0154  120A  118A  25D1  120A  118A  	fcall	_Lcd_Write_Char
  1456                           
  1457                           ;LCD.c: 285:             escribir_char (x2+48);
  1458  0159  1283               	bcf	3,5	;RP0=0, select bank0
  1459  015A  1303               	bcf	3,6	;RP1=0, select bank0
  1460  015B  0842               	movf	lcd@w2,w
  1461  015C  3E30               	addlw	48
  1462  015D  120A  118A  25D1  120A  118A  	fcall	_Lcd_Write_Char
  1463  0162                     l193:
  1464  0162  0008               	return
  1465  0163                     __end_of_lcd:
  1466                           
  1467                           	psect	text5
  1468  0555                     __ptext5:	
  1469 ;; *************** function _contador_lcd *****************
  1470 ;; Defined at:
  1471 ;;		line 382 in file "LCD.c"
  1472 ;; Parameters:    Size  Location     Type
  1473 ;;		None
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;		None
  1476 ;; Return value:  Size  Location     Type
  1477 ;;                  1    wreg      void 
  1478 ;; Registers used:
  1479 ;;		wreg, status,2, status,0
  1480 ;; Tracked objects:
  1481 ;;		On entry : 0/0
  1482 ;;		On exit  : 0/0
  1483 ;;		Unchanged: 0/0
  1484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1485 ;;      Params:         0       0       0       0       0
  1486 ;;      Locals:         0       0       0       0       0
  1487 ;;      Temps:          1       0       0       0       0
  1488 ;;      Totals:         1       0       0       0       0
  1489 ;;Total ram usage:        1 bytes
  1490 ;; Hardware stack levels used:    1
  1491 ;; Hardware stack levels required when called:    2
  1492 ;; This function calls:
  1493 ;;		Nothing
  1494 ;; This function is called by:
  1495 ;;		_lcd
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           
  1499                           
  1500                           ;psect for function _contador_lcd
  1501  0555                     _contador_lcd:
  1502  0555                     l1551:	
  1503                           ;incstack = 0
  1504                           ; Regs used in _contador_lcd: [wreg+status,2+status,0]
  1505                           
  1506  0555  302B               	movlw	43
  1507  0556  1283               	bcf	3,5	;RP0=0, select bank0
  1508  0557  1303               	bcf	3,6	;RP1=0, select bank0
  1509  0558  062B               	xorwf	_leer,w
  1510  0559  1D03               	btfss	3,2
  1511  055A  2D5C               	goto	u601
  1512  055B  2D5D               	goto	u600
  1513  055C                     u601:
  1514  055C  2D64               	goto	l1557
  1515  055D                     u600:
  1516  055D                     l1553:
  1517  055D  082A               	movf	_contador,w
  1518  055E  3E01               	addlw	1
  1519  055F  00F3               	movwf	??_contador_lcd
  1520  0560  0873               	movf	??_contador_lcd,w
  1521  0561  00AA               	movwf	_contador
  1522  0562                     l1555:
  1523  0562  01AB               	clrf	_leer
  1524  0563  2D70               	goto	l223
  1525  0564                     l1557:
  1526  0564  302D               	movlw	45
  1527  0565  062B               	xorwf	_leer,w
  1528  0566  1D03               	btfss	3,2
  1529  0567  2D69               	goto	u611
  1530  0568  2D6A               	goto	u610
  1531  0569                     u611:
  1532  0569  2D70               	goto	l223
  1533  056A                     u610:
  1534  056A                     l1559:
  1535  056A  082A               	movf	_contador,w
  1536  056B  3EFF               	addlw	255
  1537  056C  00F3               	movwf	??_contador_lcd
  1538  056D  0873               	movf	??_contador_lcd,w
  1539  056E  00AA               	movwf	_contador
  1540  056F  2D62               	goto	l1555
  1541  0570                     l223:
  1542  0570  0008               	return
  1543  0571                     __end_of_contador_lcd:
  1544                           
  1545                           	psect	text6
  1546  04C9                     __ptext6:	
  1547 ;; *************** function _Lcd_Write_String *****************
  1548 ;; Defined at:
  1549 ;;		line 69 in file "LCD_8bits.c"
  1550 ;; Parameters:    Size  Location     Type
  1551 ;;  a               1    wreg     PTR unsigned char 
  1552 ;;		 -> STR_1(17), 
  1553 ;; Auto vars:     Size  Location     Type
  1554 ;;  a               1    0[BANK0 ] PTR unsigned char 
  1555 ;;		 -> STR_1(17), 
  1556 ;;  i               2    1[BANK0 ] int 
  1557 ;; Return value:  Size  Location     Type
  1558 ;;                  1    wreg      void 
  1559 ;; Registers used:
  1560 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1561 ;; Tracked objects:
  1562 ;;		On entry : 0/0
  1563 ;;		On exit  : 0/0
  1564 ;;		Unchanged: 0/0
  1565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1566 ;;      Params:         0       0       0       0       0
  1567 ;;      Locals:         0       3       0       0       0
  1568 ;;      Temps:          0       0       0       0       0
  1569 ;;      Totals:         0       3       0       0       0
  1570 ;;Total ram usage:        3 bytes
  1571 ;; Hardware stack levels used:    1
  1572 ;; Hardware stack levels required when called:    4
  1573 ;; This function calls:
  1574 ;;		_Lcd_Write_Char
  1575 ;; This function is called by:
  1576 ;;		_lcd
  1577 ;; This function uses a non-reentrant model
  1578 ;;
  1579                           
  1580                           
  1581                           ;psect for function _Lcd_Write_String
  1582  04C9                     _Lcd_Write_String:
  1583                           
  1584                           ;incstack = 0
  1585                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1586                           ;Lcd_Write_String@a stored from wreg
  1587  04C9  1283               	bcf	3,5	;RP0=0, select bank0
  1588  04CA  1303               	bcf	3,6	;RP1=0, select bank0
  1589  04CB  00B7               	movwf	Lcd_Write_String@a
  1590  04CC                     l1809:
  1591                           
  1592                           ;LCD_8bits.c: 69: void Lcd_Write_String(char *a);LCD_8bits.c: 70: {;LCD_8bits.c: 71:    
      +                           int i;;LCD_8bits.c: 72:     for (i = 0; a[i] != '\0'; i++)
  1593  04CC  01B8               	clrf	Lcd_Write_String@i
  1594  04CD  01B9               	clrf	Lcd_Write_String@i+1
  1595  04CE  2CE4               	goto	l1815
  1596  04CF                     l1811:
  1597                           
  1598                           ;LCD_8bits.c: 73:         Lcd_Write_Char(a[i]);
  1599  04CF  0838               	movf	Lcd_Write_String@i,w
  1600  04D0  0737               	addwf	Lcd_Write_String@a,w
  1601  04D1  0084               	movwf	4
  1602  04D2  120A  118A  25BA  120A  118A  	fcall	stringdir
  1603  04D7  120A  118A  25D1  120A  118A  	fcall	_Lcd_Write_Char
  1604  04DC                     l1813:
  1605  04DC  3001               	movlw	1
  1606  04DD  1283               	bcf	3,5	;RP0=0, select bank0
  1607  04DE  1303               	bcf	3,6	;RP1=0, select bank0
  1608  04DF  07B8               	addwf	Lcd_Write_String@i,f
  1609  04E0  1803               	skipnc
  1610  04E1  0AB9               	incf	Lcd_Write_String@i+1,f
  1611  04E2  3000               	movlw	0
  1612  04E3  07B9               	addwf	Lcd_Write_String@i+1,f
  1613  04E4                     l1815:
  1614  04E4  0838               	movf	Lcd_Write_String@i,w
  1615  04E5  0737               	addwf	Lcd_Write_String@a,w
  1616  04E6  0084               	movwf	4
  1617  04E7  120A  118A  25BA  120A  118A  	fcall	stringdir
  1618  04EC  3A00               	xorlw	0
  1619  04ED  1D03               	skipz
  1620  04EE  2CF0               	goto	u801
  1621  04EF  2CF1               	goto	u800
  1622  04F0                     u801:
  1623  04F0  2CCF               	goto	l1811
  1624  04F1                     u800:
  1625  04F1                     l279:
  1626  04F1  0008               	return
  1627  04F2                     __end_of_Lcd_Write_String:
  1628                           
  1629                           	psect	text7
  1630  04F2                     __ptext7:	
  1631 ;; *************** function _Lcd_Set_Cursor *****************
  1632 ;; Defined at:
  1633 ;;		line 54 in file "LCD_8bits.c"
  1634 ;; Parameters:    Size  Location     Type
  1635 ;;  a               1    wreg     unsigned char 
  1636 ;;  b               1    7[COMMON] unsigned char 
  1637 ;; Auto vars:     Size  Location     Type
  1638 ;;  a               1    1[BANK0 ] unsigned char 
  1639 ;;  temp            1    2[BANK0 ] unsigned char 
  1640 ;; Return value:  Size  Location     Type
  1641 ;;                  1    wreg      void 
  1642 ;; Registers used:
  1643 ;;		wreg, status,2, status,0, pclath, cstack
  1644 ;; Tracked objects:
  1645 ;;		On entry : 0/0
  1646 ;;		On exit  : 0/0
  1647 ;;		Unchanged: 0/0
  1648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1649 ;;      Params:         1       0       0       0       0
  1650 ;;      Locals:         0       2       0       0       0
  1651 ;;      Temps:          0       1       0       0       0
  1652 ;;      Totals:         1       3       0       0       0
  1653 ;;Total ram usage:        4 bytes
  1654 ;; Hardware stack levels used:    1
  1655 ;; Hardware stack levels required when called:    4
  1656 ;; This function calls:
  1657 ;;		_Lcd_Cmd
  1658 ;; This function is called by:
  1659 ;;		_lcd
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           
  1663                           
  1664                           ;psect for function _Lcd_Set_Cursor
  1665  04F2                     _Lcd_Set_Cursor:
  1666                           
  1667                           ;incstack = 0
  1668                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1669                           ;Lcd_Set_Cursor@a stored from wreg
  1670  04F2  1283               	bcf	3,5	;RP0=0, select bank0
  1671  04F3  1303               	bcf	3,6	;RP1=0, select bank0
  1672  04F4  00B8               	movwf	Lcd_Set_Cursor@a
  1673  04F5                     l1797:
  1674                           
  1675                           ;LCD_8bits.c: 54: void Lcd_Set_Cursor(char a, char b);LCD_8bits.c: 55: {;LCD_8bits.c: 56
      +                          :     char temp;;LCD_8bits.c: 57:     if (a == 1)
  1676  04F5  0338               	decf	Lcd_Set_Cursor@a,w
  1677  04F6  1D03               	btfss	3,2
  1678  04F7  2CF9               	goto	u781
  1679  04F8  2CFA               	goto	u780
  1680  04F9                     u781:
  1681  04F9  2D06               	goto	l1803
  1682  04FA                     u780:
  1683  04FA                     l1799:
  1684                           
  1685                           ;LCD_8bits.c: 58:     {;LCD_8bits.c: 59:         temp = 0x80 + b;
  1686  04FA  0877               	movf	Lcd_Set_Cursor@b,w
  1687  04FB  3E80               	addlw	128
  1688  04FC  00B7               	movwf	??_Lcd_Set_Cursor
  1689  04FD  0837               	movf	??_Lcd_Set_Cursor,w
  1690  04FE  00B9               	movwf	Lcd_Set_Cursor@temp
  1691  04FF                     l1801:
  1692                           
  1693                           ;LCD_8bits.c: 60:         Lcd_Cmd(temp);
  1694  04FF  0839               	movf	Lcd_Set_Cursor@temp,w
  1695  0500  120A  118A  2571  120A  118A  	fcall	_Lcd_Cmd
  1696                           
  1697                           ;LCD_8bits.c: 61:     }
  1698  0505  2D17               	goto	l273
  1699  0506                     l1803:
  1700  0506  3002               	movlw	2
  1701  0507  0638               	xorwf	Lcd_Set_Cursor@a,w
  1702  0508  1D03               	btfss	3,2
  1703  0509  2D0B               	goto	u791
  1704  050A  2D0C               	goto	u790
  1705  050B                     u791:
  1706  050B  2D17               	goto	l273
  1707  050C                     u790:
  1708  050C                     l1805:
  1709                           
  1710                           ;LCD_8bits.c: 63:     {;LCD_8bits.c: 64:         temp = 0xC0 + b;
  1711  050C  0877               	movf	Lcd_Set_Cursor@b,w
  1712  050D  3EC0               	addlw	192
  1713  050E  00B7               	movwf	??_Lcd_Set_Cursor
  1714  050F  0837               	movf	??_Lcd_Set_Cursor,w
  1715  0510  00B9               	movwf	Lcd_Set_Cursor@temp
  1716  0511                     l1807:
  1717                           
  1718                           ;LCD_8bits.c: 65:         Lcd_Cmd(temp);
  1719  0511  0839               	movf	Lcd_Set_Cursor@temp,w
  1720  0512  120A  118A  2571  120A  118A  	fcall	_Lcd_Cmd
  1721  0517                     l273:
  1722  0517  0008               	return
  1723  0518                     __end_of_Lcd_Set_Cursor:
  1724                           
  1725                           	psect	text8
  1726  0163                     __ptext8:	
  1727 ;; *************** function _Conversion2 *****************
  1728 ;; Defined at:
  1729 ;;		line 308 in file "LCD.c"
  1730 ;; Parameters:    Size  Location     Type
  1731 ;;		None
  1732 ;; Auto vars:     Size  Location     Type
  1733 ;;		None
  1734 ;; Return value:  Size  Location     Type
  1735 ;;                  1    wreg      void 
  1736 ;; Registers used:
  1737 ;;		wreg, status,2, status,0, pclath, cstack
  1738 ;; Tracked objects:
  1739 ;;		On entry : 0/0
  1740 ;;		On exit  : 0/0
  1741 ;;		Unchanged: 0/0
  1742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1743 ;;      Params:         0       0       0       0       0
  1744 ;;      Locals:         0       0       0       0       0
  1745 ;;      Temps:          0       3       0       0       0
  1746 ;;      Totals:         0       3       0       0       0
  1747 ;;Total ram usage:        3 bytes
  1748 ;; Hardware stack levels used:    1
  1749 ;; Hardware stack levels required when called:    4
  1750 ;; This function calls:
  1751 ;;		_Lcd_Write_Char
  1752 ;;		___awdiv
  1753 ;;		___awmod
  1754 ;;		_virtual_display2
  1755 ;; This function is called by:
  1756 ;;		_lcd
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759                           
  1760                           
  1761                           ;psect for function _Conversion2
  1762  0163                     _Conversion2:
  1763  0163                     l1841:	
  1764                           ;incstack = 0
  1765                           ; Regs used in _Conversion2: [wreg+status,2+status,0+pclath+cstack]
  1766                           
  1767                           
  1768                           ;LCD.c: 310: 
  1769  0163  1283               	bcf	3,5	;RP0=0, select bank0
  1770  0164  1303               	bcf	3,6	;RP1=0, select bank0
  1771  0165  0835               	movf	_adc_value2,w
  1772  0166  00BB               	movwf	??_Conversion2
  1773  0167  073B               	addwf	??_Conversion2,w
  1774  0168  00BC               	movwf	??_Conversion2+1
  1775  0169  083C               	movf	??_Conversion2+1,w
  1776  016A  00B1               	movwf	_voltajez
  1777  016B                     l1843:
  1778                           
  1779                           ;LCD.c: 311: }
  1780  016B  3064               	movlw	100
  1781  016C  00F3               	movwf	___awdiv@divisor
  1782  016D  3000               	movlw	0
  1783  016E  00F4               	movwf	___awdiv@divisor+1
  1784  016F  0831               	movf	_voltajez,w
  1785  0170  00BB               	movwf	??_Conversion2
  1786  0171  01BC               	clrf	??_Conversion2+1
  1787  0172  083B               	movf	??_Conversion2,w
  1788  0173  00F5               	movwf	___awdiv@dividend
  1789  0174  083C               	movf	??_Conversion2+1,w
  1790  0175  00F6               	movwf	___awdiv@dividend+1
  1791  0176  120A  118A  2281  120A  118A  	fcall	___awdiv
  1792  017B  0873               	movf	?___awdiv,w
  1793  017C  1283               	bcf	3,5	;RP0=0, select bank0
  1794  017D  1303               	bcf	3,6	;RP1=0, select bank0
  1795  017E  00BD               	movwf	??_Conversion2+2
  1796  017F  083D               	movf	??_Conversion2+2,w
  1797  0180  00B0               	movwf	_unidadz
  1798  0181                     l1845:
  1799                           
  1800                           ;LCD.c: 313: void escribir_char (uint8_t valor)
  1801  0181  3064               	movlw	100
  1802  0182  00F3               	movwf	___awmod@divisor
  1803  0183  3000               	movlw	0
  1804  0184  00F4               	movwf	___awmod@divisor+1
  1805  0185  0831               	movf	_voltajez,w
  1806  0186  00BB               	movwf	??_Conversion2
  1807  0187  01BC               	clrf	??_Conversion2+1
  1808  0188  083B               	movf	??_Conversion2,w
  1809  0189  00F5               	movwf	___awmod@dividend
  1810  018A  083C               	movf	??_Conversion2+1,w
  1811  018B  00F6               	movwf	___awmod@dividend+1
  1812  018C  120A  118A  2347  120A  118A  	fcall	___awmod
  1813  0191  0873               	movf	?___awmod,w
  1814  0192  1283               	bcf	3,5	;RP0=0, select bank0
  1815  0193  1303               	bcf	3,6	;RP1=0, select bank0
  1816  0194  00BD               	movwf	??_Conversion2+2
  1817  0195  083D               	movf	??_Conversion2+2,w
  1818  0196  00AF               	movwf	_x1z
  1819  0197                     l1847:
  1820                           
  1821                           ;LCD.c: 314: {
  1822  0197  300A               	movlw	10
  1823  0198  00F3               	movwf	___awdiv@divisor
  1824  0199  3000               	movlw	0
  1825  019A  00F4               	movwf	___awdiv@divisor+1
  1826  019B  082F               	movf	_x1z,w
  1827  019C  00BB               	movwf	??_Conversion2
  1828  019D  01BC               	clrf	??_Conversion2+1
  1829  019E  083B               	movf	??_Conversion2,w
  1830  019F  00F5               	movwf	___awdiv@dividend
  1831  01A0  083C               	movf	??_Conversion2+1,w
  1832  01A1  00F6               	movwf	___awdiv@dividend+1
  1833  01A2  120A  118A  2281  120A  118A  	fcall	___awdiv
  1834  01A7  0873               	movf	?___awdiv,w
  1835  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  1836  01A9  1303               	bcf	3,6	;RP1=0, select bank0
  1837  01AA  00BD               	movwf	??_Conversion2+2
  1838  01AB  083D               	movf	??_Conversion2+2,w
  1839  01AC  00AD               	movwf	_x2z
  1840  01AD                     l1849:
  1841                           
  1842                           ;LCD.c: 316:     while (PIR1bits.TXIF == 0);
  1843  01AD  300A               	movlw	10
  1844  01AE  00F3               	movwf	___awmod@divisor
  1845  01AF  3000               	movlw	0
  1846  01B0  00F4               	movwf	___awmod@divisor+1
  1847  01B1  082F               	movf	_x1z,w
  1848  01B2  00BB               	movwf	??_Conversion2
  1849  01B3  01BC               	clrf	??_Conversion2+1
  1850  01B4  083B               	movf	??_Conversion2,w
  1851  01B5  00F5               	movwf	___awmod@dividend
  1852  01B6  083C               	movf	??_Conversion2+1,w
  1853  01B7  00F6               	movwf	___awmod@dividend+1
  1854  01B8  120A  118A  2347  120A  118A  	fcall	___awmod
  1855  01BD  0873               	movf	?___awmod,w
  1856  01BE  1283               	bcf	3,5	;RP0=0, select bank0
  1857  01BF  1303               	bcf	3,6	;RP1=0, select bank0
  1858  01C0  00BD               	movwf	??_Conversion2+2
  1859  01C1  083D               	movf	??_Conversion2+2,w
  1860  01C2  00AE               	movwf	_y1z
  1861  01C3                     l1851:
  1862                           
  1863                           ;LCD.c: 317: }
  1864  01C3  082E               	movf	_y1z,w
  1865  01C4  00BB               	movwf	??_Conversion2
  1866  01C5  083B               	movf	??_Conversion2,w
  1867  01C6  00AC               	movwf	_y2z
  1868  01C7                     l1853:
  1869                           
  1870                           ;LCD.c: 319: char leer_char(void)
  1871  01C7  0830               	movf	_unidadz,w
  1872  01C8  3E30               	addlw	48
  1873  01C9  120A  118A  25D1  120A  118A  	fcall	_Lcd_Write_Char
  1874  01CE                     l1855:
  1875                           
  1876                           ;LCD.c: 320: {
  1877  01CE  302E               	movlw	46
  1878  01CF  120A  118A  25D1  120A  118A  	fcall	_Lcd_Write_Char
  1879  01D4                     l1857:
  1880                           
  1881                           ;LCD.c: 321:     if (RCSTAbits.OERR ==0)
  1882  01D4  1283               	bcf	3,5	;RP0=0, select bank0
  1883  01D5  1303               	bcf	3,6	;RP1=0, select bank0
  1884  01D6  082D               	movf	_x2z,w
  1885  01D7  3E30               	addlw	48
  1886  01D8  120A  118A  25D1  120A  118A  	fcall	_Lcd_Write_Char
  1887  01DD                     l1859:
  1888                           
  1889                           ;LCD.c: 322:     {
  1890  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  1891  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  1892  01DF  082C               	movf	_y2z,w
  1893  01E0  3E30               	addlw	48
  1894  01E1  120A  118A  25D1  120A  118A  	fcall	_Lcd_Write_Char
  1895  01E6                     l1861:
  1896                           
  1897                           ;LCD.c: 323:         CREN = 0;
  1898  01E6  3056               	movlw	86
  1899  01E7  120A  118A  25D1  120A  118A  	fcall	_Lcd_Write_Char
  1900  01EC                     l1863:
  1901                           
  1902                           ;LCD.c: 324:         __nop();
  1903  01EC  120A  118A  23A2  120A  118A  	fcall	_virtual_display2
  1904  01F1                     l199:
  1905  01F1  0008               	return
  1906  01F2                     __end_of_Conversion2:
  1907                           
  1908                           	psect	text9
  1909  03A2                     __ptext9:	
  1910 ;; *************** function _virtual_display2 *****************
  1911 ;; Defined at:
  1912 ;;		line 346 in file "LCD.c"
  1913 ;; Parameters:    Size  Location     Type
  1914 ;;		None
  1915 ;; Auto vars:     Size  Location     Type
  1916 ;;		None
  1917 ;; Return value:  Size  Location     Type
  1918 ;;                  1    wreg      void 
  1919 ;; Registers used:
  1920 ;;		wreg, status,2, status,0, pclath, cstack
  1921 ;; Tracked objects:
  1922 ;;		On entry : 0/0
  1923 ;;		On exit  : 0/0
  1924 ;;		Unchanged: 0/0
  1925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1926 ;;      Params:         0       0       0       0       0
  1927 ;;      Locals:         0       0       0       0       0
  1928 ;;      Temps:          0       0       0       0       0
  1929 ;;      Totals:         0       0       0       0       0
  1930 ;;Total ram usage:        0 bytes
  1931 ;; Hardware stack levels used:    1
  1932 ;; Hardware stack levels required when called:    3
  1933 ;; This function calls:
  1934 ;;		_escribir_char
  1935 ;; This function is called by:
  1936 ;;		_Conversion2
  1937 ;; This function uses a non-reentrant model
  1938 ;;
  1939                           
  1940                           
  1941                           ;psect for function _virtual_display2
  1942  03A2                     _virtual_display2:
  1943  03A2                     l1335:	
  1944                           ;incstack = 0
  1945                           ; Regs used in _virtual_display2: [wreg+status,2+status,0+pclath+cstack]
  1946                           
  1947  03A2  3000               	movlw	0
  1948  03A3  1283               	bcf	3,5	;RP0=0, select bank0
  1949  03A4  1303               	bcf	3,6	;RP1=0, select bank0
  1950  03A5  0223               	subwf	_pressed_ok2+1,w
  1951  03A6  301A               	movlw	26
  1952  03A7  1903               	skipnz
  1953  03A8  0222               	subwf	_pressed_ok2,w
  1954  03A9  1C03               	skipc
  1955  03AA  2BAC               	goto	u371
  1956  03AB  2BAD               	goto	u370
  1957  03AC                     u371:
  1958  03AC  2BF6               	goto	l207
  1959  03AD                     u370:
  1960  03AD                     l1337:
  1961  03AD  3053               	movlw	83
  1962  03AE  120A  118A  2616  120A  118A  	fcall	_escribir_char
  1963  03B3  3032               	movlw	50
  1964  03B4  120A  118A  2616  120A  118A  	fcall	_escribir_char
  1965  03B9  303A               	movlw	58
  1966  03BA  120A  118A  2616  120A  118A  	fcall	_escribir_char
  1967  03BF  1283               	bcf	3,5	;RP0=0, select bank0
  1968  03C0  1303               	bcf	3,6	;RP1=0, select bank0
  1969  03C1  0830               	movf	_unidadz,w
  1970  03C2  3E30               	addlw	48
  1971  03C3  120A  118A  2616  120A  118A  	fcall	_escribir_char
  1972  03C8  302E               	movlw	46
  1973  03C9  120A  118A  2616  120A  118A  	fcall	_escribir_char
  1974  03CE  1283               	bcf	3,5	;RP0=0, select bank0
  1975  03CF  1303               	bcf	3,6	;RP1=0, select bank0
  1976  03D0  082D               	movf	_x2z,w
  1977  03D1  3E30               	addlw	48
  1978  03D2  120A  118A  2616  120A  118A  	fcall	_escribir_char
  1979  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  1980  03D8  1303               	bcf	3,6	;RP1=0, select bank0
  1981  03D9  082C               	movf	_y2z,w
  1982  03DA  3E30               	addlw	48
  1983  03DB  120A  118A  2616  120A  118A  	fcall	_escribir_char
  1984  03E0  3056               	movlw	86
  1985  03E1  120A  118A  2616  120A  118A  	fcall	_escribir_char
  1986  03E6  3020               	movlw	32
  1987  03E7  120A  118A  2616  120A  118A  	fcall	_escribir_char
  1988  03EC  3020               	movlw	32
  1989  03ED  120A  118A  2616  120A  118A  	fcall	_escribir_char
  1990  03F2                     l1339:
  1991  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  1992  03F3  1303               	bcf	3,6	;RP1=0, select bank0
  1993  03F4  01A2               	clrf	_pressed_ok2
  1994  03F5  01A3               	clrf	_pressed_ok2+1
  1995  03F6                     l207:
  1996  03F6  0008               	return
  1997  03F7                     __end_of_virtual_display2:
  1998                           
  1999                           	psect	text10
  2000  01F2                     __ptext10:	
  2001 ;; *************** function _Conversion1 *****************
  2002 ;; Defined at:
  2003 ;;		line 289 in file "LCD.c"
  2004 ;; Parameters:    Size  Location     Type
  2005 ;;		None
  2006 ;; Auto vars:     Size  Location     Type
  2007 ;;		None
  2008 ;; Return value:  Size  Location     Type
  2009 ;;                  1    wreg      void 
  2010 ;; Registers used:
  2011 ;;		wreg, status,2, status,0, pclath, cstack
  2012 ;; Tracked objects:
  2013 ;;		On entry : 0/0
  2014 ;;		On exit  : 0/0
  2015 ;;		Unchanged: 0/0
  2016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2017 ;;      Params:         0       0       0       0       0
  2018 ;;      Locals:         0       0       0       0       0
  2019 ;;      Temps:          0       3       0       0       0
  2020 ;;      Totals:         0       3       0       0       0
  2021 ;;Total ram usage:        3 bytes
  2022 ;; Hardware stack levels used:    1
  2023 ;; Hardware stack levels required when called:    4
  2024 ;; This function calls:
  2025 ;;		_Lcd_Write_Char
  2026 ;;		___awdiv
  2027 ;;		___awmod
  2028 ;;		_virtual_display1
  2029 ;; This function is called by:
  2030 ;;		_lcd
  2031 ;; This function uses a non-reentrant model
  2032 ;;
  2033                           
  2034                           
  2035                           ;psect for function _Conversion1
  2036  01F2                     _Conversion1:
  2037  01F2                     l1817:	
  2038                           ;incstack = 0
  2039                           ; Regs used in _Conversion1: [wreg+status,2+status,0+pclath+cstack]
  2040                           
  2041                           
  2042                           ;LCD.c: 291:         }
  2043  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  2044  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  2045  01F4  0836               	movf	_adc_value1,w
  2046  01F5  00BB               	movwf	??_Conversion1
  2047  01F6  073B               	addwf	??_Conversion1,w
  2048  01F7  00BC               	movwf	??_Conversion1+1
  2049  01F8  083C               	movf	??_Conversion1+1,w
  2050  01F9  00FA               	movwf	_voltaje
  2051  01FA                     l1819:
  2052                           
  2053                           ;LCD.c: 292: }
  2054  01FA  3064               	movlw	100
  2055  01FB  00F3               	movwf	___awdiv@divisor
  2056  01FC  3000               	movlw	0
  2057  01FD  00F4               	movwf	___awdiv@divisor+1
  2058  01FE  087A               	movf	_voltaje,w
  2059  01FF  00BB               	movwf	??_Conversion1
  2060  0200  01BC               	clrf	??_Conversion1+1
  2061  0201  083B               	movf	??_Conversion1,w
  2062  0202  00F5               	movwf	___awdiv@dividend
  2063  0203  083C               	movf	??_Conversion1+1,w
  2064  0204  00F6               	movwf	___awdiv@dividend+1
  2065  0205  120A  118A  2281  120A  118A  	fcall	___awdiv
  2066  020A  0873               	movf	?___awdiv,w
  2067  020B  1283               	bcf	3,5	;RP0=0, select bank0
  2068  020C  1303               	bcf	3,6	;RP1=0, select bank0
  2069  020D  00BD               	movwf	??_Conversion1+2
  2070  020E  083D               	movf	??_Conversion1+2,w
  2071  020F  00F9               	movwf	_unidad
  2072  0210                     l1821:
  2073                           
  2074                           ;LCD.c: 294: void virtual_display2 (void)
  2075  0210  3064               	movlw	100
  2076  0211  00F3               	movwf	___awmod@divisor
  2077  0212  3000               	movlw	0
  2078  0213  00F4               	movwf	___awmod@divisor+1
  2079  0214  087A               	movf	_voltaje,w
  2080  0215  00BB               	movwf	??_Conversion1
  2081  0216  01BC               	clrf	??_Conversion1+1
  2082  0217  083B               	movf	??_Conversion1,w
  2083  0218  00F5               	movwf	___awmod@dividend
  2084  0219  083C               	movf	??_Conversion1+1,w
  2085  021A  00F6               	movwf	___awmod@dividend+1
  2086  021B  120A  118A  2347  120A  118A  	fcall	___awmod
  2087  0220  0873               	movf	?___awmod,w
  2088  0221  1283               	bcf	3,5	;RP0=0, select bank0
  2089  0222  1303               	bcf	3,6	;RP1=0, select bank0
  2090  0223  00BD               	movwf	??_Conversion1+2
  2091  0224  083D               	movf	??_Conversion1+2,w
  2092  0225  00F8               	movwf	_x1
  2093  0226                     l1823:
  2094                           
  2095                           ;LCD.c: 295: {
  2096  0226  300A               	movlw	10
  2097  0227  00F3               	movwf	___awdiv@divisor
  2098  0228  3000               	movlw	0
  2099  0229  00F4               	movwf	___awdiv@divisor+1
  2100  022A  0878               	movf	_x1,w
  2101  022B  00BB               	movwf	??_Conversion1
  2102  022C  01BC               	clrf	??_Conversion1+1
  2103  022D  083B               	movf	??_Conversion1,w
  2104  022E  00F5               	movwf	___awdiv@dividend
  2105  022F  083C               	movf	??_Conversion1+1,w
  2106  0230  00F6               	movwf	___awdiv@dividend+1
  2107  0231  120A  118A  2281  120A  118A  	fcall	___awdiv
  2108  0236  0873               	movf	?___awdiv,w
  2109  0237  1283               	bcf	3,5	;RP0=0, select bank0
  2110  0238  1303               	bcf	3,6	;RP1=0, select bank0
  2111  0239  00BD               	movwf	??_Conversion1+2
  2112  023A  083D               	movf	??_Conversion1+2,w
  2113  023B  00B3               	movwf	_x2
  2114  023C                     l1825:
  2115                           
  2116                           ;LCD.c: 297:         {
  2117  023C  300A               	movlw	10
  2118  023D  00F3               	movwf	___awmod@divisor
  2119  023E  3000               	movlw	0
  2120  023F  00F4               	movwf	___awmod@divisor+1
  2121  0240  0878               	movf	_x1,w
  2122  0241  00BB               	movwf	??_Conversion1
  2123  0242  01BC               	clrf	??_Conversion1+1
  2124  0243  083B               	movf	??_Conversion1,w
  2125  0244  00F5               	movwf	___awmod@dividend
  2126  0245  083C               	movf	??_Conversion1+1,w
  2127  0246  00F6               	movwf	___awmod@dividend+1
  2128  0247  120A  118A  2347  120A  118A  	fcall	___awmod
  2129  024C  0873               	movf	?___awmod,w
  2130  024D  1283               	bcf	3,5	;RP0=0, select bank0
  2131  024E  1303               	bcf	3,6	;RP1=0, select bank0
  2132  024F  00BD               	movwf	??_Conversion1+2
  2133  0250  083D               	movf	??_Conversion1+2,w
  2134  0251  00B4               	movwf	_y1
  2135  0252                     l1827:
  2136                           
  2137                           ;LCD.c: 298:             escribir_char (83);
  2138  0252  0834               	movf	_y1,w
  2139  0253  00BB               	movwf	??_Conversion1
  2140  0254  083B               	movf	??_Conversion1,w
  2141  0255  00B2               	movwf	_y2
  2142  0256                     l1829:
  2143                           
  2144                           ;LCD.c: 300:             escribir_char (58);
  2145  0256  0879               	movf	_unidad,w
  2146  0257  3E30               	addlw	48
  2147  0258  120A  118A  25D1  120A  118A  	fcall	_Lcd_Write_Char
  2148  025D                     l1831:
  2149                           
  2150                           ;LCD.c: 301:             escribir_char (unidadz+48);
  2151  025D  302E               	movlw	46
  2152  025E  120A  118A  25D1  120A  118A  	fcall	_Lcd_Write_Char
  2153  0263                     l1833:
  2154                           
  2155                           ;LCD.c: 302:             escribir_char (46);
  2156  0263  1283               	bcf	3,5	;RP0=0, select bank0
  2157  0264  1303               	bcf	3,6	;RP1=0, select bank0
  2158  0265  0833               	movf	_x2,w
  2159  0266  3E30               	addlw	48
  2160  0267  120A  118A  25D1  120A  118A  	fcall	_Lcd_Write_Char
  2161  026C                     l1835:
  2162                           
  2163                           ;LCD.c: 303:             escribir_char (x2z+48);
  2164  026C  1283               	bcf	3,5	;RP0=0, select bank0
  2165  026D  1303               	bcf	3,6	;RP1=0, select bank0
  2166  026E  0832               	movf	_y2,w
  2167  026F  3E30               	addlw	48
  2168  0270  120A  118A  25D1  120A  118A  	fcall	_Lcd_Write_Char
  2169  0275                     l1837:
  2170                           
  2171                           ;LCD.c: 304:             escribir_char (y2z+48);
  2172  0275  3056               	movlw	86
  2173  0276  120A  118A  25D1  120A  118A  	fcall	_Lcd_Write_Char
  2174  027B                     l1839:
  2175                           
  2176                           ;LCD.c: 305:             escribir_char (86);
  2177  027B  120A  118A  244B  120A  118A  	fcall	_virtual_display1
  2178  0280                     l196:
  2179  0280  0008               	return
  2180  0281                     __end_of_Conversion1:
  2181                           
  2182                           	psect	text11
  2183  044B                     __ptext11:	
  2184 ;; *************** function _virtual_display1 *****************
  2185 ;; Defined at:
  2186 ;;		line 327 in file "LCD.c"
  2187 ;; Parameters:    Size  Location     Type
  2188 ;;		None
  2189 ;; Auto vars:     Size  Location     Type
  2190 ;;		None
  2191 ;; Return value:  Size  Location     Type
  2192 ;;                  1    wreg      void 
  2193 ;; Registers used:
  2194 ;;		wreg, status,2, status,0, pclath, cstack
  2195 ;; Tracked objects:
  2196 ;;		On entry : 0/0
  2197 ;;		On exit  : 0/0
  2198 ;;		Unchanged: 0/0
  2199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2200 ;;      Params:         0       0       0       0       0
  2201 ;;      Locals:         0       0       0       0       0
  2202 ;;      Temps:          0       0       0       0       0
  2203 ;;      Totals:         0       0       0       0       0
  2204 ;;Total ram usage:        0 bytes
  2205 ;; Hardware stack levels used:    1
  2206 ;; Hardware stack levels required when called:    3
  2207 ;; This function calls:
  2208 ;;		_escribir_char
  2209 ;; This function is called by:
  2210 ;;		_Conversion1
  2211 ;; This function uses a non-reentrant model
  2212 ;;
  2213                           
  2214                           
  2215                           ;psect for function _virtual_display1
  2216  044B                     _virtual_display1:
  2217  044B                     l1329:	
  2218                           ;incstack = 0
  2219                           ; Regs used in _virtual_display1: [wreg+status,2+status,0+pclath+cstack]
  2220                           
  2221                           
  2222                           ;LCD.c: 330: void contador_lcd (void)
  2223  044B  3000               	movlw	0
  2224  044C  1283               	bcf	3,5	;RP0=0, select bank0
  2225  044D  1303               	bcf	3,6	;RP1=0, select bank0
  2226  044E  0221               	subwf	_pressed_ok1+1,w
  2227  044F  301A               	movlw	26
  2228  0450  1903               	skipnz
  2229  0451  0220               	subwf	_pressed_ok1,w
  2230  0452  1C03               	skipc
  2231  0453  2C55               	goto	u361
  2232  0454  2C56               	goto	u360
  2233  0455                     u361:
  2234  0455  2C9D               	goto	l203
  2235  0456                     u360:
  2236  0456                     l1331:
  2237                           
  2238                           ;LCD.c: 331: {;LCD.c: 332:     if (leer == '+')
  2239  0456  3053               	movlw	83
  2240  0457  120A  118A  2616  120A  118A  	fcall	_escribir_char
  2241                           
  2242                           ;LCD.c: 333:     {
  2243  045C  3031               	movlw	49
  2244  045D  120A  118A  2616  120A  118A  	fcall	_escribir_char
  2245                           
  2246                           ;LCD.c: 334:         contador = contador + 1;
  2247  0462  303A               	movlw	58
  2248  0463  120A  118A  2616  120A  118A  	fcall	_escribir_char
  2249                           
  2250                           ;LCD.c: 335:         leer = 0;
  2251  0468  0879               	movf	_unidad,w
  2252  0469  3E30               	addlw	48
  2253  046A  120A  118A  2616  120A  118A  	fcall	_escribir_char
  2254                           
  2255                           ;LCD.c: 336:     }
  2256  046F  302E               	movlw	46
  2257  0470  120A  118A  2616  120A  118A  	fcall	_escribir_char
  2258                           
  2259                           ;LCD.c: 337:     else if (leer == '-')
  2260  0475  1283               	bcf	3,5	;RP0=0, select bank0
  2261  0476  1303               	bcf	3,6	;RP1=0, select bank0
  2262  0477  0833               	movf	_x2,w
  2263  0478  3E30               	addlw	48
  2264  0479  120A  118A  2616  120A  118A  	fcall	_escribir_char
  2265                           
  2266                           ;LCD.c: 338:     {
  2267  047E  1283               	bcf	3,5	;RP0=0, select bank0
  2268  047F  1303               	bcf	3,6	;RP1=0, select bank0
  2269  0480  0832               	movf	_y2,w
  2270  0481  3E30               	addlw	48
  2271  0482  120A  118A  2616  120A  118A  	fcall	_escribir_char
  2272                           
  2273                           ;LCD.c: 339:         contador = contador - 1;
  2274  0487  3056               	movlw	86
  2275  0488  120A  118A  2616  120A  118A  	fcall	_escribir_char
  2276                           
  2277                           ;LCD.c: 340:         leer = 0;
  2278  048D  3020               	movlw	32
  2279  048E  120A  118A  2616  120A  118A  	fcall	_escribir_char
  2280                           
  2281                           ;LCD.c: 341:     }
  2282  0493  3020               	movlw	32
  2283  0494  120A  118A  2616  120A  118A  	fcall	_escribir_char
  2284  0499                     l1333:
  2285                           
  2286                           ;LCD.c: 342: }
  2287  0499  1283               	bcf	3,5	;RP0=0, select bank0
  2288  049A  1303               	bcf	3,6	;RP1=0, select bank0
  2289  049B  01A0               	clrf	_pressed_ok1
  2290  049C  01A1               	clrf	_pressed_ok1+1
  2291  049D                     l203:
  2292  049D  0008               	return
  2293  049E                     __end_of_virtual_display1:
  2294                           
  2295                           	psect	text12
  2296  0616                     __ptext12:	
  2297 ;; *************** function _escribir_char *****************
  2298 ;; Defined at:
  2299 ;;		line 365 in file "LCD.c"
  2300 ;; Parameters:    Size  Location     Type
  2301 ;;  valor           1    wreg     unsigned char 
  2302 ;; Auto vars:     Size  Location     Type
  2303 ;;  valor           1    3[COMMON] unsigned char 
  2304 ;; Return value:  Size  Location     Type
  2305 ;;                  1    wreg      void 
  2306 ;; Registers used:
  2307 ;;		wreg
  2308 ;; Tracked objects:
  2309 ;;		On entry : 0/0
  2310 ;;		On exit  : 0/0
  2311 ;;		Unchanged: 0/0
  2312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2313 ;;      Params:         0       0       0       0       0
  2314 ;;      Locals:         1       0       0       0       0
  2315 ;;      Temps:          0       0       0       0       0
  2316 ;;      Totals:         1       0       0       0       0
  2317 ;;Total ram usage:        1 bytes
  2318 ;; Hardware stack levels used:    1
  2319 ;; Hardware stack levels required when called:    2
  2320 ;; This function calls:
  2321 ;;		Nothing
  2322 ;; This function is called by:
  2323 ;;		_virtual_display1
  2324 ;;		_virtual_display2
  2325 ;; This function uses a non-reentrant model
  2326 ;;
  2327                           
  2328                           
  2329                           ;psect for function _escribir_char
  2330  0616                     _escribir_char:
  2331                           
  2332                           ;incstack = 0
  2333                           ; Regs used in _escribir_char: [wreg]
  2334                           ;escribir_char@valor stored from wreg
  2335  0616  00F3               	movwf	escribir_char@valor
  2336  0617                     l1315:
  2337  0617  0873               	movf	escribir_char@valor,w
  2338  0618  1283               	bcf	3,5	;RP0=0, select bank0
  2339  0619  1303               	bcf	3,6	;RP1=0, select bank0
  2340  061A  0099               	movwf	25	;volatile
  2341  061B                     l210:
  2342  061B  1E0C               	btfss	12,4	;volatile
  2343  061C  2E1E               	goto	u351
  2344  061D  2E1F               	goto	u350
  2345  061E                     u351:
  2346  061E  2E1B               	goto	l210
  2347  061F                     u350:
  2348  061F                     l213:
  2349  061F  0008               	return
  2350  0620                     __end_of_escribir_char:
  2351                           
  2352                           	psect	text13
  2353  0347                     __ptext13:	
  2354 ;; *************** function ___awmod *****************
  2355 ;; Defined at:
  2356 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  2357 ;; Parameters:    Size  Location     Type
  2358 ;;  divisor         2    3[COMMON] int 
  2359 ;;  dividend        2    5[COMMON] int 
  2360 ;; Auto vars:     Size  Location     Type
  2361 ;;  sign            1    1[BANK0 ] unsigned char 
  2362 ;;  counter         1    0[BANK0 ] unsigned char 
  2363 ;; Return value:  Size  Location     Type
  2364 ;;                  2    3[COMMON] int 
  2365 ;; Registers used:
  2366 ;;		wreg, status,2, status,0
  2367 ;; Tracked objects:
  2368 ;;		On entry : 0/0
  2369 ;;		On exit  : 0/0
  2370 ;;		Unchanged: 0/0
  2371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2372 ;;      Params:         4       0       0       0       0
  2373 ;;      Locals:         0       2       0       0       0
  2374 ;;      Temps:          1       0       0       0       0
  2375 ;;      Totals:         5       2       0       0       0
  2376 ;;Total ram usage:        7 bytes
  2377 ;; Hardware stack levels used:    1
  2378 ;; Hardware stack levels required when called:    2
  2379 ;; This function calls:
  2380 ;;		Nothing
  2381 ;; This function is called by:
  2382 ;;		_lcd
  2383 ;;		_Conversion1
  2384 ;;		_Conversion2
  2385 ;; This function uses a non-reentrant model
  2386 ;;
  2387                           
  2388                           
  2389                           ;psect for function ___awmod
  2390  0347                     ___awmod:
  2391  0347                     l1759:	
  2392                           ;incstack = 0
  2393                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2394                           
  2395  0347  1283               	bcf	3,5	;RP0=0, select bank0
  2396  0348  1303               	bcf	3,6	;RP1=0, select bank0
  2397  0349  01B8               	clrf	___awmod@sign
  2398  034A                     l1761:
  2399  034A  1FF6               	btfss	___awmod@dividend+1,7
  2400  034B  2B4D               	goto	u691
  2401  034C  2B4E               	goto	u690
  2402  034D                     u691:
  2403  034D  2B55               	goto	l1767
  2404  034E                     u690:
  2405  034E                     l1763:
  2406  034E  09F5               	comf	___awmod@dividend,f
  2407  034F  09F6               	comf	___awmod@dividend+1,f
  2408  0350  0AF5               	incf	___awmod@dividend,f
  2409  0351  1903               	skipnz
  2410  0352  0AF6               	incf	___awmod@dividend+1,f
  2411  0353                     l1765:
  2412  0353  01B8               	clrf	___awmod@sign
  2413  0354  0AB8               	incf	___awmod@sign,f
  2414  0355                     l1767:
  2415  0355  1FF4               	btfss	___awmod@divisor+1,7
  2416  0356  2B58               	goto	u701
  2417  0357  2B59               	goto	u700
  2418  0358                     u701:
  2419  0358  2B5E               	goto	l1771
  2420  0359                     u700:
  2421  0359                     l1769:
  2422  0359  09F3               	comf	___awmod@divisor,f
  2423  035A  09F4               	comf	___awmod@divisor+1,f
  2424  035B  0AF3               	incf	___awmod@divisor,f
  2425  035C  1903               	skipnz
  2426  035D  0AF4               	incf	___awmod@divisor+1,f
  2427  035E                     l1771:
  2428  035E  0873               	movf	___awmod@divisor,w
  2429  035F  0474               	iorwf	___awmod@divisor+1,w
  2430  0360  1903               	btfsc	3,2
  2431  0361  2B63               	goto	u711
  2432  0362  2B64               	goto	u710
  2433  0363                     u711:
  2434  0363  2B93               	goto	l1789
  2435  0364                     u710:
  2436  0364                     l1773:
  2437  0364  01B7               	clrf	___awmod@counter
  2438  0365  0AB7               	incf	___awmod@counter,f
  2439  0366  2B72               	goto	l1779
  2440  0367                     l1775:
  2441  0367  3001               	movlw	1
  2442  0368                     u725:
  2443  0368  1003               	clrc
  2444  0369  0DF3               	rlf	___awmod@divisor,f
  2445  036A  0DF4               	rlf	___awmod@divisor+1,f
  2446  036B  3EFF               	addlw	-1
  2447  036C  1D03               	skipz
  2448  036D  2B68               	goto	u725
  2449  036E                     l1777:
  2450  036E  3001               	movlw	1
  2451  036F  00F7               	movwf	??___awmod
  2452  0370  0877               	movf	??___awmod,w
  2453  0371  07B7               	addwf	___awmod@counter,f
  2454  0372                     l1779:
  2455  0372  1FF4               	btfss	___awmod@divisor+1,7
  2456  0373  2B75               	goto	u731
  2457  0374  2B76               	goto	u730
  2458  0375                     u731:
  2459  0375  2B67               	goto	l1775
  2460  0376                     u730:
  2461  0376                     l1781:
  2462  0376  0874               	movf	___awmod@divisor+1,w
  2463  0377  0276               	subwf	___awmod@dividend+1,w
  2464  0378  1D03               	skipz
  2465  0379  2B7C               	goto	u745
  2466  037A  0873               	movf	___awmod@divisor,w
  2467  037B  0275               	subwf	___awmod@dividend,w
  2468  037C                     u745:
  2469  037C  1C03               	skipc
  2470  037D  2B7F               	goto	u741
  2471  037E  2B80               	goto	u740
  2472  037F                     u741:
  2473  037F  2B86               	goto	l1785
  2474  0380                     u740:
  2475  0380                     l1783:
  2476  0380  0873               	movf	___awmod@divisor,w
  2477  0381  02F5               	subwf	___awmod@dividend,f
  2478  0382  0874               	movf	___awmod@divisor+1,w
  2479  0383  1C03               	skipc
  2480  0384  03F6               	decf	___awmod@dividend+1,f
  2481  0385  02F6               	subwf	___awmod@dividend+1,f
  2482  0386                     l1785:
  2483  0386  3001               	movlw	1
  2484  0387                     u755:
  2485  0387  1003               	clrc
  2486  0388  0CF4               	rrf	___awmod@divisor+1,f
  2487  0389  0CF3               	rrf	___awmod@divisor,f
  2488  038A  3EFF               	addlw	-1
  2489  038B  1D03               	skipz
  2490  038C  2B87               	goto	u755
  2491  038D                     l1787:
  2492  038D  3001               	movlw	1
  2493  038E  02B7               	subwf	___awmod@counter,f
  2494  038F  1D03               	btfss	3,2
  2495  0390  2B92               	goto	u761
  2496  0391  2B93               	goto	u760
  2497  0392                     u761:
  2498  0392  2B76               	goto	l1781
  2499  0393                     u760:
  2500  0393                     l1789:
  2501  0393  0838               	movf	___awmod@sign,w
  2502  0394  1903               	btfsc	3,2
  2503  0395  2B97               	goto	u771
  2504  0396  2B98               	goto	u770
  2505  0397                     u771:
  2506  0397  2B9D               	goto	l1793
  2507  0398                     u770:
  2508  0398                     l1791:
  2509  0398  09F5               	comf	___awmod@dividend,f
  2510  0399  09F6               	comf	___awmod@dividend+1,f
  2511  039A  0AF5               	incf	___awmod@dividend,f
  2512  039B  1903               	skipnz
  2513  039C  0AF6               	incf	___awmod@dividend+1,f
  2514  039D                     l1793:
  2515  039D  0876               	movf	___awmod@dividend+1,w
  2516  039E  00F4               	movwf	?___awmod+1
  2517  039F  0875               	movf	___awmod@dividend,w
  2518  03A0  00F3               	movwf	?___awmod
  2519  03A1                     l553:
  2520  03A1  0008               	return
  2521  03A2                     __end_of___awmod:
  2522                           
  2523                           	psect	text14
  2524  0281                     __ptext14:	
  2525 ;; *************** function ___awdiv *****************
  2526 ;; Defined at:
  2527 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2528 ;; Parameters:    Size  Location     Type
  2529 ;;  divisor         2    3[COMMON] int 
  2530 ;;  dividend        2    5[COMMON] int 
  2531 ;; Auto vars:     Size  Location     Type
  2532 ;;  quotient        2    2[BANK0 ] int 
  2533 ;;  sign            1    1[BANK0 ] unsigned char 
  2534 ;;  counter         1    0[BANK0 ] unsigned char 
  2535 ;; Return value:  Size  Location     Type
  2536 ;;                  2    3[COMMON] int 
  2537 ;; Registers used:
  2538 ;;		wreg, status,2, status,0
  2539 ;; Tracked objects:
  2540 ;;		On entry : 0/0
  2541 ;;		On exit  : 0/0
  2542 ;;		Unchanged: 0/0
  2543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2544 ;;      Params:         4       0       0       0       0
  2545 ;;      Locals:         0       4       0       0       0
  2546 ;;      Temps:          1       0       0       0       0
  2547 ;;      Totals:         5       4       0       0       0
  2548 ;;Total ram usage:        9 bytes
  2549 ;; Hardware stack levels used:    1
  2550 ;; Hardware stack levels required when called:    2
  2551 ;; This function calls:
  2552 ;;		Nothing
  2553 ;; This function is called by:
  2554 ;;		_lcd
  2555 ;;		_Conversion1
  2556 ;;		_Conversion2
  2557 ;; This function uses a non-reentrant model
  2558 ;;
  2559                           
  2560                           
  2561                           ;psect for function ___awdiv
  2562  0281                     ___awdiv:
  2563  0281                     l1351:	
  2564                           ;incstack = 0
  2565                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2566                           
  2567  0281  1283               	bcf	3,5	;RP0=0, select bank0
  2568  0282  1303               	bcf	3,6	;RP1=0, select bank0
  2569  0283  01B8               	clrf	___awdiv@sign
  2570  0284                     l1353:
  2571  0284  1FF4               	btfss	___awdiv@divisor+1,7
  2572  0285  2A87               	goto	u381
  2573  0286  2A88               	goto	u380
  2574  0287                     u381:
  2575  0287  2A8F               	goto	l1359
  2576  0288                     u380:
  2577  0288                     l1355:
  2578  0288  09F3               	comf	___awdiv@divisor,f
  2579  0289  09F4               	comf	___awdiv@divisor+1,f
  2580  028A  0AF3               	incf	___awdiv@divisor,f
  2581  028B  1903               	skipnz
  2582  028C  0AF4               	incf	___awdiv@divisor+1,f
  2583  028D                     l1357:
  2584  028D  01B8               	clrf	___awdiv@sign
  2585  028E  0AB8               	incf	___awdiv@sign,f
  2586  028F                     l1359:
  2587  028F  1FF6               	btfss	___awdiv@dividend+1,7
  2588  0290  2A92               	goto	u391
  2589  0291  2A93               	goto	u390
  2590  0292                     u391:
  2591  0292  2A9C               	goto	l1365
  2592  0293                     u390:
  2593  0293                     l1361:
  2594  0293  09F5               	comf	___awdiv@dividend,f
  2595  0294  09F6               	comf	___awdiv@dividend+1,f
  2596  0295  0AF5               	incf	___awdiv@dividend,f
  2597  0296  1903               	skipnz
  2598  0297  0AF6               	incf	___awdiv@dividend+1,f
  2599  0298                     l1363:
  2600  0298  3001               	movlw	1
  2601  0299  00F7               	movwf	??___awdiv
  2602  029A  0877               	movf	??___awdiv,w
  2603  029B  06B8               	xorwf	___awdiv@sign,f
  2604  029C                     l1365:
  2605  029C  01B9               	clrf	___awdiv@quotient
  2606  029D  01BA               	clrf	___awdiv@quotient+1
  2607  029E                     l1367:
  2608  029E  0873               	movf	___awdiv@divisor,w
  2609  029F  0474               	iorwf	___awdiv@divisor+1,w
  2610  02A0  1903               	btfsc	3,2
  2611  02A1  2AA3               	goto	u401
  2612  02A2  2AA4               	goto	u400
  2613  02A3                     u401:
  2614  02A3  2ADB               	goto	l1387
  2615  02A4                     u400:
  2616  02A4                     l1369:
  2617  02A4  01B7               	clrf	___awdiv@counter
  2618  02A5  0AB7               	incf	___awdiv@counter,f
  2619  02A6  2AB2               	goto	l1375
  2620  02A7                     l1371:
  2621  02A7  3001               	movlw	1
  2622  02A8                     u415:
  2623  02A8  1003               	clrc
  2624  02A9  0DF3               	rlf	___awdiv@divisor,f
  2625  02AA  0DF4               	rlf	___awdiv@divisor+1,f
  2626  02AB  3EFF               	addlw	-1
  2627  02AC  1D03               	skipz
  2628  02AD  2AA8               	goto	u415
  2629  02AE                     l1373:
  2630  02AE  3001               	movlw	1
  2631  02AF  00F7               	movwf	??___awdiv
  2632  02B0  0877               	movf	??___awdiv,w
  2633  02B1  07B7               	addwf	___awdiv@counter,f
  2634  02B2                     l1375:
  2635  02B2  1FF4               	btfss	___awdiv@divisor+1,7
  2636  02B3  2AB5               	goto	u421
  2637  02B4  2AB6               	goto	u420
  2638  02B5                     u421:
  2639  02B5  2AA7               	goto	l1371
  2640  02B6                     u420:
  2641  02B6                     l1377:
  2642  02B6  3001               	movlw	1
  2643  02B7                     u435:
  2644  02B7  1003               	clrc
  2645  02B8  0DB9               	rlf	___awdiv@quotient,f
  2646  02B9  0DBA               	rlf	___awdiv@quotient+1,f
  2647  02BA  3EFF               	addlw	-1
  2648  02BB  1D03               	skipz
  2649  02BC  2AB7               	goto	u435
  2650  02BD  0874               	movf	___awdiv@divisor+1,w
  2651  02BE  0276               	subwf	___awdiv@dividend+1,w
  2652  02BF  1D03               	skipz
  2653  02C0  2AC3               	goto	u445
  2654  02C1  0873               	movf	___awdiv@divisor,w
  2655  02C2  0275               	subwf	___awdiv@dividend,w
  2656  02C3                     u445:
  2657  02C3  1C03               	skipc
  2658  02C4  2AC6               	goto	u441
  2659  02C5  2AC7               	goto	u440
  2660  02C6                     u441:
  2661  02C6  2ACE               	goto	l1383
  2662  02C7                     u440:
  2663  02C7                     l1379:
  2664  02C7  0873               	movf	___awdiv@divisor,w
  2665  02C8  02F5               	subwf	___awdiv@dividend,f
  2666  02C9  0874               	movf	___awdiv@divisor+1,w
  2667  02CA  1C03               	skipc
  2668  02CB  03F6               	decf	___awdiv@dividend+1,f
  2669  02CC  02F6               	subwf	___awdiv@dividend+1,f
  2670  02CD                     l1381:
  2671  02CD  1439               	bsf	___awdiv@quotient,0
  2672  02CE                     l1383:
  2673  02CE  3001               	movlw	1
  2674  02CF                     u455:
  2675  02CF  1003               	clrc
  2676  02D0  0CF4               	rrf	___awdiv@divisor+1,f
  2677  02D1  0CF3               	rrf	___awdiv@divisor,f
  2678  02D2  3EFF               	addlw	-1
  2679  02D3  1D03               	skipz
  2680  02D4  2ACF               	goto	u455
  2681  02D5                     l1385:
  2682  02D5  3001               	movlw	1
  2683  02D6  02B7               	subwf	___awdiv@counter,f
  2684  02D7  1D03               	btfss	3,2
  2685  02D8  2ADA               	goto	u461
  2686  02D9  2ADB               	goto	u460
  2687  02DA                     u461:
  2688  02DA  2AB6               	goto	l1377
  2689  02DB                     u460:
  2690  02DB                     l1387:
  2691  02DB  0838               	movf	___awdiv@sign,w
  2692  02DC  1903               	btfsc	3,2
  2693  02DD  2ADF               	goto	u471
  2694  02DE  2AE0               	goto	u470
  2695  02DF                     u471:
  2696  02DF  2AE5               	goto	l1391
  2697  02E0                     u470:
  2698  02E0                     l1389:
  2699  02E0  09B9               	comf	___awdiv@quotient,f
  2700  02E1  09BA               	comf	___awdiv@quotient+1,f
  2701  02E2  0AB9               	incf	___awdiv@quotient,f
  2702  02E3  1903               	skipnz
  2703  02E4  0ABA               	incf	___awdiv@quotient+1,f
  2704  02E5                     l1391:
  2705  02E5  083A               	movf	___awdiv@quotient+1,w
  2706  02E6  00F4               	movwf	?___awdiv+1
  2707  02E7  0839               	movf	___awdiv@quotient,w
  2708  02E8  00F3               	movwf	?___awdiv
  2709  02E9                     l540:
  2710  02E9  0008               	return
  2711  02EA                     __end_of___awdiv:
  2712                           
  2713                           	psect	text15
  2714  05D1                     __ptext15:	
  2715 ;; *************** function _Lcd_Write_Char *****************
  2716 ;; Defined at:
  2717 ;;		line 86 in file "LCD_8bits.c"
  2718 ;; Parameters:    Size  Location     Type
  2719 ;;  a               1    wreg     unsigned char 
  2720 ;; Auto vars:     Size  Location     Type
  2721 ;;  a               1    5[COMMON] unsigned char 
  2722 ;; Return value:  Size  Location     Type
  2723 ;;                  1    wreg      void 
  2724 ;; Registers used:
  2725 ;;		wreg, status,2, status,0, pclath, cstack
  2726 ;; Tracked objects:
  2727 ;;		On entry : 0/0
  2728 ;;		On exit  : 0/0
  2729 ;;		Unchanged: 0/0
  2730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2731 ;;      Params:         0       0       0       0       0
  2732 ;;      Locals:         1       0       0       0       0
  2733 ;;      Temps:          1       0       0       0       0
  2734 ;;      Totals:         2       0       0       0       0
  2735 ;;Total ram usage:        2 bytes
  2736 ;; Hardware stack levels used:    1
  2737 ;; Hardware stack levels required when called:    3
  2738 ;; This function calls:
  2739 ;;		_Lcd_Port
  2740 ;; This function is called by:
  2741 ;;		_lcd
  2742 ;;		_Conversion1
  2743 ;;		_Conversion2
  2744 ;;		_Lcd_Write_String
  2745 ;; This function uses a non-reentrant model
  2746 ;;
  2747                           
  2748                           
  2749                           ;psect for function _Lcd_Write_Char
  2750  05D1                     _Lcd_Write_Char:
  2751                           
  2752                           ;incstack = 0
  2753                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2754                           ;Lcd_Write_Char@a stored from wreg
  2755  05D1  00F5               	movwf	Lcd_Write_Char@a
  2756  05D2                     l1739:
  2757                           
  2758                           ;LCD_8bits.c: 86: void Lcd_Write_Char(char a);LCD_8bits.c: 87: {;LCD_8bits.c: 88:     PO
      +                          RTCbits.RC0 = 1;
  2759  05D2  1283               	bcf	3,5	;RP0=0, select bank0
  2760  05D3  1303               	bcf	3,6	;RP1=0, select bank0
  2761  05D4  1407               	bsf	7,0	;volatile
  2762  05D5                     l1741:
  2763                           
  2764                           ;LCD_8bits.c: 89:     Lcd_Port(a);
  2765  05D5  0875               	movf	Lcd_Write_Char@a,w
  2766  05D6  120A  118A  2635  120A  118A  	fcall	_Lcd_Port
  2767  05DB                     l1743:
  2768                           
  2769                           ;LCD_8bits.c: 90:     PORTCbits.RC2 = 1;
  2770  05DB  1283               	bcf	3,5	;RP0=0, select bank0
  2771  05DC  1303               	bcf	3,6	;RP1=0, select bank0
  2772  05DD  1507               	bsf	7,2	;volatile
  2773  05DE                     l1745:
  2774                           
  2775                           ;LCD_8bits.c: 91:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2776  05DE  300D               	movlw	13
  2777  05DF  00F4               	movwf	??_Lcd_Write_Char
  2778  05E0                     u837:
  2779  05E0  0BF4               	decfsz	??_Lcd_Write_Char,f
  2780  05E1  2DE0               	goto	u837
  2781  05E2                     l1747:
  2782                           
  2783                           ;LCD_8bits.c: 92:     PORTCbits.RC2 = 0;
  2784  05E2  1283               	bcf	3,5	;RP0=0, select bank0
  2785  05E3  1303               	bcf	3,6	;RP1=0, select bank0
  2786  05E4  1107               	bcf	7,2	;volatile
  2787  05E5                     l288:
  2788  05E5  0008               	return
  2789  05E6                     __end_of_Lcd_Write_Char:
  2790                           
  2791                           	psect	text16
  2792  0600                     __ptext16:	
  2793 ;; *************** function _interrup_config *****************
  2794 ;; Defined at:
  2795 ;;		line 189 in file "LCD.c"
  2796 ;; Parameters:    Size  Location     Type
  2797 ;;		None
  2798 ;; Auto vars:     Size  Location     Type
  2799 ;;		None
  2800 ;; Return value:  Size  Location     Type
  2801 ;;                  1    wreg      void 
  2802 ;; Registers used:
  2803 ;;		status,2
  2804 ;; Tracked objects:
  2805 ;;		On entry : 0/0
  2806 ;;		On exit  : 0/0
  2807 ;;		Unchanged: 0/0
  2808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2809 ;;      Params:         0       0       0       0       0
  2810 ;;      Locals:         0       0       0       0       0
  2811 ;;      Temps:          0       0       0       0       0
  2812 ;;      Totals:         0       0       0       0       0
  2813 ;;Total ram usage:        0 bytes
  2814 ;; Hardware stack levels used:    1
  2815 ;; Hardware stack levels required when called:    2
  2816 ;; This function calls:
  2817 ;;		Nothing
  2818 ;; This function is called by:
  2819 ;;		_main
  2820 ;; This function uses a non-reentrant model
  2821 ;;
  2822                           
  2823                           
  2824                           ;psect for function _interrup_config
  2825  0600                     _interrup_config:
  2826  0600                     l1605:	
  2827                           ;incstack = 0
  2828                           ; Regs used in _interrup_config: [status,2]
  2829                           
  2830                           
  2831                           ;LCD.c: 191: {
  2832  0600  178B               	bsf	11,7	;volatile
  2833                           
  2834                           ;LCD.c: 192:     ADCON0bits.GO_DONE = 1;
  2835  0601  170B               	bsf	11,6	;volatile
  2836                           
  2837                           ;LCD.c: 193:         _delay((unsigned long)((10)*(4000000/4000.0)));
  2838  0602  168B               	bsf	11,5	;volatile
  2839                           
  2840                           ;LCD.c: 194:         if (ADCON0bits.GO_DONE == 0)
  2841  0603  120B               	bcf	11,4	;volatile
  2842                           
  2843                           ;LCD.c: 195:         {
  2844  0604  118B               	bcf	11,3	;volatile
  2845                           
  2846                           ;LCD.c: 196:             ADCON0bits.GO_DONE = 1;
  2847  0605  110B               	bcf	11,2	;volatile
  2848                           
  2849                           ;LCD.c: 197:             adc_value1 = ADRESH;
  2850  0606  108B               	bcf	11,1	;volatile
  2851                           
  2852                           ;LCD.c: 198:         }
  2853  0607  100B               	bcf	11,0	;volatile
  2854  0608                     l1607:
  2855                           
  2856                           ;LCD.c: 199: }
  2857  0608  1683               	bsf	3,5	;RP0=1, select bank1
  2858  0609  1303               	bcf	3,6	;RP1=0, select bank1
  2859  060A  0196               	clrf	22	;volatile
  2860  060B                     l167:
  2861  060B  0008               	return
  2862  060C                     __end_of_interrup_config:
  2863                           
  2864                           	psect	text17
  2865  058A                     __ptext17:	
  2866 ;; *************** function _adc_conversion2 *****************
  2867 ;; Defined at:
  2868 ;;		line 253 in file "LCD.c"
  2869 ;; Parameters:    Size  Location     Type
  2870 ;;		None
  2871 ;; Auto vars:     Size  Location     Type
  2872 ;;		None
  2873 ;; Return value:  Size  Location     Type
  2874 ;;                  1    wreg      void 
  2875 ;; Registers used:
  2876 ;;		wreg
  2877 ;; Tracked objects:
  2878 ;;		On entry : 0/0
  2879 ;;		On exit  : 0/0
  2880 ;;		Unchanged: 0/0
  2881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2882 ;;      Params:         0       0       0       0       0
  2883 ;;      Locals:         0       0       0       0       0
  2884 ;;      Temps:          2       0       0       0       0
  2885 ;;      Totals:         2       0       0       0       0
  2886 ;;Total ram usage:        2 bytes
  2887 ;; Hardware stack levels used:    1
  2888 ;; Hardware stack levels required when called:    2
  2889 ;; This function calls:
  2890 ;;		Nothing
  2891 ;; This function is called by:
  2892 ;;		_main
  2893 ;; This function uses a non-reentrant model
  2894 ;;
  2895                           
  2896                           
  2897                           ;psect for function _adc_conversion2
  2898  058A                     _adc_conversion2:
  2899  058A                     l1671:	
  2900                           ;incstack = 0
  2901                           ; Regs used in _adc_conversion2: [wreg]
  2902                           
  2903                           
  2904                           ;LCD.c: 255: 
  2905  058A  1283               	bcf	3,5	;RP0=0, select bank0
  2906  058B  1303               	bcf	3,6	;RP1=0, select bank0
  2907  058C  149F               	bsf	31,1	;volatile
  2908  058D                     l1673:
  2909                           
  2910                           ;LCD.c: 256: void Conversion2 ()
  2911  058D  300D               	movlw	13
  2912  058E  00F4               	movwf	??_adc_conversion2+1
  2913  058F  30FB               	movlw	251
  2914  0590  00F3               	movwf	??_adc_conversion2
  2915  0591                     u847:
  2916  0591  0BF3               	decfsz	??_adc_conversion2,f
  2917  0592  2D91               	goto	u847
  2918  0593  0BF4               	decfsz	??_adc_conversion2+1,f
  2919  0594  2D91               	goto	u847
  2920  0595  2D96               	nop2
  2921  0596                     l1675:
  2922                           
  2923                           ;LCD.c: 257: {
  2924  0596  1283               	bcf	3,5	;RP0=0, select bank0
  2925  0597  1303               	bcf	3,6	;RP1=0, select bank0
  2926  0598  189F               	btfsc	31,1	;volatile
  2927  0599  2D9B               	goto	u661
  2928  059A  2D9C               	goto	u660
  2929  059B                     u661:
  2930  059B  2DA1               	goto	l187
  2931  059C                     u660:
  2932  059C                     l1677:
  2933                           
  2934                           ;LCD.c: 258:     voltajez = adc_value2 * 2;;LCD.c: 259:     unidadz = voltajez / 100;
  2935  059C  149F               	bsf	31,1	;volatile
  2936  059D                     l1679:
  2937                           
  2938                           ;LCD.c: 260: 
  2939  059D  081E               	movf	30,w	;volatile
  2940  059E  00F3               	movwf	??_adc_conversion2
  2941  059F  0873               	movf	??_adc_conversion2,w
  2942  05A0  00B5               	movwf	_adc_value2
  2943  05A1                     l187:
  2944  05A1  0008               	return
  2945  05A2                     __end_of_adc_conversion2:
  2946                           
  2947                           	psect	text18
  2948  05A2                     __ptext18:	
  2949 ;; *************** function _adc_conversion1 *****************
  2950 ;; Defined at:
  2951 ;;		line 242 in file "LCD.c"
  2952 ;; Parameters:    Size  Location     Type
  2953 ;;		None
  2954 ;; Auto vars:     Size  Location     Type
  2955 ;;		None
  2956 ;; Return value:  Size  Location     Type
  2957 ;;                  1    wreg      void 
  2958 ;; Registers used:
  2959 ;;		wreg
  2960 ;; Tracked objects:
  2961 ;;		On entry : 0/0
  2962 ;;		On exit  : 0/0
  2963 ;;		Unchanged: 0/0
  2964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2965 ;;      Params:         0       0       0       0       0
  2966 ;;      Locals:         0       0       0       0       0
  2967 ;;      Temps:          2       0       0       0       0
  2968 ;;      Totals:         2       0       0       0       0
  2969 ;;Total ram usage:        2 bytes
  2970 ;; Hardware stack levels used:    1
  2971 ;; Hardware stack levels required when called:    2
  2972 ;; This function calls:
  2973 ;;		Nothing
  2974 ;; This function is called by:
  2975 ;;		_main
  2976 ;; This function uses a non-reentrant model
  2977 ;;
  2978                           
  2979                           
  2980                           ;psect for function _adc_conversion1
  2981  05A2                     _adc_conversion1:
  2982  05A2                     l1661:	
  2983                           ;incstack = 0
  2984                           ; Regs used in _adc_conversion1: [wreg]
  2985                           
  2986                           
  2987                           ;LCD.c: 244: 
  2988  05A2  1283               	bcf	3,5	;RP0=0, select bank0
  2989  05A3  1303               	bcf	3,6	;RP1=0, select bank0
  2990  05A4  149F               	bsf	31,1	;volatile
  2991  05A5                     l1663:
  2992                           
  2993                           ;LCD.c: 245:     y1 = x1 % 10;
  2994  05A5  300D               	movlw	13
  2995  05A6  00F4               	movwf	??_adc_conversion1+1
  2996  05A7  30FB               	movlw	251
  2997  05A8  00F3               	movwf	??_adc_conversion1
  2998  05A9                     u857:
  2999  05A9  0BF3               	decfsz	??_adc_conversion1,f
  3000  05AA  2DA9               	goto	u857
  3001  05AB  0BF4               	decfsz	??_adc_conversion1+1,f
  3002  05AC  2DA9               	goto	u857
  3003  05AD  2DAE               	nop2
  3004  05AE                     l1665:
  3005                           
  3006                           ;LCD.c: 246:     y2 = y1 / 1;
  3007  05AE  1283               	bcf	3,5	;RP0=0, select bank0
  3008  05AF  1303               	bcf	3,6	;RP1=0, select bank0
  3009  05B0  189F               	btfsc	31,1	;volatile
  3010  05B1  2DB3               	goto	u651
  3011  05B2  2DB4               	goto	u650
  3012  05B3                     u651:
  3013  05B3  2DB9               	goto	l183
  3014  05B4                     u650:
  3015  05B4                     l1667:
  3016                           
  3017                           ;LCD.c: 247: ;LCD.c: 248:     Lcd_Write_Char(unidad+48);
  3018  05B4  149F               	bsf	31,1	;volatile
  3019  05B5                     l1669:
  3020                           
  3021                           ;LCD.c: 249:     Lcd_Write_Char(46);
  3022  05B5  081E               	movf	30,w	;volatile
  3023  05B6  00F3               	movwf	??_adc_conversion1
  3024  05B7  0873               	movf	??_adc_conversion1,w
  3025  05B8  00B6               	movwf	_adc_value1
  3026  05B9                     l183:
  3027  05B9  0008               	return
  3028  05BA                     __end_of_adc_conversion1:
  3029                           
  3030                           	psect	text19
  3031  0628                     __ptext19:	
  3032 ;; *************** function _adc_config *****************
  3033 ;; Defined at:
  3034 ;;		line 228 in file "LCD.c"
  3035 ;; Parameters:    Size  Location     Type
  3036 ;;		None
  3037 ;; Auto vars:     Size  Location     Type
  3038 ;;		None
  3039 ;; Return value:  Size  Location     Type
  3040 ;;                  1    wreg      void 
  3041 ;; Registers used:
  3042 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3043 ;; Tracked objects:
  3044 ;;		On entry : 0/0
  3045 ;;		On exit  : 0/0
  3046 ;;		Unchanged: 0/0
  3047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3048 ;;      Params:         0       0       0       0       0
  3049 ;;      Locals:         0       0       0       0       0
  3050 ;;      Temps:          0       0       0       0       0
  3051 ;;      Totals:         0       0       0       0       0
  3052 ;;Total ram usage:        0 bytes
  3053 ;; Hardware stack levels used:    1
  3054 ;; Hardware stack levels required when called:    3
  3055 ;; This function calls:
  3056 ;;		_initADC
  3057 ;; This function is called by:
  3058 ;;		_main
  3059 ;; This function uses a non-reentrant model
  3060 ;;
  3061                           
  3062                           
  3063                           ;psect for function _adc_config
  3064  0628                     _adc_config:
  3065  0628                     l1635:	
  3066                           ;incstack = 0
  3067                           ; Regs used in _adc_config: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3068                           
  3069                           
  3070                           ;LCD.c: 230:         char w2 = contador % 10;
  3071  0628  3000               	movlw	0
  3072  0629  120A  118A  201F  120A  118A  	fcall	_initADC
  3073  062E                     l176:
  3074  062E  0008               	return
  3075  062F                     __end_of_adc_config:
  3076                           
  3077                           	psect	text20
  3078  001F                     __ptext20:	
  3079 ;; *************** function _initADC *****************
  3080 ;; Defined at:
  3081 ;;		line 11 in file "ADC_lib.c"
  3082 ;; Parameters:    Size  Location     Type
  3083 ;;  CHS             1    wreg     unsigned char 
  3084 ;; Auto vars:     Size  Location     Type
  3085 ;;  CHS             1    5[COMMON] unsigned char 
  3086 ;; Return value:  Size  Location     Type
  3087 ;;                  1    wreg      void 
  3088 ;; Registers used:
  3089 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3090 ;; Tracked objects:
  3091 ;;		On entry : 0/0
  3092 ;;		On exit  : 0/0
  3093 ;;		Unchanged: 0/0
  3094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3095 ;;      Params:         0       0       0       0       0
  3096 ;;      Locals:         1       0       0       0       0
  3097 ;;      Temps:          2       0       0       0       0
  3098 ;;      Totals:         3       0       0       0       0
  3099 ;;Total ram usage:        3 bytes
  3100 ;; Hardware stack levels used:    1
  3101 ;; Hardware stack levels required when called:    2
  3102 ;; This function calls:
  3103 ;;		Nothing
  3104 ;; This function is called by:
  3105 ;;		_main
  3106 ;;		_adc_config
  3107 ;; This function uses a non-reentrant model
  3108 ;;
  3109                           
  3110                           
  3111                           ;psect for function _initADC
  3112  001F                     _initADC:
  3113                           
  3114                           ;incstack = 0
  3115                           ; Regs used in _initADC: [wreg-fsr0h+status,2+status,0]
  3116                           ;initADC@CHS stored from wreg
  3117  001F  00F5               	movwf	initADC@CHS
  3118  0020                     l1433:
  3119                           
  3120                           ;ADC_lib.c: 11: void initADC (uint8_t CHS);ADC_lib.c: 12: {;ADC_lib.c: 13:     switch (C
      +                          HS)
  3121  0020  288A               	goto	l1437
  3122  0021                     l231:	
  3123                           ;ADC_lib.c: 14:     {;ADC_lib.c: 15:         case 0:
  3124                           
  3125                           
  3126                           ;ADC_lib.c: 16:             ADCON0bits.CHS3 = 0;
  3127  0021  1283               	bcf	3,5	;RP0=0, select bank0
  3128  0022  1303               	bcf	3,6	;RP1=0, select bank0
  3129  0023  129F               	bcf	31,5	;volatile
  3130                           
  3131                           ;ADC_lib.c: 17:             ADCON0bits.CHS2 = 0;
  3132  0024  121F               	bcf	31,4	;volatile
  3133                           
  3134                           ;ADC_lib.c: 18:             ADCON0bits.CHS1 = 0;
  3135  0025  119F               	bcf	31,3	;volatile
  3136                           
  3137                           ;ADC_lib.c: 19:             ADCON0bits.CHS0 = 0;
  3138  0026  111F               	bcf	31,2	;volatile
  3139                           
  3140                           ;ADC_lib.c: 20:             break;
  3141  0027  28BE               	goto	l232
  3142  0028                     l233:	
  3143                           ;ADC_lib.c: 21:         case 1:
  3144                           
  3145                           
  3146                           ;ADC_lib.c: 22:             ADCON0bits.CHS3 = 0;
  3147  0028  1283               	bcf	3,5	;RP0=0, select bank0
  3148  0029  1303               	bcf	3,6	;RP1=0, select bank0
  3149  002A  129F               	bcf	31,5	;volatile
  3150                           
  3151                           ;ADC_lib.c: 23:             ADCON0bits.CHS2 = 0;
  3152  002B  121F               	bcf	31,4	;volatile
  3153                           
  3154                           ;ADC_lib.c: 24:             ADCON0bits.CHS1 = 0;
  3155  002C  119F               	bcf	31,3	;volatile
  3156                           
  3157                           ;ADC_lib.c: 25:             ADCON0bits.CHS0 = 1;
  3158  002D  151F               	bsf	31,2	;volatile
  3159                           
  3160                           ;ADC_lib.c: 26:             break;
  3161  002E  28BE               	goto	l232
  3162  002F                     l234:	
  3163                           ;ADC_lib.c: 28:         case 2:
  3164                           
  3165                           
  3166                           ;ADC_lib.c: 29:             ADCON0bits.CHS3 = 0;
  3167  002F  1283               	bcf	3,5	;RP0=0, select bank0
  3168  0030  1303               	bcf	3,6	;RP1=0, select bank0
  3169  0031  129F               	bcf	31,5	;volatile
  3170                           
  3171                           ;ADC_lib.c: 30:             ADCON0bits.CHS2 = 0;
  3172  0032  121F               	bcf	31,4	;volatile
  3173                           
  3174                           ;ADC_lib.c: 31:             ADCON0bits.CHS1 = 1;
  3175  0033  159F               	bsf	31,3	;volatile
  3176                           
  3177                           ;ADC_lib.c: 32:             ADCON0bits.CHS0 = 0;
  3178  0034  111F               	bcf	31,2	;volatile
  3179                           
  3180                           ;ADC_lib.c: 33:             break;
  3181  0035  28BE               	goto	l232
  3182  0036                     l235:	
  3183                           ;ADC_lib.c: 35:         case 3:
  3184                           
  3185                           
  3186                           ;ADC_lib.c: 36:             ADCON0bits.CHS3 = 0;
  3187  0036  1283               	bcf	3,5	;RP0=0, select bank0
  3188  0037  1303               	bcf	3,6	;RP1=0, select bank0
  3189  0038  129F               	bcf	31,5	;volatile
  3190                           
  3191                           ;ADC_lib.c: 37:             ADCON0bits.CHS2 = 0;
  3192  0039  121F               	bcf	31,4	;volatile
  3193                           
  3194                           ;ADC_lib.c: 38:             ADCON0bits.CHS1 = 1;
  3195  003A  159F               	bsf	31,3	;volatile
  3196                           
  3197                           ;ADC_lib.c: 39:             ADCON0bits.CHS0 = 1;
  3198  003B  151F               	bsf	31,2	;volatile
  3199                           
  3200                           ;ADC_lib.c: 40:             break;
  3201  003C  28BE               	goto	l232
  3202  003D                     l236:	
  3203                           ;ADC_lib.c: 42:         case 4:
  3204                           
  3205                           
  3206                           ;ADC_lib.c: 43:             ADCON0bits.CHS3 = 0;
  3207  003D  1283               	bcf	3,5	;RP0=0, select bank0
  3208  003E  1303               	bcf	3,6	;RP1=0, select bank0
  3209  003F  129F               	bcf	31,5	;volatile
  3210                           
  3211                           ;ADC_lib.c: 44:             ADCON0bits.CHS2 = 1;
  3212  0040  161F               	bsf	31,4	;volatile
  3213                           
  3214                           ;ADC_lib.c: 45:             ADCON0bits.CHS1 = 0;
  3215  0041  119F               	bcf	31,3	;volatile
  3216                           
  3217                           ;ADC_lib.c: 46:             ADCON0bits.CHS0 = 0;
  3218  0042  111F               	bcf	31,2	;volatile
  3219                           
  3220                           ;ADC_lib.c: 47:             break;
  3221  0043  28BE               	goto	l232
  3222  0044                     l237:	
  3223                           ;ADC_lib.c: 49:         case 5:
  3224                           
  3225                           
  3226                           ;ADC_lib.c: 50:             ADCON0bits.CHS3 = 0;
  3227  0044  1283               	bcf	3,5	;RP0=0, select bank0
  3228  0045  1303               	bcf	3,6	;RP1=0, select bank0
  3229  0046  129F               	bcf	31,5	;volatile
  3230                           
  3231                           ;ADC_lib.c: 51:             ADCON0bits.CHS2 = 1;
  3232  0047  161F               	bsf	31,4	;volatile
  3233                           
  3234                           ;ADC_lib.c: 52:             ADCON0bits.CHS1 = 0;
  3235  0048  119F               	bcf	31,3	;volatile
  3236                           
  3237                           ;ADC_lib.c: 53:             ADCON0bits.CHS0 = 1;
  3238  0049  151F               	bsf	31,2	;volatile
  3239                           
  3240                           ;ADC_lib.c: 54:             break;
  3241  004A  28BE               	goto	l232
  3242  004B                     l238:	
  3243                           ;ADC_lib.c: 56:         case 6:
  3244                           
  3245                           
  3246                           ;ADC_lib.c: 57:             ADCON0bits.CHS3 = 0;
  3247  004B  1283               	bcf	3,5	;RP0=0, select bank0
  3248  004C  1303               	bcf	3,6	;RP1=0, select bank0
  3249  004D  129F               	bcf	31,5	;volatile
  3250                           
  3251                           ;ADC_lib.c: 58:             ADCON0bits.CHS2 = 1;
  3252  004E  161F               	bsf	31,4	;volatile
  3253                           
  3254                           ;ADC_lib.c: 59:             ADCON0bits.CHS1 = 1;
  3255  004F  159F               	bsf	31,3	;volatile
  3256                           
  3257                           ;ADC_lib.c: 60:             ADCON0bits.CHS0 = 0;
  3258  0050  111F               	bcf	31,2	;volatile
  3259                           
  3260                           ;ADC_lib.c: 61:             break;
  3261  0051  28BE               	goto	l232
  3262  0052                     l239:	
  3263                           ;ADC_lib.c: 63:         case 7:
  3264                           
  3265                           
  3266                           ;ADC_lib.c: 64:             ADCON0bits.CHS3 = 0;
  3267  0052  1283               	bcf	3,5	;RP0=0, select bank0
  3268  0053  1303               	bcf	3,6	;RP1=0, select bank0
  3269  0054  129F               	bcf	31,5	;volatile
  3270                           
  3271                           ;ADC_lib.c: 65:             ADCON0bits.CHS2 = 1;
  3272  0055  161F               	bsf	31,4	;volatile
  3273                           
  3274                           ;ADC_lib.c: 66:             ADCON0bits.CHS1 = 1;
  3275  0056  159F               	bsf	31,3	;volatile
  3276                           
  3277                           ;ADC_lib.c: 67:             ADCON0bits.CHS0 = 1;
  3278  0057  151F               	bsf	31,2	;volatile
  3279                           
  3280                           ;ADC_lib.c: 68:             break;
  3281  0058  28BE               	goto	l232
  3282  0059                     l240:	
  3283                           ;ADC_lib.c: 70:         case 8:
  3284                           
  3285                           
  3286                           ;ADC_lib.c: 71:             ADCON0bits.CHS3 = 1;
  3287  0059  1283               	bcf	3,5	;RP0=0, select bank0
  3288  005A  1303               	bcf	3,6	;RP1=0, select bank0
  3289  005B  169F               	bsf	31,5	;volatile
  3290                           
  3291                           ;ADC_lib.c: 72:             ADCON0bits.CHS2 = 0;
  3292  005C  121F               	bcf	31,4	;volatile
  3293                           
  3294                           ;ADC_lib.c: 73:             ADCON0bits.CHS1 = 0;
  3295  005D  119F               	bcf	31,3	;volatile
  3296                           
  3297                           ;ADC_lib.c: 74:             ADCON0bits.CHS0 = 0;
  3298  005E  111F               	bcf	31,2	;volatile
  3299                           
  3300                           ;ADC_lib.c: 75:             break;
  3301  005F  28BE               	goto	l232
  3302  0060                     l241:	
  3303                           ;ADC_lib.c: 77:         case 9:
  3304                           
  3305                           
  3306                           ;ADC_lib.c: 78:             ADCON0bits.CHS3 = 1;
  3307  0060  1283               	bcf	3,5	;RP0=0, select bank0
  3308  0061  1303               	bcf	3,6	;RP1=0, select bank0
  3309  0062  169F               	bsf	31,5	;volatile
  3310                           
  3311                           ;ADC_lib.c: 79:             ADCON0bits.CHS2 = 0;
  3312  0063  121F               	bcf	31,4	;volatile
  3313                           
  3314                           ;ADC_lib.c: 80:             ADCON0bits.CHS1 = 0;
  3315  0064  119F               	bcf	31,3	;volatile
  3316                           
  3317                           ;ADC_lib.c: 81:             ADCON0bits.CHS0 = 1;
  3318  0065  151F               	bsf	31,2	;volatile
  3319                           
  3320                           ;ADC_lib.c: 82:             break;
  3321  0066  28BE               	goto	l232
  3322  0067                     l242:	
  3323                           ;ADC_lib.c: 84:         case 10:
  3324                           
  3325                           
  3326                           ;ADC_lib.c: 85:             ADCON0bits.CHS3 = 1;
  3327  0067  1283               	bcf	3,5	;RP0=0, select bank0
  3328  0068  1303               	bcf	3,6	;RP1=0, select bank0
  3329  0069  169F               	bsf	31,5	;volatile
  3330                           
  3331                           ;ADC_lib.c: 86:             ADCON0bits.CHS2 = 0;
  3332  006A  121F               	bcf	31,4	;volatile
  3333                           
  3334                           ;ADC_lib.c: 87:             ADCON0bits.CHS1 = 1;
  3335  006B  159F               	bsf	31,3	;volatile
  3336                           
  3337                           ;ADC_lib.c: 88:             ADCON0bits.CHS0 = 0;
  3338  006C  111F               	bcf	31,2	;volatile
  3339                           
  3340                           ;ADC_lib.c: 89:             break;
  3341  006D  28BE               	goto	l232
  3342  006E                     l243:	
  3343                           ;ADC_lib.c: 91:         case 11:
  3344                           
  3345                           
  3346                           ;ADC_lib.c: 92:             ADCON0bits.CHS3 = 1;
  3347  006E  1283               	bcf	3,5	;RP0=0, select bank0
  3348  006F  1303               	bcf	3,6	;RP1=0, select bank0
  3349  0070  169F               	bsf	31,5	;volatile
  3350                           
  3351                           ;ADC_lib.c: 93:             ADCON0bits.CHS2 = 0;
  3352  0071  121F               	bcf	31,4	;volatile
  3353                           
  3354                           ;ADC_lib.c: 94:             ADCON0bits.CHS1 = 1;
  3355  0072  159F               	bsf	31,3	;volatile
  3356                           
  3357                           ;ADC_lib.c: 95:             ADCON0bits.CHS0 = 1;
  3358  0073  151F               	bsf	31,2	;volatile
  3359                           
  3360                           ;ADC_lib.c: 96:             break;
  3361  0074  28BE               	goto	l232
  3362  0075                     l244:	
  3363                           ;ADC_lib.c: 98:         case 12:
  3364                           
  3365                           
  3366                           ;ADC_lib.c: 99:             ADCON0bits.CHS3 = 1;
  3367  0075  1283               	bcf	3,5	;RP0=0, select bank0
  3368  0076  1303               	bcf	3,6	;RP1=0, select bank0
  3369  0077  169F               	bsf	31,5	;volatile
  3370                           
  3371                           ;ADC_lib.c: 100:             ADCON0bits.CHS2 = 1;
  3372  0078  161F               	bsf	31,4	;volatile
  3373                           
  3374                           ;ADC_lib.c: 101:             ADCON0bits.CHS1 = 0;
  3375  0079  119F               	bcf	31,3	;volatile
  3376                           
  3377                           ;ADC_lib.c: 102:             ADCON0bits.CHS0 = 0;
  3378  007A  111F               	bcf	31,2	;volatile
  3379                           
  3380                           ;ADC_lib.c: 103:             break;
  3381  007B  28BE               	goto	l232
  3382  007C                     l245:	
  3383                           ;ADC_lib.c: 105:         case 13:
  3384                           
  3385                           
  3386                           ;ADC_lib.c: 106:             ADCON0bits.CHS3 = 1;
  3387  007C  1283               	bcf	3,5	;RP0=0, select bank0
  3388  007D  1303               	bcf	3,6	;RP1=0, select bank0
  3389  007E  169F               	bsf	31,5	;volatile
  3390                           
  3391                           ;ADC_lib.c: 107:             ADCON0bits.CHS2 = 1;
  3392  007F  161F               	bsf	31,4	;volatile
  3393                           
  3394                           ;ADC_lib.c: 108:             ADCON0bits.CHS1 = 0;
  3395  0080  119F               	bcf	31,3	;volatile
  3396                           
  3397                           ;ADC_lib.c: 109:             ADCON0bits.CHS0 = 1;
  3398  0081  151F               	bsf	31,2	;volatile
  3399                           
  3400                           ;ADC_lib.c: 110:             break;
  3401  0082  28BE               	goto	l232
  3402  0083                     l246:	
  3403                           ;ADC_lib.c: 112:         default:
  3404                           
  3405                           
  3406                           ;ADC_lib.c: 113:             ADCON0bits.CHS3 = 1;
  3407  0083  1283               	bcf	3,5	;RP0=0, select bank0
  3408  0084  1303               	bcf	3,6	;RP1=0, select bank0
  3409  0085  169F               	bsf	31,5	;volatile
  3410                           
  3411                           ;ADC_lib.c: 114:             ADCON0bits.CHS2 = 1;
  3412  0086  161F               	bsf	31,4	;volatile
  3413                           
  3414                           ;ADC_lib.c: 115:             ADCON0bits.CHS1 = 1;
  3415  0087  159F               	bsf	31,3	;volatile
  3416                           
  3417                           ;ADC_lib.c: 116:             ADCON0bits.CHS0 = 0;
  3418  0088  111F               	bcf	31,2	;volatile
  3419                           
  3420                           ;ADC_lib.c: 117:             break;
  3421  0089  28BE               	goto	l232
  3422  008A                     l1437:
  3423  008A  0875               	movf	initADC@CHS,w
  3424  008B  00F3               	movwf	??_initADC
  3425  008C  01F4               	clrf	??_initADC+1
  3426                           
  3427                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3428                           ; Switch size 1, requested type "simple"
  3429                           ; Number of cases is 1, Range of values is 0 to 0
  3430                           ; switch strategies available:
  3431                           ; Name         Instructions Cycles
  3432                           ; simple_byte            4     3 (average)
  3433                           ; direct_byte           11     8 (fixed)
  3434                           ; jumptable            260     6 (fixed)
  3435                           ;	Chosen strategy is simple_byte
  3436  008D  0874               	movf	??_initADC+1,w
  3437  008E  3A00               	xorlw	0	; case 0
  3438  008F  1903               	skipnz
  3439  0090  2892               	goto	l1953
  3440  0091  2883               	goto	l246
  3441  0092                     l1953:
  3442                           
  3443                           ; Switch size 1, requested type "simple"
  3444                           ; Number of cases is 14, Range of values is 0 to 13
  3445                           ; switch strategies available:
  3446                           ; Name         Instructions Cycles
  3447                           ; simple_byte           43    22 (average)
  3448                           ; direct_byte           50     8 (fixed)
  3449                           ; jumptable            260     6 (fixed)
  3450                           ;	Chosen strategy is simple_byte
  3451  0092  0873               	movf	??_initADC,w
  3452  0093  3A00               	xorlw	0	; case 0
  3453  0094  1903               	skipnz
  3454  0095  2821               	goto	l231
  3455  0096  3A01               	xorlw	1	; case 1
  3456  0097  1903               	skipnz
  3457  0098  2828               	goto	l233
  3458  0099  3A03               	xorlw	3	; case 2
  3459  009A  1903               	skipnz
  3460  009B  282F               	goto	l234
  3461  009C  3A01               	xorlw	1	; case 3
  3462  009D  1903               	skipnz
  3463  009E  2836               	goto	l235
  3464  009F  3A07               	xorlw	7	; case 4
  3465  00A0  1903               	skipnz
  3466  00A1  283D               	goto	l236
  3467  00A2  3A01               	xorlw	1	; case 5
  3468  00A3  1903               	skipnz
  3469  00A4  2844               	goto	l237
  3470  00A5  3A03               	xorlw	3	; case 6
  3471  00A6  1903               	skipnz
  3472  00A7  284B               	goto	l238
  3473  00A8  3A01               	xorlw	1	; case 7
  3474  00A9  1903               	skipnz
  3475  00AA  2852               	goto	l239
  3476  00AB  3A0F               	xorlw	15	; case 8
  3477  00AC  1903               	skipnz
  3478  00AD  2859               	goto	l240
  3479  00AE  3A01               	xorlw	1	; case 9
  3480  00AF  1903               	skipnz
  3481  00B0  2860               	goto	l241
  3482  00B1  3A03               	xorlw	3	; case 10
  3483  00B2  1903               	skipnz
  3484  00B3  2867               	goto	l242
  3485  00B4  3A01               	xorlw	1	; case 11
  3486  00B5  1903               	skipnz
  3487  00B6  286E               	goto	l243
  3488  00B7  3A07               	xorlw	7	; case 12
  3489  00B8  1903               	skipnz
  3490  00B9  2875               	goto	l244
  3491  00BA  3A01               	xorlw	1	; case 13
  3492  00BB  1903               	skipnz
  3493  00BC  287C               	goto	l245
  3494  00BD  2883               	goto	l246
  3495  00BE                     l232:
  3496                           
  3497                           ;ADC_lib.c: 119:     ADCON0bits.ADCS1 = 1;
  3498  00BE  179F               	bsf	31,7	;volatile
  3499                           
  3500                           ;ADC_lib.c: 120:     ADCON0bits.ADCS0 = 0;
  3501  00BF  131F               	bcf	31,6	;volatile
  3502                           
  3503                           ;ADC_lib.c: 121:     ADCON0bits.GO_DONE= 0;
  3504  00C0  109F               	bcf	31,1	;volatile
  3505                           
  3506                           ;ADC_lib.c: 122:     ADCON0bits.ADON = 1;
  3507  00C1  141F               	bsf	31,0	;volatile
  3508                           
  3509                           ;ADC_lib.c: 124:     ADCON1bits.ADFM = 0;
  3510  00C2  1683               	bsf	3,5	;RP0=1, select bank1
  3511  00C3  1303               	bcf	3,6	;RP1=0, select bank1
  3512  00C4  139F               	bcf	31,7	;volatile
  3513                           
  3514                           ;ADC_lib.c: 125:     ADCON1bits.VCFG1 = 0;
  3515  00C5  129F               	bcf	31,5	;volatile
  3516                           
  3517                           ;ADC_lib.c: 126:     ADCON1bits.VCFG0 = 0;
  3518  00C6  121F               	bcf	31,4	;volatile
  3519  00C7                     l247:
  3520  00C7  0008               	return
  3521  00C8                     __end_of_initADC:
  3522                           
  3523                           	psect	text21
  3524  062F                     __ptext21:	
  3525 ;; *************** function _USART_config *****************
  3526 ;; Defined at:
  3527 ;;		line 233 in file "LCD.c"
  3528 ;; Parameters:    Size  Location     Type
  3529 ;;		None
  3530 ;; Auto vars:     Size  Location     Type
  3531 ;;		None
  3532 ;; Return value:  Size  Location     Type
  3533 ;;                  1    wreg      void 
  3534 ;; Registers used:
  3535 ;;		wreg, status,2, status,0, pclath, cstack
  3536 ;; Tracked objects:
  3537 ;;		On entry : 0/0
  3538 ;;		On exit  : 0/0
  3539 ;;		Unchanged: 0/0
  3540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3541 ;;      Params:         0       0       0       0       0
  3542 ;;      Locals:         0       0       0       0       0
  3543 ;;      Temps:          0       0       0       0       0
  3544 ;;      Totals:         0       0       0       0       0
  3545 ;;Total ram usage:        0 bytes
  3546 ;; Hardware stack levels used:    1
  3547 ;; Hardware stack levels required when called:    3
  3548 ;; This function calls:
  3549 ;;		_USART_lib_config
  3550 ;; This function is called by:
  3551 ;;		_main
  3552 ;; This function uses a non-reentrant model
  3553 ;;
  3554                           
  3555                           
  3556                           ;psect for function _USART_config
  3557  062F                     _USART_config:
  3558  062F                     l1637:	
  3559                           ;incstack = 0
  3560                           ; Regs used in _USART_config: [wreg+status,2+status,0+pclath+cstack]
  3561                           
  3562                           
  3563                           ;LCD.c: 235: }
  3564  062F  120A  118A  2537  120A  118A  	fcall	_USART_lib_config
  3565  0634                     l179:
  3566  0634  0008               	return
  3567  0635                     __end_of_USART_config:
  3568                           
  3569                           	psect	text22
  3570  0537                     __ptext22:	
  3571 ;; *************** function _USART_lib_config *****************
  3572 ;; Defined at:
  3573 ;;		line 14 in file "USART.c"
  3574 ;; Parameters:    Size  Location     Type
  3575 ;;		None
  3576 ;; Auto vars:     Size  Location     Type
  3577 ;;		None
  3578 ;; Return value:  Size  Location     Type
  3579 ;;                  1    wreg      void 
  3580 ;; Registers used:
  3581 ;;		wreg
  3582 ;; Tracked objects:
  3583 ;;		On entry : 0/0
  3584 ;;		On exit  : 0/0
  3585 ;;		Unchanged: 0/0
  3586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3587 ;;      Params:         0       0       0       0       0
  3588 ;;      Locals:         0       0       0       0       0
  3589 ;;      Temps:          0       0       0       0       0
  3590 ;;      Totals:         0       0       0       0       0
  3591 ;;Total ram usage:        0 bytes
  3592 ;; Hardware stack levels used:    1
  3593 ;; Hardware stack levels required when called:    2
  3594 ;; This function calls:
  3595 ;;		Nothing
  3596 ;; This function is called by:
  3597 ;;		_USART_config
  3598 ;; This function uses a non-reentrant model
  3599 ;;
  3600                           
  3601                           
  3602                           ;psect for function _USART_lib_config
  3603  0537                     _USART_lib_config:
  3604  0537                     l1443:	
  3605                           ;incstack = 0
  3606                           ; Regs used in _USART_lib_config: [wreg]
  3607                           
  3608                           
  3609                           ;USART.c: 16:     SPBRG = 25;
  3610  0537  3019               	movlw	25
  3611  0538  1683               	bsf	3,5	;RP0=1, select bank1
  3612  0539  1303               	bcf	3,6	;RP1=0, select bank1
  3613  053A  0099               	movwf	25	;volatile
  3614  053B                     l1445:
  3615                           
  3616                           ;USART.c: 18:     TXSTAbits.CSRC = 0;
  3617  053B  1398               	bcf	24,7	;volatile
  3618  053C                     l1447:
  3619                           
  3620                           ;USART.c: 19:     TXSTAbits.TX9 = 0;
  3621  053C  1318               	bcf	24,6	;volatile
  3622  053D                     l1449:
  3623                           
  3624                           ;USART.c: 20:     TXSTAbits.TXEN = 1;
  3625  053D  1698               	bsf	24,5	;volatile
  3626  053E                     l1451:
  3627                           
  3628                           ;USART.c: 21:     TXSTAbits.SYNC = 0;
  3629  053E  1218               	bcf	24,4	;volatile
  3630  053F                     l1453:
  3631                           
  3632                           ;USART.c: 22:     TXSTAbits.SENDB= 0;
  3633  053F  1198               	bcf	24,3	;volatile
  3634  0540                     l1455:
  3635                           
  3636                           ;USART.c: 23:     TXSTAbits.BRGH = 1;
  3637  0540  1518               	bsf	24,2	;volatile
  3638  0541                     l1457:
  3639                           
  3640                           ;USART.c: 24:     TXSTAbits.TRMT = 0;
  3641  0541  1098               	bcf	24,1	;volatile
  3642  0542                     l1459:
  3643                           
  3644                           ;USART.c: 25:     TXSTAbits.TX9D = 0;
  3645  0542  1018               	bcf	24,0	;volatile
  3646  0543                     l1461:
  3647                           
  3648                           ;USART.c: 27:     RCSTAbits.SPEN = 1;
  3649  0543  1283               	bcf	3,5	;RP0=0, select bank0
  3650  0544  1303               	bcf	3,6	;RP1=0, select bank0
  3651  0545  1798               	bsf	24,7	;volatile
  3652  0546                     l1463:
  3653                           
  3654                           ;USART.c: 28:     RCSTAbits.RX9 = 0;
  3655  0546  1318               	bcf	24,6	;volatile
  3656  0547                     l1465:
  3657                           
  3658                           ;USART.c: 29:     RCSTAbits.SREN = 0;
  3659  0547  1298               	bcf	24,5	;volatile
  3660  0548                     l1467:
  3661                           
  3662                           ;USART.c: 30:     RCSTAbits.CREN = 1;
  3663  0548  1618               	bsf	24,4	;volatile
  3664  0549                     l1469:
  3665                           
  3666                           ;USART.c: 31:     RCSTAbits.ADDEN= 0;
  3667  0549  1198               	bcf	24,3	;volatile
  3668  054A                     l1471:
  3669                           
  3670                           ;USART.c: 32:     RCSTAbits.FERR = 0;
  3671  054A  1118               	bcf	24,2	;volatile
  3672  054B                     l1473:
  3673                           
  3674                           ;USART.c: 33:     RCSTAbits.OERR = 0;
  3675  054B  1098               	bcf	24,1	;volatile
  3676  054C                     l1475:
  3677                           
  3678                           ;USART.c: 34:     RCSTAbits.RX9D = 0;
  3679  054C  1018               	bcf	24,0	;volatile
  3680  054D                     l1477:
  3681                           
  3682                           ;USART.c: 36:     PIR1bits.RCIF = 0;
  3683  054D  128C               	bcf	12,5	;volatile
  3684  054E                     l1479:
  3685                           
  3686                           ;USART.c: 37:     PIE1bits.RCIE = 1;
  3687  054E  1683               	bsf	3,5	;RP0=1, select bank1
  3688  054F  1303               	bcf	3,6	;RP1=0, select bank1
  3689  0550  168C               	bsf	12,5	;volatile
  3690  0551                     l1481:
  3691                           
  3692                           ;USART.c: 38:     PIR1bits.TXIF = 0;
  3693  0551  1283               	bcf	3,5	;RP0=0, select bank0
  3694  0552  1303               	bcf	3,6	;RP1=0, select bank0
  3695  0553  120C               	bcf	12,4	;volatile
  3696  0554                     l301:
  3697  0554  0008               	return
  3698  0555                     __end_of_USART_lib_config:
  3699                           
  3700                           	psect	text23
  3701  02EA                     __ptext23:	
  3702 ;; *************** function _Lcd_Init *****************
  3703 ;; Defined at:
  3704 ;;		line 28 in file "LCD_8bits.c"
  3705 ;; Parameters:    Size  Location     Type
  3706 ;;		None
  3707 ;; Auto vars:     Size  Location     Type
  3708 ;;		None
  3709 ;; Return value:  Size  Location     Type
  3710 ;;                  1    wreg      void 
  3711 ;; Registers used:
  3712 ;;		wreg, status,2, status,0, pclath, cstack
  3713 ;; Tracked objects:
  3714 ;;		On entry : 0/0
  3715 ;;		On exit  : 0/0
  3716 ;;		Unchanged: 0/0
  3717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3718 ;;      Params:         0       0       0       0       0
  3719 ;;      Locals:         0       0       0       0       0
  3720 ;;      Temps:          0       2       0       0       0
  3721 ;;      Totals:         0       2       0       0       0
  3722 ;;Total ram usage:        2 bytes
  3723 ;; Hardware stack levels used:    1
  3724 ;; Hardware stack levels required when called:    4
  3725 ;; This function calls:
  3726 ;;		_Lcd_Cmd
  3727 ;;		_Lcd_Port
  3728 ;; This function is called by:
  3729 ;;		_main
  3730 ;; This function uses a non-reentrant model
  3731 ;;
  3732                           
  3733                           
  3734                           ;psect for function _Lcd_Init
  3735  02EA                     _Lcd_Init:
  3736  02EA                     l1865:	
  3737                           ;incstack = 0
  3738                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3739                           
  3740                           
  3741                           ;LCD_8bits.c: 30:     Lcd_Port(0b0000000);
  3742  02EA  3000               	movlw	0
  3743  02EB  120A  118A  2635  120A  118A  	fcall	_Lcd_Port
  3744  02F0                     l1867:
  3745                           
  3746                           ;LCD_8bits.c: 31:     _delay((unsigned long)((20)*(4000000/4000.0)));
  3747  02F0  301A               	movlw	26
  3748  02F1  1283               	bcf	3,5	;RP0=0, select bank0
  3749  02F2  1303               	bcf	3,6	;RP1=0, select bank0
  3750  02F3  00B8               	movwf	??_Lcd_Init+1
  3751  02F4  30F7               	movlw	247
  3752  02F5  00B7               	movwf	??_Lcd_Init
  3753  02F6                     u867:
  3754  02F6  0BB7               	decfsz	??_Lcd_Init,f
  3755  02F7  2AF6               	goto	u867
  3756  02F8  0BB8               	decfsz	??_Lcd_Init+1,f
  3757  02F9  2AF6               	goto	u867
  3758  02FA  2AFB               	nop2
  3759  02FB                     l1869:
  3760                           
  3761                           ;LCD_8bits.c: 32:     Lcd_Cmd(0b00110000);
  3762  02FB  3030               	movlw	48
  3763  02FC  120A  118A  2571  120A  118A  	fcall	_Lcd_Cmd
  3764  0301                     l1871:
  3765                           
  3766                           ;LCD_8bits.c: 33:     PORTCbits.RC0 = 0;
  3767  0301  1283               	bcf	3,5	;RP0=0, select bank0
  3768  0302  1303               	bcf	3,6	;RP1=0, select bank0
  3769  0303  1007               	bcf	7,0	;volatile
  3770  0304                     l1873:
  3771                           
  3772                           ;LCD_8bits.c: 34:     PORTCbits.RC1 = 0;
  3773  0304  1087               	bcf	7,1	;volatile
  3774                           
  3775                           ;LCD_8bits.c: 35:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3776  0305  3007               	movlw	7
  3777  0306  1283               	bcf	3,5	;RP0=0, select bank0
  3778  0307  1303               	bcf	3,6	;RP1=0, select bank0
  3779  0308  00B8               	movwf	??_Lcd_Init+1
  3780  0309  307C               	movlw	124
  3781  030A  00B7               	movwf	??_Lcd_Init
  3782  030B                     u877:
  3783  030B  0BB7               	decfsz	??_Lcd_Init,f
  3784  030C  2B0B               	goto	u877
  3785  030D  0BB8               	decfsz	??_Lcd_Init+1,f
  3786  030E  2B0B               	goto	u877
  3787  030F  0000               	nop
  3788  0310                     l1875:
  3789                           
  3790                           ;LCD_8bits.c: 36:     Lcd_Cmd(0b00110000);
  3791  0310  3030               	movlw	48
  3792  0311  120A  118A  2571  120A  118A  	fcall	_Lcd_Cmd
  3793  0316                     l1877:
  3794                           
  3795                           ;LCD_8bits.c: 37:      PORTCbits.RC0 = 0;
  3796  0316  1283               	bcf	3,5	;RP0=0, select bank0
  3797  0317  1303               	bcf	3,6	;RP1=0, select bank0
  3798  0318  1007               	bcf	7,0	;volatile
  3799  0319                     l1879:
  3800                           
  3801                           ;LCD_8bits.c: 38:     PORTCbits.RC1 = 0;
  3802  0319  1087               	bcf	7,1	;volatile
  3803  031A                     l1881:
  3804                           
  3805                           ;LCD_8bits.c: 39:     _delay((unsigned long)((11)*(4000000/4000.0)));
  3806  031A  300F               	movlw	15
  3807  031B  1283               	bcf	3,5	;RP0=0, select bank0
  3808  031C  1303               	bcf	3,6	;RP1=0, select bank0
  3809  031D  00B8               	movwf	??_Lcd_Init+1
  3810  031E  3047               	movlw	71
  3811  031F  00B7               	movwf	??_Lcd_Init
  3812  0320                     u887:
  3813  0320  0BB7               	decfsz	??_Lcd_Init,f
  3814  0321  2B20               	goto	u887
  3815  0322  0BB8               	decfsz	??_Lcd_Init+1,f
  3816  0323  2B20               	goto	u887
  3817                           
  3818                           ;LCD_8bits.c: 40:     Lcd_Cmd(0b00110000);
  3819  0324  3030               	movlw	48
  3820  0325  120A  118A  2571  120A  118A  	fcall	_Lcd_Cmd
  3821  032A                     l1883:
  3822                           
  3823                           ;LCD_8bits.c: 41:     PORTCbits.RC0 = 0;
  3824  032A  1283               	bcf	3,5	;RP0=0, select bank0
  3825  032B  1303               	bcf	3,6	;RP1=0, select bank0
  3826  032C  1007               	bcf	7,0	;volatile
  3827  032D                     l1885:
  3828                           
  3829                           ;LCD_8bits.c: 42:     PORTCbits.RC1 = 0;
  3830  032D  1087               	bcf	7,1	;volatile
  3831                           
  3832                           ;LCD_8bits.c: 43:     Lcd_Cmd(0b00111000);
  3833  032E  3038               	movlw	56
  3834  032F  120A  118A  2571  120A  118A  	fcall	_Lcd_Cmd
  3835                           
  3836                           ;LCD_8bits.c: 44:     Lcd_Cmd(0b00001100);
  3837  0334  300C               	movlw	12
  3838  0335  120A  118A  2571  120A  118A  	fcall	_Lcd_Cmd
  3839                           
  3840                           ;LCD_8bits.c: 45:     Lcd_Cmd(0b00000001);
  3841  033A  3001               	movlw	1
  3842  033B  120A  118A  2571  120A  118A  	fcall	_Lcd_Cmd
  3843                           
  3844                           ;LCD_8bits.c: 46:     Lcd_Cmd(0b00000110);
  3845  0340  3006               	movlw	6
  3846  0341  120A  118A  2571  120A  118A  	fcall	_Lcd_Cmd
  3847  0346                     l264:
  3848  0346  0008               	return
  3849  0347                     __end_of_Lcd_Init:
  3850                           
  3851                           	psect	text24
  3852  0571                     __ptext24:	
  3853 ;; *************** function _Lcd_Cmd *****************
  3854 ;; Defined at:
  3855 ;;		line 19 in file "LCD_8bits.c"
  3856 ;; Parameters:    Size  Location     Type
  3857 ;;  a               1    wreg     unsigned char 
  3858 ;; Auto vars:     Size  Location     Type
  3859 ;;  a               1    6[COMMON] unsigned char 
  3860 ;; Return value:  Size  Location     Type
  3861 ;;                  1    wreg      void 
  3862 ;; Registers used:
  3863 ;;		wreg, status,2, status,0, pclath, cstack
  3864 ;; Tracked objects:
  3865 ;;		On entry : 0/0
  3866 ;;		On exit  : 0/0
  3867 ;;		Unchanged: 0/0
  3868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3869 ;;      Params:         0       0       0       0       0
  3870 ;;      Locals:         1       0       0       0       0
  3871 ;;      Temps:          2       0       0       0       0
  3872 ;;      Totals:         3       0       0       0       0
  3873 ;;Total ram usage:        3 bytes
  3874 ;; Hardware stack levels used:    1
  3875 ;; Hardware stack levels required when called:    3
  3876 ;; This function calls:
  3877 ;;		_Lcd_Port
  3878 ;; This function is called by:
  3879 ;;		_Lcd_Init
  3880 ;;		_Lcd_Set_Cursor
  3881 ;;		_Lcd_Clear
  3882 ;;		_Lcd_Shift_Left
  3883 ;;		_Lcd_Shift_Right
  3884 ;; This function uses a non-reentrant model
  3885 ;;
  3886                           
  3887                           
  3888                           ;psect for function _Lcd_Cmd
  3889  0571                     _Lcd_Cmd:
  3890                           
  3891                           ;incstack = 0
  3892                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3893                           ;Lcd_Cmd@a stored from wreg
  3894  0571  00F6               	movwf	Lcd_Cmd@a
  3895  0572                     l1749:
  3896                           
  3897                           ;LCD_8bits.c: 19: void Lcd_Cmd (char a);LCD_8bits.c: 20: {;LCD_8bits.c: 21:     PORTCbit
      +                          s.RC0 = 0;
  3898  0572  1283               	bcf	3,5	;RP0=0, select bank0
  3899  0573  1303               	bcf	3,6	;RP1=0, select bank0
  3900  0574  1007               	bcf	7,0	;volatile
  3901  0575                     l1751:
  3902                           
  3903                           ;LCD_8bits.c: 22:     Lcd_Port(a);
  3904  0575  0876               	movf	Lcd_Cmd@a,w
  3905  0576  120A  118A  2635  120A  118A  	fcall	_Lcd_Port
  3906  057B                     l1753:
  3907                           
  3908                           ;LCD_8bits.c: 23:     PORTCbits.RC2 = 1;
  3909  057B  1283               	bcf	3,5	;RP0=0, select bank0
  3910  057C  1303               	bcf	3,6	;RP1=0, select bank0
  3911  057D  1507               	bsf	7,2	;volatile
  3912  057E                     l1755:
  3913                           
  3914                           ;LCD_8bits.c: 24:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3915  057E  3007               	movlw	7
  3916  057F  00F5               	movwf	??_Lcd_Cmd+1
  3917  0580  307D               	movlw	125
  3918  0581  00F4               	movwf	??_Lcd_Cmd
  3919  0582                     u897:
  3920  0582  0BF4               	decfsz	??_Lcd_Cmd,f
  3921  0583  2D82               	goto	u897
  3922  0584  0BF5               	decfsz	??_Lcd_Cmd+1,f
  3923  0585  2D82               	goto	u897
  3924  0586                     l1757:
  3925                           
  3926                           ;LCD_8bits.c: 25:     PORTCbits.RC2 = 0;
  3927  0586  1283               	bcf	3,5	;RP0=0, select bank0
  3928  0587  1303               	bcf	3,6	;RP1=0, select bank0
  3929  0588  1107               	bcf	7,2	;volatile
  3930  0589                     l261:
  3931  0589  0008               	return
  3932  058A                     __end_of_Lcd_Cmd:
  3933                           
  3934                           	psect	text25
  3935  0635                     __ptext25:	
  3936 ;; *************** function _Lcd_Port *****************
  3937 ;; Defined at:
  3938 ;;		line 14 in file "LCD_8bits.c"
  3939 ;; Parameters:    Size  Location     Type
  3940 ;;  a               1    wreg     unsigned char 
  3941 ;; Auto vars:     Size  Location     Type
  3942 ;;  a               1    3[COMMON] unsigned char 
  3943 ;; Return value:  Size  Location     Type
  3944 ;;                  1    wreg      void 
  3945 ;; Registers used:
  3946 ;;		wreg
  3947 ;; Tracked objects:
  3948 ;;		On entry : 0/0
  3949 ;;		On exit  : 0/0
  3950 ;;		Unchanged: 0/0
  3951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3952 ;;      Params:         0       0       0       0       0
  3953 ;;      Locals:         1       0       0       0       0
  3954 ;;      Temps:          0       0       0       0       0
  3955 ;;      Totals:         1       0       0       0       0
  3956 ;;Total ram usage:        1 bytes
  3957 ;; Hardware stack levels used:    1
  3958 ;; Hardware stack levels required when called:    2
  3959 ;; This function calls:
  3960 ;;		Nothing
  3961 ;; This function is called by:
  3962 ;;		_Lcd_Cmd
  3963 ;;		_Lcd_Init
  3964 ;;		_Lcd_Write_Char
  3965 ;; This function uses a non-reentrant model
  3966 ;;
  3967                           
  3968                           
  3969                           ;psect for function _Lcd_Port
  3970  0635                     _Lcd_Port:
  3971                           
  3972                           ;incstack = 0
  3973                           ; Regs used in _Lcd_Port: [wreg]
  3974                           ;Lcd_Port@a stored from wreg
  3975  0635  00F3               	movwf	Lcd_Port@a
  3976  0636                     l1737:
  3977                           
  3978                           ;LCD_8bits.c: 14: void Lcd_Port (char a);LCD_8bits.c: 15: {;LCD_8bits.c: 16:     PORTD =
      +                           a;
  3979  0636  0873               	movf	Lcd_Port@a,w
  3980  0637  1283               	bcf	3,5	;RP0=0, select bank0
  3981  0638  1303               	bcf	3,6	;RP1=0, select bank0
  3982  0639  0088               	movwf	8	;volatile
  3983  063A                     l258:
  3984  063A  0008               	return
  3985  063B                     __end_of_Lcd_Port:
  3986                           
  3987                           	psect	text26
  3988  0518                     __ptext26:	
  3989 ;; *************** function _ISR *****************
  3990 ;; Defined at:
  3991 ;;		line 116 in file "LCD.c"
  3992 ;; Parameters:    Size  Location     Type
  3993 ;;		None
  3994 ;; Auto vars:     Size  Location     Type
  3995 ;;		None
  3996 ;; Return value:  Size  Location     Type
  3997 ;;                  1    wreg      void 
  3998 ;; Registers used:
  3999 ;;		wreg, pclath, cstack
  4000 ;; Tracked objects:
  4001 ;;		On entry : 0/0
  4002 ;;		On exit  : 0/0
  4003 ;;		Unchanged: 0/0
  4004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4005 ;;      Params:         0       0       0       0       0
  4006 ;;      Locals:         0       0       0       0       0
  4007 ;;      Temps:          3       0       0       0       0
  4008 ;;      Totals:         3       0       0       0       0
  4009 ;;Total ram usage:        3 bytes
  4010 ;; Hardware stack levels used:    1
  4011 ;; Hardware stack levels required when called:    1
  4012 ;; This function calls:
  4013 ;;		_leer_char
  4014 ;; This function is called by:
  4015 ;;		Interrupt level 1
  4016 ;; This function uses a non-reentrant model
  4017 ;;
  4018                           
  4019                           
  4020                           ;psect for function _ISR
  4021  0518                     _ISR:
  4022  0518                     i1l1681:
  4023                           
  4024                           ;LCD.c: 119:     ANSELbits.ANS1 = 1;
  4025  0518  1283               	bcf	3,5	;RP0=0, select bank0
  4026  0519  1303               	bcf	3,6	;RP1=0, select bank0
  4027  051A  1E8C               	btfss	12,5	;volatile
  4028  051B  2D1D               	goto	u67_21
  4029  051C  2D1E               	goto	u67_20
  4030  051D                     u67_21:
  4031  051D  2D29               	goto	i1l1687
  4032  051E                     u67_20:
  4033  051E                     i1l1683:
  4034                           
  4035                           ;LCD.c: 120:     TRISA = 1;;LCD.c: 121:     TRISAbits.TRISA0 = 1;
  4036  051E  120A  118A  25F3  120A  118A  	fcall	_leer_char
  4037  0523  00F0               	movwf	??_ISR
  4038  0524  0870               	movf	??_ISR,w
  4039  0525  1283               	bcf	3,5	;RP0=0, select bank0
  4040  0526  1303               	bcf	3,6	;RP1=0, select bank0
  4041  0527  00AB               	movwf	_leer
  4042  0528                     i1l1685:
  4043                           
  4044                           ;LCD.c: 122:     TRISAbits.TRISA1 = 1;
  4045  0528  128C               	bcf	12,5	;volatile
  4046  0529                     i1l1687:
  4047                           
  4048                           ;LCD.c: 125:     TRISB = 0;
  4049  0529  1D0B               	btfss	11,2	;volatile
  4050  052A  2D2C               	goto	u68_21
  4051  052B  2D2D               	goto	u68_20
  4052  052C                     u68_21:
  4053  052C  2D30               	goto	i1l153
  4054  052D                     u68_20:
  4055  052D                     i1l1689:
  4056                           
  4057                           ;LCD.c: 126:     PORTB = 0;;LCD.c: 127:     TRISC = 0;
  4058  052D  110B               	bcf	11,2	;volatile
  4059  052E                     i1l1691:
  4060                           
  4061                           ;LCD.c: 132:     PORTD = 0;
  4062  052E  300A               	movlw	10
  4063  052F  0081               	movwf	1	;volatile
  4064  0530                     i1l153:
  4065  0530  0872               	movf	??_ISR+2,w
  4066  0531  008A               	movwf	10
  4067  0532  0E71               	swapf	??_ISR+1,w
  4068  0533  0083               	movwf	3
  4069  0534  0EFE               	swapf	btemp,f
  4070  0535  0E7E               	swapf	btemp,w
  4071  0536  0009               	retfie
  4072  0537                     __end_of_ISR:
  4073                           
  4074                           	psect	intentry
  4075  0004                     __pintentry:	
  4076                           ;incstack = 0
  4077                           ; Regs used in _ISR: [wreg+pclath+cstack]
  4078                           
  4079  0004                     interrupt_function:
  4080  007E                     saved_w	set	btemp
  4081  0004  00FE               	movwf	btemp
  4082  0005  0E03               	swapf	3,w
  4083  0006  00F1               	movwf	??_ISR+1
  4084  0007  080A               	movf	10,w
  4085  0008  00F2               	movwf	??_ISR+2
  4086  0009  120A  118A  2D18   	ljmp	_ISR
  4087                           
  4088                           	psect	text27
  4089  05F3                     __ptext27:	
  4090 ;; *************** function _leer_char *****************
  4091 ;; Defined at:
  4092 ;;		line 371 in file "LCD.c"
  4093 ;; Parameters:    Size  Location     Type
  4094 ;;		None
  4095 ;; Auto vars:     Size  Location     Type
  4096 ;;		None
  4097 ;; Return value:  Size  Location     Type
  4098 ;;                  1    wreg      unsigned char 
  4099 ;; Registers used:
  4100 ;;		wreg
  4101 ;; Tracked objects:
  4102 ;;		On entry : 0/0
  4103 ;;		On exit  : 0/0
  4104 ;;		Unchanged: 0/0
  4105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4106 ;;      Params:         0       0       0       0       0
  4107 ;;      Locals:         0       0       0       0       0
  4108 ;;      Temps:          0       0       0       0       0
  4109 ;;      Totals:         0       0       0       0       0
  4110 ;;Total ram usage:        0 bytes
  4111 ;; Hardware stack levels used:    1
  4112 ;; This function calls:
  4113 ;;		Nothing
  4114 ;; This function is called by:
  4115 ;;		_ISR
  4116 ;; This function uses a non-reentrant model
  4117 ;;
  4118                           
  4119                           
  4120                           ;psect for function _leer_char
  4121  05F3                     _leer_char:
  4122  05F3                     i1l1563:	
  4123                           ;incstack = 0
  4124                           ; Regs used in _leer_char: [wreg]
  4125                           
  4126  05F3  1283               	bcf	3,5	;RP0=0, select bank0
  4127  05F4  1303               	bcf	3,6	;RP1=0, select bank0
  4128  05F5  1898               	btfsc	24,1	;volatile
  4129  05F6  2DF8               	goto	u62_21
  4130  05F7  2DF9               	goto	u62_20
  4131  05F8                     u62_21:
  4132  05F8  2DFE               	goto	i1l1567
  4133  05F9                     u62_20:
  4134  05F9                     i1l1565:
  4135  05F9  1218               	bcf	24,4	;volatile
  4136  05FA  0000               	nop
  4137  05FB  1283               	bcf	3,5	;RP0=0, select bank0
  4138  05FC  1303               	bcf	3,6	;RP1=0, select bank0
  4139  05FD  1618               	bsf	24,4	;volatile
  4140  05FE                     i1l1567:
  4141  05FE  081A               	movf	26,w	;volatile
  4142  05FF                     i1l217:
  4143  05FF  0008               	return
  4144  0600                     __end_of_leer_char:
  4145  007E                     btemp	set	126	;btemp
  4146  007E                     wtemp0	set	126
  4147                           
  4148                           	psect	config
  4149                           
  4150                           ;Config register CONFIG1 @ 0x2007
  4151                           ;	Oscillator Selection bits
  4152                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4153                           ;	Watchdog Timer Enable bit
  4154                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4155                           ;	Power-up Timer Enable bit
  4156                           ;	PWRTE = OFF, PWRT disabled
  4157                           ;	RE3/MCLR pin function select bit
  4158                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4159                           ;	Code Protection bit
  4160                           ;	CP = OFF, Program memory code protection is disabled
  4161                           ;	Data Code Protection bit
  4162                           ;	CPD = OFF, Data memory code protection is disabled
  4163                           ;	Brown Out Reset Selection bits
  4164                           ;	BOREN = OFF, BOR disabled
  4165                           ;	Internal External Switchover bit
  4166                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4167                           ;	Fail-Safe Clock Monitor Enabled bit
  4168                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4169                           ;	Low Voltage Programming Enable bit
  4170                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4171                           ;	In-Circuit Debugger Mode bit
  4172                           ;	DEBUG = 0x1, unprogrammed default
  4173  2007                     	org	8199
  4174  2007  20D4               	dw	8404
  4175                           
  4176                           ;Config register CONFIG2 @ 0x2008
  4177                           ;	Brown-out Reset Selection bit
  4178                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4179                           ;	Flash Program Memory Self Write Enable bits
  4180                           ;	WRT = OFF, Write protection off
  4181  2008                     	org	8200
  4182  2008  3FFF               	dw	16383

Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         26
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     12      35
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _lcd->_Lcd_Set_Cursor
    _lcd->___awdiv
    _lcd->___awmod
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Conversion2->___awdiv
    _Conversion2->___awmod
    _virtual_display2->_escribir_char
    _Conversion1->___awdiv
    _Conversion1->___awmod
    _virtual_display1->_escribir_char
    _Lcd_Write_Char->_Lcd_Port
    _adc_config->_initADC
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_lcd
    _lcd->_Conversion1
    _lcd->_Conversion2
    _Conversion2->___awdiv
    _Conversion1->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8546
                           _Lcd_Init
                       _USART_config
                         _adc_config
                    _adc_conversion1
                    _adc_conversion2
                            _initADC
                    _interrup_config
                                _lcd
                         _osc_config
                              _setup
                        _tmr0_config
 ---------------------------------------------------------------------------------
 (1) _tmr0_config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _osc_config                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd                                                  7     7      0    8409
                                              7 BANK0      5     5      0
                        _Conversion1
                        _Conversion2
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                            ___awdiv
                            ___awmod
                       _contador_lcd
 ---------------------------------------------------------------------------------
 (2) _contador_lcd                                         1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     3     3      0     228
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       4     3      1     704
                                              7 COMMON     1     0      1
                                              0 BANK0      3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Conversion2                                          3     3      0    2477
                                              4 BANK0      3     3      0
                     _Lcd_Write_Char
                            ___awdiv
                            ___awmod
                   _virtual_display2
 ---------------------------------------------------------------------------------
 (3) _virtual_display2                                     0     0      0      22
                      _escribir_char
 ---------------------------------------------------------------------------------
 (2) _Conversion1                                          3     3      0    2477
                                              4 BANK0      3     3      0
                     _Lcd_Write_Char
                            ___awdiv
                            ___awmod
                   _virtual_display1
 ---------------------------------------------------------------------------------
 (3) _virtual_display1                                     0     0      0      22
                      _escribir_char
 ---------------------------------------------------------------------------------
 (4) _escribir_char                                        1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1333
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1060
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      62
                                              4 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _interrup_config                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_conversion2                                      2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _adc_conversion1                                      2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _adc_config                                           0     0      0      22
                            _initADC
 ---------------------------------------------------------------------------------
 (1) _initADC                                              3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _USART_config                                         0     0      0       0
                   _USART_lib_config
 ---------------------------------------------------------------------------------
 (2) _USART_lib_config                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      93
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      62
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
                          _leer_char
 ---------------------------------------------------------------------------------
 (6) _leer_char                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _USART_config
     _USART_lib_config
   _adc_config
     _initADC
   _adc_conversion1
   _adc_conversion2
   _initADC
   _interrup_config
   _lcd
     _Conversion1
       _Lcd_Write_Char
         _Lcd_Port
       ___awdiv
       ___awmod
       _virtual_display1
         _escribir_char
     _Conversion2
       _Lcd_Write_Char
         _Lcd_Port
       ___awdiv
       ___awmod
       _virtual_display2
         _escribir_char
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_Char
       _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     ___awdiv
     ___awmod
     _contador_lcd
   _osc_config
   _setup
   _tmr0_config

 _ISR (ROOT)
   _leer_char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      C      23       5       43.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2E      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Feb 11 01:24:50 2021

                        _i 0024                          pc 0002               ___awdiv@sign 0038  
                       _x1 0078                         _x2 0033                         _y1 0034  
                       _y2 0032     __size_of_escribir_char 000A                         fsr 0004  
                      l210 061B                        l203 049D                        l301 0554  
                      l213 061F                        l231 0021                        l207 03F6  
                      l223 0570                        l240 0059                        l232 00BE  
                      l241 0060                        l233 0028                        l242 0067  
                      l234 002F                        l170 0615                        l243 006E  
                      l235 0036                        l244 0075                        l236 003D  
                      l164 04C8                        l261 0589                        l245 007C  
                      l237 0044                        l173 05F2                        l246 0083  
                      l238 004B                        l158 041A                        l247 00C7  
                      l239 0052                        l183 05B9                        l167 060B  
                      l264 0346                        l176 062E                        l273 0517  
                      l193 0162                        l258 063A                        l179 0634  
                      l187 05A1                        l540 02E9                        l196 0280  
                      l199 01F1                        l279 04F1                        l288 05E5  
                      l553 03A1    __end_of_interrup_config 060C                        u400 02A4  
                      u401 02A3                        u420 02B6                        u421 02B5  
                      u350 061F                        u415 02A8                        u351 061E  
                      u440 02C7                        u360 0456                        u600 055D  
                      u441 02C6                        u361 0455                        u601 055C  
                      u370 03AD                        u610 056A                        u435 02B7  
                      u371 03AC                        u611 0569                        u460 02DB  
                      u380 0288                        u700 0359                        _ISR 0518  
                      u461 02DA                        u445 02C3                        u381 0287  
                      u701 0358                        u470 02E0                        u390 0293  
                      u710 0364                        u471 02DF                        u455 02CF  
                      u391 0292                        u711 0363                        u800 04F1  
                      u801 04F0                        u650 05B4                        u730 0376  
                      u810 0100                        u651 05B3                        u731 0375  
                      u811 00FF                        u660 059C                        u740 0380  
                      u820 011A                        u661 059B                        u741 037F  
                      u725 0368                        u821 0119                        u760 0393  
                      u761 0392                        u745 037C                        u770 0398  
                      u690 034E                        u771 0397                        u755 0387  
                      u691 034D                        u780 04FA                        u837 05E0  
                      u781 04F9                        u790 050C                        u847 0591  
                      u791 050B                        u857 05A9                        u867 02F6  
                      u877 030B                        u887 0320                        u897 0582  
         _USART_lib_config 0537                        _x1z 002F                        _x2z 002D  
                      _y1z 002E                        _y2z 002C                        _lcd 00C8  
            ??_Conversion1 003B              ??_Conversion2 003B                        fsr0 0004  
                      indf 0000               ___awmod@sign 0038                       ?_ISR 0070  
                     l1315 0617                       l1331 0456                       l1333 0499  
                     l1351 0281                       l1335 03A2                       l1433 0020  
                     l1361 0293                       l1353 0284                       l1329 044B  
                     l1337 03AD                       l1601 04C5                       l1451 053E  
                     l1443 0537                       l1371 02A7                       l1363 0298  
                     l1355 0288                       l1339 03F2                       l1603 060C  
                     l1611 05EE              ?_contador_lcd 0070                       l1461 0543  
                     l1453 053F                       l1445 053B                       l1437 008A  
                     l1605 0600                       l1381 02CD                       l1373 02AE  
                     l1365 029C                       l1357 028D                       l1471 054A  
                     l1463 0546                       l1455 0540                       l1447 053C  
                     l1607 0608                       l1391 02E5                       l1383 02CE  
                     l1375 02B2                       l1367 029E                       l1359 028F  
                     l1551 0555                       l1481 0551                       l1473 054B  
                     l1465 0547                       l1457 0541                       l1449 053D  
                     l1385 02D5                       l1377 02B6                       l1369 02A4  
                     l1801 04FF                       l1553 055D                       l1609 05E6  
                     l1475 054C                       l1467 0548                       l1459 0542  
                     l1635 0628                       l1379 02C7                       l1387 02DB  
                     l1803 0506                       l1811 04CF                       l1555 0562  
                     l1571 049E                       l1477 054D                       l1469 0549  
                     l1637 062F                       l1661 05A2                       l1741 05D5  
                     l1389 02E0                       l1821 0210                       l1805 050C  
                     l1813 04DC                       l1557 0564                       l1901 00F8  
                     l1581 04AB                       l1573 04A2                       l1751 0575  
                     l1479 054E                       l1663 05A5                       l1671 058A  
                     l1743 05DB                       l1831 025D                       l1823 0226  
                     l1807 0511                       l1815 04E4                       l1559 056A  
                     l1903 0100                       l1591 04B8                       l1583 04AE  
                     l1575 04A6                       l1911 03FC                       l1737 0636  
                     l1753 057B                       l1665 05AE                       l1673 058D  
                     l1745 05DE                       l1761 034A                       l1833 0263  
                     l1825 023C                       l1817 01F2                       l1841 0163  
                     l1809 04CC                       l1905 0114                       l1593 04B9  
                     l1585 04B1                       l1577 04A7                       l1921 0429  
                     l1913 0401                       ?_lcd 0070                       l1755 057E  
                     l1667 05B4                       l1675 0596                       l1747 05E2  
                     l1739 05D2                       l1771 035E                       l1763 034E  
                     l1835 026C                       l1827 0252                       l1819 01FA  
                     l1851 01C3                       l1843 016B                       l1907 011A  
                     l1595 04BC                       l1587 04B4                       l1579 04A8  
                     l1923 0437                       l1915 0410                       l1757 0586  
                     l1749 0572                       l1669 05B5                       l1677 059C  
                     l1781 0376                       l1773 0364                       l1765 0353  
                     l1837 0275                       l1829 0256                       l1861 01E6  
                     l1853 01C7                       l1845 0181                       l1597 04BF  
                     l1589 04B7                       l1925 043C                       l1917 0415  
                     l1909 03F7                       l1871 0301                       l1679 059D  
                     l1791 0398                       l1783 0380                       l1775 0367  
                     l1767 0355                       l1759 0347                       l1839 027B  
                     l1863 01EC                       l1855 01CE                       l1847 0197  
                     l1599 04C2                       l1919 041F                       l1881 031A  
                     l1873 0304                       l1865 02EA                       l1953 0092  
                     l1793 039D                       l1785 0386                       l1777 036E  
                     l1769 0359                       l1857 01D4                       l1849 01AD  
                     l1883 032A                       l1875 0310                       l1867 02F0  
                     l1787 038D                       l1779 0372                       l1859 01DD  
                     l1891 00D6                       l1885 032D                       l1877 0316  
                     l1869 02FB                       l1789 0393                       l1797 04F5  
                     l1893 00DD                       l1879 0319                       l1799 04FA  
                     l1895 00E2                       l1887 00C8                       l1897 00EE  
                     l1889 00D0                       l1899 00F3                       STR_1 05C0  
                     _CREN 00C4                       _IOCB 0096                       _TMR0 0001  
        ?_Lcd_Write_String 0070                       _aux1 0027                       _aux2 0026  
                     _main 03F7                       _leer 002B                       btemp 007E  
                     start 000C         ??_Lcd_Write_String 0076            __end_of_Lcd_Cmd 058A  
                    ??_ISR 0070                      ??_lcd 003E                      ?_main 0070  
          __end_of___awdiv 02EA            __end_of___awmod 03A2            ___awdiv@divisor 0073  
                    i1l217 05FF                      i1l153 0530            ___awdiv@counter 0037  
                    _RCREG 001A                      _SPBRG 0099                      _PORTA 0005  
                    _PORTB 0006                      _PORTC 0007                      _PORTD 0008  
                    _PORTE 0009                      u62_20 05F9                      u62_21 05F8  
  __size_of_Lcd_Set_Cursor 0026                      _TRISA 0085                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088                      _TRISE 0089  
                    u67_20 051E                      u67_21 051D                      u68_20 052D  
                    u68_21 052C                      _TXREG 0019            __end_of_initADC 00C8  
           ??_contador_lcd 0073                      lcd@w1 0041                      lcd@w2 0042  
                    _setup 049E        __end_of_Conversion1 0281        __end_of_Conversion2 01F2  
            _escribir_char 0616                      pclath 000A                      status 0003  
                    wtemp0 007E           __end_of_Lcd_Init 0347           __end_of_Lcd_Port 063B  
          __initialization 000F               __end_of_main 044B                     ??_main 0078  
         ?_interrup_config 0070   __end_of_virtual_display1 049E   __end_of_virtual_display2 03F7  
             ?_tmr0_config 0070                     _ADRESH 001E           ___awdiv@dividend 0075  
           ?_escribir_char 0070                     ?_setup 0070                     _ANSELH 0189  
                   i1l1563 05F3                     i1l1565 05F9                     i1l1567 05FE  
                   i1l1681 0518                     i1l1691 052E                     i1l1683 051E  
                   i1l1685 0528                     i1l1687 0529                     i1l1689 052D  
                ??_Lcd_Cmd 0074    __size_of_Lcd_Write_Char 0015                  ??___awdiv 0077  
                ??___awmod 0077           ___awdiv@quotient 0039            ___awmod@divisor 0073  
          ___awmod@counter 0037                     _unidad 0079                  ??_initADC 0073  
              _Conversion1 01F2                _Conversion2 0163                     saved_w 007E  
          Lcd_Set_Cursor@a 0038            Lcd_Set_Cursor@b 0077    __end_of__initialization 001B  
 __end_of_USART_lib_config 0555             __pcstackCOMMON 0070                 _adc_config 0628  
     __end_of_contador_lcd 0571                 _adc_value1 0036                 _adc_value2 0035  
            __end_of_setup 04C9             _Lcd_Set_Cursor 04F2             _OPTION_REGbits 0081  
          ??_escribir_char 0073                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
                  ??_setup 0073                 __pbssBANK0 0020         __size_of_leer_char 000D  
               __pmaintext 03F7                 __pintentry 0004  __size_of_Lcd_Write_String 0029  
   __end_of_Lcd_Set_Cursor 0518   __size_of_adc_conversion1 0018   __size_of_adc_conversion2 0018  
               ??_Lcd_Init 0037                 ??_Lcd_Port 0073       __size_of_tmr0_config 000D  
               __stringtab 05BA             _Lcd_Write_Char 05D1                    _Lcd_Cmd 0571  
              ?_adc_config 0070                    ___awdiv 0281                    ___awmod 0347  
        __end_of_leer_char 0600                  _ANSELbits 0188            ?_Lcd_Set_Cursor 0077  
                  __ptext1 05E6                    __ptext2 049E                    __ptext3 060C  
                  __ptext4 00C8                    __ptext5 0555                    __ptext6 04C9  
                  __ptext7 04F2                    __ptext8 0163                    __ptext9 03A2  
                  _initADC 001F               __size_of_ISR 001F               __size_of_lcd 009B  
         ___awmod@dividend 0075          ?_virtual_display1 0070          ?_virtual_display2 0070  
                  _unidadz 0030         ??_virtual_display1 0074         ??_virtual_display2 0074  
                  clrloop0 0621                    _voltaje 007A     __end_of_Lcd_Write_Char 05E6  
     end_of_initialization 001B                 _osc_config 060C      __size_of_contador_lcd 001C  
                _RCSTAbits 0018                  Lcd_Port@a 0073                  _PORTCbits 0007  
             ?_Conversion1 0070               ?_Conversion2 0070                  _TRISAbits 0085  
                _TRISCbits 0087          ??_adc_conversion1 0073          ??_adc_conversion2 0073  
          ?_Lcd_Write_Char 0070        __size_of_adc_config 0007   __size_of_interrup_config 000C  
             _contador_lcd 0555          Lcd_Write_String@a 0037          Lcd_Write_String@i 0038  
                _TXSTAbits 0098               _compu_valor1 0029               _compu_valor2 0028  
        ?_USART_lib_config 0070              ?_USART_config 0070         ??_USART_lib_config 0073  
               initADC@CHS 0075           _Lcd_Write_String 04C9        start_initialization 000F  
              __end_of_ISR 0537                __end_of_lcd 0163          __size_of_Lcd_Init 005D  
        __size_of_Lcd_Port 0006                ?_osc_config 0070             ??_USART_config 0073  
          Lcd_Write_Char@a 0075                __pbssCOMMON 0078                  ___latbits 0002  
            __pcstackBANK0 0037      __end_of_escribir_char 0620                   ?_Lcd_Cmd 0070  
        ??_interrup_config 0073           ??_Lcd_Set_Cursor 0037               ??_adc_config 0076  
                 ?___awdiv 0073                   ?___awmod 0073                  __pstrings 05BA  
                 ?_initADC 0070        __size_of_osc_config 000A                  _leer_char 05F3  
            ??_tmr0_config 0073       __size_of_Conversion1 008F       __size_of_Conversion2 008F  
           __size_of_setup 002B         __end_of_adc_config 062F          interrupt_function 0004  
                clear_ram0 0620                   _PIE1bits 008C  __size_of_virtual_display1 0053  
__size_of_virtual_display2 0055                   Lcd_Cmd@a 0076                   _PIR1bits 000C  
          _adc_conversion1 05A2            _adc_conversion2 058A                 _ADCON0bits 001F  
              __stringbase 05BF                 _ADCON1bits 009F                 ?_leer_char 0070  
         ??_Lcd_Write_Char 0074       __end_of_USART_config 0635                   _Lcd_Init 02EA  
                 _Lcd_Port 0635        __end_of_tmr0_config 05F3   __end_of_Lcd_Write_String 04F2  
         __size_of_Lcd_Cmd 0019           __size_of___awdiv 0069           __size_of___awmod 005B  
       __end_of__stringtab 05C0  __size_of_USART_lib_config 001E           __size_of_initADC 00A9  
                 __ptext10 01F2                   __ptext11 044B                   __ptext20 001F  
                 __ptext12 0616                   __ptext21 062F                   __ptext13 0347  
                 __ptext22 0537                   __ptext14 0281                   __ptext23 02EA  
                 __ptext15 05D1                   __ptext24 0571                   __ptext16 0600  
                 __ptext25 0635                   __ptext17 058A                   __ptext26 0518  
                 __ptext18 05A2                   __ptext27 05F3                   __ptext19 0628  
       escribir_char@valor 0073                   _contador 002A               ??_osc_config 0073  
            __size_of_main 0054    __end_of_adc_conversion1 05BA    __end_of_adc_conversion2 05A2  
                 _voltajez 0031                ??_leer_char 0070                 _INTCONbits 000B  
       __end_of_osc_config 0616                _tmr0_config 05E6            _interrup_config 0600  
                 intlevel1 0000           _virtual_display1 044B           _virtual_display2 03A2  
                stringcode 05BA                 _OSCCONbits 008F         Lcd_Set_Cursor@temp 0039  
    __size_of_USART_config 0006                   stringdir 05BA                   stringtab 05BA  
              _pressed_ok1 0020                _pressed_ok2 0022               _USART_config 062F  
         ?_adc_conversion1 0070           ?_adc_conversion2 0070  
