

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 08 00:58:23 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 2.20
    29                           ; Generated 12/02/2020 GMT
    30                           ; 
    31                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F887 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000D                     	;# 
    76  000E                     	;# 
    77  000E                     	;# 
    78  000F                     	;# 
    79  0010                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0014                     	;# 
    84  0015                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  001D                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  0081                     	;# 
    98  0085                     	;# 
    99  0086                     	;# 
   100  0087                     	;# 
   101  0088                     	;# 
   102  0089                     	;# 
   103  008C                     	;# 
   104  008D                     	;# 
   105  008E                     	;# 
   106  008F                     	;# 
   107  0090                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0094                     	;# 
   114  0095                     	;# 
   115  0096                     	;# 
   116  0097                     	;# 
   117  0098                     	;# 
   118  0099                     	;# 
   119  009A                     	;# 
   120  009B                     	;# 
   121  009C                     	;# 
   122  009D                     	;# 
   123  009E                     	;# 
   124  009F                     	;# 
   125  0105                     	;# 
   126  0107                     	;# 
   127  0108                     	;# 
   128  0109                     	;# 
   129  010C                     	;# 
   130  010C                     	;# 
   131  010D                     	;# 
   132  010E                     	;# 
   133  010F                     	;# 
   134  0185                     	;# 
   135  0187                     	;# 
   136  0188                     	;# 
   137  0189                     	;# 
   138  018C                     	;# 
   139  018D                     	;# 
   140  0000                     	;# 
   141  0001                     	;# 
   142  0002                     	;# 
   143  0003                     	;# 
   144  0004                     	;# 
   145  0005                     	;# 
   146  0006                     	;# 
   147  0007                     	;# 
   148  0008                     	;# 
   149  0009                     	;# 
   150  000A                     	;# 
   151  000B                     	;# 
   152  000C                     	;# 
   153  000D                     	;# 
   154  000E                     	;# 
   155  000E                     	;# 
   156  000F                     	;# 
   157  0010                     	;# 
   158  0011                     	;# 
   159  0012                     	;# 
   160  0013                     	;# 
   161  0014                     	;# 
   162  0015                     	;# 
   163  0015                     	;# 
   164  0016                     	;# 
   165  0017                     	;# 
   166  0018                     	;# 
   167  0019                     	;# 
   168  001A                     	;# 
   169  001B                     	;# 
   170  001B                     	;# 
   171  001C                     	;# 
   172  001D                     	;# 
   173  001E                     	;# 
   174  001F                     	;# 
   175  0081                     	;# 
   176  0085                     	;# 
   177  0086                     	;# 
   178  0087                     	;# 
   179  0088                     	;# 
   180  0089                     	;# 
   181  008C                     	;# 
   182  008D                     	;# 
   183  008E                     	;# 
   184  008F                     	;# 
   185  0090                     	;# 
   186  0091                     	;# 
   187  0092                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0094                     	;# 
   192  0095                     	;# 
   193  0096                     	;# 
   194  0097                     	;# 
   195  0098                     	;# 
   196  0099                     	;# 
   197  009A                     	;# 
   198  009B                     	;# 
   199  009C                     	;# 
   200  009D                     	;# 
   201  009E                     	;# 
   202  009F                     	;# 
   203  0105                     	;# 
   204  0107                     	;# 
   205  0108                     	;# 
   206  0109                     	;# 
   207  010C                     	;# 
   208  010C                     	;# 
   209  010D                     	;# 
   210  010E                     	;# 
   211  010F                     	;# 
   212  0185                     	;# 
   213  0187                     	;# 
   214  0188                     	;# 
   215  0189                     	;# 
   216  018C                     	;# 
   217  018D                     	;# 
   218  0000                     	;# 
   219  0001                     	;# 
   220  0002                     	;# 
   221  0003                     	;# 
   222  0004                     	;# 
   223  0005                     	;# 
   224  0006                     	;# 
   225  0007                     	;# 
   226  0008                     	;# 
   227  0009                     	;# 
   228  000A                     	;# 
   229  000B                     	;# 
   230  000C                     	;# 
   231  000D                     	;# 
   232  000E                     	;# 
   233  000E                     	;# 
   234  000F                     	;# 
   235  0010                     	;# 
   236  0011                     	;# 
   237  0012                     	;# 
   238  0013                     	;# 
   239  0014                     	;# 
   240  0015                     	;# 
   241  0015                     	;# 
   242  0016                     	;# 
   243  0017                     	;# 
   244  0018                     	;# 
   245  0019                     	;# 
   246  001A                     	;# 
   247  001B                     	;# 
   248  001B                     	;# 
   249  001C                     	;# 
   250  001D                     	;# 
   251  001E                     	;# 
   252  001F                     	;# 
   253  0081                     	;# 
   254  0085                     	;# 
   255  0086                     	;# 
   256  0087                     	;# 
   257  0088                     	;# 
   258  0089                     	;# 
   259  008C                     	;# 
   260  008D                     	;# 
   261  008E                     	;# 
   262  008F                     	;# 
   263  0090                     	;# 
   264  0091                     	;# 
   265  0092                     	;# 
   266  0093                     	;# 
   267  0093                     	;# 
   268  0093                     	;# 
   269  0094                     	;# 
   270  0095                     	;# 
   271  0096                     	;# 
   272  0097                     	;# 
   273  0098                     	;# 
   274  0099                     	;# 
   275  009A                     	;# 
   276  009B                     	;# 
   277  009C                     	;# 
   278  009D                     	;# 
   279  009E                     	;# 
   280  009F                     	;# 
   281  0105                     	;# 
   282  0107                     	;# 
   283  0108                     	;# 
   284  0109                     	;# 
   285  010C                     	;# 
   286  010C                     	;# 
   287  010D                     	;# 
   288  010E                     	;# 
   289  010F                     	;# 
   290  0185                     	;# 
   291  0187                     	;# 
   292  0188                     	;# 
   293  0189                     	;# 
   294  018C                     	;# 
   295  018D                     	;# 
   296  0000                     	;# 
   297  0001                     	;# 
   298  0002                     	;# 
   299  0003                     	;# 
   300  0004                     	;# 
   301  0005                     	;# 
   302  0006                     	;# 
   303  0007                     	;# 
   304  0008                     	;# 
   305  0009                     	;# 
   306  000A                     	;# 
   307  000B                     	;# 
   308  000C                     	;# 
   309  000D                     	;# 
   310  000E                     	;# 
   311  000E                     	;# 
   312  000F                     	;# 
   313  0010                     	;# 
   314  0011                     	;# 
   315  0012                     	;# 
   316  0013                     	;# 
   317  0014                     	;# 
   318  0015                     	;# 
   319  0015                     	;# 
   320  0016                     	;# 
   321  0017                     	;# 
   322  0018                     	;# 
   323  0019                     	;# 
   324  001A                     	;# 
   325  001B                     	;# 
   326  001B                     	;# 
   327  001C                     	;# 
   328  001D                     	;# 
   329  001E                     	;# 
   330  001F                     	;# 
   331  0081                     	;# 
   332  0085                     	;# 
   333  0086                     	;# 
   334  0087                     	;# 
   335  0088                     	;# 
   336  0089                     	;# 
   337  008C                     	;# 
   338  008D                     	;# 
   339  008E                     	;# 
   340  008F                     	;# 
   341  0090                     	;# 
   342  0091                     	;# 
   343  0092                     	;# 
   344  0093                     	;# 
   345  0093                     	;# 
   346  0093                     	;# 
   347  0094                     	;# 
   348  0095                     	;# 
   349  0096                     	;# 
   350  0097                     	;# 
   351  0098                     	;# 
   352  0099                     	;# 
   353  009A                     	;# 
   354  009B                     	;# 
   355  009C                     	;# 
   356  009D                     	;# 
   357  009E                     	;# 
   358  009F                     	;# 
   359  0105                     	;# 
   360  0107                     	;# 
   361  0108                     	;# 
   362  0109                     	;# 
   363  010C                     	;# 
   364  010C                     	;# 
   365  010D                     	;# 
   366  010E                     	;# 
   367  010F                     	;# 
   368  0185                     	;# 
   369  0187                     	;# 
   370  0188                     	;# 
   371  0189                     	;# 
   372  018C                     	;# 
   373  018D                     	;# 
   374  0007                     _PORTCbits	set	7
   375  0001                     _TMR0	set	1
   376  000B                     _INTCONbits	set	11
   377  0009                     _PORTE	set	9
   378  0008                     _PORTD	set	8
   379  0007                     _PORTC	set	7
   380  0006                     _PORTB	set	6
   381  0005                     _PORTA	set	5
   382  001F                     _ADCON0bits	set	31
   383  009F                     _ADCON1bits	set	159
   384  0081                     _OPTION_REGbits	set	129
   385  008F                     _OSCCONbits	set	143
   386  0096                     _IOCB	set	150
   387  0089                     _TRISE	set	137
   388  0087                     _TRISC	set	135
   389  0086                     _TRISB	set	134
   390  0085                     _TRISA	set	133
   391  009E                     _ADRESL	set	158
   392  0088                     _TRISD	set	136
   393  0189                     _ANSELH	set	393
   394  0188                     _ANSEL	set	392
   395                           
   396                           	psect	strings
   397  0003                     __pstrings:
   398  0003                     stringtab:
   399  0003                     __stringtab:
   400  0003                     stringcode:	
   401                           ;	String table - string pointers are 1 byte each
   402                           
   403  0003                     stringdir:
   404  0003  3000               	movlw	high stringdir
   405  0004  008A               	movwf	10
   406  0005  0804               	movf	4,w
   407  0006  0A84               	incf	4,f
   408  0007  0782               	addwf	2,f
   409  0008                     __stringbase:
   410  0008  3400               	retlw	0
   411  0009                     __end_of__stringtab:
   412  0009                     STR_5:
   413  0009  3477               	retlw	119	;'w'
   414  000A  3477               	retlw	119	;'w'
   415  000B  3477               	retlw	119	;'w'
   416  000C  342E               	retlw	46	;'.'
   417  000D  3465               	retlw	101	;'e'
   418  000E  346C               	retlw	108	;'l'
   419  000F  3465               	retlw	101	;'e'
   420  0010  3463               	retlw	99	;'c'
   421  0011  3474               	retlw	116	;'t'
   422  0012  3472               	retlw	114	;'r'
   423  0013  346F               	retlw	111	;'o'
   424  0014  3453               	retlw	83	;'S'
   425  0015  346F               	retlw	111	;'o'
   426  0016  346D               	retlw	109	;'m'
   427  0017  3465               	retlw	101	;'e'
   428  0018  342E               	retlw	46	;'.'
   429  0019  3463               	retlw	99	;'c'
   430  001A  346F               	retlw	111	;'o'
   431  001B  346D               	retlw	109	;'m'
   432  001C  3400               	retlw	0
   433  001D                     STR_1:
   434  001D  344C               	retlw	76	;'L'
   435  001E  3443               	retlw	67	;'C'
   436  001F  3444               	retlw	68	;'D'
   437  0020  3420               	retlw	32	;' '
   438  0021  344C               	retlw	76	;'L'
   439  0022  3469               	retlw	105	;'i'
   440  0023  3462               	retlw	98	;'b'
   441  0024  3472               	retlw	114	;'r'
   442  0025  3461               	retlw	97	;'a'
   443  0026  3472               	retlw	114	;'r'
   444  0027  3479               	retlw	121	;'y'
   445  0028  3420               	retlw	32	;' '
   446  0029  3466               	retlw	102	;'f'
   447  002A  346F               	retlw	111	;'o'
   448  002B  3472               	retlw	114	;'r'
   449  002C  3400               	retlw	0
   450  002D                     STR_3:
   451  002D  3444               	retlw	68	;'D'
   452  002E  3465               	retlw	101	;'e'
   453  002F  3476               	retlw	118	;'v'
   454  0030  3465               	retlw	101	;'e'
   455  0031  346C               	retlw	108	;'l'
   456  0032  346F               	retlw	111	;'o'
   457  0033  3470               	retlw	112	;'p'
   458  0034  3465               	retlw	101	;'e'
   459  0035  3464               	retlw	100	;'d'
   460  0036  3420               	retlw	32	;' '
   461  0037  3442               	retlw	66	;'B'
   462  0038  3479               	retlw	121	;'y'
   463  0039  3400               	retlw	0
   464  003A                     STR_4:
   465  003A  3465               	retlw	101	;'e'
   466  003B  346C               	retlw	108	;'l'
   467  003C  3465               	retlw	101	;'e'
   468  003D  3463               	retlw	99	;'c'
   469  003E  3474               	retlw	116	;'t'
   470  003F  3472               	retlw	114	;'r'
   471  0040  346F               	retlw	111	;'o'
   472  0041  3453               	retlw	83	;'S'
   473  0042  346F               	retlw	111	;'o'
   474  0043  346D               	retlw	109	;'m'
   475  0044  3465               	retlw	101	;'e'
   476  0045  3400               	retlw	0
   477  0046                     STR_2:
   478  0046  344D               	retlw	77	;'M'
   479  0047  3450               	retlw	80	;'P'
   480  0048  344C               	retlw	76	;'L'
   481  0049  3441               	retlw	65	;'A'
   482  004A  3442               	retlw	66	;'B'
   483  004B  3420               	retlw	32	;' '
   484  004C  3458               	retlw	88	;'X'
   485  004D  3443               	retlw	67	;'C'
   486  004E  3438               	retlw	56	;'8'
   487  004F  3400               	retlw	0
   488                           
   489                           	psect	cinit
   490  07F7                     start_initialization:	
   491                           ; #config settings
   492                           
   493  07F7                     __initialization:
   494                           
   495                           ; Clear objects allocated to BANK0
   496  07F7  1283               	bcf	3,5	;RP0=0, select bank0
   497  07F8  1303               	bcf	3,6	;RP1=0, select bank0
   498  07F9  01A0               	clrf	__pbssBANK0& (0+127)
   499  07FA  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   500  07FB  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   501  07FC                     end_of_initialization:	
   502                           ;End of C runtime variable initialization code
   503                           
   504  07FC                     __end_of__initialization:
   505  07FC  0183               	clrf	3
   506  07FD  120A  118A  2ECA   	ljmp	_main	;jump to C main() function
   507                           
   508                           	psect	bssBANK0
   509  0020                     __pbssBANK0:
   510  0020                     _i:
   511  0020                     	ds	2
   512  0022                     _adc_value:
   513  0022                     	ds	1
   514                           
   515                           	psect	cstackCOMMON
   516  0070                     __pcstackCOMMON:
   517  0070                     ?_setup:
   518  0070                     ??_setup:	
   519                           ; 1 bytes @ 0x0
   520                           
   521  0070                     ?_osc_config:	
   522                           ; 1 bytes @ 0x0
   523                           
   524  0070                     ??_osc_config:	
   525                           ; 1 bytes @ 0x0
   526                           
   527  0070                     ?_interrup_config:	
   528                           ; 1 bytes @ 0x0
   529                           
   530  0070                     ??_interrup_config:	
   531                           ; 1 bytes @ 0x0
   532                           
   533  0070                     ?_tmr0_config:	
   534                           ; 1 bytes @ 0x0
   535                           
   536  0070                     ??_tmr0_config:	
   537                           ; 1 bytes @ 0x0
   538                           
   539  0070                     ?_adc_config:	
   540                           ; 1 bytes @ 0x0
   541                           
   542  0070                     ?_Lcd_Init:	
   543                           ; 1 bytes @ 0x0
   544                           
   545  0070                     ?_Lcd_Clear:	
   546                           ; 1 bytes @ 0x0
   547                           
   548  0070                     ?_Lcd_Write_String:	
   549                           ; 1 bytes @ 0x0
   550                           
   551  0070                     ?_Lcd_Shift_Left:	
   552                           ; 1 bytes @ 0x0
   553                           
   554  0070                     ?_Lcd_Shift_Right:	
   555                           ; 1 bytes @ 0x0
   556                           
   557  0070                     ?_Lcd_Write_Char:	
   558                           ; 1 bytes @ 0x0
   559                           
   560  0070                     ?_initADC:	
   561                           ; 1 bytes @ 0x0
   562                           
   563  0070                     ??_initADC:	
   564                           ; 1 bytes @ 0x0
   565                           
   566  0070                     ?_main:	
   567                           ; 1 bytes @ 0x0
   568                           
   569  0070                     ?_Lcd_Port:	
   570                           ; 1 bytes @ 0x0
   571                           
   572  0070                     ??_Lcd_Port:	
   573                           ; 1 bytes @ 0x0
   574                           
   575  0070                     ?_Lcd_Cmd:	
   576                           ; 1 bytes @ 0x0
   577                           
   578  0070                     Lcd_Port@a:	
   579                           ; 1 bytes @ 0x0
   580                           
   581                           
   582                           ; 1 bytes @ 0x0
   583  0070                     	ds	1
   584  0071                     ??_Lcd_Write_Char:
   585  0071                     ??_Lcd_Cmd:	
   586                           ; 1 bytes @ 0x1
   587                           
   588                           
   589                           ; 1 bytes @ 0x1
   590  0071                     	ds	1
   591  0072                     initADC@CHS:
   592  0072                     Lcd_Write_Char@a:	
   593                           ; 1 bytes @ 0x2
   594                           
   595                           
   596                           ; 1 bytes @ 0x2
   597  0072                     	ds	1
   598  0073                     ??_adc_config:
   599  0073                     ??_Lcd_Write_String:	
   600                           ; 1 bytes @ 0x3
   601                           
   602  0073                     Lcd_Cmd@a:	
   603                           ; 1 bytes @ 0x3
   604                           
   605  0073                     Lcd_Write_String@i:	
   606                           ; 1 bytes @ 0x3
   607                           
   608                           
   609                           ; 2 bytes @ 0x3
   610  0073                     	ds	1
   611  0074                     ??_Lcd_Init:
   612  0074                     ??_Lcd_Clear:	
   613                           ; 1 bytes @ 0x4
   614                           
   615  0074                     ?_Lcd_Set_Cursor:	
   616                           ; 1 bytes @ 0x4
   617                           
   618  0074                     ??_Lcd_Shift_Left:	
   619                           ; 1 bytes @ 0x4
   620                           
   621  0074                     ??_Lcd_Shift_Right:	
   622                           ; 1 bytes @ 0x4
   623                           
   624  0074                     Lcd_Set_Cursor@b:	
   625                           ; 1 bytes @ 0x4
   626                           
   627                           
   628                           ; 1 bytes @ 0x4
   629  0074                     	ds	1
   630  0075                     ??_Lcd_Set_Cursor:
   631  0075                     Lcd_Write_String@a:	
   632                           ; 1 bytes @ 0x5
   633                           
   634                           
   635                           ; 1 bytes @ 0x5
   636  0075                     	ds	2
   637  0077                     Lcd_Set_Cursor@a:
   638                           
   639                           ; 1 bytes @ 0x7
   640  0077                     	ds	1
   641  0078                     Lcd_Set_Cursor@z:
   642                           
   643                           ; 1 bytes @ 0x8
   644  0078                     	ds	1
   645  0079                     Lcd_Set_Cursor@y:
   646                           
   647                           ; 1 bytes @ 0x9
   648  0079                     	ds	1
   649  007A                     Lcd_Set_Cursor@temp:
   650                           
   651                           ; 1 bytes @ 0xA
   652  007A                     	ds	1
   653  007B                     ??_main:
   654                           
   655                           ; 1 bytes @ 0xB
   656  007B                     	ds	3
   657                           
   658                           	psect	cstackBANK0
   659  0023                     __pcstackBANK0:
   660  0023                     main@a:
   661                           
   662                           ; 2 bytes @ 0x0
   663  0023                     	ds	2
   664                           
   665                           	psect	maintext
   666  06CA                     __pmaintext:	
   667 ;;
   668 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   669 ;;
   670 ;; *************** function _main *****************
   671 ;; Defined at:
   672 ;;		line 88 in file "LCD.c"
   673 ;; Parameters:    Size  Location     Type
   674 ;;		None
   675 ;; Auto vars:     Size  Location     Type
   676 ;;  a               2    0[BANK0 ] unsigned int 
   677 ;; Return value:  Size  Location     Type
   678 ;;                  1    wreg      void 
   679 ;; Registers used:
   680 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   681 ;; Tracked objects:
   682 ;;		On entry : B00/0
   683 ;;		On exit  : 0/0
   684 ;;		Unchanged: 0/0
   685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   686 ;;      Params:         0       0       0       0       0
   687 ;;      Locals:         0       2       0       0       0
   688 ;;      Temps:          3       0       0       0       0
   689 ;;      Totals:         3       2       0       0       0
   690 ;;Total ram usage:        5 bytes
   691 ;; Hardware stack levels required when called:    3
   692 ;; This function calls:
   693 ;;		_Lcd_Clear
   694 ;;		_Lcd_Init
   695 ;;		_Lcd_Set_Cursor
   696 ;;		_Lcd_Shift_Left
   697 ;;		_Lcd_Shift_Right
   698 ;;		_Lcd_Write_Char
   699 ;;		_Lcd_Write_String
   700 ;;		_adc_config
   701 ;;		_interrup_config
   702 ;;		_osc_config
   703 ;;		_setup
   704 ;;		_tmr0_config
   705 ;; This function is called by:
   706 ;;		Startup code after reset
   707 ;; This function uses a non-reentrant model
   708 ;;
   709                           
   710                           
   711                           ;psect for function _main
   712  06CA                     _main:
   713  06CA                     l1099:	
   714                           ;incstack = 0
   715                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   716                           
   717                           
   718                           ;LCD.c: 90:     setup();
   719  06CA  120A  118A  2551  120A  118A  	fcall	_setup
   720  06CF                     l1101:
   721                           
   722                           ;LCD.c: 91:     osc_config();
   723  06CF  120A  118A  24B1  120A  118A  	fcall	_osc_config
   724  06D4                     l1103:
   725                           
   726                           ;LCD.c: 92:     interrup_config();
   727  06D4  120A  118A  24E2  120A  118A  	fcall	_interrup_config
   728  06D9                     l1105:
   729                           
   730                           ;LCD.c: 93:     tmr0_config();
   731  06D9  120A  118A  24EF  120A  118A  	fcall	_tmr0_config
   732  06DE                     l1107:
   733                           
   734                           ;LCD.c: 94:     adc_config ();
   735  06DE  120A  118A  24AA  120A  118A  	fcall	_adc_config
   736  06E3                     l1109:
   737                           
   738                           ;LCD.c: 95:     unsigned int a;;LCD.c: 96:     TRISD = 0b00000000;
   739  06E3  1683               	bsf	3,5	;RP0=1, select bank1
   740  06E4  1303               	bcf	3,6	;RP1=0, select bank1
   741  06E5  0188               	clrf	8	;volatile
   742  06E6                     l1111:
   743                           
   744                           ;LCD.c: 97:     Lcd_Init();
   745  06E6  120A  118A  25CA  120A  118A  	fcall	_Lcd_Init
   746  06EB                     l1113:
   747                           
   748                           ;LCD.c: 100:     {;LCD.c: 101:         ADCON0bits.GO_DONE = 1;
   749  06EB  1283               	bcf	3,5	;RP0=0, select bank0
   750  06EC  1303               	bcf	3,6	;RP1=0, select bank0
   751  06ED  149F               	bsf	31,1	;volatile
   752  06EE                     l1115:
   753                           
   754                           ;LCD.c: 102:         _delay((unsigned long)((10)*(8000000/4000.0)));
   755  06EE  301A               	movlw	26
   756  06EF  00FC               	movwf	??_main+1
   757  06F0  30F8               	movlw	248
   758  06F1  00FB               	movwf	??_main
   759  06F2                     u177:
   760  06F2  0BFB               	decfsz	??_main,f
   761  06F3  2EF2               	goto	u177
   762  06F4  0BFC               	decfsz	??_main+1,f
   763  06F5  2EF2               	goto	u177
   764  06F6  0000               	nop
   765  06F7                     l1117:
   766                           
   767                           ;LCD.c: 103:         if (ADCON0bits.GO_DONE == 0)
   768  06F7  1283               	bcf	3,5	;RP0=0, select bank0
   769  06F8  1303               	bcf	3,6	;RP1=0, select bank0
   770  06F9  189F               	btfsc	31,1	;volatile
   771  06FA  2EFC               	goto	u141
   772  06FB  2EFD               	goto	u140
   773  06FC                     u141:
   774  06FC  2F06               	goto	l1123
   775  06FD                     u140:
   776  06FD                     l1119:
   777                           
   778                           ;LCD.c: 104:         {;LCD.c: 105:             ADCON0bits.GO_DONE = 1;
   779  06FD  149F               	bsf	31,1	;volatile
   780  06FE                     l1121:
   781                           
   782                           ;LCD.c: 106:             adc_value = ADRESL;
   783  06FE  1683               	bsf	3,5	;RP0=1, select bank1
   784  06FF  1303               	bcf	3,6	;RP1=0, select bank1
   785  0700  081E               	movf	30,w	;volatile
   786  0701  00FB               	movwf	??_main
   787  0702  087B               	movf	??_main,w
   788  0703  1283               	bcf	3,5	;RP0=0, select bank0
   789  0704  1303               	bcf	3,6	;RP1=0, select bank0
   790  0705  00A2               	movwf	_adc_value
   791  0706                     l1123:
   792                           
   793                           ;LCD.c: 108:         Lcd_Clear();
   794  0706  120A  118A  24BB  120A  118A  	fcall	_Lcd_Clear
   795  070B                     l1125:
   796                           
   797                           ;LCD.c: 109:         Lcd_Set_Cursor(1,1);
   798  070B  01F4               	clrf	Lcd_Set_Cursor@b
   799  070C  0AF4               	incf	Lcd_Set_Cursor@b,f
   800  070D  3001               	movlw	1
   801  070E  120A  118A  2578  120A  118A  	fcall	_Lcd_Set_Cursor
   802  0713                     l1127:
   803                           
   804                           ;LCD.c: 110:         Lcd_Write_String("LCD Library for");
   805  0713  3015               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   806  0714  120A  118A  252C  120A  118A  	fcall	_Lcd_Write_String
   807  0719                     l1129:
   808                           
   809                           ;LCD.c: 111:         Lcd_Set_Cursor(2,1);
   810  0719  01F4               	clrf	Lcd_Set_Cursor@b
   811  071A  0AF4               	incf	Lcd_Set_Cursor@b,f
   812  071B  3002               	movlw	2
   813  071C  120A  118A  2578  120A  118A  	fcall	_Lcd_Set_Cursor
   814  0721                     l1131:
   815                           
   816                           ;LCD.c: 112:         Lcd_Write_String("MPLAB XC8");
   817  0721  303E               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   818  0722  120A  118A  252C  120A  118A  	fcall	_Lcd_Write_String
   819  0727                     l1133:
   820                           
   821                           ;LCD.c: 113:         _delay((unsigned long)((2000)*(8000000/4000.0)));
   822  0727  3015               	movlw	21
   823  0728  00FD               	movwf	??_main+2
   824  0729  304B               	movlw	75
   825  072A  00FC               	movwf	??_main+1
   826  072B  30BE               	movlw	190
   827  072C  00FB               	movwf	??_main
   828  072D                     u187:
   829  072D  0BFB               	decfsz	??_main,f
   830  072E  2F2D               	goto	u187
   831  072F  0BFC               	decfsz	??_main+1,f
   832  0730  2F2D               	goto	u187
   833  0731  0BFD               	decfsz	??_main+2,f
   834  0732  2F2D               	goto	u187
   835  0733  0000               	nop
   836                           
   837                           ;LCD.c: 114:         Lcd_Clear();
   838  0734  120A  118A  24BB  120A  118A  	fcall	_Lcd_Clear
   839                           
   840                           ;LCD.c: 115:         Lcd_Set_Cursor(1,1);
   841  0739  01F4               	clrf	Lcd_Set_Cursor@b
   842  073A  0AF4               	incf	Lcd_Set_Cursor@b,f
   843  073B  3001               	movlw	1
   844  073C  120A  118A  2578  120A  118A  	fcall	_Lcd_Set_Cursor
   845  0741                     l1135:
   846                           
   847                           ;LCD.c: 116:         Lcd_Write_String("Developed By");
   848  0741  3025               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   849  0742  120A  118A  252C  120A  118A  	fcall	_Lcd_Write_String
   850  0747                     l1137:
   851                           
   852                           ;LCD.c: 117:         Lcd_Set_Cursor(2,1);
   853  0747  01F4               	clrf	Lcd_Set_Cursor@b
   854  0748  0AF4               	incf	Lcd_Set_Cursor@b,f
   855  0749  3002               	movlw	2
   856  074A  120A  118A  2578  120A  118A  	fcall	_Lcd_Set_Cursor
   857                           
   858                           ;LCD.c: 118:         Lcd_Write_String("electroSome");
   859  074F  3032               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   860  0750  120A  118A  252C  120A  118A  	fcall	_Lcd_Write_String
   861  0755                     l1139:
   862                           
   863                           ;LCD.c: 119:         _delay((unsigned long)((2000)*(8000000/4000.0)));
   864  0755  3015               	movlw	21
   865  0756  00FD               	movwf	??_main+2
   866  0757  304B               	movlw	75
   867  0758  00FC               	movwf	??_main+1
   868  0759  30BE               	movlw	190
   869  075A  00FB               	movwf	??_main
   870  075B                     u197:
   871  075B  0BFB               	decfsz	??_main,f
   872  075C  2F5B               	goto	u197
   873  075D  0BFC               	decfsz	??_main+1,f
   874  075E  2F5B               	goto	u197
   875  075F  0BFD               	decfsz	??_main+2,f
   876  0760  2F5B               	goto	u197
   877  0761  0000               	nop
   878  0762                     l1141:
   879                           
   880                           ;LCD.c: 120:         Lcd_Clear();
   881  0762  120A  118A  24BB  120A  118A  	fcall	_Lcd_Clear
   882  0767                     l1143:
   883                           
   884                           ;LCD.c: 121:         Lcd_Set_Cursor(1,1);
   885  0767  01F4               	clrf	Lcd_Set_Cursor@b
   886  0768  0AF4               	incf	Lcd_Set_Cursor@b,f
   887  0769  3001               	movlw	1
   888  076A  120A  118A  2578  120A  118A  	fcall	_Lcd_Set_Cursor
   889  076F                     l1145:
   890                           
   891                           ;LCD.c: 122:         Lcd_Write_String("www.electroSome.com");
   892  076F  3001               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   893  0770  120A  118A  252C  120A  118A  	fcall	_Lcd_Write_String
   894  0775                     l1147:
   895                           
   896                           ;LCD.c: 124:         for(a=0;a<15;a++)
   897  0775  1283               	bcf	3,5	;RP0=0, select bank0
   898  0776  1303               	bcf	3,6	;RP1=0, select bank0
   899  0777  01A3               	clrf	main@a
   900  0778  01A4               	clrf	main@a+1
   901  0779                     l1153:
   902                           
   903                           ;LCD.c: 125:         {;LCD.c: 126:             _delay((unsigned long)((300)*(8000000/400
      +                          0.0)));
   904  0779  3004               	movlw	4
   905  077A  00FD               	movwf	??_main+2
   906  077B  300C               	movlw	12
   907  077C  00FC               	movwf	??_main+1
   908  077D  3033               	movlw	51
   909  077E  00FB               	movwf	??_main
   910  077F                     u207:
   911  077F  0BFB               	decfsz	??_main,f
   912  0780  2F7F               	goto	u207
   913  0781  0BFC               	decfsz	??_main+1,f
   914  0782  2F7F               	goto	u207
   915  0783  0BFD               	decfsz	??_main+2,f
   916  0784  2F7F               	goto	u207
   917  0785  2F86               	nop2
   918  0786                     l1155:
   919                           
   920                           ;LCD.c: 127:             Lcd_Shift_Left();
   921  0786  120A  118A  24C8  120A  118A  	fcall	_Lcd_Shift_Left
   922  078B                     l1157:
   923                           
   924                           ;LCD.c: 128:         }
   925  078B  3001               	movlw	1
   926  078C  1283               	bcf	3,5	;RP0=0, select bank0
   927  078D  1303               	bcf	3,6	;RP1=0, select bank0
   928  078E  07A3               	addwf	main@a,f
   929  078F  1803               	skipnc
   930  0790  0AA4               	incf	main@a+1,f
   931  0791  3000               	movlw	0
   932  0792  07A4               	addwf	main@a+1,f
   933  0793                     l1159:
   934  0793  3000               	movlw	0
   935  0794  0224               	subwf	main@a+1,w
   936  0795  300F               	movlw	15
   937  0796  1903               	skipnz
   938  0797  0223               	subwf	main@a,w
   939  0798  1C03               	skipc
   940  0799  2F9B               	goto	u151
   941  079A  2F9C               	goto	u150
   942  079B                     u151:
   943  079B  2F79               	goto	l1153
   944  079C                     u150:
   945  079C                     l1161:
   946                           
   947                           ;LCD.c: 130:         for(a=0;a<15;a++)
   948  079C  01A3               	clrf	main@a
   949  079D  01A4               	clrf	main@a+1
   950  079E                     l1167:
   951                           
   952                           ;LCD.c: 131:         {;LCD.c: 132:             _delay((unsigned long)((300)*(8000000/400
      +                          0.0)));
   953  079E  3004               	movlw	4
   954  079F  00FD               	movwf	??_main+2
   955  07A0  300C               	movlw	12
   956  07A1  00FC               	movwf	??_main+1
   957  07A2  3033               	movlw	51
   958  07A3  00FB               	movwf	??_main
   959  07A4                     u217:
   960  07A4  0BFB               	decfsz	??_main,f
   961  07A5  2FA4               	goto	u217
   962  07A6  0BFC               	decfsz	??_main+1,f
   963  07A7  2FA4               	goto	u217
   964  07A8  0BFD               	decfsz	??_main+2,f
   965  07A9  2FA4               	goto	u217
   966  07AA  2FAB               	nop2
   967  07AB                     l1169:
   968                           
   969                           ;LCD.c: 133:             Lcd_Shift_Right();
   970  07AB  120A  118A  24D5  120A  118A  	fcall	_Lcd_Shift_Right
   971  07B0                     l1171:
   972                           
   973                           ;LCD.c: 134:         }
   974  07B0  3001               	movlw	1
   975  07B1  1283               	bcf	3,5	;RP0=0, select bank0
   976  07B2  1303               	bcf	3,6	;RP1=0, select bank0
   977  07B3  07A3               	addwf	main@a,f
   978  07B4  1803               	skipnc
   979  07B5  0AA4               	incf	main@a+1,f
   980  07B6  3000               	movlw	0
   981  07B7  07A4               	addwf	main@a+1,f
   982  07B8                     l1173:
   983  07B8  3000               	movlw	0
   984  07B9  0224               	subwf	main@a+1,w
   985  07BA  300F               	movlw	15
   986  07BB  1903               	skipnz
   987  07BC  0223               	subwf	main@a,w
   988  07BD  1C03               	skipc
   989  07BE  2FC0               	goto	u161
   990  07BF  2FC1               	goto	u160
   991  07C0                     u161:
   992  07C0  2F9E               	goto	l1167
   993  07C1                     u160:
   994  07C1                     l1175:
   995                           
   996                           ;LCD.c: 136:         Lcd_Clear();
   997  07C1  120A  118A  24BB  120A  118A  	fcall	_Lcd_Clear
   998                           
   999                           ;LCD.c: 137:         Lcd_Set_Cursor(2,1);
  1000  07C6  01F4               	clrf	Lcd_Set_Cursor@b
  1001  07C7  0AF4               	incf	Lcd_Set_Cursor@b,f
  1002  07C8  3002               	movlw	2
  1003  07C9  120A  118A  2578  120A  118A  	fcall	_Lcd_Set_Cursor
  1004                           
  1005                           ;LCD.c: 138:         Lcd_Write_Char('H');
  1006  07CE  3048               	movlw	72
  1007  07CF  120A  118A  24FC  120A  118A  	fcall	_Lcd_Write_Char
  1008                           
  1009                           ;LCD.c: 139:         Lcd_Write_Char('o');
  1010  07D4  306F               	movlw	111
  1011  07D5  120A  118A  24FC  120A  118A  	fcall	_Lcd_Write_Char
  1012                           
  1013                           ;LCD.c: 140:         Lcd_Write_Char('l');
  1014  07DA  306C               	movlw	108
  1015  07DB  120A  118A  24FC  120A  118A  	fcall	_Lcd_Write_Char
  1016                           
  1017                           ;LCD.c: 141:         Lcd_Write_Char('a');
  1018  07E0  3061               	movlw	97
  1019  07E1  120A  118A  24FC  120A  118A  	fcall	_Lcd_Write_Char
  1020  07E6                     l1177:
  1021                           
  1022                           ;LCD.c: 145:         _delay((unsigned long)((2000)*(8000000/4000.0)));
  1023  07E6  3015               	movlw	21
  1024  07E7  00FD               	movwf	??_main+2
  1025  07E8  304B               	movlw	75
  1026  07E9  00FC               	movwf	??_main+1
  1027  07EA  30BE               	movlw	190
  1028  07EB  00FB               	movwf	??_main
  1029  07EC                     u227:
  1030  07EC  0BFB               	decfsz	??_main,f
  1031  07ED  2FEC               	goto	u227
  1032  07EE  0BFC               	decfsz	??_main+1,f
  1033  07EF  2FEC               	goto	u227
  1034  07F0  0BFD               	decfsz	??_main+2,f
  1035  07F1  2FEC               	goto	u227
  1036  07F2  0000               	nop
  1037  07F3  2EEB               	goto	l1113
  1038  07F4  120A  118A  2800   	ljmp	start
  1039  07F7                     __end_of_main:
  1040                           
  1041                           	psect	text1
  1042  04EF                     __ptext1:	
  1043 ;; *************** function _tmr0_config *****************
  1044 ;; Defined at:
  1045 ;;		line 193 in file "LCD.c"
  1046 ;; Parameters:    Size  Location     Type
  1047 ;;		None
  1048 ;; Auto vars:     Size  Location     Type
  1049 ;;		None
  1050 ;; Return value:  Size  Location     Type
  1051 ;;                  1    wreg      void 
  1052 ;; Registers used:
  1053 ;;		wreg
  1054 ;; Tracked objects:
  1055 ;;		On entry : 0/0
  1056 ;;		On exit  : 0/0
  1057 ;;		Unchanged: 0/0
  1058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1059 ;;      Params:         0       0       0       0       0
  1060 ;;      Locals:         0       0       0       0       0
  1061 ;;      Temps:          0       0       0       0       0
  1062 ;;      Totals:         0       0       0       0       0
  1063 ;;Total ram usage:        0 bytes
  1064 ;; Hardware stack levels used:    1
  1065 ;; This function calls:
  1066 ;;		Nothing
  1067 ;; This function is called by:
  1068 ;;		_main
  1069 ;; This function uses a non-reentrant model
  1070 ;;
  1071                           
  1072                           
  1073                           ;psect for function _tmr0_config
  1074  04EF                     _tmr0_config:
  1075  04EF                     l1037:	
  1076                           ;incstack = 0
  1077                           ; Regs used in _tmr0_config: [wreg]
  1078                           
  1079                           
  1080                           ;LCD.c: 195:     OPTION_REGbits.nRBPU = 1;
  1081  04EF  1683               	bsf	3,5	;RP0=1, select bank1
  1082  04F0  1303               	bcf	3,6	;RP1=0, select bank1
  1083  04F1  1781               	bsf	1,7	;volatile
  1084                           
  1085                           ;LCD.c: 196:     OPTION_REGbits.T0CS = 0;
  1086  04F2  1281               	bcf	1,5	;volatile
  1087                           
  1088                           ;LCD.c: 197:     OPTION_REGbits.PSA = 0;
  1089  04F3  1181               	bcf	1,3	;volatile
  1090                           
  1091                           ;LCD.c: 198:     OPTION_REGbits.PS2 = 0;
  1092  04F4  1101               	bcf	1,2	;volatile
  1093                           
  1094                           ;LCD.c: 199:     OPTION_REGbits.PS1 = 1;
  1095  04F5  1481               	bsf	1,1	;volatile
  1096                           
  1097                           ;LCD.c: 200:     OPTION_REGbits.PS0 = 0;
  1098  04F6  1001               	bcf	1,0	;volatile
  1099  04F7                     l1039:
  1100                           
  1101                           ;LCD.c: 201:     TMR0 = 10;
  1102  04F7  300A               	movlw	10
  1103  04F8  1283               	bcf	3,5	;RP0=0, select bank0
  1104  04F9  1303               	bcf	3,6	;RP1=0, select bank0
  1105  04FA  0081               	movwf	1	;volatile
  1106  04FB                     l95:
  1107  04FB  0008               	return
  1108  04FC                     __end_of_tmr0_config:
  1109                           
  1110                           	psect	text2
  1111  0551                     __ptext2:	
  1112 ;; *************** function _setup *****************
  1113 ;; Defined at:
  1114 ;;		line 153 in file "LCD.c"
  1115 ;; Parameters:    Size  Location     Type
  1116 ;;		None
  1117 ;; Auto vars:     Size  Location     Type
  1118 ;;		None
  1119 ;; Return value:  Size  Location     Type
  1120 ;;                  1    wreg      void 
  1121 ;; Registers used:
  1122 ;;		wreg, status,2
  1123 ;; Tracked objects:
  1124 ;;		On entry : 0/0
  1125 ;;		On exit  : 0/0
  1126 ;;		Unchanged: 0/0
  1127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1128 ;;      Params:         0       0       0       0       0
  1129 ;;      Locals:         0       0       0       0       0
  1130 ;;      Temps:          0       0       0       0       0
  1131 ;;      Totals:         0       0       0       0       0
  1132 ;;Total ram usage:        0 bytes
  1133 ;; Hardware stack levels used:    1
  1134 ;; This function calls:
  1135 ;;		Nothing
  1136 ;; This function is called by:
  1137 ;;		_main
  1138 ;; This function uses a non-reentrant model
  1139 ;;
  1140                           
  1141                           
  1142                           ;psect for function _setup
  1143  0551                     _setup:
  1144  0551                     l1009:	
  1145                           ;incstack = 0
  1146                           ; Regs used in _setup: [wreg+status,2]
  1147                           
  1148                           
  1149                           ;LCD.c: 155:     ANSEL = 1;
  1150  0551  3001               	movlw	1
  1151  0552  1683               	bsf	3,5	;RP0=1, select bank3
  1152  0553  1703               	bsf	3,6	;RP1=1, select bank3
  1153  0554  0088               	movwf	8	;volatile
  1154                           
  1155                           ;LCD.c: 156:     TRISA = 1;
  1156  0555  3001               	movlw	1
  1157  0556  1683               	bsf	3,5	;RP0=1, select bank1
  1158  0557  1303               	bcf	3,6	;RP1=0, select bank1
  1159  0558  0085               	movwf	5	;volatile
  1160  0559                     l1011:
  1161                           
  1162                           ;LCD.c: 157:     PORTA = 0;
  1163  0559  1283               	bcf	3,5	;RP0=0, select bank0
  1164  055A  1303               	bcf	3,6	;RP1=0, select bank0
  1165  055B  0185               	clrf	5	;volatile
  1166  055C                     l1013:
  1167                           
  1168                           ;LCD.c: 158:     ANSELH = 0;
  1169  055C  1683               	bsf	3,5	;RP0=1, select bank3
  1170  055D  1703               	bsf	3,6	;RP1=1, select bank3
  1171  055E  0189               	clrf	9	;volatile
  1172  055F                     l1015:
  1173                           
  1174                           ;LCD.c: 159:     TRISB = 0;
  1175  055F  1683               	bsf	3,5	;RP0=1, select bank1
  1176  0560  1303               	bcf	3,6	;RP1=0, select bank1
  1177  0561  0186               	clrf	6	;volatile
  1178  0562                     l1017:
  1179                           
  1180                           ;LCD.c: 160:     PORTB = 0;
  1181  0562  1283               	bcf	3,5	;RP0=0, select bank0
  1182  0563  1303               	bcf	3,6	;RP1=0, select bank0
  1183  0564  0186               	clrf	6	;volatile
  1184  0565                     l1019:
  1185                           
  1186                           ;LCD.c: 161:     TRISC = 0;
  1187  0565  1683               	bsf	3,5	;RP0=1, select bank1
  1188  0566  1303               	bcf	3,6	;RP1=0, select bank1
  1189  0567  0187               	clrf	7	;volatile
  1190  0568                     l1021:
  1191                           
  1192                           ;LCD.c: 162:     PORTC = 0;
  1193  0568  1283               	bcf	3,5	;RP0=0, select bank0
  1194  0569  1303               	bcf	3,6	;RP1=0, select bank0
  1195  056A  0187               	clrf	7	;volatile
  1196  056B                     l1023:
  1197                           
  1198                           ;LCD.c: 163:     TRISD = 0;
  1199  056B  1683               	bsf	3,5	;RP0=1, select bank1
  1200  056C  1303               	bcf	3,6	;RP1=0, select bank1
  1201  056D  0188               	clrf	8	;volatile
  1202  056E                     l1025:
  1203                           
  1204                           ;LCD.c: 164:     PORTD = 0;
  1205  056E  1283               	bcf	3,5	;RP0=0, select bank0
  1206  056F  1303               	bcf	3,6	;RP1=0, select bank0
  1207  0570  0188               	clrf	8	;volatile
  1208  0571                     l1027:
  1209                           
  1210                           ;LCD.c: 165:     TRISE = 0;
  1211  0571  1683               	bsf	3,5	;RP0=1, select bank1
  1212  0572  1303               	bcf	3,6	;RP1=0, select bank1
  1213  0573  0189               	clrf	9	;volatile
  1214  0574                     l1029:
  1215                           
  1216                           ;LCD.c: 166:     PORTE = 0;
  1217  0574  1283               	bcf	3,5	;RP0=0, select bank0
  1218  0575  1303               	bcf	3,6	;RP1=0, select bank0
  1219  0576  0189               	clrf	9	;volatile
  1220  0577                     l86:
  1221  0577  0008               	return
  1222  0578                     __end_of_setup:
  1223                           
  1224                           	psect	text3
  1225  04B1                     __ptext3:	
  1226 ;; *************** function _osc_config *****************
  1227 ;; Defined at:
  1228 ;;		line 182 in file "LCD.c"
  1229 ;; Parameters:    Size  Location     Type
  1230 ;;		None
  1231 ;; Auto vars:     Size  Location     Type
  1232 ;;		None
  1233 ;; Return value:  Size  Location     Type
  1234 ;;                  1    wreg      void 
  1235 ;; Registers used:
  1236 ;;		None
  1237 ;; Tracked objects:
  1238 ;;		On entry : 0/0
  1239 ;;		On exit  : 0/0
  1240 ;;		Unchanged: 0/0
  1241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1242 ;;      Params:         0       0       0       0       0
  1243 ;;      Locals:         0       0       0       0       0
  1244 ;;      Temps:          0       0       0       0       0
  1245 ;;      Totals:         0       0       0       0       0
  1246 ;;Total ram usage:        0 bytes
  1247 ;; Hardware stack levels used:    1
  1248 ;; This function calls:
  1249 ;;		Nothing
  1250 ;; This function is called by:
  1251 ;;		_main
  1252 ;; This function uses a non-reentrant model
  1253 ;;
  1254                           
  1255                           
  1256                           ;psect for function _osc_config
  1257  04B1                     _osc_config:
  1258  04B1                     l1031:	
  1259                           ;incstack = 0
  1260                           ; Regs used in _osc_config: []
  1261                           
  1262                           
  1263                           ;LCD.c: 184:     OSCCONbits.IRCF2 = 1;
  1264  04B1  1683               	bsf	3,5	;RP0=1, select bank1
  1265  04B2  1303               	bcf	3,6	;RP1=0, select bank1
  1266  04B3  170F               	bsf	15,6	;volatile
  1267                           
  1268                           ;LCD.c: 185:     OSCCONbits.IRCF1 = 1;
  1269  04B4  168F               	bsf	15,5	;volatile
  1270                           
  1271                           ;LCD.c: 186:     OSCCONbits.IRCF2 = 0;
  1272  04B5  130F               	bcf	15,6	;volatile
  1273                           
  1274                           ;LCD.c: 187:     OSCCONbits.OSTS = 0;
  1275  04B6  118F               	bcf	15,3	;volatile
  1276                           
  1277                           ;LCD.c: 188:     OSCCONbits.HTS = 0;
  1278  04B7  110F               	bcf	15,2	;volatile
  1279                           
  1280                           ;LCD.c: 189:     OSCCONbits.LTS = 1;
  1281  04B8  148F               	bsf	15,1	;volatile
  1282                           
  1283                           ;LCD.c: 190:     OSCCONbits.SCS = 0;
  1284  04B9  100F               	bcf	15,0	;volatile
  1285  04BA                     l92:
  1286  04BA  0008               	return
  1287  04BB                     __end_of_osc_config:
  1288                           
  1289                           	psect	text4
  1290  04E2                     __ptext4:	
  1291 ;; *************** function _interrup_config *****************
  1292 ;; Defined at:
  1293 ;;		line 169 in file "LCD.c"
  1294 ;; Parameters:    Size  Location     Type
  1295 ;;		None
  1296 ;; Auto vars:     Size  Location     Type
  1297 ;;		None
  1298 ;; Return value:  Size  Location     Type
  1299 ;;                  1    wreg      void 
  1300 ;; Registers used:
  1301 ;;		wreg
  1302 ;; Tracked objects:
  1303 ;;		On entry : 0/0
  1304 ;;		On exit  : 0/0
  1305 ;;		Unchanged: 0/0
  1306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1307 ;;      Params:         0       0       0       0       0
  1308 ;;      Locals:         0       0       0       0       0
  1309 ;;      Temps:          0       0       0       0       0
  1310 ;;      Totals:         0       0       0       0       0
  1311 ;;Total ram usage:        0 bytes
  1312 ;; Hardware stack levels used:    1
  1313 ;; This function calls:
  1314 ;;		Nothing
  1315 ;; This function is called by:
  1316 ;;		_main
  1317 ;; This function uses a non-reentrant model
  1318 ;;
  1319                           
  1320                           
  1321                           ;psect for function _interrup_config
  1322  04E2                     _interrup_config:
  1323  04E2                     l1033:	
  1324                           ;incstack = 0
  1325                           ; Regs used in _interrup_config: [wreg]
  1326                           
  1327                           
  1328                           ;LCD.c: 171:     INTCONbits.GIE = 1;
  1329  04E2  178B               	bsf	11,7	;volatile
  1330                           
  1331                           ;LCD.c: 172:     INTCONbits.PEIE = 0;
  1332  04E3  130B               	bcf	11,6	;volatile
  1333                           
  1334                           ;LCD.c: 173:     INTCONbits.T0IE = 1;
  1335  04E4  168B               	bsf	11,5	;volatile
  1336                           
  1337                           ;LCD.c: 174:     INTCONbits.INTE = 0;
  1338  04E5  120B               	bcf	11,4	;volatile
  1339                           
  1340                           ;LCD.c: 175:     INTCONbits.RBIE = 1;
  1341  04E6  158B               	bsf	11,3	;volatile
  1342                           
  1343                           ;LCD.c: 176:     INTCONbits.T0IF = 0;
  1344  04E7  110B               	bcf	11,2	;volatile
  1345                           
  1346                           ;LCD.c: 177:     INTCONbits.INTF = 0;
  1347  04E8  108B               	bcf	11,1	;volatile
  1348                           
  1349                           ;LCD.c: 178:     INTCONbits.RBIF = 0;
  1350  04E9  100B               	bcf	11,0	;volatile
  1351  04EA                     l1035:
  1352                           
  1353                           ;LCD.c: 179:     IOCB = 0b00000011;
  1354  04EA  3003               	movlw	3
  1355  04EB  1683               	bsf	3,5	;RP0=1, select bank1
  1356  04EC  1303               	bcf	3,6	;RP1=0, select bank1
  1357  04ED  0096               	movwf	22	;volatile
  1358  04EE                     l89:
  1359  04EE  0008               	return
  1360  04EF                     __end_of_interrup_config:
  1361                           
  1362                           	psect	text5
  1363  04AA                     __ptext5:	
  1364 ;; *************** function _adc_config *****************
  1365 ;; Defined at:
  1366 ;;		line 208 in file "LCD.c"
  1367 ;; Parameters:    Size  Location     Type
  1368 ;;		None
  1369 ;; Auto vars:     Size  Location     Type
  1370 ;;		None
  1371 ;; Return value:  Size  Location     Type
  1372 ;;                  1    wreg      void 
  1373 ;; Registers used:
  1374 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1375 ;; Tracked objects:
  1376 ;;		On entry : 0/0
  1377 ;;		On exit  : 0/0
  1378 ;;		Unchanged: 0/0
  1379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1380 ;;      Params:         0       0       0       0       0
  1381 ;;      Locals:         0       0       0       0       0
  1382 ;;      Temps:          0       0       0       0       0
  1383 ;;      Totals:         0       0       0       0       0
  1384 ;;Total ram usage:        0 bytes
  1385 ;; Hardware stack levels used:    1
  1386 ;; Hardware stack levels required when called:    1
  1387 ;; This function calls:
  1388 ;;		_initADC
  1389 ;; This function is called by:
  1390 ;;		_main
  1391 ;; This function uses a non-reentrant model
  1392 ;;
  1393                           
  1394                           
  1395                           ;psect for function _adc_config
  1396  04AA                     _adc_config:
  1397  04AA                     l1041:	
  1398                           ;incstack = 0
  1399                           ; Regs used in _adc_config: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1400                           
  1401                           
  1402                           ;LCD.c: 210:     initADC (0);
  1403  04AA  3000               	movlw	0
  1404  04AB  120A  118A  2621  120A  118A  	fcall	_initADC
  1405  04B0                     l98:
  1406  04B0  0008               	return
  1407  04B1                     __end_of_adc_config:
  1408                           
  1409                           	psect	text6
  1410  0621                     __ptext6:	
  1411 ;; *************** function _initADC *****************
  1412 ;; Defined at:
  1413 ;;		line 11 in file "ADC_lib.c"
  1414 ;; Parameters:    Size  Location     Type
  1415 ;;  CHS             1    wreg     unsigned char 
  1416 ;; Auto vars:     Size  Location     Type
  1417 ;;  CHS             1    2[COMMON] unsigned char 
  1418 ;; Return value:  Size  Location     Type
  1419 ;;                  1    wreg      void 
  1420 ;; Registers used:
  1421 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1422 ;; Tracked objects:
  1423 ;;		On entry : 0/0
  1424 ;;		On exit  : 0/0
  1425 ;;		Unchanged: 0/0
  1426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1427 ;;      Params:         0       0       0       0       0
  1428 ;;      Locals:         1       0       0       0       0
  1429 ;;      Temps:          2       0       0       0       0
  1430 ;;      Totals:         3       0       0       0       0
  1431 ;;Total ram usage:        3 bytes
  1432 ;; Hardware stack levels used:    1
  1433 ;; This function calls:
  1434 ;;		Nothing
  1435 ;; This function is called by:
  1436 ;;		_adc_config
  1437 ;; This function uses a non-reentrant model
  1438 ;;
  1439                           
  1440                           
  1441                           ;psect for function _initADC
  1442  0621                     _initADC:
  1443                           
  1444                           ;incstack = 0
  1445                           ; Regs used in _initADC: [wreg-fsr0h+status,2+status,0]
  1446                           ;initADC@CHS stored from wreg
  1447  0621  00F2               	movwf	initADC@CHS
  1448  0622                     l989:
  1449                           
  1450                           ;ADC_lib.c: 11: void initADC (uint8_t CHS);ADC_lib.c: 12: {;ADC_lib.c: 13:     switch (C
      +                          HS)
  1451  0622  2E8C               	goto	l993
  1452  0623                     l106:	
  1453                           ;ADC_lib.c: 14:     {;ADC_lib.c: 15:         case 0:
  1454                           
  1455                           
  1456                           ;ADC_lib.c: 16:             ADCON0bits.CHS3 = 0;
  1457  0623  1283               	bcf	3,5	;RP0=0, select bank0
  1458  0624  1303               	bcf	3,6	;RP1=0, select bank0
  1459  0625  129F               	bcf	31,5	;volatile
  1460                           
  1461                           ;ADC_lib.c: 17:             ADCON0bits.CHS2 = 0;
  1462  0626  121F               	bcf	31,4	;volatile
  1463                           
  1464                           ;ADC_lib.c: 18:             ADCON0bits.CHS1 = 0;
  1465  0627  119F               	bcf	31,3	;volatile
  1466                           
  1467                           ;ADC_lib.c: 19:             ADCON0bits.CHS0 = 0;
  1468  0628  111F               	bcf	31,2	;volatile
  1469                           
  1470                           ;ADC_lib.c: 20:             break;
  1471  0629  2EC0               	goto	l107
  1472  062A                     l108:	
  1473                           ;ADC_lib.c: 21:         case 1:
  1474                           
  1475                           
  1476                           ;ADC_lib.c: 22:             ADCON0bits.CHS3 = 0;
  1477  062A  1283               	bcf	3,5	;RP0=0, select bank0
  1478  062B  1303               	bcf	3,6	;RP1=0, select bank0
  1479  062C  129F               	bcf	31,5	;volatile
  1480                           
  1481                           ;ADC_lib.c: 23:             ADCON0bits.CHS2 = 0;
  1482  062D  121F               	bcf	31,4	;volatile
  1483                           
  1484                           ;ADC_lib.c: 24:             ADCON0bits.CHS1 = 0;
  1485  062E  119F               	bcf	31,3	;volatile
  1486                           
  1487                           ;ADC_lib.c: 25:             ADCON0bits.CHS0 = 1;
  1488  062F  151F               	bsf	31,2	;volatile
  1489                           
  1490                           ;ADC_lib.c: 26:             break;
  1491  0630  2EC0               	goto	l107
  1492  0631                     l109:	
  1493                           ;ADC_lib.c: 28:         case 2:
  1494                           
  1495                           
  1496                           ;ADC_lib.c: 29:             ADCON0bits.CHS3 = 0;
  1497  0631  1283               	bcf	3,5	;RP0=0, select bank0
  1498  0632  1303               	bcf	3,6	;RP1=0, select bank0
  1499  0633  129F               	bcf	31,5	;volatile
  1500                           
  1501                           ;ADC_lib.c: 30:             ADCON0bits.CHS2 = 0;
  1502  0634  121F               	bcf	31,4	;volatile
  1503                           
  1504                           ;ADC_lib.c: 31:             ADCON0bits.CHS1 = 1;
  1505  0635  159F               	bsf	31,3	;volatile
  1506                           
  1507                           ;ADC_lib.c: 32:             ADCON0bits.CHS0 = 0;
  1508  0636  111F               	bcf	31,2	;volatile
  1509                           
  1510                           ;ADC_lib.c: 33:             break;
  1511  0637  2EC0               	goto	l107
  1512  0638                     l110:	
  1513                           ;ADC_lib.c: 35:         case 3:
  1514                           
  1515                           
  1516                           ;ADC_lib.c: 36:             ADCON0bits.CHS3 = 0;
  1517  0638  1283               	bcf	3,5	;RP0=0, select bank0
  1518  0639  1303               	bcf	3,6	;RP1=0, select bank0
  1519  063A  129F               	bcf	31,5	;volatile
  1520                           
  1521                           ;ADC_lib.c: 37:             ADCON0bits.CHS2 = 0;
  1522  063B  121F               	bcf	31,4	;volatile
  1523                           
  1524                           ;ADC_lib.c: 38:             ADCON0bits.CHS1 = 1;
  1525  063C  159F               	bsf	31,3	;volatile
  1526                           
  1527                           ;ADC_lib.c: 39:             ADCON0bits.CHS0 = 1;
  1528  063D  151F               	bsf	31,2	;volatile
  1529                           
  1530                           ;ADC_lib.c: 40:             break;
  1531  063E  2EC0               	goto	l107
  1532  063F                     l111:	
  1533                           ;ADC_lib.c: 42:         case 4:
  1534                           
  1535                           
  1536                           ;ADC_lib.c: 43:             ADCON0bits.CHS3 = 0;
  1537  063F  1283               	bcf	3,5	;RP0=0, select bank0
  1538  0640  1303               	bcf	3,6	;RP1=0, select bank0
  1539  0641  129F               	bcf	31,5	;volatile
  1540                           
  1541                           ;ADC_lib.c: 44:             ADCON0bits.CHS2 = 1;
  1542  0642  161F               	bsf	31,4	;volatile
  1543                           
  1544                           ;ADC_lib.c: 45:             ADCON0bits.CHS1 = 0;
  1545  0643  119F               	bcf	31,3	;volatile
  1546                           
  1547                           ;ADC_lib.c: 46:             ADCON0bits.CHS0 = 0;
  1548  0644  111F               	bcf	31,2	;volatile
  1549                           
  1550                           ;ADC_lib.c: 47:             break;
  1551  0645  2EC0               	goto	l107
  1552  0646                     l112:	
  1553                           ;ADC_lib.c: 49:         case 5:
  1554                           
  1555                           
  1556                           ;ADC_lib.c: 50:             ADCON0bits.CHS3 = 0;
  1557  0646  1283               	bcf	3,5	;RP0=0, select bank0
  1558  0647  1303               	bcf	3,6	;RP1=0, select bank0
  1559  0648  129F               	bcf	31,5	;volatile
  1560                           
  1561                           ;ADC_lib.c: 51:             ADCON0bits.CHS2 = 1;
  1562  0649  161F               	bsf	31,4	;volatile
  1563                           
  1564                           ;ADC_lib.c: 52:             ADCON0bits.CHS1 = 0;
  1565  064A  119F               	bcf	31,3	;volatile
  1566                           
  1567                           ;ADC_lib.c: 53:             ADCON0bits.CHS0 = 1;
  1568  064B  151F               	bsf	31,2	;volatile
  1569                           
  1570                           ;ADC_lib.c: 54:             break;
  1571  064C  2EC0               	goto	l107
  1572  064D                     l113:	
  1573                           ;ADC_lib.c: 56:         case 6:
  1574                           
  1575                           
  1576                           ;ADC_lib.c: 57:             ADCON0bits.CHS3 = 0;
  1577  064D  1283               	bcf	3,5	;RP0=0, select bank0
  1578  064E  1303               	bcf	3,6	;RP1=0, select bank0
  1579  064F  129F               	bcf	31,5	;volatile
  1580                           
  1581                           ;ADC_lib.c: 58:             ADCON0bits.CHS2 = 1;
  1582  0650  161F               	bsf	31,4	;volatile
  1583                           
  1584                           ;ADC_lib.c: 59:             ADCON0bits.CHS1 = 1;
  1585  0651  159F               	bsf	31,3	;volatile
  1586                           
  1587                           ;ADC_lib.c: 60:             ADCON0bits.CHS0 = 0;
  1588  0652  111F               	bcf	31,2	;volatile
  1589                           
  1590                           ;ADC_lib.c: 61:             break;
  1591  0653  2EC0               	goto	l107
  1592  0654                     l114:	
  1593                           ;ADC_lib.c: 63:         case 7:
  1594                           
  1595                           
  1596                           ;ADC_lib.c: 64:             ADCON0bits.CHS3 = 0;
  1597  0654  1283               	bcf	3,5	;RP0=0, select bank0
  1598  0655  1303               	bcf	3,6	;RP1=0, select bank0
  1599  0656  129F               	bcf	31,5	;volatile
  1600                           
  1601                           ;ADC_lib.c: 65:             ADCON0bits.CHS2 = 1;
  1602  0657  161F               	bsf	31,4	;volatile
  1603                           
  1604                           ;ADC_lib.c: 66:             ADCON0bits.CHS1 = 1;
  1605  0658  159F               	bsf	31,3	;volatile
  1606                           
  1607                           ;ADC_lib.c: 67:             ADCON0bits.CHS0 = 1;
  1608  0659  151F               	bsf	31,2	;volatile
  1609                           
  1610                           ;ADC_lib.c: 68:             break;
  1611  065A  2EC0               	goto	l107
  1612  065B                     l115:	
  1613                           ;ADC_lib.c: 70:         case 8:
  1614                           
  1615                           
  1616                           ;ADC_lib.c: 71:             ADCON0bits.CHS3 = 1;
  1617  065B  1283               	bcf	3,5	;RP0=0, select bank0
  1618  065C  1303               	bcf	3,6	;RP1=0, select bank0
  1619  065D  169F               	bsf	31,5	;volatile
  1620                           
  1621                           ;ADC_lib.c: 72:             ADCON0bits.CHS2 = 0;
  1622  065E  121F               	bcf	31,4	;volatile
  1623                           
  1624                           ;ADC_lib.c: 73:             ADCON0bits.CHS1 = 0;
  1625  065F  119F               	bcf	31,3	;volatile
  1626                           
  1627                           ;ADC_lib.c: 74:             ADCON0bits.CHS0 = 0;
  1628  0660  111F               	bcf	31,2	;volatile
  1629                           
  1630                           ;ADC_lib.c: 75:             break;
  1631  0661  2EC0               	goto	l107
  1632  0662                     l116:	
  1633                           ;ADC_lib.c: 77:         case 9:
  1634                           
  1635                           
  1636                           ;ADC_lib.c: 78:             ADCON0bits.CHS3 = 1;
  1637  0662  1283               	bcf	3,5	;RP0=0, select bank0
  1638  0663  1303               	bcf	3,6	;RP1=0, select bank0
  1639  0664  169F               	bsf	31,5	;volatile
  1640                           
  1641                           ;ADC_lib.c: 79:             ADCON0bits.CHS2 = 0;
  1642  0665  121F               	bcf	31,4	;volatile
  1643                           
  1644                           ;ADC_lib.c: 80:             ADCON0bits.CHS1 = 0;
  1645  0666  119F               	bcf	31,3	;volatile
  1646                           
  1647                           ;ADC_lib.c: 81:             ADCON0bits.CHS0 = 1;
  1648  0667  151F               	bsf	31,2	;volatile
  1649                           
  1650                           ;ADC_lib.c: 82:             break;
  1651  0668  2EC0               	goto	l107
  1652  0669                     l117:	
  1653                           ;ADC_lib.c: 84:         case 10:
  1654                           
  1655                           
  1656                           ;ADC_lib.c: 85:             ADCON0bits.CHS3 = 1;
  1657  0669  1283               	bcf	3,5	;RP0=0, select bank0
  1658  066A  1303               	bcf	3,6	;RP1=0, select bank0
  1659  066B  169F               	bsf	31,5	;volatile
  1660                           
  1661                           ;ADC_lib.c: 86:             ADCON0bits.CHS2 = 0;
  1662  066C  121F               	bcf	31,4	;volatile
  1663                           
  1664                           ;ADC_lib.c: 87:             ADCON0bits.CHS1 = 1;
  1665  066D  159F               	bsf	31,3	;volatile
  1666                           
  1667                           ;ADC_lib.c: 88:             ADCON0bits.CHS0 = 0;
  1668  066E  111F               	bcf	31,2	;volatile
  1669                           
  1670                           ;ADC_lib.c: 89:             break;
  1671  066F  2EC0               	goto	l107
  1672  0670                     l118:	
  1673                           ;ADC_lib.c: 91:         case 11:
  1674                           
  1675                           
  1676                           ;ADC_lib.c: 92:             ADCON0bits.CHS3 = 1;
  1677  0670  1283               	bcf	3,5	;RP0=0, select bank0
  1678  0671  1303               	bcf	3,6	;RP1=0, select bank0
  1679  0672  169F               	bsf	31,5	;volatile
  1680                           
  1681                           ;ADC_lib.c: 93:             ADCON0bits.CHS2 = 0;
  1682  0673  121F               	bcf	31,4	;volatile
  1683                           
  1684                           ;ADC_lib.c: 94:             ADCON0bits.CHS1 = 1;
  1685  0674  159F               	bsf	31,3	;volatile
  1686                           
  1687                           ;ADC_lib.c: 95:             ADCON0bits.CHS0 = 1;
  1688  0675  151F               	bsf	31,2	;volatile
  1689                           
  1690                           ;ADC_lib.c: 96:             break;
  1691  0676  2EC0               	goto	l107
  1692  0677                     l119:	
  1693                           ;ADC_lib.c: 98:         case 12:
  1694                           
  1695                           
  1696                           ;ADC_lib.c: 99:             ADCON0bits.CHS3 = 1;
  1697  0677  1283               	bcf	3,5	;RP0=0, select bank0
  1698  0678  1303               	bcf	3,6	;RP1=0, select bank0
  1699  0679  169F               	bsf	31,5	;volatile
  1700                           
  1701                           ;ADC_lib.c: 100:             ADCON0bits.CHS2 = 1;
  1702  067A  161F               	bsf	31,4	;volatile
  1703                           
  1704                           ;ADC_lib.c: 101:             ADCON0bits.CHS1 = 0;
  1705  067B  119F               	bcf	31,3	;volatile
  1706                           
  1707                           ;ADC_lib.c: 102:             ADCON0bits.CHS0 = 0;
  1708  067C  111F               	bcf	31,2	;volatile
  1709                           
  1710                           ;ADC_lib.c: 103:             break;
  1711  067D  2EC0               	goto	l107
  1712  067E                     l120:	
  1713                           ;ADC_lib.c: 105:         case 13:
  1714                           
  1715                           
  1716                           ;ADC_lib.c: 106:             ADCON0bits.CHS3 = 1;
  1717  067E  1283               	bcf	3,5	;RP0=0, select bank0
  1718  067F  1303               	bcf	3,6	;RP1=0, select bank0
  1719  0680  169F               	bsf	31,5	;volatile
  1720                           
  1721                           ;ADC_lib.c: 107:             ADCON0bits.CHS2 = 1;
  1722  0681  161F               	bsf	31,4	;volatile
  1723                           
  1724                           ;ADC_lib.c: 108:             ADCON0bits.CHS1 = 0;
  1725  0682  119F               	bcf	31,3	;volatile
  1726                           
  1727                           ;ADC_lib.c: 109:             ADCON0bits.CHS0 = 1;
  1728  0683  151F               	bsf	31,2	;volatile
  1729                           
  1730                           ;ADC_lib.c: 110:             break;
  1731  0684  2EC0               	goto	l107
  1732  0685                     l121:	
  1733                           ;ADC_lib.c: 112:         default:
  1734                           
  1735                           
  1736                           ;ADC_lib.c: 113:             ADCON0bits.CHS3 = 1;
  1737  0685  1283               	bcf	3,5	;RP0=0, select bank0
  1738  0686  1303               	bcf	3,6	;RP1=0, select bank0
  1739  0687  169F               	bsf	31,5	;volatile
  1740                           
  1741                           ;ADC_lib.c: 114:             ADCON0bits.CHS2 = 1;
  1742  0688  161F               	bsf	31,4	;volatile
  1743                           
  1744                           ;ADC_lib.c: 115:             ADCON0bits.CHS1 = 1;
  1745  0689  159F               	bsf	31,3	;volatile
  1746                           
  1747                           ;ADC_lib.c: 116:             ADCON0bits.CHS0 = 0;
  1748  068A  111F               	bcf	31,2	;volatile
  1749                           
  1750                           ;ADC_lib.c: 117:             break;
  1751  068B  2EC0               	goto	l107
  1752  068C                     l993:
  1753  068C  0872               	movf	initADC@CHS,w
  1754  068D  00F0               	movwf	??_initADC
  1755  068E  01F1               	clrf	??_initADC+1
  1756                           
  1757                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1758                           ; Switch size 1, requested type "simple"
  1759                           ; Number of cases is 1, Range of values is 0 to 0
  1760                           ; switch strategies available:
  1761                           ; Name         Instructions Cycles
  1762                           ; simple_byte            4     3 (average)
  1763                           ; direct_byte           11     8 (fixed)
  1764                           ; jumptable            260     6 (fixed)
  1765                           ;	Chosen strategy is simple_byte
  1766  068F  0871               	movf	??_initADC+1,w
  1767  0690  3A00               	xorlw	0	; case 0
  1768  0691  1903               	skipnz
  1769  0692  2E94               	goto	l1199
  1770  0693  2E85               	goto	l121
  1771  0694                     l1199:
  1772                           
  1773                           ; Switch size 1, requested type "simple"
  1774                           ; Number of cases is 14, Range of values is 0 to 13
  1775                           ; switch strategies available:
  1776                           ; Name         Instructions Cycles
  1777                           ; simple_byte           43    22 (average)
  1778                           ; direct_byte           50     8 (fixed)
  1779                           ; jumptable            260     6 (fixed)
  1780                           ;	Chosen strategy is simple_byte
  1781  0694  0870               	movf	??_initADC,w
  1782  0695  3A00               	xorlw	0	; case 0
  1783  0696  1903               	skipnz
  1784  0697  2E23               	goto	l106
  1785  0698  3A01               	xorlw	1	; case 1
  1786  0699  1903               	skipnz
  1787  069A  2E2A               	goto	l108
  1788  069B  3A03               	xorlw	3	; case 2
  1789  069C  1903               	skipnz
  1790  069D  2E31               	goto	l109
  1791  069E  3A01               	xorlw	1	; case 3
  1792  069F  1903               	skipnz
  1793  06A0  2E38               	goto	l110
  1794  06A1  3A07               	xorlw	7	; case 4
  1795  06A2  1903               	skipnz
  1796  06A3  2E3F               	goto	l111
  1797  06A4  3A01               	xorlw	1	; case 5
  1798  06A5  1903               	skipnz
  1799  06A6  2E46               	goto	l112
  1800  06A7  3A03               	xorlw	3	; case 6
  1801  06A8  1903               	skipnz
  1802  06A9  2E4D               	goto	l113
  1803  06AA  3A01               	xorlw	1	; case 7
  1804  06AB  1903               	skipnz
  1805  06AC  2E54               	goto	l114
  1806  06AD  3A0F               	xorlw	15	; case 8
  1807  06AE  1903               	skipnz
  1808  06AF  2E5B               	goto	l115
  1809  06B0  3A01               	xorlw	1	; case 9
  1810  06B1  1903               	skipnz
  1811  06B2  2E62               	goto	l116
  1812  06B3  3A03               	xorlw	3	; case 10
  1813  06B4  1903               	skipnz
  1814  06B5  2E69               	goto	l117
  1815  06B6  3A01               	xorlw	1	; case 11
  1816  06B7  1903               	skipnz
  1817  06B8  2E70               	goto	l118
  1818  06B9  3A07               	xorlw	7	; case 12
  1819  06BA  1903               	skipnz
  1820  06BB  2E77               	goto	l119
  1821  06BC  3A01               	xorlw	1	; case 13
  1822  06BD  1903               	skipnz
  1823  06BE  2E7E               	goto	l120
  1824  06BF  2E85               	goto	l121
  1825  06C0                     l107:
  1826                           
  1827                           ;ADC_lib.c: 119:     ADCON0bits.ADCS1 = 1;
  1828  06C0  179F               	bsf	31,7	;volatile
  1829                           
  1830                           ;ADC_lib.c: 120:     ADCON0bits.ADCS0 = 0;
  1831  06C1  131F               	bcf	31,6	;volatile
  1832                           
  1833                           ;ADC_lib.c: 121:     ADCON0bits.GO_DONE= 0;
  1834  06C2  109F               	bcf	31,1	;volatile
  1835                           
  1836                           ;ADC_lib.c: 122:     ADCON0bits.ADON = 1;
  1837  06C3  141F               	bsf	31,0	;volatile
  1838                           
  1839                           ;ADC_lib.c: 124:     ADCON1bits.ADFM = 1;
  1840  06C4  1683               	bsf	3,5	;RP0=1, select bank1
  1841  06C5  1303               	bcf	3,6	;RP1=0, select bank1
  1842  06C6  179F               	bsf	31,7	;volatile
  1843                           
  1844                           ;ADC_lib.c: 125:     ADCON1bits.VCFG1 = 0;
  1845  06C7  129F               	bcf	31,5	;volatile
  1846                           
  1847                           ;ADC_lib.c: 126:     ADCON1bits.VCFG0 = 0;
  1848  06C8  121F               	bcf	31,4	;volatile
  1849  06C9                     l122:
  1850  06C9  0008               	return
  1851  06CA                     __end_of_initADC:
  1852                           
  1853                           	psect	text7
  1854  052C                     __ptext7:	
  1855 ;; *************** function _Lcd_Write_String *****************
  1856 ;; Defined at:
  1857 ;;		line 78 in file "LCD_8bits.c"
  1858 ;; Parameters:    Size  Location     Type
  1859 ;;  a               1    wreg     PTR unsigned char 
  1860 ;;		 -> STR_5(20), STR_4(12), STR_3(13), STR_2(10), 
  1861 ;;		 -> STR_1(16), 
  1862 ;; Auto vars:     Size  Location     Type
  1863 ;;  a               1    5[COMMON] PTR unsigned char 
  1864 ;;		 -> STR_5(20), STR_4(12), STR_3(13), STR_2(10), 
  1865 ;;		 -> STR_1(16), 
  1866 ;;  i               2    3[COMMON] int 
  1867 ;; Return value:  Size  Location     Type
  1868 ;;                  1    wreg      void 
  1869 ;; Registers used:
  1870 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1871 ;; Tracked objects:
  1872 ;;		On entry : 0/0
  1873 ;;		On exit  : 0/0
  1874 ;;		Unchanged: 0/0
  1875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1876 ;;      Params:         0       0       0       0       0
  1877 ;;      Locals:         3       0       0       0       0
  1878 ;;      Temps:          0       0       0       0       0
  1879 ;;      Totals:         3       0       0       0       0
  1880 ;;Total ram usage:        3 bytes
  1881 ;; Hardware stack levels used:    1
  1882 ;; Hardware stack levels required when called:    2
  1883 ;; This function calls:
  1884 ;;		_Lcd_Write_Char
  1885 ;; This function is called by:
  1886 ;;		_main
  1887 ;; This function uses a non-reentrant model
  1888 ;;
  1889                           
  1890                           
  1891                           ;psect for function _Lcd_Write_String
  1892  052C                     _Lcd_Write_String:
  1893                           
  1894                           ;incstack = 0
  1895                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1896                           ;Lcd_Write_String@a stored from wreg
  1897  052C  00F5               	movwf	Lcd_Write_String@a
  1898  052D                     l1087:
  1899                           
  1900                           ;LCD_8bits.c: 78: void Lcd_Write_String(char *a);LCD_8bits.c: 79: {;LCD_8bits.c: 80:    
      +                           int i;;LCD_8bits.c: 81:     for (i = 0; a[i] != '\0'; i++)
  1901  052D  01F3               	clrf	Lcd_Write_String@i
  1902  052E  01F4               	clrf	Lcd_Write_String@i+1
  1903  052F  2D43               	goto	l1093
  1904  0530                     l1089:
  1905                           
  1906                           ;LCD_8bits.c: 82:         Lcd_Write_Char(a[i]);
  1907  0530  0873               	movf	Lcd_Write_String@i,w
  1908  0531  0775               	addwf	Lcd_Write_String@a,w
  1909  0532  0084               	movwf	4
  1910  0533  120A  118A  2003  120A  118A  	fcall	stringdir
  1911  0538  120A  118A  24FC  120A  118A  	fcall	_Lcd_Write_Char
  1912  053D                     l1091:
  1913  053D  3001               	movlw	1
  1914  053E  07F3               	addwf	Lcd_Write_String@i,f
  1915  053F  1803               	skipnc
  1916  0540  0AF4               	incf	Lcd_Write_String@i+1,f
  1917  0541  3000               	movlw	0
  1918  0542  07F4               	addwf	Lcd_Write_String@i+1,f
  1919  0543                     l1093:
  1920  0543  0873               	movf	Lcd_Write_String@i,w
  1921  0544  0775               	addwf	Lcd_Write_String@a,w
  1922  0545  0084               	movwf	4
  1923  0546  120A  118A  2003  120A  118A  	fcall	stringdir
  1924  054B  3A00               	xorlw	0
  1925  054C  1D03               	skipz
  1926  054D  2D4F               	goto	u131
  1927  054E  2D50               	goto	u130
  1928  054F                     u131:
  1929  054F  2D30               	goto	l1089
  1930  0550                     u130:
  1931  0550                     l154:
  1932  0550  0008               	return
  1933  0551                     __end_of_Lcd_Write_String:
  1934                           
  1935                           	psect	text8
  1936  04FC                     __ptext8:	
  1937 ;; *************** function _Lcd_Write_Char *****************
  1938 ;; Defined at:
  1939 ;;		line 97 in file "LCD_8bits.c"
  1940 ;; Parameters:    Size  Location     Type
  1941 ;;  a               1    wreg     unsigned char 
  1942 ;; Auto vars:     Size  Location     Type
  1943 ;;  a               1    2[COMMON] unsigned char 
  1944 ;; Return value:  Size  Location     Type
  1945 ;;                  1    wreg      void 
  1946 ;; Registers used:
  1947 ;;		wreg, status,2, status,0, pclath, cstack
  1948 ;; Tracked objects:
  1949 ;;		On entry : 0/0
  1950 ;;		On exit  : 0/0
  1951 ;;		Unchanged: 0/0
  1952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1953 ;;      Params:         0       0       0       0       0
  1954 ;;      Locals:         1       0       0       0       0
  1955 ;;      Temps:          1       0       0       0       0
  1956 ;;      Totals:         2       0       0       0       0
  1957 ;;Total ram usage:        2 bytes
  1958 ;; Hardware stack levels used:    1
  1959 ;; Hardware stack levels required when called:    1
  1960 ;; This function calls:
  1961 ;;		_Lcd_Port
  1962 ;; This function is called by:
  1963 ;;		_main
  1964 ;;		_Lcd_Write_String
  1965 ;; This function uses a non-reentrant model
  1966 ;;
  1967                           
  1968                           
  1969                           ;psect for function _Lcd_Write_Char
  1970  04FC                     _Lcd_Write_Char:
  1971                           
  1972                           ;incstack = 0
  1973                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1974                           ;Lcd_Write_Char@a stored from wreg
  1975  04FC  00F2               	movwf	Lcd_Write_Char@a
  1976  04FD                     l979:
  1977                           
  1978                           ;LCD_8bits.c: 97: void Lcd_Write_Char(char a);LCD_8bits.c: 98: {;LCD_8bits.c: 99:     PO
      +                          RTCbits.RC0 = 1;
  1979  04FD  1283               	bcf	3,5	;RP0=0, select bank0
  1980  04FE  1303               	bcf	3,6	;RP1=0, select bank0
  1981  04FF  1407               	bsf	7,0	;volatile
  1982  0500                     l981:
  1983                           
  1984                           ;LCD_8bits.c: 100:     Lcd_Port(a);
  1985  0500  0872               	movf	Lcd_Write_Char@a,w
  1986  0501  120A  118A  24A4  120A  118A  	fcall	_Lcd_Port
  1987  0506                     l983:
  1988                           
  1989                           ;LCD_8bits.c: 101:     PORTCbits.RC2 = 1;
  1990  0506  1283               	bcf	3,5	;RP0=0, select bank0
  1991  0507  1303               	bcf	3,6	;RP1=0, select bank0
  1992  0508  1507               	bsf	7,2	;volatile
  1993  0509                     l985:
  1994                           
  1995                           ;LCD_8bits.c: 102:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1996  0509  301A               	movlw	26
  1997  050A  00F1               	movwf	??_Lcd_Write_Char
  1998  050B                     u237:
  1999  050B  0BF1               	decfsz	??_Lcd_Write_Char,f
  2000  050C  2D0B               	goto	u237
  2001  050D  0000               	nop
  2002  050E                     l987:
  2003                           
  2004                           ;LCD_8bits.c: 103:     PORTCbits.RC2 = 0;
  2005  050E  1283               	bcf	3,5	;RP0=0, select bank0
  2006  050F  1303               	bcf	3,6	;RP1=0, select bank0
  2007  0510  1107               	bcf	7,2	;volatile
  2008  0511                     l163:
  2009  0511  0008               	return
  2010  0512                     __end_of_Lcd_Write_Char:
  2011                           
  2012                           	psect	text9
  2013  04D5                     __ptext9:	
  2014 ;; *************** function _Lcd_Shift_Right *****************
  2015 ;; Defined at:
  2016 ;;		line 91 in file "LCD_8bits.c"
  2017 ;; Parameters:    Size  Location     Type
  2018 ;;		None
  2019 ;; Auto vars:     Size  Location     Type
  2020 ;;		None
  2021 ;; Return value:  Size  Location     Type
  2022 ;;                  1    wreg      void 
  2023 ;; Registers used:
  2024 ;;		wreg, status,2, status,0, pclath, cstack
  2025 ;; Tracked objects:
  2026 ;;		On entry : 0/0
  2027 ;;		On exit  : 0/0
  2028 ;;		Unchanged: 0/0
  2029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2030 ;;      Params:         0       0       0       0       0
  2031 ;;      Locals:         0       0       0       0       0
  2032 ;;      Temps:          0       0       0       0       0
  2033 ;;      Totals:         0       0       0       0       0
  2034 ;;Total ram usage:        0 bytes
  2035 ;; Hardware stack levels used:    1
  2036 ;; Hardware stack levels required when called:    2
  2037 ;; This function calls:
  2038 ;;		_Lcd_Cmd
  2039 ;; This function is called by:
  2040 ;;		_main
  2041 ;; This function uses a non-reentrant model
  2042 ;;
  2043                           
  2044                           
  2045                           ;psect for function _Lcd_Shift_Right
  2046  04D5                     _Lcd_Shift_Right:
  2047  04D5                     l1097:	
  2048                           ;incstack = 0
  2049                           ; Regs used in _Lcd_Shift_Right: [wreg+status,2+status,0+pclath+cstack]
  2050                           
  2051                           
  2052                           ;LCD_8bits.c: 93:     Lcd_Cmd(0x01);
  2053  04D5  3001               	movlw	1
  2054  04D6  120A  118A  2512  120A  118A  	fcall	_Lcd_Cmd
  2055                           
  2056                           ;LCD_8bits.c: 94:     Lcd_Cmd(0x08);
  2057  04DB  3008               	movlw	8
  2058  04DC  120A  118A  2512  120A  118A  	fcall	_Lcd_Cmd
  2059  04E1                     l160:
  2060  04E1  0008               	return
  2061  04E2                     __end_of_Lcd_Shift_Right:
  2062                           
  2063                           	psect	text10
  2064  04C8                     __ptext10:	
  2065 ;; *************** function _Lcd_Shift_Left *****************
  2066 ;; Defined at:
  2067 ;;		line 85 in file "LCD_8bits.c"
  2068 ;; Parameters:    Size  Location     Type
  2069 ;;		None
  2070 ;; Auto vars:     Size  Location     Type
  2071 ;;		None
  2072 ;; Return value:  Size  Location     Type
  2073 ;;                  1    wreg      void 
  2074 ;; Registers used:
  2075 ;;		wreg, status,2, status,0, pclath, cstack
  2076 ;; Tracked objects:
  2077 ;;		On entry : 0/0
  2078 ;;		On exit  : 0/0
  2079 ;;		Unchanged: 0/0
  2080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2081 ;;      Params:         0       0       0       0       0
  2082 ;;      Locals:         0       0       0       0       0
  2083 ;;      Temps:          0       0       0       0       0
  2084 ;;      Totals:         0       0       0       0       0
  2085 ;;Total ram usage:        0 bytes
  2086 ;; Hardware stack levels used:    1
  2087 ;; Hardware stack levels required when called:    2
  2088 ;; This function calls:
  2089 ;;		_Lcd_Cmd
  2090 ;; This function is called by:
  2091 ;;		_main
  2092 ;; This function uses a non-reentrant model
  2093 ;;
  2094                           
  2095                           
  2096                           ;psect for function _Lcd_Shift_Left
  2097  04C8                     _Lcd_Shift_Left:
  2098  04C8                     l1095:	
  2099                           ;incstack = 0
  2100                           ; Regs used in _Lcd_Shift_Left: [wreg+status,2+status,0+pclath+cstack]
  2101                           
  2102                           
  2103                           ;LCD_8bits.c: 87:     Lcd_Cmd(0x01);
  2104  04C8  3001               	movlw	1
  2105  04C9  120A  118A  2512  120A  118A  	fcall	_Lcd_Cmd
  2106                           
  2107                           ;LCD_8bits.c: 88:     Lcd_Cmd(0x0C);
  2108  04CE  300C               	movlw	12
  2109  04CF  120A  118A  2512  120A  118A  	fcall	_Lcd_Cmd
  2110  04D4                     l157:
  2111  04D4  0008               	return
  2112  04D5                     __end_of_Lcd_Shift_Left:
  2113                           
  2114                           	psect	text11
  2115  0578                     __ptext11:	
  2116 ;; *************** function _Lcd_Set_Cursor *****************
  2117 ;; Defined at:
  2118 ;;		line 57 in file "LCD_8bits.c"
  2119 ;; Parameters:    Size  Location     Type
  2120 ;;  a               1    wreg     unsigned char 
  2121 ;;  b               1    4[COMMON] unsigned char 
  2122 ;; Auto vars:     Size  Location     Type
  2123 ;;  a               1    7[COMMON] unsigned char 
  2124 ;;  temp            1   10[COMMON] unsigned char 
  2125 ;;  y               1    9[COMMON] unsigned char 
  2126 ;;  z               1    8[COMMON] unsigned char 
  2127 ;; Return value:  Size  Location     Type
  2128 ;;                  1    wreg      void 
  2129 ;; Registers used:
  2130 ;;		wreg, status,2, status,0, pclath, cstack
  2131 ;; Tracked objects:
  2132 ;;		On entry : 0/0
  2133 ;;		On exit  : 0/0
  2134 ;;		Unchanged: 0/0
  2135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2136 ;;      Params:         1       0       0       0       0
  2137 ;;      Locals:         4       0       0       0       0
  2138 ;;      Temps:          2       0       0       0       0
  2139 ;;      Totals:         7       0       0       0       0
  2140 ;;Total ram usage:        7 bytes
  2141 ;; Hardware stack levels used:    1
  2142 ;; Hardware stack levels required when called:    2
  2143 ;; This function calls:
  2144 ;;		_Lcd_Cmd
  2145 ;; This function is called by:
  2146 ;;		_main
  2147 ;; This function uses a non-reentrant model
  2148 ;;
  2149                           
  2150                           
  2151                           ;psect for function _Lcd_Set_Cursor
  2152  0578                     _Lcd_Set_Cursor:
  2153                           
  2154                           ;incstack = 0
  2155                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2156                           ;Lcd_Set_Cursor@a stored from wreg
  2157  0578  00F7               	movwf	Lcd_Set_Cursor@a
  2158  0579                     l1067:
  2159                           
  2160                           ;LCD_8bits.c: 57: void Lcd_Set_Cursor(char a, char b);LCD_8bits.c: 58: {;LCD_8bits.c: 59
      +                          :     char temp, z, y;;LCD_8bits.c: 60:     if (a == 1)
  2161  0579  0377               	decf	Lcd_Set_Cursor@a,w
  2162  057A  1D03               	btfss	3,2
  2163  057B  2D7D               	goto	u91
  2164  057C  2D7E               	goto	u90
  2165  057D                     u91:
  2166  057D  2DA1               	goto	l1077
  2167  057E                     u90:
  2168  057E                     l1069:
  2169                           
  2170                           ;LCD_8bits.c: 61:     {;LCD_8bits.c: 62:         temp = 0b00000000 + b - 1;
  2171  057E  0874               	movf	Lcd_Set_Cursor@b,w
  2172  057F  3EFF               	addlw	255
  2173  0580  00F5               	movwf	??_Lcd_Set_Cursor
  2174  0581  0875               	movf	??_Lcd_Set_Cursor,w
  2175  0582  00FA               	movwf	Lcd_Set_Cursor@temp
  2176                           
  2177                           ;LCD_8bits.c: 63:         z = temp >> 4;
  2178  0583  087A               	movf	Lcd_Set_Cursor@temp,w
  2179  0584  00F5               	movwf	??_Lcd_Set_Cursor
  2180  0585  3004               	movlw	4
  2181  0586                     u105:
  2182  0586  1003               	clrc
  2183  0587  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2184  0588  3EFF               	addlw	-1
  2185  0589  1D03               	skipz
  2186  058A  2D86               	goto	u105
  2187  058B  0875               	movf	??_Lcd_Set_Cursor,w
  2188  058C  00F6               	movwf	??_Lcd_Set_Cursor+1
  2189  058D  0876               	movf	??_Lcd_Set_Cursor+1,w
  2190  058E  00F8               	movwf	Lcd_Set_Cursor@z
  2191  058F                     l1071:
  2192                           
  2193                           ;LCD_8bits.c: 64:         y = temp & 0x0F;
  2194  058F  087A               	movf	Lcd_Set_Cursor@temp,w
  2195  0590  390F               	andlw	15
  2196  0591  00F5               	movwf	??_Lcd_Set_Cursor
  2197  0592  0875               	movf	??_Lcd_Set_Cursor,w
  2198  0593  00F9               	movwf	Lcd_Set_Cursor@y
  2199  0594                     l1073:
  2200                           
  2201                           ;LCD_8bits.c: 65:         Lcd_Cmd(z);
  2202  0594  0878               	movf	Lcd_Set_Cursor@z,w
  2203  0595  120A  118A  2512  120A  118A  	fcall	_Lcd_Cmd
  2204  059A                     l1075:
  2205                           
  2206                           ;LCD_8bits.c: 66:         Lcd_Cmd(y);
  2207  059A  0879               	movf	Lcd_Set_Cursor@y,w
  2208  059B  120A  118A  2512  120A  118A  	fcall	_Lcd_Cmd
  2209                           
  2210                           ;LCD_8bits.c: 67:     }
  2211  05A0  2DC9               	goto	l148
  2212  05A1                     l1077:
  2213  05A1  3002               	movlw	2
  2214  05A2  0677               	xorwf	Lcd_Set_Cursor@a,w
  2215  05A3  1D03               	btfss	3,2
  2216  05A4  2DA6               	goto	u111
  2217  05A5  2DA7               	goto	u110
  2218  05A6                     u111:
  2219  05A6  2DC9               	goto	l148
  2220  05A7                     u110:
  2221  05A7                     l1079:
  2222                           
  2223                           ;LCD_8bits.c: 69:     {;LCD_8bits.c: 70:         temp = 0b11000000 + b - 1;
  2224  05A7  0874               	movf	Lcd_Set_Cursor@b,w
  2225  05A8  3EBF               	addlw	191
  2226  05A9  00F5               	movwf	??_Lcd_Set_Cursor
  2227  05AA  0875               	movf	??_Lcd_Set_Cursor,w
  2228  05AB  00FA               	movwf	Lcd_Set_Cursor@temp
  2229                           
  2230                           ;LCD_8bits.c: 71:         z = temp >> 4;
  2231  05AC  087A               	movf	Lcd_Set_Cursor@temp,w
  2232  05AD  00F5               	movwf	??_Lcd_Set_Cursor
  2233  05AE  3004               	movlw	4
  2234  05AF                     u125:
  2235  05AF  1003               	clrc
  2236  05B0  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2237  05B1  3EFF               	addlw	-1
  2238  05B2  1D03               	skipz
  2239  05B3  2DAF               	goto	u125
  2240  05B4  0875               	movf	??_Lcd_Set_Cursor,w
  2241  05B5  00F6               	movwf	??_Lcd_Set_Cursor+1
  2242  05B6  0876               	movf	??_Lcd_Set_Cursor+1,w
  2243  05B7  00F8               	movwf	Lcd_Set_Cursor@z
  2244  05B8                     l1081:
  2245                           
  2246                           ;LCD_8bits.c: 72:         y = temp & 0x0F;
  2247  05B8  087A               	movf	Lcd_Set_Cursor@temp,w
  2248  05B9  390F               	andlw	15
  2249  05BA  00F5               	movwf	??_Lcd_Set_Cursor
  2250  05BB  0875               	movf	??_Lcd_Set_Cursor,w
  2251  05BC  00F9               	movwf	Lcd_Set_Cursor@y
  2252  05BD                     l1083:
  2253                           
  2254                           ;LCD_8bits.c: 73:         Lcd_Cmd(z);
  2255  05BD  0878               	movf	Lcd_Set_Cursor@z,w
  2256  05BE  120A  118A  2512  120A  118A  	fcall	_Lcd_Cmd
  2257  05C3                     l1085:
  2258                           
  2259                           ;LCD_8bits.c: 74:         Lcd_Cmd(y);
  2260  05C3  0879               	movf	Lcd_Set_Cursor@y,w
  2261  05C4  120A  118A  2512  120A  118A  	fcall	_Lcd_Cmd
  2262  05C9                     l148:
  2263  05C9  0008               	return
  2264  05CA                     __end_of_Lcd_Set_Cursor:
  2265                           
  2266                           	psect	text12
  2267  05CA                     __ptext12:	
  2268 ;; *************** function _Lcd_Init *****************
  2269 ;; Defined at:
  2270 ;;		line 28 in file "LCD_8bits.c"
  2271 ;; Parameters:    Size  Location     Type
  2272 ;;		None
  2273 ;; Auto vars:     Size  Location     Type
  2274 ;;		None
  2275 ;; Return value:  Size  Location     Type
  2276 ;;                  1    wreg      void 
  2277 ;; Registers used:
  2278 ;;		wreg, status,2, status,0, pclath, cstack
  2279 ;; Tracked objects:
  2280 ;;		On entry : 0/0
  2281 ;;		On exit  : 0/0
  2282 ;;		Unchanged: 0/0
  2283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2284 ;;      Params:         0       0       0       0       0
  2285 ;;      Locals:         0       0       0       0       0
  2286 ;;      Temps:          2       0       0       0       0
  2287 ;;      Totals:         2       0       0       0       0
  2288 ;;Total ram usage:        2 bytes
  2289 ;; Hardware stack levels used:    1
  2290 ;; Hardware stack levels required when called:    2
  2291 ;; This function calls:
  2292 ;;		_Lcd_Cmd
  2293 ;;		_Lcd_Port
  2294 ;; This function is called by:
  2295 ;;		_main
  2296 ;; This function uses a non-reentrant model
  2297 ;;
  2298                           
  2299                           
  2300                           ;psect for function _Lcd_Init
  2301  05CA                     _Lcd_Init:
  2302  05CA                     l1043:	
  2303                           ;incstack = 0
  2304                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2305                           
  2306                           
  2307                           ;LCD_8bits.c: 30:     Lcd_Port(0b0000000);
  2308  05CA  3000               	movlw	0
  2309  05CB  120A  118A  24A4  120A  118A  	fcall	_Lcd_Port
  2310  05D0                     l1045:
  2311                           
  2312                           ;LCD_8bits.c: 31:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2313  05D0  3034               	movlw	52
  2314  05D1  00F5               	movwf	??_Lcd_Init+1
  2315  05D2  30F1               	movlw	241
  2316  05D3  00F4               	movwf	??_Lcd_Init
  2317  05D4                     u247:
  2318  05D4  0BF4               	decfsz	??_Lcd_Init,f
  2319  05D5  2DD4               	goto	u247
  2320  05D6  0BF5               	decfsz	??_Lcd_Init+1,f
  2321  05D7  2DD4               	goto	u247
  2322  05D8  2DD9               	nop2
  2323  05D9                     l1047:
  2324                           
  2325                           ;LCD_8bits.c: 32:     Lcd_Cmd(0b00110000);
  2326  05D9  3030               	movlw	48
  2327  05DA  120A  118A  2512  120A  118A  	fcall	_Lcd_Cmd
  2328  05DF                     l1049:
  2329                           
  2330                           ;LCD_8bits.c: 33:     PORTCbits.RC0 = 0;
  2331  05DF  1283               	bcf	3,5	;RP0=0, select bank0
  2332  05E0  1303               	bcf	3,6	;RP1=0, select bank0
  2333  05E1  1007               	bcf	7,0	;volatile
  2334  05E2                     l1051:
  2335                           
  2336                           ;LCD_8bits.c: 34:     PORTCbits.RC1 = 0;
  2337  05E2  1087               	bcf	7,1	;volatile
  2338                           
  2339                           ;LCD_8bits.c: 35:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2340  05E3  300D               	movlw	13
  2341  05E4  00F5               	movwf	??_Lcd_Init+1
  2342  05E5  30FB               	movlw	251
  2343  05E6  00F4               	movwf	??_Lcd_Init
  2344  05E7                     u257:
  2345  05E7  0BF4               	decfsz	??_Lcd_Init,f
  2346  05E8  2DE7               	goto	u257
  2347  05E9  0BF5               	decfsz	??_Lcd_Init+1,f
  2348  05EA  2DE7               	goto	u257
  2349  05EB  2DEC               	nop2
  2350  05EC                     l1053:
  2351                           
  2352                           ;LCD_8bits.c: 36:     Lcd_Cmd(0b00110000);
  2353  05EC  3030               	movlw	48
  2354  05ED  120A  118A  2512  120A  118A  	fcall	_Lcd_Cmd
  2355  05F2                     l1055:
  2356                           
  2357                           ;LCD_8bits.c: 37:      PORTCbits.RC0 = 0;
  2358  05F2  1283               	bcf	3,5	;RP0=0, select bank0
  2359  05F3  1303               	bcf	3,6	;RP1=0, select bank0
  2360  05F4  1007               	bcf	7,0	;volatile
  2361  05F5                     l1057:
  2362                           
  2363                           ;LCD_8bits.c: 38:     PORTCbits.RC1 = 0;
  2364  05F5  1087               	bcf	7,1	;volatile
  2365  05F6                     l1059:
  2366                           
  2367                           ;LCD_8bits.c: 39:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2368  05F6  301D               	movlw	29
  2369  05F7  00F5               	movwf	??_Lcd_Init+1
  2370  05F8  3091               	movlw	145
  2371  05F9  00F4               	movwf	??_Lcd_Init
  2372  05FA                     u267:
  2373  05FA  0BF4               	decfsz	??_Lcd_Init,f
  2374  05FB  2DFA               	goto	u267
  2375  05FC  0BF5               	decfsz	??_Lcd_Init+1,f
  2376  05FD  2DFA               	goto	u267
  2377                           
  2378                           ;LCD_8bits.c: 40:     Lcd_Cmd(0b00110000);
  2379  05FE  3030               	movlw	48
  2380  05FF  120A  118A  2512  120A  118A  	fcall	_Lcd_Cmd
  2381  0604                     l1061:
  2382                           
  2383                           ;LCD_8bits.c: 41:     PORTCbits.RC0 = 0;
  2384  0604  1283               	bcf	3,5	;RP0=0, select bank0
  2385  0605  1303               	bcf	3,6	;RP1=0, select bank0
  2386  0606  1007               	bcf	7,0	;volatile
  2387  0607                     l1063:
  2388                           
  2389                           ;LCD_8bits.c: 42:     PORTCbits.RC1 = 0;
  2390  0607  1087               	bcf	7,1	;volatile
  2391                           
  2392                           ;LCD_8bits.c: 44:     Lcd_Cmd(0b00111000);
  2393  0608  3038               	movlw	56
  2394  0609  120A  118A  2512  120A  118A  	fcall	_Lcd_Cmd
  2395                           
  2396                           ;LCD_8bits.c: 45:     Lcd_Cmd(0b00001000);
  2397  060E  3008               	movlw	8
  2398  060F  120A  118A  2512  120A  118A  	fcall	_Lcd_Cmd
  2399                           
  2400                           ;LCD_8bits.c: 46:     Lcd_Cmd(0b00000001);
  2401  0614  3001               	movlw	1
  2402  0615  120A  118A  2512  120A  118A  	fcall	_Lcd_Cmd
  2403                           
  2404                           ;LCD_8bits.c: 47:     Lcd_Cmd(0b00000110);
  2405  061A  3006               	movlw	6
  2406  061B  120A  118A  2512  120A  118A  	fcall	_Lcd_Cmd
  2407  0620                     l139:
  2408  0620  0008               	return
  2409  0621                     __end_of_Lcd_Init:
  2410                           
  2411                           	psect	text13
  2412  04BB                     __ptext13:	
  2413 ;; *************** function _Lcd_Clear *****************
  2414 ;; Defined at:
  2415 ;;		line 51 in file "LCD_8bits.c"
  2416 ;; Parameters:    Size  Location     Type
  2417 ;;		None
  2418 ;; Auto vars:     Size  Location     Type
  2419 ;;		None
  2420 ;; Return value:  Size  Location     Type
  2421 ;;                  1    wreg      void 
  2422 ;; Registers used:
  2423 ;;		wreg, status,2, status,0, pclath, cstack
  2424 ;; Tracked objects:
  2425 ;;		On entry : 0/0
  2426 ;;		On exit  : 0/0
  2427 ;;		Unchanged: 0/0
  2428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2429 ;;      Params:         0       0       0       0       0
  2430 ;;      Locals:         0       0       0       0       0
  2431 ;;      Temps:          0       0       0       0       0
  2432 ;;      Totals:         0       0       0       0       0
  2433 ;;Total ram usage:        0 bytes
  2434 ;; Hardware stack levels used:    1
  2435 ;; Hardware stack levels required when called:    2
  2436 ;; This function calls:
  2437 ;;		_Lcd_Cmd
  2438 ;; This function is called by:
  2439 ;;		_main
  2440 ;; This function uses a non-reentrant model
  2441 ;;
  2442                           
  2443                           
  2444                           ;psect for function _Lcd_Clear
  2445  04BB                     _Lcd_Clear:
  2446  04BB                     l1065:	
  2447                           ;incstack = 0
  2448                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2449                           
  2450                           
  2451                           ;LCD_8bits.c: 53:     Lcd_Cmd(0);
  2452  04BB  3000               	movlw	0
  2453  04BC  120A  118A  2512  120A  118A  	fcall	_Lcd_Cmd
  2454                           
  2455                           ;LCD_8bits.c: 54:     Lcd_Cmd(1);
  2456  04C1  3001               	movlw	1
  2457  04C2  120A  118A  2512  120A  118A  	fcall	_Lcd_Cmd
  2458  04C7                     l142:
  2459  04C7  0008               	return
  2460  04C8                     __end_of_Lcd_Clear:
  2461                           
  2462                           	psect	text14
  2463  0512                     __ptext14:	
  2464 ;; *************** function _Lcd_Cmd *****************
  2465 ;; Defined at:
  2466 ;;		line 19 in file "LCD_8bits.c"
  2467 ;; Parameters:    Size  Location     Type
  2468 ;;  a               1    wreg     unsigned char 
  2469 ;; Auto vars:     Size  Location     Type
  2470 ;;  a               1    3[COMMON] unsigned char 
  2471 ;; Return value:  Size  Location     Type
  2472 ;;                  1    wreg      void 
  2473 ;; Registers used:
  2474 ;;		wreg, status,2, status,0, pclath, cstack
  2475 ;; Tracked objects:
  2476 ;;		On entry : 0/0
  2477 ;;		On exit  : 0/0
  2478 ;;		Unchanged: 0/0
  2479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2480 ;;      Params:         0       0       0       0       0
  2481 ;;      Locals:         1       0       0       0       0
  2482 ;;      Temps:          2       0       0       0       0
  2483 ;;      Totals:         3       0       0       0       0
  2484 ;;Total ram usage:        3 bytes
  2485 ;; Hardware stack levels used:    1
  2486 ;; Hardware stack levels required when called:    1
  2487 ;; This function calls:
  2488 ;;		_Lcd_Port
  2489 ;; This function is called by:
  2490 ;;		_Lcd_Init
  2491 ;;		_Lcd_Clear
  2492 ;;		_Lcd_Set_Cursor
  2493 ;;		_Lcd_Shift_Left
  2494 ;;		_Lcd_Shift_Right
  2495 ;; This function uses a non-reentrant model
  2496 ;;
  2497                           
  2498                           
  2499                           ;psect for function _Lcd_Cmd
  2500  0512                     _Lcd_Cmd:
  2501                           
  2502                           ;incstack = 0
  2503                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2504                           ;Lcd_Cmd@a stored from wreg
  2505  0512  00F3               	movwf	Lcd_Cmd@a
  2506  0513                     l999:
  2507                           
  2508                           ;LCD_8bits.c: 19: void Lcd_Cmd (char a);LCD_8bits.c: 20: {;LCD_8bits.c: 21:     PORTCbit
      +                          s.RC0 = 0;
  2509  0513  1283               	bcf	3,5	;RP0=0, select bank0
  2510  0514  1303               	bcf	3,6	;RP1=0, select bank0
  2511  0515  1007               	bcf	7,0	;volatile
  2512  0516                     l1001:
  2513                           
  2514                           ;LCD_8bits.c: 22:     Lcd_Port(a);
  2515  0516  0873               	movf	Lcd_Cmd@a,w
  2516  0517  120A  118A  24A4  120A  118A  	fcall	_Lcd_Port
  2517  051C                     l1003:
  2518                           
  2519                           ;LCD_8bits.c: 23:     PORTCbits.RC2 = 1;
  2520  051C  1283               	bcf	3,5	;RP0=0, select bank0
  2521  051D  1303               	bcf	3,6	;RP1=0, select bank0
  2522  051E  1507               	bsf	7,2	;volatile
  2523  051F                     l1005:
  2524                           
  2525                           ;LCD_8bits.c: 24:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2526  051F  300B               	movlw	11
  2527  0520  00F2               	movwf	??_Lcd_Cmd+1
  2528  0521  3062               	movlw	98
  2529  0522  00F1               	movwf	??_Lcd_Cmd
  2530  0523                     u277:
  2531  0523  0BF1               	decfsz	??_Lcd_Cmd,f
  2532  0524  2D23               	goto	u277
  2533  0525  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2534  0526  2D23               	goto	u277
  2535  0527  0000               	nop
  2536  0528                     l1007:
  2537                           
  2538                           ;LCD_8bits.c: 25:     PORTCbits.RC2 = 0;
  2539  0528  1283               	bcf	3,5	;RP0=0, select bank0
  2540  0529  1303               	bcf	3,6	;RP1=0, select bank0
  2541  052A  1107               	bcf	7,2	;volatile
  2542  052B                     l136:
  2543  052B  0008               	return
  2544  052C                     __end_of_Lcd_Cmd:
  2545                           
  2546                           	psect	text15
  2547  04A4                     __ptext15:	
  2548 ;; *************** function _Lcd_Port *****************
  2549 ;; Defined at:
  2550 ;;		line 14 in file "LCD_8bits.c"
  2551 ;; Parameters:    Size  Location     Type
  2552 ;;  a               1    wreg     unsigned char 
  2553 ;; Auto vars:     Size  Location     Type
  2554 ;;  a               1    0[COMMON] unsigned char 
  2555 ;; Return value:  Size  Location     Type
  2556 ;;                  1    wreg      void 
  2557 ;; Registers used:
  2558 ;;		wreg
  2559 ;; Tracked objects:
  2560 ;;		On entry : 0/0
  2561 ;;		On exit  : 0/0
  2562 ;;		Unchanged: 0/0
  2563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2564 ;;      Params:         0       0       0       0       0
  2565 ;;      Locals:         1       0       0       0       0
  2566 ;;      Temps:          0       0       0       0       0
  2567 ;;      Totals:         1       0       0       0       0
  2568 ;;Total ram usage:        1 bytes
  2569 ;; Hardware stack levels used:    1
  2570 ;; This function calls:
  2571 ;;		Nothing
  2572 ;; This function is called by:
  2573 ;;		_Lcd_Cmd
  2574 ;;		_Lcd_Init
  2575 ;;		_Lcd_Write_Char
  2576 ;; This function uses a non-reentrant model
  2577 ;;
  2578                           
  2579                           
  2580                           ;psect for function _Lcd_Port
  2581  04A4                     _Lcd_Port:
  2582                           
  2583                           ;incstack = 0
  2584                           ; Regs used in _Lcd_Port: [wreg]
  2585                           ;Lcd_Port@a stored from wreg
  2586  04A4  00F0               	movwf	Lcd_Port@a
  2587  04A5                     l977:
  2588                           
  2589                           ;LCD_8bits.c: 14: void Lcd_Port (char a);LCD_8bits.c: 15: {;LCD_8bits.c: 16:     PORTD =
      +                           a;
  2590  04A5  0870               	movf	Lcd_Port@a,w
  2591  04A6  1283               	bcf	3,5	;RP0=0, select bank0
  2592  04A7  1303               	bcf	3,6	;RP1=0, select bank0
  2593  04A8  0088               	movwf	8	;volatile
  2594  04A9                     l133:
  2595  04A9  0008               	return
  2596  04AA                     __end_of_Lcd_Port:
  2597  007E                     btemp	set	126	;btemp
  2598  007E                     wtemp0	set	126
  2599                           
  2600                           	psect	config
  2601                           
  2602                           ;Config register CONFIG1 @ 0x2007
  2603                           ;	Oscillator Selection bits
  2604                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2605                           ;	Watchdog Timer Enable bit
  2606                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2607                           ;	Power-up Timer Enable bit
  2608                           ;	PWRTE = OFF, PWRT disabled
  2609                           ;	RE3/MCLR pin function select bit
  2610                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2611                           ;	Code Protection bit
  2612                           ;	CP = OFF, Program memory code protection is disabled
  2613                           ;	Data Code Protection bit
  2614                           ;	CPD = OFF, Data memory code protection is disabled
  2615                           ;	Brown Out Reset Selection bits
  2616                           ;	BOREN = OFF, BOR disabled
  2617                           ;	Internal External Switchover bit
  2618                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2619                           ;	Fail-Safe Clock Monitor Enabled bit
  2620                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2621                           ;	Low Voltage Programming Enable bit
  2622                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2623                           ;	In-Circuit Debugger Mode bit
  2624                           ;	DEBUG = 0x1, unprogrammed default
  2625  2007                     	org	8199
  2626  2007  20D4               	dw	8404
  2627                           
  2628                           ;Config register CONFIG2 @ 0x2008
  2629                           ;	Brown-out Reset Selection bit
  2630                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2631                           ;	Flash Program Memory Self Write Enable bits
  2632                           ;	WRT = OFF, Write protection off
  2633  2008                     	org	8200
  2634  2008  3FFF               	dw	16383

Data Sizes:
    Strings     71
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      2       5
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 20
		 -> STR_5(CODE[20]), STR_4(CODE[12]), STR_3(CODE[13]), STR_2(CODE[10]), 
		 -> STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _adc_config->_initADC
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Shift_Right->_Lcd_Cmd
    _Lcd_Shift_Left->_Lcd_Cmd
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    1425
                                             11 COMMON     3     3      0
                                              0 BANK0      2     2      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Shift_Left
                    _Lcd_Shift_Right
                     _Lcd_Write_Char
                   _Lcd_Write_String
                         _adc_config
                    _interrup_config
                         _osc_config
                              _setup
                        _tmr0_config
 ---------------------------------------------------------------------------------
 (1) _tmr0_config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _osc_config                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _interrup_config                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_config                                           0     0      0      22
                            _initADC
 ---------------------------------------------------------------------------------
 (2) _initADC                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     299
                                              3 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      44
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Shift_Right                                      0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Shift_Left                                       0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     770
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      44
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Shift_Left
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Shift_Right
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _adc_config
     _initADC
   _interrup_config
   _osc_config
   _setup
   _tmr0_config

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      13       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       5       5        6.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      13      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 08 00:58:23 2021

                        _i 0020                          pc 0002                         l92 04BA  
                       l86 0577                         l95 04FB                         l89 04EE  
                       l98 04B0                         u90 057E                         u91 057D  
                       fsr 0004                        l110 0638                        l111 063F  
                      l120 067E                        l112 0646                        l121 0685  
                      l113 064D                        l122 06C9                        l114 0654  
                      l106 0623                        l115 065B                        l107 06C0  
                      l116 0662                        l108 062A                        l133 04A9  
                      l117 0669                        l109 0631                        l142 04C7  
                      l118 0670                        l119 0677                        l136 052B  
                      l160 04E1                        l154 0550                        l139 0620  
                      l163 0511                        l148 05C9                        l157 04D4  
                      l981 0500    __end_of_interrup_config 04EF                        l983 0506  
                      l977 04A5                        l985 0509                        l993 068C  
                      l987 050E                        l979 04FD                        l989 0622  
                      l999 0513                        u110 05A7                        u111 05A6  
                      u105 0586                        u130 0550                        u131 054F  
                      u140 06FD                        u125 05AF                        u141 06FC  
                      u150 079C                        u151 079B                        u207 077F  
                      u160 07C1                        u161 07C0                        u217 07A4  
                      u227 07EC                        u237 050B                        u247 05D4  
                      u257 05E7                        u177 06F2                        u267 05FA  
                      u187 072D                        u277 0523                        u197 075B  
                      fsr0 0004                       l1001 0516                       l1003 051C  
                     l1011 0559                       l1005 051F                       l1021 0568  
                     l1013 055C                       l1101 06CF                       l1007 0528  
                     l1031 04B1                       l1023 056B                       l1015 055F  
                     l1111 06E6                       l1103 06D4                       l1041 04AA  
                     l1033 04E2                       l1025 056E                       l1017 0562  
                     l1009 0551                       l1121 06FE                       l1113 06EB  
                     l1105 06D9                       l1051 05E2                       l1043 05CA  
                     l1035 04EA                       l1027 0571                       l1019 0565  
                     l1131 0721                       l1123 0706                       l1115 06EE  
                     l1107 06DE                       l1061 0604                       l1053 05EC  
                     l1045 05D0                       l1029 0574                       l1037 04EF  
                     l1141 0762                       l1133 0727                       l1125 070B  
                     l1117 06F7                       l1109 06E3                       l1063 0607  
                     l1055 05F2                       l1047 05D9                       l1071 058F  
                     l1039 04F7                       l1143 0767                       l1135 0741  
                     l1127 0713                       l1119 06FD                       l1065 04BB  
                     l1057 05F5                       l1049 05DF                       l1081 05B8  
                     l1073 0594                       l1161 079C                       l1153 0779  
                     l1145 076F                       l1137 0747                       l1129 0719  
                     l1059 05F6                       l1083 05BD                       l1075 059A  
                     l1067 0579                       l1091 053D                       l1171 07B0  
                     l1155 0786                       l1147 0775                       l1139 0755  
                     l1085 05C3                       l1069 057E                       l1077 05A1  
                     l1093 0543                       l1173 07B8                       l1157 078B  
                     l1079 05A7                       l1095 04C8                       l1087 052D  
                     l1175 07C1                       l1167 079E                       l1159 0793  
                     l1097 04D5                       l1089 0530                       l1177 07E6  
                     l1169 07AB                       l1099 06CA                       l1199 0694  
                     STR_1 001D                       STR_2 0046                       STR_3 002D  
                     STR_4 003A                       STR_5 0009                       _IOCB 0096  
                     _TMR0 0001          ?_Lcd_Write_String 0070                       _main 06CA  
                     btemp 007E                       start 0000         ??_Lcd_Write_String 0073  
          __end_of_Lcd_Cmd 052C                      ?_main 0070                      _ANSEL 0188  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009    __size_of_Lcd_Set_Cursor 0052  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _TRISE 0089            __end_of_initADC 06CA  
  __size_of_Lcd_Shift_Left 000D                      _setup 0551                      main@a 0023  
                    pclath 000A                      status 0003                      wtemp0 007E  
         __end_of_Lcd_Init 0621           __end_of_Lcd_Port 04AA            __initialization 07F7  
             __end_of_main 07F7                     ??_main 007B         __size_of_Lcd_Clear 000D  
         ?_interrup_config 0070               ?_tmr0_config 0070                     _ADRESL 009E  
                   ?_setup 0070                     _ANSELH 0189                  ??_Lcd_Cmd 0071  
  __size_of_Lcd_Write_Char 0016   __size_of_Lcd_Shift_Right 000D                  ??_initADC 0070  
          Lcd_Set_Cursor@a 0077            Lcd_Set_Cursor@b 0074            Lcd_Set_Cursor@y 0079  
          Lcd_Set_Cursor@z 0078    __end_of__initialization 07FC          __end_of_Lcd_Clear 04C8  
           __pcstackCOMMON 0070                 _adc_config 04AA              __end_of_setup 0578  
           _Lcd_Set_Cursor 0578             _OPTION_REGbits 0081             _Lcd_Shift_Left 04C8  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070                    ??_setup 0070  
               __pbssBANK0 0020                 __pmaintext 06CA  __size_of_Lcd_Write_String 0025  
   __end_of_Lcd_Set_Cursor 05CA     __end_of_Lcd_Shift_Left 04D5          ??_Lcd_Shift_Right 0074  
               ??_Lcd_Init 0074                 ??_Lcd_Port 0070       __size_of_tmr0_config 000D  
               __stringtab 0003             _Lcd_Write_Char 04FC                    _Lcd_Cmd 0512  
              ?_adc_config 0070            ?_Lcd_Set_Cursor 0074                    __ptext1 04EF  
                  __ptext2 0551                    __ptext3 04B1                    __ptext4 04E2  
                  __ptext5 04AA                    __ptext6 0621                    __ptext7 052C  
                  __ptext8 04FC                    __ptext9 04D5                    _initADC 0621  
          ?_Lcd_Shift_Left 0070     __end_of_Lcd_Write_Char 0512       end_of_initialization 07FC  
               _osc_config 04B1                  Lcd_Port@a 0070                  _PORTCbits 0007  
          ?_Lcd_Write_Char 0070        __size_of_adc_config 0007   __size_of_interrup_config 000D  
        Lcd_Write_String@a 0075          Lcd_Write_String@i 0073                  _Lcd_Clear 04BB  
               initADC@CHS 0072           _Lcd_Write_String 052C        start_initialization 07F7  
        __size_of_Lcd_Init 0057          __size_of_Lcd_Port 0006                ?_osc_config 0070  
               ?_Lcd_Clear 0070            _Lcd_Shift_Right 04D5            Lcd_Write_Char@a 0072  
                ___latbits 0002              __pcstackBANK0 0023                  _adc_value 0022  
                 ?_Lcd_Cmd 0070          ??_interrup_config 0070           ??_Lcd_Set_Cursor 0075  
             ??_adc_config 0073           ??_Lcd_Shift_Left 0074                  __pstrings 0003  
                 ?_initADC 0070        __size_of_osc_config 000A              ??_tmr0_config 0070  
           __size_of_setup 0027         __end_of_adc_config 04B1    __end_of_Lcd_Shift_Right 04E2  
                 Lcd_Cmd@a 0073                ??_Lcd_Clear 0074                 _ADCON0bits 001F  
              __stringbase 0008                 _ADCON1bits 009F           ??_Lcd_Write_Char 0071  
                 _Lcd_Init 05CA                   _Lcd_Port 04A4        __end_of_tmr0_config 04FC  
 __end_of_Lcd_Write_String 0551           __size_of_Lcd_Cmd 001A         __end_of__stringtab 0009  
         __size_of_initADC 00A9                   __ptext10 04C8                   __ptext11 0578  
                 __ptext12 05CA                   __ptext13 04BB                   __ptext14 0512  
                 __ptext15 04A4               ??_osc_config 0070              __size_of_main 012D  
         ?_Lcd_Shift_Right 0070                 _INTCONbits 000B         __end_of_osc_config 04BB  
              _tmr0_config 04EF            _interrup_config 04E2                  stringcode 0003  
               _OSCCONbits 008F         Lcd_Set_Cursor@temp 007A                   stringdir 0003  
                 stringtab 0003  
