

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Mar 03 22:45:04 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    41                           	dabs	1,0x7E,2
    42  0000                     
    43                           ; Version 2.20
    44                           ; Generated 12/02/2020 GMT
    45                           ; 
    46                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F887 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     	;# 
    78  0001                     	;# 
    79  0002                     	;# 
    80  0003                     	;# 
    81  0004                     	;# 
    82  0005                     	;# 
    83  0006                     	;# 
    84  0007                     	;# 
    85  0008                     	;# 
    86  0009                     	;# 
    87  000A                     	;# 
    88  000B                     	;# 
    89  000C                     	;# 
    90  000D                     	;# 
    91  000E                     	;# 
    92  000E                     	;# 
    93  000F                     	;# 
    94  0010                     	;# 
    95  0011                     	;# 
    96  0012                     	;# 
    97  0013                     	;# 
    98  0014                     	;# 
    99  0015                     	;# 
   100  0015                     	;# 
   101  0016                     	;# 
   102  0017                     	;# 
   103  0018                     	;# 
   104  0019                     	;# 
   105  001A                     	;# 
   106  001B                     	;# 
   107  001B                     	;# 
   108  001C                     	;# 
   109  001D                     	;# 
   110  001E                     	;# 
   111  001F                     	;# 
   112  0081                     	;# 
   113  0085                     	;# 
   114  0086                     	;# 
   115  0087                     	;# 
   116  0088                     	;# 
   117  0089                     	;# 
   118  008C                     	;# 
   119  008D                     	;# 
   120  008E                     	;# 
   121  008F                     	;# 
   122  0090                     	;# 
   123  0091                     	;# 
   124  0092                     	;# 
   125  0093                     	;# 
   126  0093                     	;# 
   127  0093                     	;# 
   128  0094                     	;# 
   129  0095                     	;# 
   130  0096                     	;# 
   131  0097                     	;# 
   132  0098                     	;# 
   133  0099                     	;# 
   134  009A                     	;# 
   135  009B                     	;# 
   136  009C                     	;# 
   137  009D                     	;# 
   138  009E                     	;# 
   139  009F                     	;# 
   140  0105                     	;# 
   141  0107                     	;# 
   142  0108                     	;# 
   143  0109                     	;# 
   144  010C                     	;# 
   145  010C                     	;# 
   146  010D                     	;# 
   147  010E                     	;# 
   148  010F                     	;# 
   149  0185                     	;# 
   150  0187                     	;# 
   151  0188                     	;# 
   152  0189                     	;# 
   153  018C                     	;# 
   154  018D                     	;# 
   155  0000                     	;# 
   156  0001                     	;# 
   157  0002                     	;# 
   158  0003                     	;# 
   159  0004                     	;# 
   160  0005                     	;# 
   161  0006                     	;# 
   162  0007                     	;# 
   163  0008                     	;# 
   164  0009                     	;# 
   165  000A                     	;# 
   166  000B                     	;# 
   167  000C                     	;# 
   168  000D                     	;# 
   169  000E                     	;# 
   170  000E                     	;# 
   171  000F                     	;# 
   172  0010                     	;# 
   173  0011                     	;# 
   174  0012                     	;# 
   175  0013                     	;# 
   176  0014                     	;# 
   177  0015                     	;# 
   178  0015                     	;# 
   179  0016                     	;# 
   180  0017                     	;# 
   181  0018                     	;# 
   182  0019                     	;# 
   183  001A                     	;# 
   184  001B                     	;# 
   185  001B                     	;# 
   186  001C                     	;# 
   187  001D                     	;# 
   188  001E                     	;# 
   189  001F                     	;# 
   190  0081                     	;# 
   191  0085                     	;# 
   192  0086                     	;# 
   193  0087                     	;# 
   194  0088                     	;# 
   195  0089                     	;# 
   196  008C                     	;# 
   197  008D                     	;# 
   198  008E                     	;# 
   199  008F                     	;# 
   200  0090                     	;# 
   201  0091                     	;# 
   202  0092                     	;# 
   203  0093                     	;# 
   204  0093                     	;# 
   205  0093                     	;# 
   206  0094                     	;# 
   207  0095                     	;# 
   208  0096                     	;# 
   209  0097                     	;# 
   210  0098                     	;# 
   211  0099                     	;# 
   212  009A                     	;# 
   213  009B                     	;# 
   214  009C                     	;# 
   215  009D                     	;# 
   216  009E                     	;# 
   217  009F                     	;# 
   218  0105                     	;# 
   219  0107                     	;# 
   220  0108                     	;# 
   221  0109                     	;# 
   222  010C                     	;# 
   223  010C                     	;# 
   224  010D                     	;# 
   225  010E                     	;# 
   226  010F                     	;# 
   227  0185                     	;# 
   228  0187                     	;# 
   229  0188                     	;# 
   230  0189                     	;# 
   231  018C                     	;# 
   232  018D                     	;# 
   233  0000                     	;# 
   234  0001                     	;# 
   235  0002                     	;# 
   236  0003                     	;# 
   237  0004                     	;# 
   238  0005                     	;# 
   239  0006                     	;# 
   240  0007                     	;# 
   241  0008                     	;# 
   242  0009                     	;# 
   243  000A                     	;# 
   244  000B                     	;# 
   245  000C                     	;# 
   246  000D                     	;# 
   247  000E                     	;# 
   248  000E                     	;# 
   249  000F                     	;# 
   250  0010                     	;# 
   251  0011                     	;# 
   252  0012                     	;# 
   253  0013                     	;# 
   254  0014                     	;# 
   255  0015                     	;# 
   256  0015                     	;# 
   257  0016                     	;# 
   258  0017                     	;# 
   259  0018                     	;# 
   260  0019                     	;# 
   261  001A                     	;# 
   262  001B                     	;# 
   263  001B                     	;# 
   264  001C                     	;# 
   265  001D                     	;# 
   266  001E                     	;# 
   267  001F                     	;# 
   268  0081                     	;# 
   269  0085                     	;# 
   270  0086                     	;# 
   271  0087                     	;# 
   272  0088                     	;# 
   273  0089                     	;# 
   274  008C                     	;# 
   275  008D                     	;# 
   276  008E                     	;# 
   277  008F                     	;# 
   278  0090                     	;# 
   279  0091                     	;# 
   280  0092                     	;# 
   281  0093                     	;# 
   282  0093                     	;# 
   283  0093                     	;# 
   284  0094                     	;# 
   285  0095                     	;# 
   286  0096                     	;# 
   287  0097                     	;# 
   288  0098                     	;# 
   289  0099                     	;# 
   290  009A                     	;# 
   291  009B                     	;# 
   292  009C                     	;# 
   293  009D                     	;# 
   294  009E                     	;# 
   295  009F                     	;# 
   296  0105                     	;# 
   297  0107                     	;# 
   298  0108                     	;# 
   299  0109                     	;# 
   300  010C                     	;# 
   301  010C                     	;# 
   302  010D                     	;# 
   303  010E                     	;# 
   304  010F                     	;# 
   305  0185                     	;# 
   306  0187                     	;# 
   307  0188                     	;# 
   308  0189                     	;# 
   309  018C                     	;# 
   310  018D                     	;# 
   311  0000                     	;# 
   312  0001                     	;# 
   313  0002                     	;# 
   314  0003                     	;# 
   315  0004                     	;# 
   316  0005                     	;# 
   317  0006                     	;# 
   318  0007                     	;# 
   319  0008                     	;# 
   320  0009                     	;# 
   321  000A                     	;# 
   322  000B                     	;# 
   323  000C                     	;# 
   324  000D                     	;# 
   325  000E                     	;# 
   326  000E                     	;# 
   327  000F                     	;# 
   328  0010                     	;# 
   329  0011                     	;# 
   330  0012                     	;# 
   331  0013                     	;# 
   332  0014                     	;# 
   333  0015                     	;# 
   334  0015                     	;# 
   335  0016                     	;# 
   336  0017                     	;# 
   337  0018                     	;# 
   338  0019                     	;# 
   339  001A                     	;# 
   340  001B                     	;# 
   341  001B                     	;# 
   342  001C                     	;# 
   343  001D                     	;# 
   344  001E                     	;# 
   345  001F                     	;# 
   346  0081                     	;# 
   347  0085                     	;# 
   348  0086                     	;# 
   349  0087                     	;# 
   350  0088                     	;# 
   351  0089                     	;# 
   352  008C                     	;# 
   353  008D                     	;# 
   354  008E                     	;# 
   355  008F                     	;# 
   356  0090                     	;# 
   357  0091                     	;# 
   358  0092                     	;# 
   359  0093                     	;# 
   360  0093                     	;# 
   361  0093                     	;# 
   362  0094                     	;# 
   363  0095                     	;# 
   364  0096                     	;# 
   365  0097                     	;# 
   366  0098                     	;# 
   367  0099                     	;# 
   368  009A                     	;# 
   369  009B                     	;# 
   370  009C                     	;# 
   371  009D                     	;# 
   372  009E                     	;# 
   373  009F                     	;# 
   374  0105                     	;# 
   375  0107                     	;# 
   376  0108                     	;# 
   377  0109                     	;# 
   378  010C                     	;# 
   379  010C                     	;# 
   380  010D                     	;# 
   381  010E                     	;# 
   382  010F                     	;# 
   383  0185                     	;# 
   384  0187                     	;# 
   385  0188                     	;# 
   386  0189                     	;# 
   387  018C                     	;# 
   388  018D                     	;# 
   389  0000                     	;# 
   390  0001                     	;# 
   391  0002                     	;# 
   392  0003                     	;# 
   393  0004                     	;# 
   394  0005                     	;# 
   395  0006                     	;# 
   396  0007                     	;# 
   397  0008                     	;# 
   398  0009                     	;# 
   399  000A                     	;# 
   400  000B                     	;# 
   401  000C                     	;# 
   402  000D                     	;# 
   403  000E                     	;# 
   404  000E                     	;# 
   405  000F                     	;# 
   406  0010                     	;# 
   407  0011                     	;# 
   408  0012                     	;# 
   409  0013                     	;# 
   410  0014                     	;# 
   411  0015                     	;# 
   412  0015                     	;# 
   413  0016                     	;# 
   414  0017                     	;# 
   415  0018                     	;# 
   416  0019                     	;# 
   417  001A                     	;# 
   418  001B                     	;# 
   419  001B                     	;# 
   420  001C                     	;# 
   421  001D                     	;# 
   422  001E                     	;# 
   423  001F                     	;# 
   424  0081                     	;# 
   425  0085                     	;# 
   426  0086                     	;# 
   427  0087                     	;# 
   428  0088                     	;# 
   429  0089                     	;# 
   430  008C                     	;# 
   431  008D                     	;# 
   432  008E                     	;# 
   433  008F                     	;# 
   434  0090                     	;# 
   435  0091                     	;# 
   436  0092                     	;# 
   437  0093                     	;# 
   438  0093                     	;# 
   439  0093                     	;# 
   440  0094                     	;# 
   441  0095                     	;# 
   442  0096                     	;# 
   443  0097                     	;# 
   444  0098                     	;# 
   445  0099                     	;# 
   446  009A                     	;# 
   447  009B                     	;# 
   448  009C                     	;# 
   449  009D                     	;# 
   450  009E                     	;# 
   451  009F                     	;# 
   452  0105                     	;# 
   453  0107                     	;# 
   454  0108                     	;# 
   455  0109                     	;# 
   456  010C                     	;# 
   457  010C                     	;# 
   458  010D                     	;# 
   459  010E                     	;# 
   460  010F                     	;# 
   461  0185                     	;# 
   462  0187                     	;# 
   463  0188                     	;# 
   464  0189                     	;# 
   465  018C                     	;# 
   466  018D                     	;# 
   467  0007                     _PORTCbits	set	7
   468  001A                     _RCREG	set	26
   469  0018                     _RCSTAbits	set	24
   470  0019                     _TXREG	set	25
   471  001E                     _ADRESH	set	30
   472  001F                     _ADCON0bits	set	31
   473  000B                     _INTCONbits	set	11
   474  0009                     _PORTE	set	9
   475  0008                     _PORTD	set	8
   476  0007                     _PORTC	set	7
   477  0006                     _PORTB	set	6
   478  0005                     _PORTA	set	5
   479  000C                     _PIR1bits	set	12
   480  00C4                     _CREN	set	196
   481  008C                     _PIE1bits	set	140
   482  0098                     _TXSTAbits	set	152
   483  0099                     _SPBRG	set	153
   484  009F                     _ADCON1bits	set	159
   485  008F                     _OSCCONbits	set	143
   486  0096                     _IOCB	set	150
   487  0089                     _TRISE	set	137
   488  0088                     _TRISD	set	136
   489  0087                     _TRISCbits	set	135
   490  0087                     _TRISC	set	135
   491  0086                     _TRISB	set	134
   492  0085                     _TRISAbits	set	133
   493  0085                     _TRISA	set	133
   494  0189                     _ANSELH	set	393
   495  0188                     _ANSELbits	set	392
   496                           
   497                           	psect	strings
   498  0601                     __pstrings:
   499  0601                     stringtab:
   500  0601                     __stringtab:
   501  0601                     stringcode:	
   502                           ;	String table - string pointers are 1 byte each
   503                           
   504  0601                     stringdir:
   505  0601  3006               	movlw	high stringdir
   506  0602  008A               	movwf	10
   507  0603  0804               	movf	4,w
   508  0604  0A84               	incf	4,f
   509  0605  0782               	addwf	2,f
   510  0606                     __stringbase:
   511  0606  3400               	retlw	0
   512  0607                     __end_of__stringtab:
   513  0607                     STR_1:
   514  0607  3453               	retlw	83	;'S'
   515  0608  3431               	retlw	49	;'1'
   516  0609  343A               	retlw	58	;':'
   517  060A  3420               	retlw	32	;' '
   518  060B  3420               	retlw	32	;' '
   519  060C  3420               	retlw	32	;' '
   520  060D  3453               	retlw	83	;'S'
   521  060E  3432               	retlw	50	;'2'
   522  060F  343A               	retlw	58	;':'
   523  0610  3420               	retlw	32	;' '
   524  0611  3420               	retlw	32	;' '
   525  0612  3420               	retlw	32	;' '
   526  0613  3453               	retlw	83	;'S'
   527  0614  3433               	retlw	51	;'3'
   528  0615  343A               	retlw	58	;':'
   529  0616  3420               	retlw	32	;' '
   530  0617  3400               	retlw	0
   531                           
   532                           	psect	cinit
   533  000F                     start_initialization:	
   534                           ; #config settings
   535                           
   536  000F                     __initialization:
   537                           
   538                           ; Clear objects allocated to COMMON
   539  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   540  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   541  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   542                           
   543                           ; Clear objects allocated to BANK0
   544  0012  1383               	bcf	3,7	;select IRP bank0
   545  0013  3020               	movlw	low __pbssBANK0
   546  0014  0084               	movwf	4
   547  0015  3034               	movlw	low (__pbssBANK0+20)
   548  0016  120A  118A  265A  120A  118A  	fcall	clear_ram0
   549  001B                     end_of_initialization:	
   550                           ;End of C runtime variable initialization code
   551                           
   552  001B                     __end_of__initialization:
   553  001B  0183               	clrf	3
   554  001C  120A  118A  2C9E   	ljmp	_main	;jump to C main() function
   555                           
   556                           	psect	bssCOMMON
   557  0078                     __pbssCOMMON:
   558  0078                     _contador:
   559  0078                     	ds	1
   560  0079                     _unidad:
   561  0079                     	ds	1
   562  007A                     _voltaje:
   563  007A                     	ds	1
   564                           
   565                           	psect	bssBANK0
   566  0020                     __pbssBANK0:
   567  0020                     _velocidad3:
   568  0020                     	ds	1
   569  0021                     _velocidad2:
   570  0021                     	ds	1
   571  0022                     _velocidad1:
   572  0022                     	ds	1
   573  0023                     _a:
   574  0023                     	ds	1
   575  0024                     _w2:
   576  0024                     	ds	1
   577  0025                     _w1:
   578  0025                     	ds	1
   579  0026                     _leer:
   580  0026                     	ds	1
   581  0027                     _y2z:
   582  0027                     	ds	1
   583  0028                     _x2z:
   584  0028                     	ds	1
   585  0029                     _y1z:
   586  0029                     	ds	1
   587  002A                     _x1z:
   588  002A                     	ds	1
   589  002B                     _unidadz:
   590  002B                     	ds	1
   591  002C                     _voltajez:
   592  002C                     	ds	1
   593  002D                     _y2:
   594  002D                     	ds	1
   595  002E                     _x2:
   596  002E                     	ds	1
   597  002F                     _y1:
   598  002F                     	ds	1
   599  0030                     _x1:
   600  0030                     	ds	1
   601  0031                     _adc_value2:
   602  0031                     	ds	1
   603  0032                     _adc_value1:
   604  0032                     	ds	1
   605  0033                     _i:
   606  0033                     	ds	1
   607                           
   608                           	psect	clrtext
   609  065A                     clear_ram0:	
   610                           ;	Called with FSR containing the base address, and
   611                           ;	W with the last address+1
   612                           
   613  065A  0064               	clrwdt	;clear the watchdog before getting into this loop
   614  065B                     clrloop0:
   615  065B  0180               	clrf	0	;clear RAM location pointed to by FSR
   616  065C  0A84               	incf	4,f	;increment pointer
   617  065D  0604               	xorwf	4,w	;XOR with final address
   618  065E  1903               	btfsc	3,2	;have we reached the end yet?
   619  065F  3400               	retlw	0	;all done for this memory range, return
   620  0660  0604               	xorwf	4,w	;XOR again to restore value
   621  0661  2E5B               	goto	clrloop0	;do the next byte
   622                           
   623                           	psect	cstackCOMMON
   624  0070                     __pcstackCOMMON:
   625  0070                     ?_leer_char:
   626  0070                     ??_leer_char:	
   627                           ; 1 bytes @ 0x0
   628                           
   629  0070                     ?_setup:	
   630                           ; 1 bytes @ 0x0
   631                           
   632  0070                     ?_osc_config:	
   633                           ; 1 bytes @ 0x0
   634                           
   635  0070                     ?_interrup_config:	
   636                           ; 1 bytes @ 0x0
   637                           
   638  0070                     ?_Lcd_Init:	
   639                           ; 1 bytes @ 0x0
   640                           
   641  0070                     ?_adc_config:	
   642                           ; 1 bytes @ 0x0
   643                           
   644  0070                     ?_USART_config:	
   645                           ; 1 bytes @ 0x0
   646                           
   647  0070                     ?_lcd:	
   648                           ; 1 bytes @ 0x0
   649                           
   650  0070                     ?_initADC:	
   651                           ; 1 bytes @ 0x0
   652                           
   653  0070                     ?_adc_conversion1:	
   654                           ; 1 bytes @ 0x0
   655                           
   656  0070                     ?_adc_conversion2:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0070                     ?_USART_lib_config:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  0070                     ?_Lcd_Write_String:	
   663                           ; 1 bytes @ 0x0
   664                           
   665  0070                     ?_Conversion1:	
   666                           ; 1 bytes @ 0x0
   667                           
   668  0070                     ?_Conversion2:	
   669                           ; 1 bytes @ 0x0
   670                           
   671  0070                     ?_contador_lcd:	
   672                           ; 1 bytes @ 0x0
   673                           
   674  0070                     ?_Lcd_Write_Char:	
   675                           ; 1 bytes @ 0x0
   676                           
   677  0070                     ?_virtual_display1:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  0070                     ?_virtual_display2:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0070                     ?_virtual_display3:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  0070                     ?_escribir_char:	
   687                           ; 1 bytes @ 0x0
   688                           
   689  0070                     ?_ISR:	
   690                           ; 1 bytes @ 0x0
   691                           
   692  0070                     ??_ISR:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  0070                     ?_main:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0070                     ?_Lcd_Port:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0070                     ?_Lcd_Cmd:	
   702                           ; 1 bytes @ 0x0
   703                           
   704                           
   705                           ; 1 bytes @ 0x0
   706  0070                     	ds	3
   707  0073                     ??_setup:
   708  0073                     ??_osc_config:	
   709                           ; 1 bytes @ 0x3
   710                           
   711  0073                     ??_interrup_config:	
   712                           ; 1 bytes @ 0x3
   713                           
   714  0073                     ??_USART_config:	
   715                           ; 1 bytes @ 0x3
   716                           
   717  0073                     ??_initADC:	
   718                           ; 1 bytes @ 0x3
   719                           
   720  0073                     ??_adc_conversion1:	
   721                           ; 1 bytes @ 0x3
   722                           
   723  0073                     ??_adc_conversion2:	
   724                           ; 1 bytes @ 0x3
   725                           
   726  0073                     ??_USART_lib_config:	
   727                           ; 1 bytes @ 0x3
   728                           
   729  0073                     ??_contador_lcd:	
   730                           ; 1 bytes @ 0x3
   731                           
   732  0073                     ??_escribir_char:	
   733                           ; 1 bytes @ 0x3
   734                           
   735  0073                     ??_Lcd_Port:	
   736                           ; 1 bytes @ 0x3
   737                           
   738  0073                     ?___awdiv:	
   739                           ; 1 bytes @ 0x3
   740                           
   741  0073                     ?___awmod:	
   742                           ; 2 bytes @ 0x3
   743                           
   744  0073                     escribir_char@valor:	
   745                           ; 2 bytes @ 0x3
   746                           
   747  0073                     Lcd_Port@a:	
   748                           ; 1 bytes @ 0x3
   749                           
   750  0073                     ___awdiv@divisor:	
   751                           ; 1 bytes @ 0x3
   752                           
   753  0073                     ___awmod@divisor:	
   754                           ; 2 bytes @ 0x3
   755                           
   756                           
   757                           ; 2 bytes @ 0x3
   758  0073                     	ds	1
   759  0074                     ??_Lcd_Write_Char:
   760  0074                     ??_virtual_display1:	
   761                           ; 1 bytes @ 0x4
   762                           
   763  0074                     ??_virtual_display2:	
   764                           ; 1 bytes @ 0x4
   765                           
   766  0074                     ??_virtual_display3:	
   767                           ; 1 bytes @ 0x4
   768                           
   769  0074                     ??_Lcd_Cmd:	
   770                           ; 1 bytes @ 0x4
   771                           
   772                           
   773                           ; 1 bytes @ 0x4
   774  0074                     	ds	1
   775  0075                     initADC@CHS:
   776  0075                     Lcd_Write_Char@a:	
   777                           ; 1 bytes @ 0x5
   778                           
   779  0075                     ___awdiv@dividend:	
   780                           ; 1 bytes @ 0x5
   781                           
   782  0075                     ___awmod@dividend:	
   783                           ; 2 bytes @ 0x5
   784                           
   785                           
   786                           ; 2 bytes @ 0x5
   787  0075                     	ds	1
   788  0076                     ??_adc_config:
   789  0076                     ??_Lcd_Write_String:	
   790                           ; 1 bytes @ 0x6
   791                           
   792  0076                     Lcd_Cmd@a:	
   793                           ; 1 bytes @ 0x6
   794                           
   795                           
   796                           ; 1 bytes @ 0x6
   797  0076                     	ds	1
   798  0077                     ?_Lcd_Set_Cursor:
   799  0077                     ??___awdiv:	
   800                           ; 1 bytes @ 0x7
   801                           
   802  0077                     ??___awmod:	
   803                           ; 1 bytes @ 0x7
   804                           
   805  0077                     Lcd_Set_Cursor@b:	
   806                           ; 1 bytes @ 0x7
   807                           
   808                           
   809                           ; 1 bytes @ 0x7
   810  0077                     	ds	1
   811                           
   812                           	psect	cstackBANK0
   813  0034                     __pcstackBANK0:
   814  0034                     ??_Lcd_Init:
   815  0034                     ??_Lcd_Set_Cursor:	
   816                           ; 1 bytes @ 0x0
   817                           
   818  0034                     Lcd_Write_String@a:	
   819                           ; 1 bytes @ 0x0
   820                           
   821  0034                     ___awdiv@counter:	
   822                           ; 1 bytes @ 0x0
   823                           
   824  0034                     ___awmod@counter:	
   825                           ; 1 bytes @ 0x0
   826                           
   827                           
   828                           ; 1 bytes @ 0x0
   829  0034                     	ds	1
   830  0035                     Lcd_Set_Cursor@a:
   831  0035                     ___awdiv@sign:	
   832                           ; 1 bytes @ 0x1
   833                           
   834  0035                     ___awmod@sign:	
   835                           ; 1 bytes @ 0x1
   836                           
   837  0035                     Lcd_Write_String@i:	
   838                           ; 1 bytes @ 0x1
   839                           
   840                           
   841                           ; 2 bytes @ 0x1
   842  0035                     	ds	1
   843  0036                     Lcd_Set_Cursor@temp:
   844  0036                     ___awdiv@quotient:	
   845                           ; 1 bytes @ 0x2
   846                           
   847                           
   848                           ; 2 bytes @ 0x2
   849  0036                     	ds	2
   850  0038                     ??_Conversion1:
   851  0038                     ??_Conversion2:	
   852                           ; 1 bytes @ 0x4
   853                           
   854                           
   855                           ; 1 bytes @ 0x4
   856  0038                     	ds	3
   857  003B                     ??_lcd:
   858                           
   859                           ; 1 bytes @ 0x7
   860  003B                     	ds	3
   861  003E                     ??_main:
   862                           
   863                           ; 1 bytes @ 0xA
   864  003E                     	ds	1
   865                           
   866                           	psect	maintext
   867  049E                     __pmaintext:	
   868 ;;
   869 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   870 ;;
   871 ;; *************** function _main *****************
   872 ;; Defined at:
   873 ;;		line 115 in file "LCD.c"
   874 ;; Parameters:    Size  Location     Type
   875 ;;		None
   876 ;; Auto vars:     Size  Location     Type
   877 ;;		None
   878 ;; Return value:  Size  Location     Type
   879 ;;                  1    wreg      void 
   880 ;; Registers used:
   881 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   882 ;; Tracked objects:
   883 ;;		On entry : B00/0
   884 ;;		On exit  : 0/0
   885 ;;		Unchanged: 0/0
   886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   887 ;;      Params:         0       0       0       0       0
   888 ;;      Locals:         0       0       0       0       0
   889 ;;      Temps:          0       1       0       0       0
   890 ;;      Totals:         0       1       0       0       0
   891 ;;Total ram usage:        1 bytes
   892 ;; Hardware stack levels required when called:    6
   893 ;; This function calls:
   894 ;;		_Lcd_Init
   895 ;;		_USART_config
   896 ;;		_adc_config
   897 ;;		_adc_conversion1
   898 ;;		_adc_conversion2
   899 ;;		_initADC
   900 ;;		_interrup_config
   901 ;;		_lcd
   902 ;;		_osc_config
   903 ;;		_setup
   904 ;; This function is called by:
   905 ;;		Startup code after reset
   906 ;; This function uses a non-reentrant model
   907 ;;
   908                           
   909                           
   910                           ;psect for function _main
   911  049E                     _main:
   912  049E                     l1929:	
   913                           ;incstack = 0
   914                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   915                           
   916                           
   917                           ;LCD.c: 117:     PORTD = 0;
   918  049E  120A  118A  24EC  120A  118A  	fcall	_setup
   919  04A3                     l1931:
   920                           
   921                           ;LCD.c: 118:     TRISE = 0;
   922  04A3  120A  118A  2646  120A  118A  	fcall	_osc_config
   923  04A8                     l1933:
   924                           
   925                           ;LCD.c: 119:     PORTE = 0;
   926  04A8  120A  118A  263A  120A  118A  	fcall	_interrup_config
   927                           
   928                           ;LCD.c: 120: }
   929  04AD  120A  118A  22EF  120A  118A  	fcall	_Lcd_Init
   930  04B2                     l1935:
   931                           
   932                           ;LCD.c: 121: 
   933  04B2  120A  118A  2662  120A  118A  	fcall	_adc_config
   934  04B7                     l1937:
   935                           
   936                           ;LCD.c: 122: void interrup_config (void)
   937  04B7  120A  118A  2669  120A  118A  	fcall	_USART_config
   938  04BC                     l153:	
   939                           ;LCD.c: 123: {
   940                           
   941                           
   942                           ;LCD.c: 124:     INTCONbits.GIE = 1;;LCD.c: 125:     INTCONbits.PEIE = 1;
   943  04BC  120A  118A  20C8  120A  118A  	fcall	_lcd
   944  04C1                     l1939:
   945                           
   946                           ;LCD.c: 126:     INTCONbits.T0IE = 0;
   947  04C1  1283               	bcf	3,5	;RP0=0, select bank0
   948  04C2  1303               	bcf	3,6	;RP1=0, select bank0
   949  04C3  0822               	movf	_velocidad1,w
   950  04C4  3E01               	addlw	1
   951  04C5  00BE               	movwf	??_main
   952  04C6  083E               	movf	??_main,w
   953  04C7  00A2               	movwf	_velocidad1
   954  04C8                     l1941:
   955                           
   956                           ;LCD.c: 127:     INTCONbits.INTE = 0;
   957  04C8  0821               	movf	_velocidad2,w
   958  04C9  3E01               	addlw	1
   959  04CA  00BE               	movwf	??_main
   960  04CB  083E               	movf	??_main,w
   961  04CC  00A1               	movwf	_velocidad2
   962  04CD                     l1943:
   963                           
   964                           ;LCD.c: 128:     INTCONbits.RBIE = 0;
   965  04CD  0820               	movf	_velocidad3,w
   966  04CE  3E01               	addlw	1
   967  04CF  00BE               	movwf	??_main
   968  04D0  083E               	movf	??_main,w
   969  04D1  00A0               	movwf	_velocidad3
   970  04D2                     l1945:
   971                           
   972                           ;LCD.c: 129:     INTCONbits.T0IF = 0;
   973  04D2  3000               	movlw	0
   974  04D3  120A  118A  201F  120A  118A  	fcall	_initADC
   975  04D8                     l1947:
   976                           
   977                           ;LCD.c: 130:     INTCONbits.INTF = 0;
   978  04D8  120A  118A  25D1  120A  118A  	fcall	_adc_conversion1
   979  04DD                     l1949:
   980                           
   981                           ;LCD.c: 131:     INTCONbits.RBIF = 0;
   982  04DD  3001               	movlw	1
   983  04DE  120A  118A  201F  120A  118A  	fcall	_initADC
   984  04E3                     l1951:
   985                           
   986                           ;LCD.c: 132:     IOCB = 0b00000000;
   987  04E3  120A  118A  25B9  120A  118A  	fcall	_adc_conversion2
   988  04E8  2CBC               	goto	l153
   989  04E9  120A  118A  280C   	ljmp	start
   990  04EC                     __end_of_main:
   991                           
   992                           	psect	text1
   993  04EC                     __ptext1:	
   994 ;; *************** function _setup *****************
   995 ;; Defined at:
   996 ;;		line 140 in file "LCD.c"
   997 ;; Parameters:    Size  Location     Type
   998 ;;		None
   999 ;; Auto vars:     Size  Location     Type
  1000 ;;		None
  1001 ;; Return value:  Size  Location     Type
  1002 ;;                  1    wreg      void 
  1003 ;; Registers used:
  1004 ;;		wreg, status,2
  1005 ;; Tracked objects:
  1006 ;;		On entry : 0/0
  1007 ;;		On exit  : 0/0
  1008 ;;		Unchanged: 0/0
  1009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1010 ;;      Params:         0       0       0       0       0
  1011 ;;      Locals:         0       0       0       0       0
  1012 ;;      Temps:          0       0       0       0       0
  1013 ;;      Totals:         0       0       0       0       0
  1014 ;;Total ram usage:        0 bytes
  1015 ;; Hardware stack levels used:    1
  1016 ;; Hardware stack levels required when called:    2
  1017 ;; This function calls:
  1018 ;;		Nothing
  1019 ;; This function is called by:
  1020 ;;		_main
  1021 ;; This function uses a non-reentrant model
  1022 ;;
  1023                           
  1024                           
  1025                           ;psect for function _setup
  1026  04EC                     _setup:
  1027  04EC                     l1593:	
  1028                           ;incstack = 0
  1029                           ; Regs used in _setup: [wreg+status,2]
  1030                           
  1031                           
  1032                           ;LCD.c: 142:     OSCCONbits.LTS = 1;
  1033  04EC  1683               	bsf	3,5	;RP0=1, select bank3
  1034  04ED  1703               	bsf	3,6	;RP1=1, select bank3
  1035  04EE  1408               	bsf	8,0	;volatile
  1036                           
  1037                           ;LCD.c: 143:     OSCCONbits.SCS = 0;
  1038  04EF  1488               	bsf	8,1	;volatile
  1039  04F0                     l1595:
  1040                           
  1041                           ;LCD.c: 144: }
  1042  04F0  3001               	movlw	1
  1043  04F1  1683               	bsf	3,5	;RP0=1, select bank1
  1044  04F2  1303               	bcf	3,6	;RP1=0, select bank1
  1045  04F3  0085               	movwf	5	;volatile
  1046  04F4                     l1597:
  1047                           
  1048                           ;LCD.c: 145: 
  1049  04F4  1405               	bsf	5,0	;volatile
  1050  04F5                     l1599:
  1051                           
  1052                           ;LCD.c: 146: 
  1053  04F5  1485               	bsf	5,1	;volatile
  1054  04F6                     l1601:
  1055                           
  1056                           ;LCD.c: 147: 
  1057  04F6  1283               	bcf	3,5	;RP0=0, select bank0
  1058  04F7  1303               	bcf	3,6	;RP1=0, select bank0
  1059  04F8  0185               	clrf	5	;volatile
  1060  04F9                     l1603:
  1061                           
  1062                           ;LCD.c: 148: 
  1063  04F9  1683               	bsf	3,5	;RP0=1, select bank3
  1064  04FA  1703               	bsf	3,6	;RP1=1, select bank3
  1065  04FB  0189               	clrf	9	;volatile
  1066  04FC                     l1605:
  1067                           
  1068                           ;LCD.c: 149: 
  1069  04FC  1683               	bsf	3,5	;RP0=1, select bank1
  1070  04FD  1303               	bcf	3,6	;RP1=0, select bank1
  1071  04FE  0186               	clrf	6	;volatile
  1072  04FF                     l1607:
  1073                           
  1074                           ;LCD.c: 150: void adc_config (void)
  1075  04FF  1283               	bcf	3,5	;RP0=0, select bank0
  1076  0500  1303               	bcf	3,6	;RP1=0, select bank0
  1077  0501  0186               	clrf	6	;volatile
  1078  0502                     l1609:
  1079                           
  1080                           ;LCD.c: 151: {
  1081  0502  1683               	bsf	3,5	;RP0=1, select bank1
  1082  0503  1303               	bcf	3,6	;RP1=0, select bank1
  1083  0504  0187               	clrf	7	;volatile
  1084  0505                     l1611:
  1085                           
  1086                           ;LCD.c: 152:     initADC (0);
  1087  0505  1307               	bcf	7,6	;volatile
  1088  0506                     l1613:
  1089                           
  1090                           ;LCD.c: 153: }
  1091  0506  1787               	bsf	7,7	;volatile
  1092  0507                     l1615:
  1093                           
  1094                           ;LCD.c: 154: 
  1095  0507  1283               	bcf	3,5	;RP0=0, select bank0
  1096  0508  1303               	bcf	3,6	;RP1=0, select bank0
  1097  0509  0187               	clrf	7	;volatile
  1098  050A                     l1617:
  1099                           
  1100                           ;LCD.c: 155: void USART_config(void)
  1101  050A  1683               	bsf	3,5	;RP0=1, select bank1
  1102  050B  1303               	bcf	3,6	;RP1=0, select bank1
  1103  050C  0188               	clrf	8	;volatile
  1104  050D                     l1619:
  1105                           
  1106                           ;LCD.c: 156: {
  1107  050D  1283               	bcf	3,5	;RP0=0, select bank0
  1108  050E  1303               	bcf	3,6	;RP1=0, select bank0
  1109  050F  0188               	clrf	8	;volatile
  1110  0510                     l1621:
  1111                           
  1112                           ;LCD.c: 157:     USART_lib_config();
  1113  0510  1683               	bsf	3,5	;RP0=1, select bank1
  1114  0511  1303               	bcf	3,6	;RP1=0, select bank1
  1115  0512  0189               	clrf	9	;volatile
  1116  0513                     l1623:
  1117                           
  1118                           ;LCD.c: 158: }
  1119  0513  1283               	bcf	3,5	;RP0=0, select bank0
  1120  0514  1303               	bcf	3,6	;RP1=0, select bank0
  1121  0515  0189               	clrf	9	;volatile
  1122  0516                     l159:
  1123  0516  0008               	return
  1124  0517                     __end_of_setup:
  1125                           
  1126                           	psect	text2
  1127  0646                     __ptext2:	
  1128 ;; *************** function _osc_config *****************
  1129 ;; Defined at:
  1130 ;;		line 174 in file "LCD.c"
  1131 ;; Parameters:    Size  Location     Type
  1132 ;;		None
  1133 ;; Auto vars:     Size  Location     Type
  1134 ;;		None
  1135 ;; Return value:  Size  Location     Type
  1136 ;;                  1    wreg      void 
  1137 ;; Registers used:
  1138 ;;		None
  1139 ;; Tracked objects:
  1140 ;;		On entry : 0/0
  1141 ;;		On exit  : 0/0
  1142 ;;		Unchanged: 0/0
  1143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1144 ;;      Params:         0       0       0       0       0
  1145 ;;      Locals:         0       0       0       0       0
  1146 ;;      Temps:          0       0       0       0       0
  1147 ;;      Totals:         0       0       0       0       0
  1148 ;;Total ram usage:        0 bytes
  1149 ;; Hardware stack levels used:    1
  1150 ;; Hardware stack levels required when called:    2
  1151 ;; This function calls:
  1152 ;;		Nothing
  1153 ;; This function is called by:
  1154 ;;		_main
  1155 ;; This function uses a non-reentrant model
  1156 ;;
  1157                           
  1158                           
  1159                           ;psect for function _osc_config
  1160  0646                     _osc_config:
  1161  0646                     l1625:	
  1162                           ;incstack = 0
  1163                           ; Regs used in _osc_config: []
  1164                           
  1165                           
  1166                           ;LCD.c: 176: {
  1167  0646  1683               	bsf	3,5	;RP0=1, select bank1
  1168  0647  1303               	bcf	3,6	;RP1=0, select bank1
  1169  0648  170F               	bsf	15,6	;volatile
  1170                           
  1171                           ;LCD.c: 177:     ADCON0bits.GO_DONE = 1;
  1172  0649  168F               	bsf	15,5	;volatile
  1173                           
  1174                           ;LCD.c: 178:     _delay((unsigned long)((10)*(4000000/4000.0)));
  1175  064A  120F               	bcf	15,4	;volatile
  1176                           
  1177                           ;LCD.c: 179:     if (ADCON0bits.GO_DONE == 0)
  1178  064B  118F               	bcf	15,3	;volatile
  1179                           
  1180                           ;LCD.c: 180:     {
  1181  064C  110F               	bcf	15,2	;volatile
  1182                           
  1183                           ;LCD.c: 181:         ADCON0bits.GO_DONE = 1;
  1184  064D  148F               	bsf	15,1	;volatile
  1185                           
  1186                           ;LCD.c: 182:         adc_value2 = ADRESH;
  1187  064E  100F               	bcf	15,0	;volatile
  1188  064F                     l165:
  1189  064F  0008               	return
  1190  0650                     __end_of_osc_config:
  1191                           
  1192                           	psect	text3
  1193  00C8                     __ptext3:	
  1194 ;; *************** function _lcd *****************
  1195 ;; Defined at:
  1196 ;;		line 225 in file "LCD.c"
  1197 ;; Parameters:    Size  Location     Type
  1198 ;;		None
  1199 ;; Auto vars:     Size  Location     Type
  1200 ;;		None
  1201 ;; Return value:  Size  Location     Type
  1202 ;;                  1    wreg      void 
  1203 ;; Registers used:
  1204 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1205 ;; Tracked objects:
  1206 ;;		On entry : 0/0
  1207 ;;		On exit  : 0/0
  1208 ;;		Unchanged: 0/0
  1209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1210 ;;      Params:         0       0       0       0       0
  1211 ;;      Locals:         0       0       0       0       0
  1212 ;;      Temps:          0       3       0       0       0
  1213 ;;      Totals:         0       3       0       0       0
  1214 ;;Total ram usage:        3 bytes
  1215 ;; Hardware stack levels used:    1
  1216 ;; Hardware stack levels required when called:    5
  1217 ;; This function calls:
  1218 ;;		_Conversion1
  1219 ;;		_Conversion2
  1220 ;;		_Lcd_Set_Cursor
  1221 ;;		_Lcd_Write_Char
  1222 ;;		_Lcd_Write_String
  1223 ;;		___awdiv
  1224 ;;		___awmod
  1225 ;;		_contador_lcd
  1226 ;; This function is called by:
  1227 ;;		_main
  1228 ;; This function uses a non-reentrant model
  1229 ;;
  1230                           
  1231                           
  1232                           ;psect for function _lcd
  1233  00C8                     _lcd:
  1234  00C8                     l1907:	
  1235                           ;incstack = 0
  1236                           ; Regs used in _lcd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1237                           
  1238                           
  1239                           ;LCD.c: 227: {
  1240  00C8  01F7               	clrf	Lcd_Set_Cursor@b
  1241  00C9  0AF7               	incf	Lcd_Set_Cursor@b,f
  1242  00CA  3001               	movlw	1
  1243  00CB  120A  118A  2540  120A  118A  	fcall	_Lcd_Set_Cursor
  1244  00D0                     l1909:
  1245                           
  1246                           ;LCD.c: 228:     voltajez = adc_value2 * 2;
  1247  00D0  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1248  00D1  120A  118A  2517  120A  118A  	fcall	_Lcd_Write_String
  1249  00D6                     l1911:
  1250                           
  1251                           ;LCD.c: 229:     unidadz = voltajez / 100;
  1252  00D6  01F7               	clrf	Lcd_Set_Cursor@b
  1253  00D7  3002               	movlw	2
  1254  00D8  120A  118A  2540  120A  118A  	fcall	_Lcd_Set_Cursor
  1255  00DD                     l1913:
  1256                           
  1257                           ;LCD.c: 230:     x1z = voltajez % 100;
  1258  00DD  120A  118A  21F7  120A  118A  	fcall	_Conversion1
  1259  00E2                     l1915:
  1260                           
  1261                           ;LCD.c: 231:     x2z = x1z / 10;
  1262  00E2  3006               	movlw	6
  1263  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  1264  00E4  1303               	bcf	3,6	;RP1=0, select bank0
  1265  00E5  00BB               	movwf	??_lcd
  1266  00E6  083B               	movf	??_lcd,w
  1267  00E7  00F7               	movwf	Lcd_Set_Cursor@b
  1268  00E8  3002               	movlw	2
  1269  00E9  120A  118A  2540  120A  118A  	fcall	_Lcd_Set_Cursor
  1270  00EE                     l1917:
  1271                           
  1272                           ;LCD.c: 232:     y1z = x1z % 10;
  1273  00EE  120A  118A  2163  120A  118A  	fcall	_Conversion2
  1274  00F3                     l1919:
  1275                           
  1276                           ;LCD.c: 233:     y2z = y1z / 1;
  1277  00F3  120A  118A  2584  120A  118A  	fcall	_contador_lcd
  1278  00F8                     l1921:
  1279                           
  1280                           ;LCD.c: 234:     Lcd_Write_Char(unidadz+48);
  1281  00F8  300A               	movlw	10
  1282  00F9  0278               	subwf	_contador,w
  1283  00FA  1803               	skipnc
  1284  00FB  28FD               	goto	u831
  1285  00FC  28FE               	goto	u830
  1286  00FD                     u831:
  1287  00FD  2912               	goto	l1925
  1288  00FE                     u830:
  1289  00FE                     l1923:
  1290                           
  1291                           ;LCD.c: 235:     Lcd_Write_Char(46);;LCD.c: 236:     Lcd_Write_Char(x2z+48);
  1292  00FE  300E               	movlw	14
  1293  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  1294  0100  1303               	bcf	3,6	;RP1=0, select bank0
  1295  0101  00BB               	movwf	??_lcd
  1296  0102  083B               	movf	??_lcd,w
  1297  0103  00F7               	movwf	Lcd_Set_Cursor@b
  1298  0104  3002               	movlw	2
  1299  0105  120A  118A  2540  120A  118A  	fcall	_Lcd_Set_Cursor
  1300                           
  1301                           ;LCD.c: 237:     Lcd_Write_Char(y2z+48);
  1302  010A  0878               	movf	_contador,w
  1303  010B  3E30               	addlw	48
  1304  010C  120A  118A  2618  120A  118A  	fcall	_Lcd_Write_Char
  1305                           
  1306                           ;LCD.c: 238:     Lcd_Write_Char(86);
  1307  0111  2962               	goto	l185
  1308  0112                     l1925:
  1309  0112  300A               	movlw	10
  1310  0113  0278               	subwf	_contador,w
  1311  0114  1C03               	skipc
  1312  0115  2917               	goto	u841
  1313  0116  2918               	goto	u840
  1314  0117                     u841:
  1315  0117  2962               	goto	l185
  1316  0118                     u840:
  1317  0118                     l1927:
  1318                           
  1319                           ;LCD.c: 240:     virtual_display3();;LCD.c: 241: }
  1320  0118  300A               	movlw	10
  1321  0119  00F3               	movwf	___awdiv@divisor
  1322  011A  3000               	movlw	0
  1323  011B  00F4               	movwf	___awdiv@divisor+1
  1324  011C  0878               	movf	_contador,w
  1325  011D  1283               	bcf	3,5	;RP0=0, select bank0
  1326  011E  1303               	bcf	3,6	;RP1=0, select bank0
  1327  011F  00BB               	movwf	??_lcd
  1328  0120  01BC               	clrf	??_lcd+1
  1329  0121  083B               	movf	??_lcd,w
  1330  0122  00F5               	movwf	___awdiv@dividend
  1331  0123  083C               	movf	??_lcd+1,w
  1332  0124  00F6               	movwf	___awdiv@dividend+1
  1333  0125  120A  118A  2286  120A  118A  	fcall	___awdiv
  1334  012A  0873               	movf	?___awdiv,w
  1335  012B  1283               	bcf	3,5	;RP0=0, select bank0
  1336  012C  1303               	bcf	3,6	;RP1=0, select bank0
  1337  012D  00BD               	movwf	??_lcd+2
  1338  012E  083D               	movf	??_lcd+2,w
  1339  012F  00A5               	movwf	_w1
  1340                           
  1341                           ;LCD.c: 242: 
  1342  0130  300A               	movlw	10
  1343  0131  00F3               	movwf	___awmod@divisor
  1344  0132  3000               	movlw	0
  1345  0133  00F4               	movwf	___awmod@divisor+1
  1346  0134  0878               	movf	_contador,w
  1347  0135  00BB               	movwf	??_lcd
  1348  0136  01BC               	clrf	??_lcd+1
  1349  0137  083B               	movf	??_lcd,w
  1350  0138  00F5               	movwf	___awmod@dividend
  1351  0139  083C               	movf	??_lcd+1,w
  1352  013A  00F6               	movwf	___awmod@dividend+1
  1353  013B  120A  118A  234C  120A  118A  	fcall	___awmod
  1354  0140  0873               	movf	?___awmod,w
  1355  0141  1283               	bcf	3,5	;RP0=0, select bank0
  1356  0142  1303               	bcf	3,6	;RP1=0, select bank0
  1357  0143  00BD               	movwf	??_lcd+2
  1358  0144  083D               	movf	??_lcd+2,w
  1359  0145  00A4               	movwf	_w2
  1360                           
  1361                           ;LCD.c: 243: void virtual_display1 (void)
  1362  0146  300D               	movlw	13
  1363  0147  00BB               	movwf	??_lcd
  1364  0148  083B               	movf	??_lcd,w
  1365  0149  00F7               	movwf	Lcd_Set_Cursor@b
  1366  014A  3002               	movlw	2
  1367  014B  120A  118A  2540  120A  118A  	fcall	_Lcd_Set_Cursor
  1368                           
  1369                           ;LCD.c: 244: {
  1370  0150  1283               	bcf	3,5	;RP0=0, select bank0
  1371  0151  1303               	bcf	3,6	;RP1=0, select bank0
  1372  0152  0825               	movf	_w1,w
  1373  0153  3E30               	addlw	48
  1374  0154  120A  118A  2618  120A  118A  	fcall	_Lcd_Write_Char
  1375                           
  1376                           ;LCD.c: 245:     if (velocidad1 > 15)
  1377  0159  1283               	bcf	3,5	;RP0=0, select bank0
  1378  015A  1303               	bcf	3,6	;RP1=0, select bank0
  1379  015B  0824               	movf	_w2,w
  1380  015C  3E30               	addlw	48
  1381  015D  120A  118A  2618  120A  118A  	fcall	_Lcd_Write_Char
  1382  0162                     l185:
  1383  0162  0008               	return
  1384  0163                     __end_of_lcd:
  1385                           
  1386                           	psect	text4
  1387  0584                     __ptext4:	
  1388 ;; *************** function _contador_lcd *****************
  1389 ;; Defined at:
  1390 ;;		line 343 in file "LCD.c"
  1391 ;; Parameters:    Size  Location     Type
  1392 ;;		None
  1393 ;; Auto vars:     Size  Location     Type
  1394 ;;		None
  1395 ;; Return value:  Size  Location     Type
  1396 ;;                  1    wreg      void 
  1397 ;; Registers used:
  1398 ;;		wreg, status,2, status,0
  1399 ;; Tracked objects:
  1400 ;;		On entry : 0/0
  1401 ;;		On exit  : 0/0
  1402 ;;		Unchanged: 0/0
  1403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1404 ;;      Params:         0       0       0       0       0
  1405 ;;      Locals:         0       0       0       0       0
  1406 ;;      Temps:          1       0       0       0       0
  1407 ;;      Totals:         1       0       0       0       0
  1408 ;;Total ram usage:        1 bytes
  1409 ;; Hardware stack levels used:    1
  1410 ;; Hardware stack levels required when called:    2
  1411 ;; This function calls:
  1412 ;;		Nothing
  1413 ;; This function is called by:
  1414 ;;		_lcd
  1415 ;; This function uses a non-reentrant model
  1416 ;;
  1417                           
  1418                           
  1419                           ;psect for function _contador_lcd
  1420  0584                     _contador_lcd:
  1421  0584                     l1573:	
  1422                           ;incstack = 0
  1423                           ; Regs used in _contador_lcd: [wreg+status,2+status,0]
  1424                           
  1425  0584  302B               	movlw	43
  1426  0585  1283               	bcf	3,5	;RP0=0, select bank0
  1427  0586  1303               	bcf	3,6	;RP1=0, select bank0
  1428  0587  0626               	xorwf	_leer,w
  1429  0588  1D03               	btfss	3,2
  1430  0589  2D8B               	goto	u631
  1431  058A  2D8C               	goto	u630
  1432  058B                     u631:
  1433  058B  2D93               	goto	l1579
  1434  058C                     u630:
  1435  058C                     l1575:
  1436  058C  0878               	movf	_contador,w
  1437  058D  3E01               	addlw	1
  1438  058E  00F3               	movwf	??_contador_lcd
  1439  058F  0873               	movf	??_contador_lcd,w
  1440  0590  00F8               	movwf	_contador
  1441  0591                     l1577:
  1442  0591  01A6               	clrf	_leer
  1443  0592  2D9F               	goto	l211
  1444  0593                     l1579:
  1445  0593  302D               	movlw	45
  1446  0594  0626               	xorwf	_leer,w
  1447  0595  1D03               	btfss	3,2
  1448  0596  2D98               	goto	u641
  1449  0597  2D99               	goto	u640
  1450  0598                     u641:
  1451  0598  2D9F               	goto	l211
  1452  0599                     u640:
  1453  0599                     l1581:
  1454  0599  0878               	movf	_contador,w
  1455  059A  3EFF               	addlw	255
  1456  059B  00F3               	movwf	??_contador_lcd
  1457  059C  0873               	movf	??_contador_lcd,w
  1458  059D  00F8               	movwf	_contador
  1459  059E  2D91               	goto	l1577
  1460  059F                     l211:
  1461  059F  0008               	return
  1462  05A0                     __end_of_contador_lcd:
  1463                           
  1464                           	psect	text5
  1465  0517                     __ptext5:	
  1466 ;; *************** function _Lcd_Write_String *****************
  1467 ;; Defined at:
  1468 ;;		line 77 in file "LCD_8bits.c"
  1469 ;; Parameters:    Size  Location     Type
  1470 ;;  a               1    wreg     PTR unsigned char 
  1471 ;;		 -> STR_1(17), 
  1472 ;; Auto vars:     Size  Location     Type
  1473 ;;  a               1    0[BANK0 ] PTR unsigned char 
  1474 ;;		 -> STR_1(17), 
  1475 ;;  i               2    1[BANK0 ] int 
  1476 ;; Return value:  Size  Location     Type
  1477 ;;                  1    wreg      void 
  1478 ;; Registers used:
  1479 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1480 ;; Tracked objects:
  1481 ;;		On entry : 0/0
  1482 ;;		On exit  : 0/0
  1483 ;;		Unchanged: 0/0
  1484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1485 ;;      Params:         0       0       0       0       0
  1486 ;;      Locals:         0       3       0       0       0
  1487 ;;      Temps:          0       0       0       0       0
  1488 ;;      Totals:         0       3       0       0       0
  1489 ;;Total ram usage:        3 bytes
  1490 ;; Hardware stack levels used:    1
  1491 ;; Hardware stack levels required when called:    4
  1492 ;; This function calls:
  1493 ;;		_Lcd_Write_Char
  1494 ;; This function is called by:
  1495 ;;		_lcd
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           
  1499                           
  1500                           ;psect for function _Lcd_Write_String
  1501  0517                     _Lcd_Write_String:
  1502                           
  1503                           ;incstack = 0
  1504                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1505                           ;Lcd_Write_String@a stored from wreg
  1506  0517  1283               	bcf	3,5	;RP0=0, select bank0
  1507  0518  1303               	bcf	3,6	;RP1=0, select bank0
  1508  0519  00B4               	movwf	Lcd_Write_String@a
  1509  051A                     l1827:
  1510                           
  1511                           ;LCD_8bits.c: 77: void Lcd_Write_String(char *a);LCD_8bits.c: 78: {;LCD_8bits.c: 79:    
      +                           int i;;LCD_8bits.c: 80:     for (i = 0; a[i] != '\0'; i++)
  1512  051A  01B5               	clrf	Lcd_Write_String@i
  1513  051B  01B6               	clrf	Lcd_Write_String@i+1
  1514  051C  2D32               	goto	l1833
  1515  051D                     l1829:
  1516                           
  1517                           ;LCD_8bits.c: 81:         Lcd_Write_Char(a[i]);
  1518  051D  0835               	movf	Lcd_Write_String@i,w
  1519  051E  0734               	addwf	Lcd_Write_String@a,w
  1520  051F  0084               	movwf	4
  1521  0520  120A  118A  2601  120A  118A  	fcall	stringdir
  1522  0525  120A  118A  2618  120A  118A  	fcall	_Lcd_Write_Char
  1523  052A                     l1831:
  1524  052A  3001               	movlw	1
  1525  052B  1283               	bcf	3,5	;RP0=0, select bank0
  1526  052C  1303               	bcf	3,6	;RP1=0, select bank0
  1527  052D  07B5               	addwf	Lcd_Write_String@i,f
  1528  052E  1803               	skipnc
  1529  052F  0AB6               	incf	Lcd_Write_String@i+1,f
  1530  0530  3000               	movlw	0
  1531  0531  07B6               	addwf	Lcd_Write_String@i+1,f
  1532  0532                     l1833:
  1533  0532  0835               	movf	Lcd_Write_String@i,w
  1534  0533  0734               	addwf	Lcd_Write_String@a,w
  1535  0534  0084               	movwf	4
  1536  0535  120A  118A  2601  120A  118A  	fcall	stringdir
  1537  053A  3A00               	xorlw	0
  1538  053B  1D03               	skipz
  1539  053C  2D3E               	goto	u821
  1540  053D  2D3F               	goto	u820
  1541  053E                     u821:
  1542  053E  2D1D               	goto	l1829
  1543  053F                     u820:
  1544  053F                     l277:
  1545  053F  0008               	return
  1546  0540                     __end_of_Lcd_Write_String:
  1547                           
  1548                           	psect	text6
  1549  0540                     __ptext6:	
  1550 ;; *************** function _Lcd_Set_Cursor *****************
  1551 ;; Defined at:
  1552 ;;		line 62 in file "LCD_8bits.c"
  1553 ;; Parameters:    Size  Location     Type
  1554 ;;  a               1    wreg     unsigned char 
  1555 ;;  b               1    7[COMMON] unsigned char 
  1556 ;; Auto vars:     Size  Location     Type
  1557 ;;  a               1    1[BANK0 ] unsigned char 
  1558 ;;  temp            1    2[BANK0 ] unsigned char 
  1559 ;; Return value:  Size  Location     Type
  1560 ;;                  1    wreg      void 
  1561 ;; Registers used:
  1562 ;;		wreg, status,2, status,0, pclath, cstack
  1563 ;; Tracked objects:
  1564 ;;		On entry : 0/0
  1565 ;;		On exit  : 0/0
  1566 ;;		Unchanged: 0/0
  1567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1568 ;;      Params:         1       0       0       0       0
  1569 ;;      Locals:         0       2       0       0       0
  1570 ;;      Temps:          0       1       0       0       0
  1571 ;;      Totals:         1       3       0       0       0
  1572 ;;Total ram usage:        4 bytes
  1573 ;; Hardware stack levels used:    1
  1574 ;; Hardware stack levels required when called:    4
  1575 ;; This function calls:
  1576 ;;		_Lcd_Cmd
  1577 ;; This function is called by:
  1578 ;;		_lcd
  1579 ;; This function uses a non-reentrant model
  1580 ;;
  1581                           
  1582                           
  1583                           ;psect for function _Lcd_Set_Cursor
  1584  0540                     _Lcd_Set_Cursor:
  1585                           
  1586                           ;incstack = 0
  1587                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1588                           ;Lcd_Set_Cursor@a stored from wreg
  1589  0540  1283               	bcf	3,5	;RP0=0, select bank0
  1590  0541  1303               	bcf	3,6	;RP1=0, select bank0
  1591  0542  00B5               	movwf	Lcd_Set_Cursor@a
  1592  0543                     l1815:
  1593                           
  1594                           ;LCD_8bits.c: 62: void Lcd_Set_Cursor(char a, char b);LCD_8bits.c: 63: {;LCD_8bits.c: 64
      +                          :     char temp;;LCD_8bits.c: 65:     if (a == 1)
  1595  0543  0335               	decf	Lcd_Set_Cursor@a,w
  1596  0544  1D03               	btfss	3,2
  1597  0545  2D47               	goto	u801
  1598  0546  2D48               	goto	u800
  1599  0547                     u801:
  1600  0547  2D54               	goto	l1821
  1601  0548                     u800:
  1602  0548                     l1817:
  1603                           
  1604                           ;LCD_8bits.c: 66:     {;LCD_8bits.c: 67:         temp = 0x80 + b;
  1605  0548  0877               	movf	Lcd_Set_Cursor@b,w
  1606  0549  3E80               	addlw	128
  1607  054A  00B4               	movwf	??_Lcd_Set_Cursor
  1608  054B  0834               	movf	??_Lcd_Set_Cursor,w
  1609  054C  00B6               	movwf	Lcd_Set_Cursor@temp
  1610  054D                     l1819:
  1611                           
  1612                           ;LCD_8bits.c: 68:         Lcd_Cmd(temp);
  1613  054D  0836               	movf	Lcd_Set_Cursor@temp,w
  1614  054E  120A  118A  25A0  120A  118A  	fcall	_Lcd_Cmd
  1615                           
  1616                           ;LCD_8bits.c: 69:     }
  1617  0553  2D65               	goto	l271
  1618  0554                     l1821:
  1619  0554  3002               	movlw	2
  1620  0555  0635               	xorwf	Lcd_Set_Cursor@a,w
  1621  0556  1D03               	btfss	3,2
  1622  0557  2D59               	goto	u811
  1623  0558  2D5A               	goto	u810
  1624  0559                     u811:
  1625  0559  2D65               	goto	l271
  1626  055A                     u810:
  1627  055A                     l1823:
  1628                           
  1629                           ;LCD_8bits.c: 71:     {;LCD_8bits.c: 72:         temp = 0xC0 + b;
  1630  055A  0877               	movf	Lcd_Set_Cursor@b,w
  1631  055B  3EC0               	addlw	192
  1632  055C  00B4               	movwf	??_Lcd_Set_Cursor
  1633  055D  0834               	movf	??_Lcd_Set_Cursor,w
  1634  055E  00B6               	movwf	Lcd_Set_Cursor@temp
  1635  055F                     l1825:
  1636                           
  1637                           ;LCD_8bits.c: 73:         Lcd_Cmd(temp);
  1638  055F  0836               	movf	Lcd_Set_Cursor@temp,w
  1639  0560  120A  118A  25A0  120A  118A  	fcall	_Lcd_Cmd
  1640  0565                     l271:
  1641  0565  0008               	return
  1642  0566                     __end_of_Lcd_Set_Cursor:
  1643                           
  1644                           	psect	text7
  1645  0163                     __ptext7:	
  1646 ;; *************** function _Conversion2 *****************
  1647 ;; Defined at:
  1648 ;;		line 265 in file "LCD.c"
  1649 ;; Parameters:    Size  Location     Type
  1650 ;;		None
  1651 ;; Auto vars:     Size  Location     Type
  1652 ;;		None
  1653 ;; Return value:  Size  Location     Type
  1654 ;;                  1    wreg      void 
  1655 ;; Registers used:
  1656 ;;		wreg, status,2, status,0, pclath, cstack
  1657 ;; Tracked objects:
  1658 ;;		On entry : 0/0
  1659 ;;		On exit  : 0/0
  1660 ;;		Unchanged: 0/0
  1661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1662 ;;      Params:         0       0       0       0       0
  1663 ;;      Locals:         0       0       0       0       0
  1664 ;;      Temps:          0       3       0       0       0
  1665 ;;      Totals:         0       3       0       0       0
  1666 ;;Total ram usage:        3 bytes
  1667 ;; Hardware stack levels used:    1
  1668 ;; Hardware stack levels required when called:    4
  1669 ;; This function calls:
  1670 ;;		_Lcd_Write_Char
  1671 ;;		___awdiv
  1672 ;;		___awmod
  1673 ;;		_virtual_display2
  1674 ;;		_virtual_display3
  1675 ;; This function is called by:
  1676 ;;		_lcd
  1677 ;; This function uses a non-reentrant model
  1678 ;;
  1679                           
  1680                           
  1681                           ;psect for function _Conversion2
  1682  0163                     _Conversion2:
  1683  0163                     l1859:	
  1684                           ;incstack = 0
  1685                           ; Regs used in _Conversion2: [wreg+status,2+status,0+pclath+cstack]
  1686                           
  1687                           
  1688                           ;LCD.c: 267:         escribir_char (58);
  1689  0163  1283               	bcf	3,5	;RP0=0, select bank0
  1690  0164  1303               	bcf	3,6	;RP1=0, select bank0
  1691  0165  0831               	movf	_adc_value2,w
  1692  0166  00B8               	movwf	??_Conversion2
  1693  0167  0738               	addwf	??_Conversion2,w
  1694  0168  00B9               	movwf	??_Conversion2+1
  1695  0169  0839               	movf	??_Conversion2+1,w
  1696  016A  00AC               	movwf	_voltajez
  1697  016B                     l1861:
  1698                           
  1699                           ;LCD.c: 268:         escribir_char (unidadz+48);
  1700  016B  3064               	movlw	100
  1701  016C  00F3               	movwf	___awdiv@divisor
  1702  016D  3000               	movlw	0
  1703  016E  00F4               	movwf	___awdiv@divisor+1
  1704  016F  082C               	movf	_voltajez,w
  1705  0170  00B8               	movwf	??_Conversion2
  1706  0171  01B9               	clrf	??_Conversion2+1
  1707  0172  0838               	movf	??_Conversion2,w
  1708  0173  00F5               	movwf	___awdiv@dividend
  1709  0174  0839               	movf	??_Conversion2+1,w
  1710  0175  00F6               	movwf	___awdiv@dividend+1
  1711  0176  120A  118A  2286  120A  118A  	fcall	___awdiv
  1712  017B  0873               	movf	?___awdiv,w
  1713  017C  1283               	bcf	3,5	;RP0=0, select bank0
  1714  017D  1303               	bcf	3,6	;RP1=0, select bank0
  1715  017E  00BA               	movwf	??_Conversion2+2
  1716  017F  083A               	movf	??_Conversion2+2,w
  1717  0180  00AB               	movwf	_unidadz
  1718  0181                     l1863:
  1719                           
  1720                           ;LCD.c: 269:         escribir_char (46);
  1721  0181  3064               	movlw	100
  1722  0182  00F3               	movwf	___awmod@divisor
  1723  0183  3000               	movlw	0
  1724  0184  00F4               	movwf	___awmod@divisor+1
  1725  0185  082C               	movf	_voltajez,w
  1726  0186  00B8               	movwf	??_Conversion2
  1727  0187  01B9               	clrf	??_Conversion2+1
  1728  0188  0838               	movf	??_Conversion2,w
  1729  0189  00F5               	movwf	___awmod@dividend
  1730  018A  0839               	movf	??_Conversion2+1,w
  1731  018B  00F6               	movwf	___awmod@dividend+1
  1732  018C  120A  118A  234C  120A  118A  	fcall	___awmod
  1733  0191  0873               	movf	?___awmod,w
  1734  0192  1283               	bcf	3,5	;RP0=0, select bank0
  1735  0193  1303               	bcf	3,6	;RP1=0, select bank0
  1736  0194  00BA               	movwf	??_Conversion2+2
  1737  0195  083A               	movf	??_Conversion2+2,w
  1738  0196  00AA               	movwf	_x1z
  1739  0197                     l1865:
  1740                           
  1741                           ;LCD.c: 270:         escribir_char (x2z+48);
  1742  0197  300A               	movlw	10
  1743  0198  00F3               	movwf	___awdiv@divisor
  1744  0199  3000               	movlw	0
  1745  019A  00F4               	movwf	___awdiv@divisor+1
  1746  019B  082A               	movf	_x1z,w
  1747  019C  00B8               	movwf	??_Conversion2
  1748  019D  01B9               	clrf	??_Conversion2+1
  1749  019E  0838               	movf	??_Conversion2,w
  1750  019F  00F5               	movwf	___awdiv@dividend
  1751  01A0  0839               	movf	??_Conversion2+1,w
  1752  01A1  00F6               	movwf	___awdiv@dividend+1
  1753  01A2  120A  118A  2286  120A  118A  	fcall	___awdiv
  1754  01A7  0873               	movf	?___awdiv,w
  1755  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  1756  01A9  1303               	bcf	3,6	;RP1=0, select bank0
  1757  01AA  00BA               	movwf	??_Conversion2+2
  1758  01AB  083A               	movf	??_Conversion2+2,w
  1759  01AC  00A8               	movwf	_x2z
  1760  01AD                     l1867:
  1761                           
  1762                           ;LCD.c: 271:         escribir_char (y2z+48);
  1763  01AD  300A               	movlw	10
  1764  01AE  00F3               	movwf	___awmod@divisor
  1765  01AF  3000               	movlw	0
  1766  01B0  00F4               	movwf	___awmod@divisor+1
  1767  01B1  082A               	movf	_x1z,w
  1768  01B2  00B8               	movwf	??_Conversion2
  1769  01B3  01B9               	clrf	??_Conversion2+1
  1770  01B4  0838               	movf	??_Conversion2,w
  1771  01B5  00F5               	movwf	___awmod@dividend
  1772  01B6  0839               	movf	??_Conversion2+1,w
  1773  01B7  00F6               	movwf	___awmod@dividend+1
  1774  01B8  120A  118A  234C  120A  118A  	fcall	___awmod
  1775  01BD  0873               	movf	?___awmod,w
  1776  01BE  1283               	bcf	3,5	;RP0=0, select bank0
  1777  01BF  1303               	bcf	3,6	;RP1=0, select bank0
  1778  01C0  00BA               	movwf	??_Conversion2+2
  1779  01C1  083A               	movf	??_Conversion2+2,w
  1780  01C2  00A9               	movwf	_y1z
  1781  01C3                     l1869:
  1782                           
  1783                           ;LCD.c: 272:         escribir_char (86);
  1784  01C3  0829               	movf	_y1z,w
  1785  01C4  00B8               	movwf	??_Conversion2
  1786  01C5  0838               	movf	??_Conversion2,w
  1787  01C6  00A7               	movwf	_y2z
  1788  01C7                     l1871:
  1789                           
  1790                           ;LCD.c: 273:         escribir_char (32);
  1791  01C7  082B               	movf	_unidadz,w
  1792  01C8  3E30               	addlw	48
  1793  01C9  120A  118A  2618  120A  118A  	fcall	_Lcd_Write_Char
  1794  01CE                     l1873:
  1795                           
  1796                           ;LCD.c: 274:         escribir_char (32);
  1797  01CE  302E               	movlw	46
  1798  01CF  120A  118A  2618  120A  118A  	fcall	_Lcd_Write_Char
  1799  01D4                     l1875:
  1800                           
  1801                           ;LCD.c: 275:         velocidad2 = 0;
  1802  01D4  1283               	bcf	3,5	;RP0=0, select bank0
  1803  01D5  1303               	bcf	3,6	;RP1=0, select bank0
  1804  01D6  0828               	movf	_x2z,w
  1805  01D7  3E30               	addlw	48
  1806  01D8  120A  118A  2618  120A  118A  	fcall	_Lcd_Write_Char
  1807  01DD                     l1877:
  1808                           
  1809                           ;LCD.c: 276:     }
  1810  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  1811  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  1812  01DF  0827               	movf	_y2z,w
  1813  01E0  3E30               	addlw	48
  1814  01E1  120A  118A  2618  120A  118A  	fcall	_Lcd_Write_Char
  1815  01E6                     l1879:
  1816                           
  1817                           ;LCD.c: 277: }
  1818  01E6  3056               	movlw	86
  1819  01E7  120A  118A  2618  120A  118A  	fcall	_Lcd_Write_Char
  1820  01EC                     l1881:
  1821                           
  1822                           ;LCD.c: 278: 
  1823  01EC  120A  118A  23FE  120A  118A  	fcall	_virtual_display2
  1824  01F1                     l1883:
  1825                           
  1826                           ;LCD.c: 279: void virtual_display3 (void)
  1827  01F1  120A  118A  23A7  120A  118A  	fcall	_virtual_display3
  1828  01F6                     l191:
  1829  01F6  0008               	return
  1830  01F7                     __end_of_Conversion2:
  1831                           
  1832                           	psect	text8
  1833  03A7                     __ptext8:	
  1834 ;; *************** function _virtual_display3 *****************
  1835 ;; Defined at:
  1836 ;;		line 318 in file "LCD.c"
  1837 ;; Parameters:    Size  Location     Type
  1838 ;;		None
  1839 ;; Auto vars:     Size  Location     Type
  1840 ;;		None
  1841 ;; Return value:  Size  Location     Type
  1842 ;;                  1    wreg      void 
  1843 ;; Registers used:
  1844 ;;		wreg, status,2, status,0, pclath, cstack
  1845 ;; Tracked objects:
  1846 ;;		On entry : 0/0
  1847 ;;		On exit  : 0/0
  1848 ;;		Unchanged: 0/0
  1849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1850 ;;      Params:         0       0       0       0       0
  1851 ;;      Locals:         0       0       0       0       0
  1852 ;;      Temps:          0       0       0       0       0
  1853 ;;      Totals:         0       0       0       0       0
  1854 ;;Total ram usage:        0 bytes
  1855 ;; Hardware stack levels used:    1
  1856 ;; Hardware stack levels required when called:    3
  1857 ;; This function calls:
  1858 ;;		_escribir_char
  1859 ;; This function is called by:
  1860 ;;		_Conversion2
  1861 ;; This function uses a non-reentrant model
  1862 ;;
  1863                           
  1864                           
  1865                           ;psect for function _virtual_display3
  1866  03A7                     _virtual_display3:
  1867  03A7                     l1349:	
  1868                           ;incstack = 0
  1869                           ; Regs used in _virtual_display3: [wreg+status,2+status,0+pclath+cstack]
  1870                           
  1871                           
  1872                           ;LCD.c: 320: {
  1873  03A7  3010               	movlw	16
  1874  03A8  1283               	bcf	3,5	;RP0=0, select bank0
  1875  03A9  1303               	bcf	3,6	;RP1=0, select bank0
  1876  03AA  0220               	subwf	_velocidad3,w
  1877  03AB  1C03               	skipc
  1878  03AC  2BAE               	goto	u391
  1879  03AD  2BAF               	goto	u390
  1880  03AE                     u391:
  1881  03AE  2BFD               	goto	l205
  1882  03AF                     u390:
  1883  03AF                     l1351:
  1884                           
  1885                           ;LCD.c: 321:     TXREG = valor;;LCD.c: 322:     while (PIR1bits.TXIF == 0);
  1886  03AF  300A               	movlw	10
  1887  03B0  0278               	subwf	_contador,w
  1888  03B1  1803               	skipnc
  1889  03B2  2BB4               	goto	u401
  1890  03B3  2BB5               	goto	u400
  1891  03B4                     u401:
  1892  03B4  2BD8               	goto	l1357
  1893  03B5                     u400:
  1894  03B5                     l1353:
  1895                           
  1896                           ;LCD.c: 323: };LCD.c: 324: 
  1897  03B5  3043               	movlw	67
  1898  03B6  120A  118A  2650  120A  118A  	fcall	_escribir_char
  1899                           
  1900                           ;LCD.c: 325: char leer_char(void)
  1901  03BB  303A               	movlw	58
  1902  03BC  120A  118A  2650  120A  118A  	fcall	_escribir_char
  1903                           
  1904                           ;LCD.c: 326: {
  1905  03C1  3030               	movlw	48
  1906  03C2  120A  118A  2650  120A  118A  	fcall	_escribir_char
  1907                           
  1908                           ;LCD.c: 327:     if (RCSTAbits.OERR ==0)
  1909  03C7  0878               	movf	_contador,w
  1910  03C8  3E30               	addlw	48
  1911  03C9  120A  118A  2650  120A  118A  	fcall	_escribir_char
  1912                           
  1913                           ;LCD.c: 328:     {
  1914  03CE  300D               	movlw	13
  1915  03CF  120A  118A  2650  120A  118A  	fcall	_escribir_char
  1916  03D4                     l1355:
  1917                           
  1918                           ;LCD.c: 329:         CREN = 0;
  1919  03D4  1283               	bcf	3,5	;RP0=0, select bank0
  1920  03D5  1303               	bcf	3,6	;RP1=0, select bank0
  1921  03D6  01A0               	clrf	_velocidad3
  1922                           
  1923                           ;LCD.c: 330:         __nop();
  1924  03D7  2BFD               	goto	l205
  1925  03D8                     l1357:
  1926                           
  1927                           ;LCD.c: 332:     };LCD.c: 333:     return (RCREG);
  1928  03D8  3043               	movlw	67
  1929  03D9  120A  118A  2650  120A  118A  	fcall	_escribir_char
  1930                           
  1931                           ;LCD.c: 334: }
  1932  03DE  303A               	movlw	58
  1933  03DF  120A  118A  2650  120A  118A  	fcall	_escribir_char
  1934  03E4  1283               	bcf	3,5	;RP0=0, select bank0
  1935  03E5  1303               	bcf	3,6	;RP1=0, select bank0
  1936  03E6  0825               	movf	_w1,w
  1937  03E7  3E30               	addlw	48
  1938  03E8  120A  118A  2650  120A  118A  	fcall	_escribir_char
  1939  03ED  1283               	bcf	3,5	;RP0=0, select bank0
  1940  03EE  1303               	bcf	3,6	;RP1=0, select bank0
  1941  03EF  0824               	movf	_w2,w
  1942  03F0  3E30               	addlw	48
  1943  03F1  120A  118A  2650  120A  118A  	fcall	_escribir_char
  1944  03F6  300D               	movlw	13
  1945  03F7  120A  118A  2650  120A  118A  	fcall	_escribir_char
  1946  03FC  2BD4               	goto	l1355
  1947  03FD                     l205:
  1948  03FD  0008               	return
  1949  03FE                     __end_of_virtual_display3:
  1950                           
  1951                           	psect	text9
  1952  03FE                     __ptext9:	
  1953 ;; *************** function _virtual_display2 *****************
  1954 ;; Defined at:
  1955 ;;		line 300 in file "LCD.c"
  1956 ;; Parameters:    Size  Location     Type
  1957 ;;		None
  1958 ;; Auto vars:     Size  Location     Type
  1959 ;;		None
  1960 ;; Return value:  Size  Location     Type
  1961 ;;                  1    wreg      void 
  1962 ;; Registers used:
  1963 ;;		wreg, status,2, status,0, pclath, cstack
  1964 ;; Tracked objects:
  1965 ;;		On entry : 0/0
  1966 ;;		On exit  : 0/0
  1967 ;;		Unchanged: 0/0
  1968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1969 ;;      Params:         0       0       0       0       0
  1970 ;;      Locals:         0       0       0       0       0
  1971 ;;      Temps:          0       0       0       0       0
  1972 ;;      Totals:         0       0       0       0       0
  1973 ;;Total ram usage:        0 bytes
  1974 ;; Hardware stack levels used:    1
  1975 ;; Hardware stack levels required when called:    3
  1976 ;; This function calls:
  1977 ;;		_escribir_char
  1978 ;; This function is called by:
  1979 ;;		_Conversion2
  1980 ;; This function uses a non-reentrant model
  1981 ;;
  1982                           
  1983                           
  1984                           ;psect for function _virtual_display2
  1985  03FE                     _virtual_display2:
  1986  03FE                     l1343:	
  1987                           ;incstack = 0
  1988                           ; Regs used in _virtual_display2: [wreg+status,2+status,0+pclath+cstack]
  1989                           
  1990                           
  1991                           ;LCD.c: 302: }
  1992  03FE  3010               	movlw	16
  1993  03FF  1283               	bcf	3,5	;RP0=0, select bank0
  1994  0400  1303               	bcf	3,6	;RP1=0, select bank0
  1995  0401  0221               	subwf	_velocidad2,w
  1996  0402  1C03               	skipc
  1997  0403  2C05               	goto	u381
  1998  0404  2C06               	goto	u380
  1999  0405                     u381:
  2000  0405  2C4E               	goto	l199
  2001  0406                     u380:
  2002  0406                     l1345:
  2003                           
  2004                           ;LCD.c: 303: ;LCD.c: 304: void contador_lcd (void)
  2005  0406  3053               	movlw	83
  2006  0407  120A  118A  2650  120A  118A  	fcall	_escribir_char
  2007                           
  2008                           ;LCD.c: 305: {
  2009  040C  3032               	movlw	50
  2010  040D  120A  118A  2650  120A  118A  	fcall	_escribir_char
  2011                           
  2012                           ;LCD.c: 306:     if (leer == '+')
  2013  0412  303A               	movlw	58
  2014  0413  120A  118A  2650  120A  118A  	fcall	_escribir_char
  2015                           
  2016                           ;LCD.c: 307:     {
  2017  0418  1283               	bcf	3,5	;RP0=0, select bank0
  2018  0419  1303               	bcf	3,6	;RP1=0, select bank0
  2019  041A  082B               	movf	_unidadz,w
  2020  041B  3E30               	addlw	48
  2021  041C  120A  118A  2650  120A  118A  	fcall	_escribir_char
  2022                           
  2023                           ;LCD.c: 308:         contador = contador + 1;
  2024  0421  302E               	movlw	46
  2025  0422  120A  118A  2650  120A  118A  	fcall	_escribir_char
  2026                           
  2027                           ;LCD.c: 309:         leer = 0;
  2028  0427  1283               	bcf	3,5	;RP0=0, select bank0
  2029  0428  1303               	bcf	3,6	;RP1=0, select bank0
  2030  0429  0828               	movf	_x2z,w
  2031  042A  3E30               	addlw	48
  2032  042B  120A  118A  2650  120A  118A  	fcall	_escribir_char
  2033                           
  2034                           ;LCD.c: 310:     }
  2035  0430  1283               	bcf	3,5	;RP0=0, select bank0
  2036  0431  1303               	bcf	3,6	;RP1=0, select bank0
  2037  0432  0827               	movf	_y2z,w
  2038  0433  3E30               	addlw	48
  2039  0434  120A  118A  2650  120A  118A  	fcall	_escribir_char
  2040                           
  2041                           ;LCD.c: 311:     else if (leer == '-')
  2042  0439  3056               	movlw	86
  2043  043A  120A  118A  2650  120A  118A  	fcall	_escribir_char
  2044                           
  2045                           ;LCD.c: 312:     {
  2046  043F  3020               	movlw	32
  2047  0440  120A  118A  2650  120A  118A  	fcall	_escribir_char
  2048                           
  2049                           ;LCD.c: 313:         contador = contador - 1;
  2050  0445  3020               	movlw	32
  2051  0446  120A  118A  2650  120A  118A  	fcall	_escribir_char
  2052  044B                     l1347:
  2053                           
  2054                           ;LCD.c: 314:         leer = 0;
  2055  044B  1283               	bcf	3,5	;RP0=0, select bank0
  2056  044C  1303               	bcf	3,6	;RP1=0, select bank0
  2057  044D  01A1               	clrf	_velocidad2
  2058  044E                     l199:
  2059  044E  0008               	return
  2060  044F                     __end_of_virtual_display2:
  2061                           
  2062                           	psect	text10
  2063  01F7                     __ptext10:	
  2064 ;; *************** function _Conversion1 *****************
  2065 ;; Defined at:
  2066 ;;		line 249 in file "LCD.c"
  2067 ;; Parameters:    Size  Location     Type
  2068 ;;		None
  2069 ;; Auto vars:     Size  Location     Type
  2070 ;;		None
  2071 ;; Return value:  Size  Location     Type
  2072 ;;                  1    wreg      void 
  2073 ;; Registers used:
  2074 ;;		wreg, status,2, status,0, pclath, cstack
  2075 ;; Tracked objects:
  2076 ;;		On entry : 0/0
  2077 ;;		On exit  : 0/0
  2078 ;;		Unchanged: 0/0
  2079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2080 ;;      Params:         0       0       0       0       0
  2081 ;;      Locals:         0       0       0       0       0
  2082 ;;      Temps:          0       3       0       0       0
  2083 ;;      Totals:         0       3       0       0       0
  2084 ;;Total ram usage:        3 bytes
  2085 ;; Hardware stack levels used:    1
  2086 ;; Hardware stack levels required when called:    4
  2087 ;; This function calls:
  2088 ;;		_Lcd_Write_Char
  2089 ;;		___awdiv
  2090 ;;		___awmod
  2091 ;;		_virtual_display1
  2092 ;; This function is called by:
  2093 ;;		_lcd
  2094 ;; This function uses a non-reentrant model
  2095 ;;
  2096                           
  2097                           
  2098                           ;psect for function _Conversion1
  2099  01F7                     _Conversion1:
  2100  01F7                     l1835:	
  2101                           ;incstack = 0
  2102                           ; Regs used in _Conversion1: [wreg+status,2+status,0+pclath+cstack]
  2103                           
  2104                           
  2105                           ;LCD.c: 251:         escribir_char (46);
  2106  01F7  1283               	bcf	3,5	;RP0=0, select bank0
  2107  01F8  1303               	bcf	3,6	;RP1=0, select bank0
  2108  01F9  0832               	movf	_adc_value1,w
  2109  01FA  00B8               	movwf	??_Conversion1
  2110  01FB  0738               	addwf	??_Conversion1,w
  2111  01FC  00B9               	movwf	??_Conversion1+1
  2112  01FD  0839               	movf	??_Conversion1+1,w
  2113  01FE  00FA               	movwf	_voltaje
  2114  01FF                     l1837:
  2115                           
  2116                           ;LCD.c: 252:         escribir_char (x2+48);
  2117  01FF  3064               	movlw	100
  2118  0200  00F3               	movwf	___awdiv@divisor
  2119  0201  3000               	movlw	0
  2120  0202  00F4               	movwf	___awdiv@divisor+1
  2121  0203  087A               	movf	_voltaje,w
  2122  0204  00B8               	movwf	??_Conversion1
  2123  0205  01B9               	clrf	??_Conversion1+1
  2124  0206  0838               	movf	??_Conversion1,w
  2125  0207  00F5               	movwf	___awdiv@dividend
  2126  0208  0839               	movf	??_Conversion1+1,w
  2127  0209  00F6               	movwf	___awdiv@dividend+1
  2128  020A  120A  118A  2286  120A  118A  	fcall	___awdiv
  2129  020F  0873               	movf	?___awdiv,w
  2130  0210  1283               	bcf	3,5	;RP0=0, select bank0
  2131  0211  1303               	bcf	3,6	;RP1=0, select bank0
  2132  0212  00BA               	movwf	??_Conversion1+2
  2133  0213  083A               	movf	??_Conversion1+2,w
  2134  0214  00F9               	movwf	_unidad
  2135  0215                     l1839:
  2136                           
  2137                           ;LCD.c: 253:         escribir_char (y2+48);
  2138  0215  3064               	movlw	100
  2139  0216  00F3               	movwf	___awmod@divisor
  2140  0217  3000               	movlw	0
  2141  0218  00F4               	movwf	___awmod@divisor+1
  2142  0219  087A               	movf	_voltaje,w
  2143  021A  00B8               	movwf	??_Conversion1
  2144  021B  01B9               	clrf	??_Conversion1+1
  2145  021C  0838               	movf	??_Conversion1,w
  2146  021D  00F5               	movwf	___awmod@dividend
  2147  021E  0839               	movf	??_Conversion1+1,w
  2148  021F  00F6               	movwf	___awmod@dividend+1
  2149  0220  120A  118A  234C  120A  118A  	fcall	___awmod
  2150  0225  0873               	movf	?___awmod,w
  2151  0226  1283               	bcf	3,5	;RP0=0, select bank0
  2152  0227  1303               	bcf	3,6	;RP1=0, select bank0
  2153  0228  00BA               	movwf	??_Conversion1+2
  2154  0229  083A               	movf	??_Conversion1+2,w
  2155  022A  00B0               	movwf	_x1
  2156  022B                     l1841:
  2157                           
  2158                           ;LCD.c: 254:         escribir_char (86);
  2159  022B  300A               	movlw	10
  2160  022C  00F3               	movwf	___awdiv@divisor
  2161  022D  3000               	movlw	0
  2162  022E  00F4               	movwf	___awdiv@divisor+1
  2163  022F  0830               	movf	_x1,w
  2164  0230  00B8               	movwf	??_Conversion1
  2165  0231  01B9               	clrf	??_Conversion1+1
  2166  0232  0838               	movf	??_Conversion1,w
  2167  0233  00F5               	movwf	___awdiv@dividend
  2168  0234  0839               	movf	??_Conversion1+1,w
  2169  0235  00F6               	movwf	___awdiv@dividend+1
  2170  0236  120A  118A  2286  120A  118A  	fcall	___awdiv
  2171  023B  0873               	movf	?___awdiv,w
  2172  023C  1283               	bcf	3,5	;RP0=0, select bank0
  2173  023D  1303               	bcf	3,6	;RP1=0, select bank0
  2174  023E  00BA               	movwf	??_Conversion1+2
  2175  023F  083A               	movf	??_Conversion1+2,w
  2176  0240  00AE               	movwf	_x2
  2177  0241                     l1843:
  2178                           
  2179                           ;LCD.c: 255:         escribir_char (32);
  2180  0241  300A               	movlw	10
  2181  0242  00F3               	movwf	___awmod@divisor
  2182  0243  3000               	movlw	0
  2183  0244  00F4               	movwf	___awmod@divisor+1
  2184  0245  0830               	movf	_x1,w
  2185  0246  00B8               	movwf	??_Conversion1
  2186  0247  01B9               	clrf	??_Conversion1+1
  2187  0248  0838               	movf	??_Conversion1,w
  2188  0249  00F5               	movwf	___awmod@dividend
  2189  024A  0839               	movf	??_Conversion1+1,w
  2190  024B  00F6               	movwf	___awmod@dividend+1
  2191  024C  120A  118A  234C  120A  118A  	fcall	___awmod
  2192  0251  0873               	movf	?___awmod,w
  2193  0252  1283               	bcf	3,5	;RP0=0, select bank0
  2194  0253  1303               	bcf	3,6	;RP1=0, select bank0
  2195  0254  00BA               	movwf	??_Conversion1+2
  2196  0255  083A               	movf	??_Conversion1+2,w
  2197  0256  00AF               	movwf	_y1
  2198  0257                     l1845:
  2199                           
  2200                           ;LCD.c: 256:         escribir_char (32);
  2201  0257  082F               	movf	_y1,w
  2202  0258  00B8               	movwf	??_Conversion1
  2203  0259  0838               	movf	??_Conversion1,w
  2204  025A  00AD               	movwf	_y2
  2205  025B                     l1847:
  2206                           
  2207                           ;LCD.c: 257:         velocidad1 = 0;
  2208  025B  0879               	movf	_unidad,w
  2209  025C  3E30               	addlw	48
  2210  025D  120A  118A  2618  120A  118A  	fcall	_Lcd_Write_Char
  2211  0262                     l1849:
  2212                           
  2213                           ;LCD.c: 258:     }
  2214  0262  302E               	movlw	46
  2215  0263  120A  118A  2618  120A  118A  	fcall	_Lcd_Write_Char
  2216  0268                     l1851:
  2217                           
  2218                           ;LCD.c: 259: }
  2219  0268  1283               	bcf	3,5	;RP0=0, select bank0
  2220  0269  1303               	bcf	3,6	;RP1=0, select bank0
  2221  026A  082E               	movf	_x2,w
  2222  026B  3E30               	addlw	48
  2223  026C  120A  118A  2618  120A  118A  	fcall	_Lcd_Write_Char
  2224  0271                     l1853:
  2225                           
  2226                           ;LCD.c: 260: 
  2227  0271  1283               	bcf	3,5	;RP0=0, select bank0
  2228  0272  1303               	bcf	3,6	;RP1=0, select bank0
  2229  0273  082D               	movf	_y2,w
  2230  0274  3E30               	addlw	48
  2231  0275  120A  118A  2618  120A  118A  	fcall	_Lcd_Write_Char
  2232  027A                     l1855:
  2233                           
  2234                           ;LCD.c: 261: void virtual_display2 (void)
  2235  027A  3056               	movlw	86
  2236  027B  120A  118A  2618  120A  118A  	fcall	_Lcd_Write_Char
  2237  0280                     l1857:
  2238                           
  2239                           ;LCD.c: 262: {
  2240  0280  120A  118A  244F  120A  118A  	fcall	_virtual_display1
  2241  0285                     l188:
  2242  0285  0008               	return
  2243  0286                     __end_of_Conversion1:
  2244                           
  2245                           	psect	text11
  2246  044F                     __ptext11:	
  2247 ;; *************** function _virtual_display1 *****************
  2248 ;; Defined at:
  2249 ;;		line 282 in file "LCD.c"
  2250 ;; Parameters:    Size  Location     Type
  2251 ;;		None
  2252 ;; Auto vars:     Size  Location     Type
  2253 ;;		None
  2254 ;; Return value:  Size  Location     Type
  2255 ;;                  1    wreg      void 
  2256 ;; Registers used:
  2257 ;;		wreg, status,2, status,0, pclath, cstack
  2258 ;; Tracked objects:
  2259 ;;		On entry : 0/0
  2260 ;;		On exit  : 0/0
  2261 ;;		Unchanged: 0/0
  2262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2263 ;;      Params:         0       0       0       0       0
  2264 ;;      Locals:         0       0       0       0       0
  2265 ;;      Temps:          0       0       0       0       0
  2266 ;;      Totals:         0       0       0       0       0
  2267 ;;Total ram usage:        0 bytes
  2268 ;; Hardware stack levels used:    1
  2269 ;; Hardware stack levels required when called:    3
  2270 ;; This function calls:
  2271 ;;		_escribir_char
  2272 ;; This function is called by:
  2273 ;;		_Conversion1
  2274 ;; This function uses a non-reentrant model
  2275 ;;
  2276                           
  2277                           
  2278                           ;psect for function _virtual_display1
  2279  044F                     _virtual_display1:
  2280  044F                     l1337:	
  2281                           ;incstack = 0
  2282                           ; Regs used in _virtual_display1: [wreg+status,2+status,0+pclath+cstack]
  2283                           
  2284                           
  2285                           ;LCD.c: 284:         {
  2286  044F  3010               	movlw	16
  2287  0450  1283               	bcf	3,5	;RP0=0, select bank0
  2288  0451  1303               	bcf	3,6	;RP1=0, select bank0
  2289  0452  0222               	subwf	_velocidad1,w
  2290  0453  1C03               	skipc
  2291  0454  2C56               	goto	u371
  2292  0455  2C57               	goto	u370
  2293  0456                     u371:
  2294  0456  2C9D               	goto	l195
  2295  0457                     u370:
  2296  0457                     l1339:
  2297                           
  2298                           ;LCD.c: 285:             escribir_char (67);;LCD.c: 286:             escribir_char (58);
  2299  0457  3053               	movlw	83
  2300  0458  120A  118A  2650  120A  118A  	fcall	_escribir_char
  2301                           
  2302                           ;LCD.c: 287:             escribir_char (48);
  2303  045D  3031               	movlw	49
  2304  045E  120A  118A  2650  120A  118A  	fcall	_escribir_char
  2305                           
  2306                           ;LCD.c: 288:             escribir_char (contador+48);
  2307  0463  303A               	movlw	58
  2308  0464  120A  118A  2650  120A  118A  	fcall	_escribir_char
  2309                           
  2310                           ;LCD.c: 289:             escribir_char ('\r');
  2311  0469  0879               	movf	_unidad,w
  2312  046A  3E30               	addlw	48
  2313  046B  120A  118A  2650  120A  118A  	fcall	_escribir_char
  2314                           
  2315                           ;LCD.c: 290:             velocidad3 = 0;
  2316  0470  302E               	movlw	46
  2317  0471  120A  118A  2650  120A  118A  	fcall	_escribir_char
  2318                           
  2319                           ;LCD.c: 291:         }
  2320  0476  1283               	bcf	3,5	;RP0=0, select bank0
  2321  0477  1303               	bcf	3,6	;RP1=0, select bank0
  2322  0478  082E               	movf	_x2,w
  2323  0479  3E30               	addlw	48
  2324  047A  120A  118A  2650  120A  118A  	fcall	_escribir_char
  2325                           
  2326                           ;LCD.c: 292:         else
  2327  047F  1283               	bcf	3,5	;RP0=0, select bank0
  2328  0480  1303               	bcf	3,6	;RP1=0, select bank0
  2329  0481  082D               	movf	_y2,w
  2330  0482  3E30               	addlw	48
  2331  0483  120A  118A  2650  120A  118A  	fcall	_escribir_char
  2332                           
  2333                           ;LCD.c: 293:         {
  2334  0488  3056               	movlw	86
  2335  0489  120A  118A  2650  120A  118A  	fcall	_escribir_char
  2336                           
  2337                           ;LCD.c: 294:             escribir_char (67);
  2338  048E  3020               	movlw	32
  2339  048F  120A  118A  2650  120A  118A  	fcall	_escribir_char
  2340                           
  2341                           ;LCD.c: 295:             escribir_char (58);
  2342  0494  3020               	movlw	32
  2343  0495  120A  118A  2650  120A  118A  	fcall	_escribir_char
  2344  049A                     l1341:
  2345                           
  2346                           ;LCD.c: 296:             escribir_char (w1+48);
  2347  049A  1283               	bcf	3,5	;RP0=0, select bank0
  2348  049B  1303               	bcf	3,6	;RP1=0, select bank0
  2349  049C  01A2               	clrf	_velocidad1
  2350  049D                     l195:
  2351  049D  0008               	return
  2352  049E                     __end_of_virtual_display1:
  2353                           
  2354                           	psect	text12
  2355  0650                     __ptext12:	
  2356 ;; *************** function _escribir_char *****************
  2357 ;; Defined at:
  2358 ;;		line 358 in file "LCD.c"
  2359 ;; Parameters:    Size  Location     Type
  2360 ;;  valor           1    wreg     unsigned char 
  2361 ;; Auto vars:     Size  Location     Type
  2362 ;;  valor           1    3[COMMON] unsigned char 
  2363 ;; Return value:  Size  Location     Type
  2364 ;;                  1    wreg      void 
  2365 ;; Registers used:
  2366 ;;		wreg
  2367 ;; Tracked objects:
  2368 ;;		On entry : 0/0
  2369 ;;		On exit  : 0/0
  2370 ;;		Unchanged: 0/0
  2371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2372 ;;      Params:         0       0       0       0       0
  2373 ;;      Locals:         1       0       0       0       0
  2374 ;;      Temps:          0       0       0       0       0
  2375 ;;      Totals:         1       0       0       0       0
  2376 ;;Total ram usage:        1 bytes
  2377 ;; Hardware stack levels used:    1
  2378 ;; Hardware stack levels required when called:    2
  2379 ;; This function calls:
  2380 ;;		Nothing
  2381 ;; This function is called by:
  2382 ;;		_virtual_display1
  2383 ;;		_virtual_display2
  2384 ;;		_virtual_display3
  2385 ;; This function uses a non-reentrant model
  2386 ;;
  2387                           
  2388                           
  2389                           ;psect for function _escribir_char
  2390  0650                     _escribir_char:
  2391                           
  2392                           ;incstack = 0
  2393                           ; Regs used in _escribir_char: [wreg]
  2394                           ;escribir_char@valor stored from wreg
  2395  0650  00F3               	movwf	escribir_char@valor
  2396  0651                     l1323:
  2397  0651  0873               	movf	escribir_char@valor,w
  2398  0652  1283               	bcf	3,5	;RP0=0, select bank0
  2399  0653  1303               	bcf	3,6	;RP1=0, select bank0
  2400  0654  0099               	movwf	25	;volatile
  2401  0655                     l214:
  2402  0655  1E0C               	btfss	12,4	;volatile
  2403  0656  2E58               	goto	u361
  2404  0657  2E59               	goto	u360
  2405  0658                     u361:
  2406  0658  2E55               	goto	l214
  2407  0659                     u360:
  2408  0659                     l217:
  2409  0659  0008               	return
  2410  065A                     __end_of_escribir_char:
  2411                           
  2412                           	psect	text13
  2413  034C                     __ptext13:	
  2414 ;; *************** function ___awmod *****************
  2415 ;; Defined at:
  2416 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  2417 ;; Parameters:    Size  Location     Type
  2418 ;;  divisor         2    3[COMMON] int 
  2419 ;;  dividend        2    5[COMMON] int 
  2420 ;; Auto vars:     Size  Location     Type
  2421 ;;  sign            1    1[BANK0 ] unsigned char 
  2422 ;;  counter         1    0[BANK0 ] unsigned char 
  2423 ;; Return value:  Size  Location     Type
  2424 ;;                  2    3[COMMON] int 
  2425 ;; Registers used:
  2426 ;;		wreg, status,2, status,0
  2427 ;; Tracked objects:
  2428 ;;		On entry : 0/0
  2429 ;;		On exit  : 0/0
  2430 ;;		Unchanged: 0/0
  2431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2432 ;;      Params:         4       0       0       0       0
  2433 ;;      Locals:         0       2       0       0       0
  2434 ;;      Temps:          1       0       0       0       0
  2435 ;;      Totals:         5       2       0       0       0
  2436 ;;Total ram usage:        7 bytes
  2437 ;; Hardware stack levels used:    1
  2438 ;; Hardware stack levels required when called:    2
  2439 ;; This function calls:
  2440 ;;		Nothing
  2441 ;; This function is called by:
  2442 ;;		_lcd
  2443 ;;		_Conversion1
  2444 ;;		_Conversion2
  2445 ;; This function uses a non-reentrant model
  2446 ;;
  2447                           
  2448                           
  2449                           ;psect for function ___awmod
  2450  034C                     ___awmod:
  2451  034C                     l1777:	
  2452                           ;incstack = 0
  2453                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2454                           
  2455  034C  1283               	bcf	3,5	;RP0=0, select bank0
  2456  034D  1303               	bcf	3,6	;RP1=0, select bank0
  2457  034E  01B5               	clrf	___awmod@sign
  2458  034F                     l1779:
  2459  034F  1FF6               	btfss	___awmod@dividend+1,7
  2460  0350  2B52               	goto	u711
  2461  0351  2B53               	goto	u710
  2462  0352                     u711:
  2463  0352  2B5A               	goto	l1785
  2464  0353                     u710:
  2465  0353                     l1781:
  2466  0353  09F5               	comf	___awmod@dividend,f
  2467  0354  09F6               	comf	___awmod@dividend+1,f
  2468  0355  0AF5               	incf	___awmod@dividend,f
  2469  0356  1903               	skipnz
  2470  0357  0AF6               	incf	___awmod@dividend+1,f
  2471  0358                     l1783:
  2472  0358  01B5               	clrf	___awmod@sign
  2473  0359  0AB5               	incf	___awmod@sign,f
  2474  035A                     l1785:
  2475  035A  1FF4               	btfss	___awmod@divisor+1,7
  2476  035B  2B5D               	goto	u721
  2477  035C  2B5E               	goto	u720
  2478  035D                     u721:
  2479  035D  2B63               	goto	l1789
  2480  035E                     u720:
  2481  035E                     l1787:
  2482  035E  09F3               	comf	___awmod@divisor,f
  2483  035F  09F4               	comf	___awmod@divisor+1,f
  2484  0360  0AF3               	incf	___awmod@divisor,f
  2485  0361  1903               	skipnz
  2486  0362  0AF4               	incf	___awmod@divisor+1,f
  2487  0363                     l1789:
  2488  0363  0873               	movf	___awmod@divisor,w
  2489  0364  0474               	iorwf	___awmod@divisor+1,w
  2490  0365  1903               	btfsc	3,2
  2491  0366  2B68               	goto	u731
  2492  0367  2B69               	goto	u730
  2493  0368                     u731:
  2494  0368  2B98               	goto	l1807
  2495  0369                     u730:
  2496  0369                     l1791:
  2497  0369  01B4               	clrf	___awmod@counter
  2498  036A  0AB4               	incf	___awmod@counter,f
  2499  036B  2B77               	goto	l1797
  2500  036C                     l1793:
  2501  036C  3001               	movlw	1
  2502  036D                     u745:
  2503  036D  1003               	clrc
  2504  036E  0DF3               	rlf	___awmod@divisor,f
  2505  036F  0DF4               	rlf	___awmod@divisor+1,f
  2506  0370  3EFF               	addlw	-1
  2507  0371  1D03               	skipz
  2508  0372  2B6D               	goto	u745
  2509  0373                     l1795:
  2510  0373  3001               	movlw	1
  2511  0374  00F7               	movwf	??___awmod
  2512  0375  0877               	movf	??___awmod,w
  2513  0376  07B4               	addwf	___awmod@counter,f
  2514  0377                     l1797:
  2515  0377  1FF4               	btfss	___awmod@divisor+1,7
  2516  0378  2B7A               	goto	u751
  2517  0379  2B7B               	goto	u750
  2518  037A                     u751:
  2519  037A  2B6C               	goto	l1793
  2520  037B                     u750:
  2521  037B                     l1799:
  2522  037B  0874               	movf	___awmod@divisor+1,w
  2523  037C  0276               	subwf	___awmod@dividend+1,w
  2524  037D  1D03               	skipz
  2525  037E  2B81               	goto	u765
  2526  037F  0873               	movf	___awmod@divisor,w
  2527  0380  0275               	subwf	___awmod@dividend,w
  2528  0381                     u765:
  2529  0381  1C03               	skipc
  2530  0382  2B84               	goto	u761
  2531  0383  2B85               	goto	u760
  2532  0384                     u761:
  2533  0384  2B8B               	goto	l1803
  2534  0385                     u760:
  2535  0385                     l1801:
  2536  0385  0873               	movf	___awmod@divisor,w
  2537  0386  02F5               	subwf	___awmod@dividend,f
  2538  0387  0874               	movf	___awmod@divisor+1,w
  2539  0388  1C03               	skipc
  2540  0389  03F6               	decf	___awmod@dividend+1,f
  2541  038A  02F6               	subwf	___awmod@dividend+1,f
  2542  038B                     l1803:
  2543  038B  3001               	movlw	1
  2544  038C                     u775:
  2545  038C  1003               	clrc
  2546  038D  0CF4               	rrf	___awmod@divisor+1,f
  2547  038E  0CF3               	rrf	___awmod@divisor,f
  2548  038F  3EFF               	addlw	-1
  2549  0390  1D03               	skipz
  2550  0391  2B8C               	goto	u775
  2551  0392                     l1805:
  2552  0392  3001               	movlw	1
  2553  0393  02B4               	subwf	___awmod@counter,f
  2554  0394  1D03               	btfss	3,2
  2555  0395  2B97               	goto	u781
  2556  0396  2B98               	goto	u780
  2557  0397                     u781:
  2558  0397  2B7B               	goto	l1799
  2559  0398                     u780:
  2560  0398                     l1807:
  2561  0398  0835               	movf	___awmod@sign,w
  2562  0399  1903               	btfsc	3,2
  2563  039A  2B9C               	goto	u791
  2564  039B  2B9D               	goto	u790
  2565  039C                     u791:
  2566  039C  2BA2               	goto	l1811
  2567  039D                     u790:
  2568  039D                     l1809:
  2569  039D  09F5               	comf	___awmod@dividend,f
  2570  039E  09F6               	comf	___awmod@dividend+1,f
  2571  039F  0AF5               	incf	___awmod@dividend,f
  2572  03A0  1903               	skipnz
  2573  03A1  0AF6               	incf	___awmod@dividend+1,f
  2574  03A2                     l1811:
  2575  03A2  0876               	movf	___awmod@dividend+1,w
  2576  03A3  00F4               	movwf	?___awmod+1
  2577  03A4  0875               	movf	___awmod@dividend,w
  2578  03A5  00F3               	movwf	?___awmod
  2579  03A6                     l551:
  2580  03A6  0008               	return
  2581  03A7                     __end_of___awmod:
  2582                           
  2583                           	psect	text14
  2584  0286                     __ptext14:	
  2585 ;; *************** function ___awdiv *****************
  2586 ;; Defined at:
  2587 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2588 ;; Parameters:    Size  Location     Type
  2589 ;;  divisor         2    3[COMMON] int 
  2590 ;;  dividend        2    5[COMMON] int 
  2591 ;; Auto vars:     Size  Location     Type
  2592 ;;  quotient        2    2[BANK0 ] int 
  2593 ;;  sign            1    1[BANK0 ] unsigned char 
  2594 ;;  counter         1    0[BANK0 ] unsigned char 
  2595 ;; Return value:  Size  Location     Type
  2596 ;;                  2    3[COMMON] int 
  2597 ;; Registers used:
  2598 ;;		wreg, status,2, status,0
  2599 ;; Tracked objects:
  2600 ;;		On entry : 0/0
  2601 ;;		On exit  : 0/0
  2602 ;;		Unchanged: 0/0
  2603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2604 ;;      Params:         4       0       0       0       0
  2605 ;;      Locals:         0       4       0       0       0
  2606 ;;      Temps:          1       0       0       0       0
  2607 ;;      Totals:         5       4       0       0       0
  2608 ;;Total ram usage:        9 bytes
  2609 ;; Hardware stack levels used:    1
  2610 ;; Hardware stack levels required when called:    2
  2611 ;; This function calls:
  2612 ;;		Nothing
  2613 ;; This function is called by:
  2614 ;;		_lcd
  2615 ;;		_Conversion1
  2616 ;;		_Conversion2
  2617 ;; This function uses a non-reentrant model
  2618 ;;
  2619                           
  2620                           
  2621                           ;psect for function ___awdiv
  2622  0286                     ___awdiv:
  2623  0286                     l1371:	
  2624                           ;incstack = 0
  2625                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2626                           
  2627  0286  1283               	bcf	3,5	;RP0=0, select bank0
  2628  0287  1303               	bcf	3,6	;RP1=0, select bank0
  2629  0288  01B5               	clrf	___awdiv@sign
  2630  0289                     l1373:
  2631  0289  1FF4               	btfss	___awdiv@divisor+1,7
  2632  028A  2A8C               	goto	u411
  2633  028B  2A8D               	goto	u410
  2634  028C                     u411:
  2635  028C  2A94               	goto	l1379
  2636  028D                     u410:
  2637  028D                     l1375:
  2638  028D  09F3               	comf	___awdiv@divisor,f
  2639  028E  09F4               	comf	___awdiv@divisor+1,f
  2640  028F  0AF3               	incf	___awdiv@divisor,f
  2641  0290  1903               	skipnz
  2642  0291  0AF4               	incf	___awdiv@divisor+1,f
  2643  0292                     l1377:
  2644  0292  01B5               	clrf	___awdiv@sign
  2645  0293  0AB5               	incf	___awdiv@sign,f
  2646  0294                     l1379:
  2647  0294  1FF6               	btfss	___awdiv@dividend+1,7
  2648  0295  2A97               	goto	u421
  2649  0296  2A98               	goto	u420
  2650  0297                     u421:
  2651  0297  2AA1               	goto	l1385
  2652  0298                     u420:
  2653  0298                     l1381:
  2654  0298  09F5               	comf	___awdiv@dividend,f
  2655  0299  09F6               	comf	___awdiv@dividend+1,f
  2656  029A  0AF5               	incf	___awdiv@dividend,f
  2657  029B  1903               	skipnz
  2658  029C  0AF6               	incf	___awdiv@dividend+1,f
  2659  029D                     l1383:
  2660  029D  3001               	movlw	1
  2661  029E  00F7               	movwf	??___awdiv
  2662  029F  0877               	movf	??___awdiv,w
  2663  02A0  06B5               	xorwf	___awdiv@sign,f
  2664  02A1                     l1385:
  2665  02A1  01B6               	clrf	___awdiv@quotient
  2666  02A2  01B7               	clrf	___awdiv@quotient+1
  2667  02A3                     l1387:
  2668  02A3  0873               	movf	___awdiv@divisor,w
  2669  02A4  0474               	iorwf	___awdiv@divisor+1,w
  2670  02A5  1903               	btfsc	3,2
  2671  02A6  2AA8               	goto	u431
  2672  02A7  2AA9               	goto	u430
  2673  02A8                     u431:
  2674  02A8  2AE0               	goto	l1407
  2675  02A9                     u430:
  2676  02A9                     l1389:
  2677  02A9  01B4               	clrf	___awdiv@counter
  2678  02AA  0AB4               	incf	___awdiv@counter,f
  2679  02AB  2AB7               	goto	l1395
  2680  02AC                     l1391:
  2681  02AC  3001               	movlw	1
  2682  02AD                     u445:
  2683  02AD  1003               	clrc
  2684  02AE  0DF3               	rlf	___awdiv@divisor,f
  2685  02AF  0DF4               	rlf	___awdiv@divisor+1,f
  2686  02B0  3EFF               	addlw	-1
  2687  02B1  1D03               	skipz
  2688  02B2  2AAD               	goto	u445
  2689  02B3                     l1393:
  2690  02B3  3001               	movlw	1
  2691  02B4  00F7               	movwf	??___awdiv
  2692  02B5  0877               	movf	??___awdiv,w
  2693  02B6  07B4               	addwf	___awdiv@counter,f
  2694  02B7                     l1395:
  2695  02B7  1FF4               	btfss	___awdiv@divisor+1,7
  2696  02B8  2ABA               	goto	u451
  2697  02B9  2ABB               	goto	u450
  2698  02BA                     u451:
  2699  02BA  2AAC               	goto	l1391
  2700  02BB                     u450:
  2701  02BB                     l1397:
  2702  02BB  3001               	movlw	1
  2703  02BC                     u465:
  2704  02BC  1003               	clrc
  2705  02BD  0DB6               	rlf	___awdiv@quotient,f
  2706  02BE  0DB7               	rlf	___awdiv@quotient+1,f
  2707  02BF  3EFF               	addlw	-1
  2708  02C0  1D03               	skipz
  2709  02C1  2ABC               	goto	u465
  2710  02C2  0874               	movf	___awdiv@divisor+1,w
  2711  02C3  0276               	subwf	___awdiv@dividend+1,w
  2712  02C4  1D03               	skipz
  2713  02C5  2AC8               	goto	u475
  2714  02C6  0873               	movf	___awdiv@divisor,w
  2715  02C7  0275               	subwf	___awdiv@dividend,w
  2716  02C8                     u475:
  2717  02C8  1C03               	skipc
  2718  02C9  2ACB               	goto	u471
  2719  02CA  2ACC               	goto	u470
  2720  02CB                     u471:
  2721  02CB  2AD3               	goto	l1403
  2722  02CC                     u470:
  2723  02CC                     l1399:
  2724  02CC  0873               	movf	___awdiv@divisor,w
  2725  02CD  02F5               	subwf	___awdiv@dividend,f
  2726  02CE  0874               	movf	___awdiv@divisor+1,w
  2727  02CF  1C03               	skipc
  2728  02D0  03F6               	decf	___awdiv@dividend+1,f
  2729  02D1  02F6               	subwf	___awdiv@dividend+1,f
  2730  02D2                     l1401:
  2731  02D2  1436               	bsf	___awdiv@quotient,0
  2732  02D3                     l1403:
  2733  02D3  3001               	movlw	1
  2734  02D4                     u485:
  2735  02D4  1003               	clrc
  2736  02D5  0CF4               	rrf	___awdiv@divisor+1,f
  2737  02D6  0CF3               	rrf	___awdiv@divisor,f
  2738  02D7  3EFF               	addlw	-1
  2739  02D8  1D03               	skipz
  2740  02D9  2AD4               	goto	u485
  2741  02DA                     l1405:
  2742  02DA  3001               	movlw	1
  2743  02DB  02B4               	subwf	___awdiv@counter,f
  2744  02DC  1D03               	btfss	3,2
  2745  02DD  2ADF               	goto	u491
  2746  02DE  2AE0               	goto	u490
  2747  02DF                     u491:
  2748  02DF  2ABB               	goto	l1397
  2749  02E0                     u490:
  2750  02E0                     l1407:
  2751  02E0  0835               	movf	___awdiv@sign,w
  2752  02E1  1903               	btfsc	3,2
  2753  02E2  2AE4               	goto	u501
  2754  02E3  2AE5               	goto	u500
  2755  02E4                     u501:
  2756  02E4  2AEA               	goto	l1411
  2757  02E5                     u500:
  2758  02E5                     l1409:
  2759  02E5  09B6               	comf	___awdiv@quotient,f
  2760  02E6  09B7               	comf	___awdiv@quotient+1,f
  2761  02E7  0AB6               	incf	___awdiv@quotient,f
  2762  02E8  1903               	skipnz
  2763  02E9  0AB7               	incf	___awdiv@quotient+1,f
  2764  02EA                     l1411:
  2765  02EA  0837               	movf	___awdiv@quotient+1,w
  2766  02EB  00F4               	movwf	?___awdiv+1
  2767  02EC  0836               	movf	___awdiv@quotient,w
  2768  02ED  00F3               	movwf	?___awdiv
  2769  02EE                     l538:
  2770  02EE  0008               	return
  2771  02EF                     __end_of___awdiv:
  2772                           
  2773                           	psect	text15
  2774  0618                     __ptext15:	
  2775 ;; *************** function _Lcd_Write_Char *****************
  2776 ;; Defined at:
  2777 ;;		line 94 in file "LCD_8bits.c"
  2778 ;; Parameters:    Size  Location     Type
  2779 ;;  a               1    wreg     unsigned char 
  2780 ;; Auto vars:     Size  Location     Type
  2781 ;;  a               1    5[COMMON] unsigned char 
  2782 ;; Return value:  Size  Location     Type
  2783 ;;                  1    wreg      void 
  2784 ;; Registers used:
  2785 ;;		wreg, status,2, status,0, pclath, cstack
  2786 ;; Tracked objects:
  2787 ;;		On entry : 0/0
  2788 ;;		On exit  : 0/0
  2789 ;;		Unchanged: 0/0
  2790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2791 ;;      Params:         0       0       0       0       0
  2792 ;;      Locals:         1       0       0       0       0
  2793 ;;      Temps:          1       0       0       0       0
  2794 ;;      Totals:         2       0       0       0       0
  2795 ;;Total ram usage:        2 bytes
  2796 ;; Hardware stack levels used:    1
  2797 ;; Hardware stack levels required when called:    3
  2798 ;; This function calls:
  2799 ;;		_Lcd_Port
  2800 ;; This function is called by:
  2801 ;;		_lcd
  2802 ;;		_Conversion1
  2803 ;;		_Conversion2
  2804 ;;		_Lcd_Write_String
  2805 ;; This function uses a non-reentrant model
  2806 ;;
  2807                           
  2808                           
  2809                           ;psect for function _Lcd_Write_Char
  2810  0618                     _Lcd_Write_Char:
  2811                           
  2812                           ;incstack = 0
  2813                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2814                           ;Lcd_Write_Char@a stored from wreg
  2815  0618  00F5               	movwf	Lcd_Write_Char@a
  2816  0619                     l1757:
  2817                           
  2818                           ;LCD_8bits.c: 94: void Lcd_Write_Char(char a);LCD_8bits.c: 95: {;LCD_8bits.c: 96:     PO
      +                          RTCbits.RC0 = 1;
  2819  0619  1283               	bcf	3,5	;RP0=0, select bank0
  2820  061A  1303               	bcf	3,6	;RP1=0, select bank0
  2821  061B  1407               	bsf	7,0	;volatile
  2822  061C                     l1759:
  2823                           
  2824                           ;LCD_8bits.c: 97:     Lcd_Port(a);
  2825  061C  0875               	movf	Lcd_Write_Char@a,w
  2826  061D  120A  118A  266F  120A  118A  	fcall	_Lcd_Port
  2827  0622                     l1761:
  2828                           
  2829                           ;LCD_8bits.c: 98:     PORTCbits.RC2 = 1;
  2830  0622  1283               	bcf	3,5	;RP0=0, select bank0
  2831  0623  1303               	bcf	3,6	;RP1=0, select bank0
  2832  0624  1507               	bsf	7,2	;volatile
  2833  0625                     l1763:
  2834                           
  2835                           ;LCD_8bits.c: 99:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2836  0625  300D               	movlw	13
  2837  0626  00F4               	movwf	??_Lcd_Write_Char
  2838  0627                     u857:
  2839  0627  0BF4               	decfsz	??_Lcd_Write_Char,f
  2840  0628  2E27               	goto	u857
  2841  0629                     l1765:
  2842                           
  2843                           ;LCD_8bits.c: 100:     PORTCbits.RC2 = 0;
  2844  0629  1283               	bcf	3,5	;RP0=0, select bank0
  2845  062A  1303               	bcf	3,6	;RP1=0, select bank0
  2846  062B  1107               	bcf	7,2	;volatile
  2847  062C                     l286:
  2848  062C  0008               	return
  2849  062D                     __end_of_Lcd_Write_Char:
  2850                           
  2851                           	psect	text16
  2852  063A                     __ptext16:	
  2853 ;; *************** function _interrup_config *****************
  2854 ;; Defined at:
  2855 ;;		line 161 in file "LCD.c"
  2856 ;; Parameters:    Size  Location     Type
  2857 ;;		None
  2858 ;; Auto vars:     Size  Location     Type
  2859 ;;		None
  2860 ;; Return value:  Size  Location     Type
  2861 ;;                  1    wreg      void 
  2862 ;; Registers used:
  2863 ;;		status,2
  2864 ;; Tracked objects:
  2865 ;;		On entry : 0/0
  2866 ;;		On exit  : 0/0
  2867 ;;		Unchanged: 0/0
  2868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2869 ;;      Params:         0       0       0       0       0
  2870 ;;      Locals:         0       0       0       0       0
  2871 ;;      Temps:          0       0       0       0       0
  2872 ;;      Totals:         0       0       0       0       0
  2873 ;;Total ram usage:        0 bytes
  2874 ;; Hardware stack levels used:    1
  2875 ;; Hardware stack levels required when called:    2
  2876 ;; This function calls:
  2877 ;;		Nothing
  2878 ;; This function is called by:
  2879 ;;		_main
  2880 ;; This function uses a non-reentrant model
  2881 ;;
  2882                           
  2883                           
  2884                           ;psect for function _interrup_config
  2885  063A                     _interrup_config:
  2886  063A                     l1627:	
  2887                           ;incstack = 0
  2888                           ; Regs used in _interrup_config: [status,2]
  2889                           
  2890                           
  2891                           ;LCD.c: 163: 
  2892  063A  178B               	bsf	11,7	;volatile
  2893                           
  2894                           ;LCD.c: 164: void adc_conversion1 (void)
  2895  063B  170B               	bsf	11,6	;volatile
  2896                           
  2897                           ;LCD.c: 165: {
  2898  063C  128B               	bcf	11,5	;volatile
  2899                           
  2900                           ;LCD.c: 166:     ADCON0bits.GO_DONE = 1;
  2901  063D  120B               	bcf	11,4	;volatile
  2902                           
  2903                           ;LCD.c: 167:     _delay((unsigned long)((10)*(4000000/4000.0)));
  2904  063E  118B               	bcf	11,3	;volatile
  2905                           
  2906                           ;LCD.c: 168:     if (ADCON0bits.GO_DONE == 0)
  2907  063F  110B               	bcf	11,2	;volatile
  2908                           
  2909                           ;LCD.c: 169:     {
  2910  0640  108B               	bcf	11,1	;volatile
  2911                           
  2912                           ;LCD.c: 170:         ADCON0bits.GO_DONE = 1;
  2913  0641  100B               	bcf	11,0	;volatile
  2914  0642                     l1629:
  2915                           
  2916                           ;LCD.c: 171:         adc_value1 = ADRESH;
  2917  0642  1683               	bsf	3,5	;RP0=1, select bank1
  2918  0643  1303               	bcf	3,6	;RP1=0, select bank1
  2919  0644  0196               	clrf	22	;volatile
  2920  0645                     l162:
  2921  0645  0008               	return
  2922  0646                     __end_of_interrup_config:
  2923                           
  2924                           	psect	text17
  2925  05B9                     __ptext17:	
  2926 ;; *************** function _adc_conversion2 *****************
  2927 ;; Defined at:
  2928 ;;		line 214 in file "LCD.c"
  2929 ;; Parameters:    Size  Location     Type
  2930 ;;		None
  2931 ;; Auto vars:     Size  Location     Type
  2932 ;;		None
  2933 ;; Return value:  Size  Location     Type
  2934 ;;                  1    wreg      void 
  2935 ;; Registers used:
  2936 ;;		wreg
  2937 ;; Tracked objects:
  2938 ;;		On entry : 0/0
  2939 ;;		On exit  : 0/0
  2940 ;;		Unchanged: 0/0
  2941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2942 ;;      Params:         0       0       0       0       0
  2943 ;;      Locals:         0       0       0       0       0
  2944 ;;      Temps:          2       0       0       0       0
  2945 ;;      Totals:         2       0       0       0       0
  2946 ;;Total ram usage:        2 bytes
  2947 ;; Hardware stack levels used:    1
  2948 ;; Hardware stack levels required when called:    2
  2949 ;; This function calls:
  2950 ;;		Nothing
  2951 ;; This function is called by:
  2952 ;;		_main
  2953 ;; This function uses a non-reentrant model
  2954 ;;
  2955                           
  2956                           
  2957                           ;psect for function _adc_conversion2
  2958  05B9                     _adc_conversion2:
  2959  05B9                     l1689:	
  2960                           ;incstack = 0
  2961                           ; Regs used in _adc_conversion2: [wreg]
  2962                           
  2963                           
  2964                           ;LCD.c: 216:     y1 = x1 % 10;
  2965  05B9  1283               	bcf	3,5	;RP0=0, select bank0
  2966  05BA  1303               	bcf	3,6	;RP1=0, select bank0
  2967  05BB  149F               	bsf	31,1	;volatile
  2968  05BC                     l1691:
  2969                           
  2970                           ;LCD.c: 217:     y2 = y1 / 1;
  2971  05BC  300D               	movlw	13
  2972  05BD  00F4               	movwf	??_adc_conversion2+1
  2973  05BE  30FB               	movlw	251
  2974  05BF  00F3               	movwf	??_adc_conversion2
  2975  05C0                     u867:
  2976  05C0  0BF3               	decfsz	??_adc_conversion2,f
  2977  05C1  2DC0               	goto	u867
  2978  05C2  0BF4               	decfsz	??_adc_conversion2+1,f
  2979  05C3  2DC0               	goto	u867
  2980  05C4  2DC5               	nop2
  2981  05C5                     l1693:
  2982                           
  2983                           ;LCD.c: 218:     Lcd_Write_Char(unidad+48);
  2984  05C5  1283               	bcf	3,5	;RP0=0, select bank0
  2985  05C6  1303               	bcf	3,6	;RP1=0, select bank0
  2986  05C7  189F               	btfsc	31,1	;volatile
  2987  05C8  2DCA               	goto	u691
  2988  05C9  2DCB               	goto	u690
  2989  05CA                     u691:
  2990  05CA  2DD0               	goto	l179
  2991  05CB                     u690:
  2992  05CB                     l1695:
  2993                           
  2994                           ;LCD.c: 219:     Lcd_Write_Char(46);;LCD.c: 220:     Lcd_Write_Char(x2+48);
  2995  05CB  149F               	bsf	31,1	;volatile
  2996  05CC                     l1697:
  2997                           
  2998                           ;LCD.c: 221:     Lcd_Write_Char(y2+48);
  2999  05CC  081E               	movf	30,w	;volatile
  3000  05CD  00F3               	movwf	??_adc_conversion2
  3001  05CE  0873               	movf	??_adc_conversion2,w
  3002  05CF  00B1               	movwf	_adc_value2
  3003  05D0                     l179:
  3004  05D0  0008               	return
  3005  05D1                     __end_of_adc_conversion2:
  3006                           
  3007                           	psect	text18
  3008  05D1                     __ptext18:	
  3009 ;; *************** function _adc_conversion1 *****************
  3010 ;; Defined at:
  3011 ;;		line 203 in file "LCD.c"
  3012 ;; Parameters:    Size  Location     Type
  3013 ;;		None
  3014 ;; Auto vars:     Size  Location     Type
  3015 ;;		None
  3016 ;; Return value:  Size  Location     Type
  3017 ;;                  1    wreg      void 
  3018 ;; Registers used:
  3019 ;;		wreg
  3020 ;; Tracked objects:
  3021 ;;		On entry : 0/0
  3022 ;;		On exit  : 0/0
  3023 ;;		Unchanged: 0/0
  3024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3025 ;;      Params:         0       0       0       0       0
  3026 ;;      Locals:         0       0       0       0       0
  3027 ;;      Temps:          2       0       0       0       0
  3028 ;;      Totals:         2       0       0       0       0
  3029 ;;Total ram usage:        2 bytes
  3030 ;; Hardware stack levels used:    1
  3031 ;; Hardware stack levels required when called:    2
  3032 ;; This function calls:
  3033 ;;		Nothing
  3034 ;; This function is called by:
  3035 ;;		_main
  3036 ;; This function uses a non-reentrant model
  3037 ;;
  3038                           
  3039                           
  3040                           ;psect for function _adc_conversion1
  3041  05D1                     _adc_conversion1:
  3042  05D1                     l1679:	
  3043                           ;incstack = 0
  3044                           ; Regs used in _adc_conversion1: [wreg]
  3045                           
  3046                           
  3047                           ;LCD.c: 205:         Lcd_Write_Char(w1+48);
  3048  05D1  1283               	bcf	3,5	;RP0=0, select bank0
  3049  05D2  1303               	bcf	3,6	;RP1=0, select bank0
  3050  05D3  149F               	bsf	31,1	;volatile
  3051  05D4                     l1681:
  3052                           
  3053                           ;LCD.c: 206:         Lcd_Write_Char(w2+48);
  3054  05D4  300D               	movlw	13
  3055  05D5  00F4               	movwf	??_adc_conversion1+1
  3056  05D6  30FB               	movlw	251
  3057  05D7  00F3               	movwf	??_adc_conversion1
  3058  05D8                     u877:
  3059  05D8  0BF3               	decfsz	??_adc_conversion1,f
  3060  05D9  2DD8               	goto	u877
  3061  05DA  0BF4               	decfsz	??_adc_conversion1+1,f
  3062  05DB  2DD8               	goto	u877
  3063  05DC  2DDD               	nop2
  3064  05DD                     l1683:
  3065                           
  3066                           ;LCD.c: 207:     }
  3067  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  3068  05DE  1303               	bcf	3,6	;RP1=0, select bank0
  3069  05DF  189F               	btfsc	31,1	;volatile
  3070  05E0  2DE2               	goto	u681
  3071  05E1  2DE3               	goto	u680
  3072  05E2                     u681:
  3073  05E2  2DE8               	goto	l175
  3074  05E3                     u680:
  3075  05E3                     l1685:
  3076                           
  3077                           ;LCD.c: 208: };LCD.c: 209: 
  3078  05E3  149F               	bsf	31,1	;volatile
  3079  05E4                     l1687:
  3080                           
  3081                           ;LCD.c: 210: void Conversion1 ()
  3082  05E4  081E               	movf	30,w	;volatile
  3083  05E5  00F3               	movwf	??_adc_conversion1
  3084  05E6  0873               	movf	??_adc_conversion1,w
  3085  05E7  00B2               	movwf	_adc_value1
  3086  05E8                     l175:
  3087  05E8  0008               	return
  3088  05E9                     __end_of_adc_conversion1:
  3089                           
  3090                           	psect	text19
  3091  0662                     __ptext19:	
  3092 ;; *************** function _adc_config *****************
  3093 ;; Defined at:
  3094 ;;		line 189 in file "LCD.c"
  3095 ;; Parameters:    Size  Location     Type
  3096 ;;		None
  3097 ;; Auto vars:     Size  Location     Type
  3098 ;;		None
  3099 ;; Return value:  Size  Location     Type
  3100 ;;                  1    wreg      void 
  3101 ;; Registers used:
  3102 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3103 ;; Tracked objects:
  3104 ;;		On entry : 0/0
  3105 ;;		On exit  : 0/0
  3106 ;;		Unchanged: 0/0
  3107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3108 ;;      Params:         0       0       0       0       0
  3109 ;;      Locals:         0       0       0       0       0
  3110 ;;      Temps:          0       0       0       0       0
  3111 ;;      Totals:         0       0       0       0       0
  3112 ;;Total ram usage:        0 bytes
  3113 ;; Hardware stack levels used:    1
  3114 ;; Hardware stack levels required when called:    3
  3115 ;; This function calls:
  3116 ;;		_initADC
  3117 ;; This function is called by:
  3118 ;;		_main
  3119 ;; This function uses a non-reentrant model
  3120 ;;
  3121                           
  3122                           
  3123                           ;psect for function _adc_config
  3124  0662                     _adc_config:
  3125  0662                     l1653:	
  3126                           ;incstack = 0
  3127                           ; Regs used in _adc_config: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3128                           
  3129                           
  3130                           ;LCD.c: 191:     Conversion1 ();
  3131  0662  3000               	movlw	0
  3132  0663  120A  118A  201F  120A  118A  	fcall	_initADC
  3133  0668                     l168:
  3134  0668  0008               	return
  3135  0669                     __end_of_adc_config:
  3136                           
  3137                           	psect	text20
  3138  001F                     __ptext20:	
  3139 ;; *************** function _initADC *****************
  3140 ;; Defined at:
  3141 ;;		line 19 in file "ADC_lib.c"
  3142 ;; Parameters:    Size  Location     Type
  3143 ;;  CHS             1    wreg     unsigned char 
  3144 ;; Auto vars:     Size  Location     Type
  3145 ;;  CHS             1    5[COMMON] unsigned char 
  3146 ;; Return value:  Size  Location     Type
  3147 ;;                  1    wreg      void 
  3148 ;; Registers used:
  3149 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3150 ;; Tracked objects:
  3151 ;;		On entry : 0/0
  3152 ;;		On exit  : 0/0
  3153 ;;		Unchanged: 0/0
  3154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3155 ;;      Params:         0       0       0       0       0
  3156 ;;      Locals:         1       0       0       0       0
  3157 ;;      Temps:          2       0       0       0       0
  3158 ;;      Totals:         3       0       0       0       0
  3159 ;;Total ram usage:        3 bytes
  3160 ;; Hardware stack levels used:    1
  3161 ;; Hardware stack levels required when called:    2
  3162 ;; This function calls:
  3163 ;;		Nothing
  3164 ;; This function is called by:
  3165 ;;		_main
  3166 ;;		_adc_config
  3167 ;; This function uses a non-reentrant model
  3168 ;;
  3169                           
  3170                           
  3171                           ;psect for function _initADC
  3172  001F                     _initADC:
  3173                           
  3174                           ;incstack = 0
  3175                           ; Regs used in _initADC: [wreg-fsr0h+status,2+status,0]
  3176                           ;initADC@CHS stored from wreg
  3177  001F  00F5               	movwf	initADC@CHS
  3178  0020                     l1453:
  3179                           
  3180                           ;ADC_lib.c: 19: void initADC (uint8_t CHS);ADC_lib.c: 20: {;ADC_lib.c: 21:     switch (C
      +                          HS)
  3181  0020  288A               	goto	l1457
  3182  0021                     l229:	
  3183                           ;ADC_lib.c: 22:     {;ADC_lib.c: 23:         case 0:
  3184                           
  3185                           
  3186                           ;ADC_lib.c: 24:             ADCON0bits.CHS3 = 0;
  3187  0021  1283               	bcf	3,5	;RP0=0, select bank0
  3188  0022  1303               	bcf	3,6	;RP1=0, select bank0
  3189  0023  129F               	bcf	31,5	;volatile
  3190                           
  3191                           ;ADC_lib.c: 25:             ADCON0bits.CHS2 = 0;
  3192  0024  121F               	bcf	31,4	;volatile
  3193                           
  3194                           ;ADC_lib.c: 26:             ADCON0bits.CHS1 = 0;
  3195  0025  119F               	bcf	31,3	;volatile
  3196                           
  3197                           ;ADC_lib.c: 27:             ADCON0bits.CHS0 = 0;
  3198  0026  111F               	bcf	31,2	;volatile
  3199                           
  3200                           ;ADC_lib.c: 28:             break;
  3201  0027  28BE               	goto	l230
  3202  0028                     l231:	
  3203                           ;ADC_lib.c: 29:         case 1:
  3204                           
  3205                           
  3206                           ;ADC_lib.c: 30:             ADCON0bits.CHS3 = 0;
  3207  0028  1283               	bcf	3,5	;RP0=0, select bank0
  3208  0029  1303               	bcf	3,6	;RP1=0, select bank0
  3209  002A  129F               	bcf	31,5	;volatile
  3210                           
  3211                           ;ADC_lib.c: 31:             ADCON0bits.CHS2 = 0;
  3212  002B  121F               	bcf	31,4	;volatile
  3213                           
  3214                           ;ADC_lib.c: 32:             ADCON0bits.CHS1 = 0;
  3215  002C  119F               	bcf	31,3	;volatile
  3216                           
  3217                           ;ADC_lib.c: 33:             ADCON0bits.CHS0 = 1;
  3218  002D  151F               	bsf	31,2	;volatile
  3219                           
  3220                           ;ADC_lib.c: 34:             break;
  3221  002E  28BE               	goto	l230
  3222  002F                     l232:	
  3223                           ;ADC_lib.c: 36:         case 2:
  3224                           
  3225                           
  3226                           ;ADC_lib.c: 37:             ADCON0bits.CHS3 = 0;
  3227  002F  1283               	bcf	3,5	;RP0=0, select bank0
  3228  0030  1303               	bcf	3,6	;RP1=0, select bank0
  3229  0031  129F               	bcf	31,5	;volatile
  3230                           
  3231                           ;ADC_lib.c: 38:             ADCON0bits.CHS2 = 0;
  3232  0032  121F               	bcf	31,4	;volatile
  3233                           
  3234                           ;ADC_lib.c: 39:             ADCON0bits.CHS1 = 1;
  3235  0033  159F               	bsf	31,3	;volatile
  3236                           
  3237                           ;ADC_lib.c: 40:             ADCON0bits.CHS0 = 0;
  3238  0034  111F               	bcf	31,2	;volatile
  3239                           
  3240                           ;ADC_lib.c: 41:             break;
  3241  0035  28BE               	goto	l230
  3242  0036                     l233:	
  3243                           ;ADC_lib.c: 43:         case 3:
  3244                           
  3245                           
  3246                           ;ADC_lib.c: 44:             ADCON0bits.CHS3 = 0;
  3247  0036  1283               	bcf	3,5	;RP0=0, select bank0
  3248  0037  1303               	bcf	3,6	;RP1=0, select bank0
  3249  0038  129F               	bcf	31,5	;volatile
  3250                           
  3251                           ;ADC_lib.c: 45:             ADCON0bits.CHS2 = 0;
  3252  0039  121F               	bcf	31,4	;volatile
  3253                           
  3254                           ;ADC_lib.c: 46:             ADCON0bits.CHS1 = 1;
  3255  003A  159F               	bsf	31,3	;volatile
  3256                           
  3257                           ;ADC_lib.c: 47:             ADCON0bits.CHS0 = 1;
  3258  003B  151F               	bsf	31,2	;volatile
  3259                           
  3260                           ;ADC_lib.c: 48:             break;
  3261  003C  28BE               	goto	l230
  3262  003D                     l234:	
  3263                           ;ADC_lib.c: 50:         case 4:
  3264                           
  3265                           
  3266                           ;ADC_lib.c: 51:             ADCON0bits.CHS3 = 0;
  3267  003D  1283               	bcf	3,5	;RP0=0, select bank0
  3268  003E  1303               	bcf	3,6	;RP1=0, select bank0
  3269  003F  129F               	bcf	31,5	;volatile
  3270                           
  3271                           ;ADC_lib.c: 52:             ADCON0bits.CHS2 = 1;
  3272  0040  161F               	bsf	31,4	;volatile
  3273                           
  3274                           ;ADC_lib.c: 53:             ADCON0bits.CHS1 = 0;
  3275  0041  119F               	bcf	31,3	;volatile
  3276                           
  3277                           ;ADC_lib.c: 54:             ADCON0bits.CHS0 = 0;
  3278  0042  111F               	bcf	31,2	;volatile
  3279                           
  3280                           ;ADC_lib.c: 55:             break;
  3281  0043  28BE               	goto	l230
  3282  0044                     l235:	
  3283                           ;ADC_lib.c: 57:         case 5:
  3284                           
  3285                           
  3286                           ;ADC_lib.c: 58:             ADCON0bits.CHS3 = 0;
  3287  0044  1283               	bcf	3,5	;RP0=0, select bank0
  3288  0045  1303               	bcf	3,6	;RP1=0, select bank0
  3289  0046  129F               	bcf	31,5	;volatile
  3290                           
  3291                           ;ADC_lib.c: 59:             ADCON0bits.CHS2 = 1;
  3292  0047  161F               	bsf	31,4	;volatile
  3293                           
  3294                           ;ADC_lib.c: 60:             ADCON0bits.CHS1 = 0;
  3295  0048  119F               	bcf	31,3	;volatile
  3296                           
  3297                           ;ADC_lib.c: 61:             ADCON0bits.CHS0 = 1;
  3298  0049  151F               	bsf	31,2	;volatile
  3299                           
  3300                           ;ADC_lib.c: 62:             break;
  3301  004A  28BE               	goto	l230
  3302  004B                     l236:	
  3303                           ;ADC_lib.c: 64:         case 6:
  3304                           
  3305                           
  3306                           ;ADC_lib.c: 65:             ADCON0bits.CHS3 = 0;
  3307  004B  1283               	bcf	3,5	;RP0=0, select bank0
  3308  004C  1303               	bcf	3,6	;RP1=0, select bank0
  3309  004D  129F               	bcf	31,5	;volatile
  3310                           
  3311                           ;ADC_lib.c: 66:             ADCON0bits.CHS2 = 1;
  3312  004E  161F               	bsf	31,4	;volatile
  3313                           
  3314                           ;ADC_lib.c: 67:             ADCON0bits.CHS1 = 1;
  3315  004F  159F               	bsf	31,3	;volatile
  3316                           
  3317                           ;ADC_lib.c: 68:             ADCON0bits.CHS0 = 0;
  3318  0050  111F               	bcf	31,2	;volatile
  3319                           
  3320                           ;ADC_lib.c: 69:             break;
  3321  0051  28BE               	goto	l230
  3322  0052                     l237:	
  3323                           ;ADC_lib.c: 71:         case 7:
  3324                           
  3325                           
  3326                           ;ADC_lib.c: 72:             ADCON0bits.CHS3 = 0;
  3327  0052  1283               	bcf	3,5	;RP0=0, select bank0
  3328  0053  1303               	bcf	3,6	;RP1=0, select bank0
  3329  0054  129F               	bcf	31,5	;volatile
  3330                           
  3331                           ;ADC_lib.c: 73:             ADCON0bits.CHS2 = 1;
  3332  0055  161F               	bsf	31,4	;volatile
  3333                           
  3334                           ;ADC_lib.c: 74:             ADCON0bits.CHS1 = 1;
  3335  0056  159F               	bsf	31,3	;volatile
  3336                           
  3337                           ;ADC_lib.c: 75:             ADCON0bits.CHS0 = 1;
  3338  0057  151F               	bsf	31,2	;volatile
  3339                           
  3340                           ;ADC_lib.c: 76:             break;
  3341  0058  28BE               	goto	l230
  3342  0059                     l238:	
  3343                           ;ADC_lib.c: 78:         case 8:
  3344                           
  3345                           
  3346                           ;ADC_lib.c: 79:             ADCON0bits.CHS3 = 1;
  3347  0059  1283               	bcf	3,5	;RP0=0, select bank0
  3348  005A  1303               	bcf	3,6	;RP1=0, select bank0
  3349  005B  169F               	bsf	31,5	;volatile
  3350                           
  3351                           ;ADC_lib.c: 80:             ADCON0bits.CHS2 = 0;
  3352  005C  121F               	bcf	31,4	;volatile
  3353                           
  3354                           ;ADC_lib.c: 81:             ADCON0bits.CHS1 = 0;
  3355  005D  119F               	bcf	31,3	;volatile
  3356                           
  3357                           ;ADC_lib.c: 82:             ADCON0bits.CHS0 = 0;
  3358  005E  111F               	bcf	31,2	;volatile
  3359                           
  3360                           ;ADC_lib.c: 83:             break;
  3361  005F  28BE               	goto	l230
  3362  0060                     l239:	
  3363                           ;ADC_lib.c: 85:         case 9:
  3364                           
  3365                           
  3366                           ;ADC_lib.c: 86:             ADCON0bits.CHS3 = 1;
  3367  0060  1283               	bcf	3,5	;RP0=0, select bank0
  3368  0061  1303               	bcf	3,6	;RP1=0, select bank0
  3369  0062  169F               	bsf	31,5	;volatile
  3370                           
  3371                           ;ADC_lib.c: 87:             ADCON0bits.CHS2 = 0;
  3372  0063  121F               	bcf	31,4	;volatile
  3373                           
  3374                           ;ADC_lib.c: 88:             ADCON0bits.CHS1 = 0;
  3375  0064  119F               	bcf	31,3	;volatile
  3376                           
  3377                           ;ADC_lib.c: 89:             ADCON0bits.CHS0 = 1;
  3378  0065  151F               	bsf	31,2	;volatile
  3379                           
  3380                           ;ADC_lib.c: 90:             break;
  3381  0066  28BE               	goto	l230
  3382  0067                     l240:	
  3383                           ;ADC_lib.c: 92:         case 10:
  3384                           
  3385                           
  3386                           ;ADC_lib.c: 93:             ADCON0bits.CHS3 = 1;
  3387  0067  1283               	bcf	3,5	;RP0=0, select bank0
  3388  0068  1303               	bcf	3,6	;RP1=0, select bank0
  3389  0069  169F               	bsf	31,5	;volatile
  3390                           
  3391                           ;ADC_lib.c: 94:             ADCON0bits.CHS2 = 0;
  3392  006A  121F               	bcf	31,4	;volatile
  3393                           
  3394                           ;ADC_lib.c: 95:             ADCON0bits.CHS1 = 1;
  3395  006B  159F               	bsf	31,3	;volatile
  3396                           
  3397                           ;ADC_lib.c: 96:             ADCON0bits.CHS0 = 0;
  3398  006C  111F               	bcf	31,2	;volatile
  3399                           
  3400                           ;ADC_lib.c: 97:             break;
  3401  006D  28BE               	goto	l230
  3402  006E                     l241:	
  3403                           ;ADC_lib.c: 99:         case 11:
  3404                           
  3405                           
  3406                           ;ADC_lib.c: 100:             ADCON0bits.CHS3 = 1;
  3407  006E  1283               	bcf	3,5	;RP0=0, select bank0
  3408  006F  1303               	bcf	3,6	;RP1=0, select bank0
  3409  0070  169F               	bsf	31,5	;volatile
  3410                           
  3411                           ;ADC_lib.c: 101:             ADCON0bits.CHS2 = 0;
  3412  0071  121F               	bcf	31,4	;volatile
  3413                           
  3414                           ;ADC_lib.c: 102:             ADCON0bits.CHS1 = 1;
  3415  0072  159F               	bsf	31,3	;volatile
  3416                           
  3417                           ;ADC_lib.c: 103:             ADCON0bits.CHS0 = 1;
  3418  0073  151F               	bsf	31,2	;volatile
  3419                           
  3420                           ;ADC_lib.c: 104:             break;
  3421  0074  28BE               	goto	l230
  3422  0075                     l242:	
  3423                           ;ADC_lib.c: 106:         case 12:
  3424                           
  3425                           
  3426                           ;ADC_lib.c: 107:             ADCON0bits.CHS3 = 1;
  3427  0075  1283               	bcf	3,5	;RP0=0, select bank0
  3428  0076  1303               	bcf	3,6	;RP1=0, select bank0
  3429  0077  169F               	bsf	31,5	;volatile
  3430                           
  3431                           ;ADC_lib.c: 108:             ADCON0bits.CHS2 = 1;
  3432  0078  161F               	bsf	31,4	;volatile
  3433                           
  3434                           ;ADC_lib.c: 109:             ADCON0bits.CHS1 = 0;
  3435  0079  119F               	bcf	31,3	;volatile
  3436                           
  3437                           ;ADC_lib.c: 110:             ADCON0bits.CHS0 = 0;
  3438  007A  111F               	bcf	31,2	;volatile
  3439                           
  3440                           ;ADC_lib.c: 111:             break;
  3441  007B  28BE               	goto	l230
  3442  007C                     l243:	
  3443                           ;ADC_lib.c: 113:         case 13:
  3444                           
  3445                           
  3446                           ;ADC_lib.c: 114:             ADCON0bits.CHS3 = 1;
  3447  007C  1283               	bcf	3,5	;RP0=0, select bank0
  3448  007D  1303               	bcf	3,6	;RP1=0, select bank0
  3449  007E  169F               	bsf	31,5	;volatile
  3450                           
  3451                           ;ADC_lib.c: 115:             ADCON0bits.CHS2 = 1;
  3452  007F  161F               	bsf	31,4	;volatile
  3453                           
  3454                           ;ADC_lib.c: 116:             ADCON0bits.CHS1 = 0;
  3455  0080  119F               	bcf	31,3	;volatile
  3456                           
  3457                           ;ADC_lib.c: 117:             ADCON0bits.CHS0 = 1;
  3458  0081  151F               	bsf	31,2	;volatile
  3459                           
  3460                           ;ADC_lib.c: 118:             break;
  3461  0082  28BE               	goto	l230
  3462  0083                     l244:	
  3463                           ;ADC_lib.c: 120:         default:
  3464                           
  3465                           
  3466                           ;ADC_lib.c: 121:             ADCON0bits.CHS3 = 1;
  3467  0083  1283               	bcf	3,5	;RP0=0, select bank0
  3468  0084  1303               	bcf	3,6	;RP1=0, select bank0
  3469  0085  169F               	bsf	31,5	;volatile
  3470                           
  3471                           ;ADC_lib.c: 122:             ADCON0bits.CHS2 = 1;
  3472  0086  161F               	bsf	31,4	;volatile
  3473                           
  3474                           ;ADC_lib.c: 123:             ADCON0bits.CHS1 = 1;
  3475  0087  159F               	bsf	31,3	;volatile
  3476                           
  3477                           ;ADC_lib.c: 124:             ADCON0bits.CHS0 = 0;
  3478  0088  111F               	bcf	31,2	;volatile
  3479                           
  3480                           ;ADC_lib.c: 125:             break;
  3481  0089  28BE               	goto	l230
  3482  008A                     l1457:
  3483  008A  0875               	movf	initADC@CHS,w
  3484  008B  00F3               	movwf	??_initADC
  3485  008C  01F4               	clrf	??_initADC+1
  3486                           
  3487                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3488                           ; Switch size 1, requested type "simple"
  3489                           ; Number of cases is 1, Range of values is 0 to 0
  3490                           ; switch strategies available:
  3491                           ; Name         Instructions Cycles
  3492                           ; simple_byte            4     3 (average)
  3493                           ; direct_byte           11     8 (fixed)
  3494                           ; jumptable            260     6 (fixed)
  3495                           ;	Chosen strategy is simple_byte
  3496  008D  0874               	movf	??_initADC+1,w
  3497  008E  3A00               	xorlw	0	; case 0
  3498  008F  1903               	skipnz
  3499  0090  2892               	goto	l1979
  3500  0091  2883               	goto	l244
  3501  0092                     l1979:
  3502                           
  3503                           ; Switch size 1, requested type "simple"
  3504                           ; Number of cases is 14, Range of values is 0 to 13
  3505                           ; switch strategies available:
  3506                           ; Name         Instructions Cycles
  3507                           ; simple_byte           43    22 (average)
  3508                           ; direct_byte           50     8 (fixed)
  3509                           ; jumptable            260     6 (fixed)
  3510                           ;	Chosen strategy is simple_byte
  3511  0092  0873               	movf	??_initADC,w
  3512  0093  3A00               	xorlw	0	; case 0
  3513  0094  1903               	skipnz
  3514  0095  2821               	goto	l229
  3515  0096  3A01               	xorlw	1	; case 1
  3516  0097  1903               	skipnz
  3517  0098  2828               	goto	l231
  3518  0099  3A03               	xorlw	3	; case 2
  3519  009A  1903               	skipnz
  3520  009B  282F               	goto	l232
  3521  009C  3A01               	xorlw	1	; case 3
  3522  009D  1903               	skipnz
  3523  009E  2836               	goto	l233
  3524  009F  3A07               	xorlw	7	; case 4
  3525  00A0  1903               	skipnz
  3526  00A1  283D               	goto	l234
  3527  00A2  3A01               	xorlw	1	; case 5
  3528  00A3  1903               	skipnz
  3529  00A4  2844               	goto	l235
  3530  00A5  3A03               	xorlw	3	; case 6
  3531  00A6  1903               	skipnz
  3532  00A7  284B               	goto	l236
  3533  00A8  3A01               	xorlw	1	; case 7
  3534  00A9  1903               	skipnz
  3535  00AA  2852               	goto	l237
  3536  00AB  3A0F               	xorlw	15	; case 8
  3537  00AC  1903               	skipnz
  3538  00AD  2859               	goto	l238
  3539  00AE  3A01               	xorlw	1	; case 9
  3540  00AF  1903               	skipnz
  3541  00B0  2860               	goto	l239
  3542  00B1  3A03               	xorlw	3	; case 10
  3543  00B2  1903               	skipnz
  3544  00B3  2867               	goto	l240
  3545  00B4  3A01               	xorlw	1	; case 11
  3546  00B5  1903               	skipnz
  3547  00B6  286E               	goto	l241
  3548  00B7  3A07               	xorlw	7	; case 12
  3549  00B8  1903               	skipnz
  3550  00B9  2875               	goto	l242
  3551  00BA  3A01               	xorlw	1	; case 13
  3552  00BB  1903               	skipnz
  3553  00BC  287C               	goto	l243
  3554  00BD  2883               	goto	l244
  3555  00BE                     l230:
  3556                           
  3557                           ;ADC_lib.c: 127:     ADCON0bits.ADCS1 = 1;
  3558  00BE  179F               	bsf	31,7	;volatile
  3559                           
  3560                           ;ADC_lib.c: 128:     ADCON0bits.ADCS0 = 0;
  3561  00BF  131F               	bcf	31,6	;volatile
  3562                           
  3563                           ;ADC_lib.c: 129:     ADCON0bits.GO_DONE= 0;
  3564  00C0  109F               	bcf	31,1	;volatile
  3565                           
  3566                           ;ADC_lib.c: 130:     ADCON0bits.ADON = 1;
  3567  00C1  141F               	bsf	31,0	;volatile
  3568                           
  3569                           ;ADC_lib.c: 132:     ADCON1bits.ADFM = 0;
  3570  00C2  1683               	bsf	3,5	;RP0=1, select bank1
  3571  00C3  1303               	bcf	3,6	;RP1=0, select bank1
  3572  00C4  139F               	bcf	31,7	;volatile
  3573                           
  3574                           ;ADC_lib.c: 133:     ADCON1bits.VCFG1 = 0;
  3575  00C5  129F               	bcf	31,5	;volatile
  3576                           
  3577                           ;ADC_lib.c: 134:     ADCON1bits.VCFG0 = 0;
  3578  00C6  121F               	bcf	31,4	;volatile
  3579  00C7                     l245:
  3580  00C7  0008               	return
  3581  00C8                     __end_of_initADC:
  3582                           
  3583                           	psect	text21
  3584  0669                     __ptext21:	
  3585 ;; *************** function _USART_config *****************
  3586 ;; Defined at:
  3587 ;;		line 194 in file "LCD.c"
  3588 ;; Parameters:    Size  Location     Type
  3589 ;;		None
  3590 ;; Auto vars:     Size  Location     Type
  3591 ;;		None
  3592 ;; Return value:  Size  Location     Type
  3593 ;;                  1    wreg      void 
  3594 ;; Registers used:
  3595 ;;		wreg, status,2, status,0, pclath, cstack
  3596 ;; Tracked objects:
  3597 ;;		On entry : 0/0
  3598 ;;		On exit  : 0/0
  3599 ;;		Unchanged: 0/0
  3600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3601 ;;      Params:         0       0       0       0       0
  3602 ;;      Locals:         0       0       0       0       0
  3603 ;;      Temps:          0       0       0       0       0
  3604 ;;      Totals:         0       0       0       0       0
  3605 ;;Total ram usage:        0 bytes
  3606 ;; Hardware stack levels used:    1
  3607 ;; Hardware stack levels required when called:    3
  3608 ;; This function calls:
  3609 ;;		_USART_lib_config
  3610 ;; This function is called by:
  3611 ;;		_main
  3612 ;; This function uses a non-reentrant model
  3613 ;;
  3614                           
  3615                           
  3616                           ;psect for function _USART_config
  3617  0669                     _USART_config:
  3618  0669                     l1655:	
  3619                           ;incstack = 0
  3620                           ; Regs used in _USART_config: [wreg+status,2+status,0+pclath+cstack]
  3621                           
  3622                           
  3623                           ;LCD.c: 196:     {
  3624  0669  120A  118A  2566  120A  118A  	fcall	_USART_lib_config
  3625  066E                     l171:
  3626  066E  0008               	return
  3627  066F                     __end_of_USART_config:
  3628                           
  3629                           	psect	text22
  3630  0566                     __ptext22:	
  3631 ;; *************** function _USART_lib_config *****************
  3632 ;; Defined at:
  3633 ;;		line 18 in file "USART.c"
  3634 ;; Parameters:    Size  Location     Type
  3635 ;;		None
  3636 ;; Auto vars:     Size  Location     Type
  3637 ;;		None
  3638 ;; Return value:  Size  Location     Type
  3639 ;;                  1    wreg      void 
  3640 ;; Registers used:
  3641 ;;		wreg
  3642 ;; Tracked objects:
  3643 ;;		On entry : 0/0
  3644 ;;		On exit  : 0/0
  3645 ;;		Unchanged: 0/0
  3646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3647 ;;      Params:         0       0       0       0       0
  3648 ;;      Locals:         0       0       0       0       0
  3649 ;;      Temps:          0       0       0       0       0
  3650 ;;      Totals:         0       0       0       0       0
  3651 ;;Total ram usage:        0 bytes
  3652 ;; Hardware stack levels used:    1
  3653 ;; Hardware stack levels required when called:    2
  3654 ;; This function calls:
  3655 ;;		Nothing
  3656 ;; This function is called by:
  3657 ;;		_USART_config
  3658 ;; This function uses a non-reentrant model
  3659 ;;
  3660                           
  3661                           
  3662                           ;psect for function _USART_lib_config
  3663  0566                     _USART_lib_config:
  3664  0566                     l1463:	
  3665                           ;incstack = 0
  3666                           ; Regs used in _USART_lib_config: [wreg]
  3667                           
  3668                           
  3669                           ;USART.c: 20:     SPBRG = 25;
  3670  0566  3019               	movlw	25
  3671  0567  1683               	bsf	3,5	;RP0=1, select bank1
  3672  0568  1303               	bcf	3,6	;RP1=0, select bank1
  3673  0569  0099               	movwf	25	;volatile
  3674  056A                     l1465:
  3675                           
  3676                           ;USART.c: 22:     TXSTAbits.CSRC = 0;
  3677  056A  1398               	bcf	24,7	;volatile
  3678  056B                     l1467:
  3679                           
  3680                           ;USART.c: 23:     TXSTAbits.TX9 = 0;
  3681  056B  1318               	bcf	24,6	;volatile
  3682  056C                     l1469:
  3683                           
  3684                           ;USART.c: 24:     TXSTAbits.TXEN = 1;
  3685  056C  1698               	bsf	24,5	;volatile
  3686  056D                     l1471:
  3687                           
  3688                           ;USART.c: 25:     TXSTAbits.SYNC = 0;
  3689  056D  1218               	bcf	24,4	;volatile
  3690  056E                     l1473:
  3691                           
  3692                           ;USART.c: 26:     TXSTAbits.SENDB= 0;
  3693  056E  1198               	bcf	24,3	;volatile
  3694  056F                     l1475:
  3695                           
  3696                           ;USART.c: 27:     TXSTAbits.BRGH = 1;
  3697  056F  1518               	bsf	24,2	;volatile
  3698  0570                     l1477:
  3699                           
  3700                           ;USART.c: 28:     TXSTAbits.TRMT = 0;
  3701  0570  1098               	bcf	24,1	;volatile
  3702  0571                     l1479:
  3703                           
  3704                           ;USART.c: 29:     TXSTAbits.TX9D = 0;
  3705  0571  1018               	bcf	24,0	;volatile
  3706  0572                     l1481:
  3707                           
  3708                           ;USART.c: 31:     RCSTAbits.SPEN = 1;
  3709  0572  1283               	bcf	3,5	;RP0=0, select bank0
  3710  0573  1303               	bcf	3,6	;RP1=0, select bank0
  3711  0574  1798               	bsf	24,7	;volatile
  3712  0575                     l1483:
  3713                           
  3714                           ;USART.c: 32:     RCSTAbits.RX9 = 0;
  3715  0575  1318               	bcf	24,6	;volatile
  3716  0576                     l1485:
  3717                           
  3718                           ;USART.c: 33:     RCSTAbits.SREN = 0;
  3719  0576  1298               	bcf	24,5	;volatile
  3720  0577                     l1487:
  3721                           
  3722                           ;USART.c: 34:     RCSTAbits.CREN = 1;
  3723  0577  1618               	bsf	24,4	;volatile
  3724  0578                     l1489:
  3725                           
  3726                           ;USART.c: 35:     RCSTAbits.ADDEN= 0;
  3727  0578  1198               	bcf	24,3	;volatile
  3728  0579                     l1491:
  3729                           
  3730                           ;USART.c: 36:     RCSTAbits.FERR = 0;
  3731  0579  1118               	bcf	24,2	;volatile
  3732  057A                     l1493:
  3733                           
  3734                           ;USART.c: 37:     RCSTAbits.OERR = 0;
  3735  057A  1098               	bcf	24,1	;volatile
  3736  057B                     l1495:
  3737                           
  3738                           ;USART.c: 38:     RCSTAbits.RX9D = 0;
  3739  057B  1018               	bcf	24,0	;volatile
  3740  057C                     l1497:
  3741                           
  3742                           ;USART.c: 40:     PIR1bits.RCIF = 0;
  3743  057C  128C               	bcf	12,5	;volatile
  3744  057D                     l1499:
  3745                           
  3746                           ;USART.c: 41:     PIE1bits.RCIE = 1;
  3747  057D  1683               	bsf	3,5	;RP0=1, select bank1
  3748  057E  1303               	bcf	3,6	;RP1=0, select bank1
  3749  057F  168C               	bsf	12,5	;volatile
  3750  0580                     l1501:
  3751                           
  3752                           ;USART.c: 42:     PIR1bits.TXIF = 0;
  3753  0580  1283               	bcf	3,5	;RP0=0, select bank0
  3754  0581  1303               	bcf	3,6	;RP1=0, select bank0
  3755  0582  120C               	bcf	12,4	;volatile
  3756  0583                     l299:
  3757  0583  0008               	return
  3758  0584                     __end_of_USART_lib_config:
  3759                           
  3760                           	psect	text23
  3761  02EF                     __ptext23:	
  3762 ;; *************** function _Lcd_Init *****************
  3763 ;; Defined at:
  3764 ;;		line 36 in file "LCD_8bits.c"
  3765 ;; Parameters:    Size  Location     Type
  3766 ;;		None
  3767 ;; Auto vars:     Size  Location     Type
  3768 ;;		None
  3769 ;; Return value:  Size  Location     Type
  3770 ;;                  1    wreg      void 
  3771 ;; Registers used:
  3772 ;;		wreg, status,2, status,0, pclath, cstack
  3773 ;; Tracked objects:
  3774 ;;		On entry : 0/0
  3775 ;;		On exit  : 0/0
  3776 ;;		Unchanged: 0/0
  3777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3778 ;;      Params:         0       0       0       0       0
  3779 ;;      Locals:         0       0       0       0       0
  3780 ;;      Temps:          0       2       0       0       0
  3781 ;;      Totals:         0       2       0       0       0
  3782 ;;Total ram usage:        2 bytes
  3783 ;; Hardware stack levels used:    1
  3784 ;; Hardware stack levels required when called:    4
  3785 ;; This function calls:
  3786 ;;		_Lcd_Cmd
  3787 ;;		_Lcd_Port
  3788 ;; This function is called by:
  3789 ;;		_main
  3790 ;; This function uses a non-reentrant model
  3791 ;;
  3792                           
  3793                           
  3794                           ;psect for function _Lcd_Init
  3795  02EF                     _Lcd_Init:
  3796  02EF                     l1885:	
  3797                           ;incstack = 0
  3798                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3799                           
  3800                           
  3801                           ;LCD_8bits.c: 38:     Lcd_Port(0b0000000);
  3802  02EF  3000               	movlw	0
  3803  02F0  120A  118A  266F  120A  118A  	fcall	_Lcd_Port
  3804  02F5                     l1887:
  3805                           
  3806                           ;LCD_8bits.c: 39:     _delay((unsigned long)((20)*(4000000/4000.0)));
  3807  02F5  301A               	movlw	26
  3808  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  3809  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  3810  02F8  00B5               	movwf	??_Lcd_Init+1
  3811  02F9  30F7               	movlw	247
  3812  02FA  00B4               	movwf	??_Lcd_Init
  3813  02FB                     u887:
  3814  02FB  0BB4               	decfsz	??_Lcd_Init,f
  3815  02FC  2AFB               	goto	u887
  3816  02FD  0BB5               	decfsz	??_Lcd_Init+1,f
  3817  02FE  2AFB               	goto	u887
  3818  02FF  2B00               	nop2
  3819  0300                     l1889:
  3820                           
  3821                           ;LCD_8bits.c: 40:     Lcd_Cmd(0b00110000);
  3822  0300  3030               	movlw	48
  3823  0301  120A  118A  25A0  120A  118A  	fcall	_Lcd_Cmd
  3824  0306                     l1891:
  3825                           
  3826                           ;LCD_8bits.c: 41:     PORTCbits.RC0 = 0;
  3827  0306  1283               	bcf	3,5	;RP0=0, select bank0
  3828  0307  1303               	bcf	3,6	;RP1=0, select bank0
  3829  0308  1007               	bcf	7,0	;volatile
  3830  0309                     l1893:
  3831                           
  3832                           ;LCD_8bits.c: 42:     PORTCbits.RC1 = 0;
  3833  0309  1087               	bcf	7,1	;volatile
  3834                           
  3835                           ;LCD_8bits.c: 43:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3836  030A  3007               	movlw	7
  3837  030B  1283               	bcf	3,5	;RP0=0, select bank0
  3838  030C  1303               	bcf	3,6	;RP1=0, select bank0
  3839  030D  00B5               	movwf	??_Lcd_Init+1
  3840  030E  307C               	movlw	124
  3841  030F  00B4               	movwf	??_Lcd_Init
  3842  0310                     u897:
  3843  0310  0BB4               	decfsz	??_Lcd_Init,f
  3844  0311  2B10               	goto	u897
  3845  0312  0BB5               	decfsz	??_Lcd_Init+1,f
  3846  0313  2B10               	goto	u897
  3847  0314  0000               	nop
  3848  0315                     l1895:
  3849                           
  3850                           ;LCD_8bits.c: 44:     Lcd_Cmd(0b00110000);
  3851  0315  3030               	movlw	48
  3852  0316  120A  118A  25A0  120A  118A  	fcall	_Lcd_Cmd
  3853  031B                     l1897:
  3854                           
  3855                           ;LCD_8bits.c: 45:      PORTCbits.RC0 = 0;
  3856  031B  1283               	bcf	3,5	;RP0=0, select bank0
  3857  031C  1303               	bcf	3,6	;RP1=0, select bank0
  3858  031D  1007               	bcf	7,0	;volatile
  3859  031E                     l1899:
  3860                           
  3861                           ;LCD_8bits.c: 46:     PORTCbits.RC1 = 0;
  3862  031E  1087               	bcf	7,1	;volatile
  3863  031F                     l1901:
  3864                           
  3865                           ;LCD_8bits.c: 47:     _delay((unsigned long)((11)*(4000000/4000.0)));
  3866  031F  300F               	movlw	15
  3867  0320  1283               	bcf	3,5	;RP0=0, select bank0
  3868  0321  1303               	bcf	3,6	;RP1=0, select bank0
  3869  0322  00B5               	movwf	??_Lcd_Init+1
  3870  0323  3047               	movlw	71
  3871  0324  00B4               	movwf	??_Lcd_Init
  3872  0325                     u907:
  3873  0325  0BB4               	decfsz	??_Lcd_Init,f
  3874  0326  2B25               	goto	u907
  3875  0327  0BB5               	decfsz	??_Lcd_Init+1,f
  3876  0328  2B25               	goto	u907
  3877                           
  3878                           ;LCD_8bits.c: 48:     Lcd_Cmd(0b00110000);
  3879  0329  3030               	movlw	48
  3880  032A  120A  118A  25A0  120A  118A  	fcall	_Lcd_Cmd
  3881  032F                     l1903:
  3882                           
  3883                           ;LCD_8bits.c: 49:     PORTCbits.RC0 = 0;
  3884  032F  1283               	bcf	3,5	;RP0=0, select bank0
  3885  0330  1303               	bcf	3,6	;RP1=0, select bank0
  3886  0331  1007               	bcf	7,0	;volatile
  3887  0332                     l1905:
  3888                           
  3889                           ;LCD_8bits.c: 50:     PORTCbits.RC1 = 0;
  3890  0332  1087               	bcf	7,1	;volatile
  3891                           
  3892                           ;LCD_8bits.c: 51:     Lcd_Cmd(0b00111000);
  3893  0333  3038               	movlw	56
  3894  0334  120A  118A  25A0  120A  118A  	fcall	_Lcd_Cmd
  3895                           
  3896                           ;LCD_8bits.c: 52:     Lcd_Cmd(0b00001100);
  3897  0339  300C               	movlw	12
  3898  033A  120A  118A  25A0  120A  118A  	fcall	_Lcd_Cmd
  3899                           
  3900                           ;LCD_8bits.c: 53:     Lcd_Cmd(0b00000001);
  3901  033F  3001               	movlw	1
  3902  0340  120A  118A  25A0  120A  118A  	fcall	_Lcd_Cmd
  3903                           
  3904                           ;LCD_8bits.c: 54:     Lcd_Cmd(0b00000110);
  3905  0345  3006               	movlw	6
  3906  0346  120A  118A  25A0  120A  118A  	fcall	_Lcd_Cmd
  3907  034B                     l262:
  3908  034B  0008               	return
  3909  034C                     __end_of_Lcd_Init:
  3910                           
  3911                           	psect	text24
  3912  05A0                     __ptext24:	
  3913 ;; *************** function _Lcd_Cmd *****************
  3914 ;; Defined at:
  3915 ;;		line 27 in file "LCD_8bits.c"
  3916 ;; Parameters:    Size  Location     Type
  3917 ;;  a               1    wreg     unsigned char 
  3918 ;; Auto vars:     Size  Location     Type
  3919 ;;  a               1    6[COMMON] unsigned char 
  3920 ;; Return value:  Size  Location     Type
  3921 ;;                  1    wreg      void 
  3922 ;; Registers used:
  3923 ;;		wreg, status,2, status,0, pclath, cstack
  3924 ;; Tracked objects:
  3925 ;;		On entry : 0/0
  3926 ;;		On exit  : 0/0
  3927 ;;		Unchanged: 0/0
  3928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3929 ;;      Params:         0       0       0       0       0
  3930 ;;      Locals:         1       0       0       0       0
  3931 ;;      Temps:          2       0       0       0       0
  3932 ;;      Totals:         3       0       0       0       0
  3933 ;;Total ram usage:        3 bytes
  3934 ;; Hardware stack levels used:    1
  3935 ;; Hardware stack levels required when called:    3
  3936 ;; This function calls:
  3937 ;;		_Lcd_Port
  3938 ;; This function is called by:
  3939 ;;		_Lcd_Init
  3940 ;;		_Lcd_Set_Cursor
  3941 ;;		_Lcd_Clear
  3942 ;;		_Lcd_Shift_Left
  3943 ;;		_Lcd_Shift_Right
  3944 ;; This function uses a non-reentrant model
  3945 ;;
  3946                           
  3947                           
  3948                           ;psect for function _Lcd_Cmd
  3949  05A0                     _Lcd_Cmd:
  3950                           
  3951                           ;incstack = 0
  3952                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3953                           ;Lcd_Cmd@a stored from wreg
  3954  05A0  00F6               	movwf	Lcd_Cmd@a
  3955  05A1                     l1767:
  3956                           
  3957                           ;LCD_8bits.c: 27: void Lcd_Cmd (char a);LCD_8bits.c: 28: {;LCD_8bits.c: 29:     PORTCbit
      +                          s.RC0 = 0;
  3958  05A1  1283               	bcf	3,5	;RP0=0, select bank0
  3959  05A2  1303               	bcf	3,6	;RP1=0, select bank0
  3960  05A3  1007               	bcf	7,0	;volatile
  3961  05A4                     l1769:
  3962                           
  3963                           ;LCD_8bits.c: 30:     Lcd_Port(a);
  3964  05A4  0876               	movf	Lcd_Cmd@a,w
  3965  05A5  120A  118A  266F  120A  118A  	fcall	_Lcd_Port
  3966  05AA                     l1771:
  3967                           
  3968                           ;LCD_8bits.c: 31:     PORTCbits.RC2 = 1;
  3969  05AA  1283               	bcf	3,5	;RP0=0, select bank0
  3970  05AB  1303               	bcf	3,6	;RP1=0, select bank0
  3971  05AC  1507               	bsf	7,2	;volatile
  3972  05AD                     l1773:
  3973                           
  3974                           ;LCD_8bits.c: 32:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3975  05AD  3007               	movlw	7
  3976  05AE  00F5               	movwf	??_Lcd_Cmd+1
  3977  05AF  307D               	movlw	125
  3978  05B0  00F4               	movwf	??_Lcd_Cmd
  3979  05B1                     u917:
  3980  05B1  0BF4               	decfsz	??_Lcd_Cmd,f
  3981  05B2  2DB1               	goto	u917
  3982  05B3  0BF5               	decfsz	??_Lcd_Cmd+1,f
  3983  05B4  2DB1               	goto	u917
  3984  05B5                     l1775:
  3985                           
  3986                           ;LCD_8bits.c: 33:     PORTCbits.RC2 = 0;
  3987  05B5  1283               	bcf	3,5	;RP0=0, select bank0
  3988  05B6  1303               	bcf	3,6	;RP1=0, select bank0
  3989  05B7  1107               	bcf	7,2	;volatile
  3990  05B8                     l259:
  3991  05B8  0008               	return
  3992  05B9                     __end_of_Lcd_Cmd:
  3993                           
  3994                           	psect	text25
  3995  066F                     __ptext25:	
  3996 ;; *************** function _Lcd_Port *****************
  3997 ;; Defined at:
  3998 ;;		line 22 in file "LCD_8bits.c"
  3999 ;; Parameters:    Size  Location     Type
  4000 ;;  a               1    wreg     unsigned char 
  4001 ;; Auto vars:     Size  Location     Type
  4002 ;;  a               1    3[COMMON] unsigned char 
  4003 ;; Return value:  Size  Location     Type
  4004 ;;                  1    wreg      void 
  4005 ;; Registers used:
  4006 ;;		wreg
  4007 ;; Tracked objects:
  4008 ;;		On entry : 0/0
  4009 ;;		On exit  : 0/0
  4010 ;;		Unchanged: 0/0
  4011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4012 ;;      Params:         0       0       0       0       0
  4013 ;;      Locals:         1       0       0       0       0
  4014 ;;      Temps:          0       0       0       0       0
  4015 ;;      Totals:         1       0       0       0       0
  4016 ;;Total ram usage:        1 bytes
  4017 ;; Hardware stack levels used:    1
  4018 ;; Hardware stack levels required when called:    2
  4019 ;; This function calls:
  4020 ;;		Nothing
  4021 ;; This function is called by:
  4022 ;;		_Lcd_Cmd
  4023 ;;		_Lcd_Init
  4024 ;;		_Lcd_Write_Char
  4025 ;; This function uses a non-reentrant model
  4026 ;;
  4027                           
  4028                           
  4029                           ;psect for function _Lcd_Port
  4030  066F                     _Lcd_Port:
  4031                           
  4032                           ;incstack = 0
  4033                           ; Regs used in _Lcd_Port: [wreg]
  4034                           ;Lcd_Port@a stored from wreg
  4035  066F  00F3               	movwf	Lcd_Port@a
  4036  0670                     l1755:
  4037                           
  4038                           ;LCD_8bits.c: 22: void Lcd_Port (char a);LCD_8bits.c: 23: {;LCD_8bits.c: 24:     PORTD =
      +                           a;
  4039  0670  0873               	movf	Lcd_Port@a,w
  4040  0671  1283               	bcf	3,5	;RP0=0, select bank0
  4041  0672  1303               	bcf	3,6	;RP1=0, select bank0
  4042  0673  0088               	movwf	8	;volatile
  4043  0674                     l256:
  4044  0674  0008               	return
  4045  0675                     __end_of_Lcd_Port:
  4046                           
  4047                           	psect	text26
  4048  05E9                     __ptext26:	
  4049 ;; *************** function _ISR *****************
  4050 ;; Defined at:
  4051 ;;		line 102 in file "LCD.c"
  4052 ;; Parameters:    Size  Location     Type
  4053 ;;		None
  4054 ;; Auto vars:     Size  Location     Type
  4055 ;;		None
  4056 ;; Return value:  Size  Location     Type
  4057 ;;                  1    wreg      void 
  4058 ;; Registers used:
  4059 ;;		wreg, pclath, cstack
  4060 ;; Tracked objects:
  4061 ;;		On entry : 0/0
  4062 ;;		On exit  : 0/0
  4063 ;;		Unchanged: 0/0
  4064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4065 ;;      Params:         0       0       0       0       0
  4066 ;;      Locals:         0       0       0       0       0
  4067 ;;      Temps:          3       0       0       0       0
  4068 ;;      Totals:         3       0       0       0       0
  4069 ;;Total ram usage:        3 bytes
  4070 ;; Hardware stack levels used:    1
  4071 ;; Hardware stack levels required when called:    1
  4072 ;; This function calls:
  4073 ;;		_leer_char
  4074 ;; This function is called by:
  4075 ;;		Interrupt level 1
  4076 ;; This function uses a non-reentrant model
  4077 ;;
  4078                           
  4079                           
  4080                           ;psect for function _ISR
  4081  05E9                     _ISR:
  4082  05E9                     i1l1699:
  4083                           
  4084                           ;LCD.c: 104:     ANSELbits.ANS1 = 1;
  4085  05E9  1283               	bcf	3,5	;RP0=0, select bank0
  4086  05EA  1303               	bcf	3,6	;RP1=0, select bank0
  4087  05EB  1E8C               	btfss	12,5	;volatile
  4088  05EC  2DEE               	goto	u70_21
  4089  05ED  2DEF               	goto	u70_20
  4090  05EE                     u70_21:
  4091  05EE  2DFA               	goto	i1l148
  4092  05EF                     u70_20:
  4093  05EF                     i1l1701:
  4094                           
  4095                           ;LCD.c: 105:     TRISA = 1;;LCD.c: 106:     TRISAbits.TRISA0 = 1;
  4096  05EF  120A  118A  262D  120A  118A  	fcall	_leer_char
  4097  05F4  00F0               	movwf	??_ISR
  4098  05F5  0870               	movf	??_ISR,w
  4099  05F6  1283               	bcf	3,5	;RP0=0, select bank0
  4100  05F7  1303               	bcf	3,6	;RP1=0, select bank0
  4101  05F8  00A6               	movwf	_leer
  4102  05F9                     i1l1703:
  4103                           
  4104                           ;LCD.c: 107:     TRISAbits.TRISA1 = 1;
  4105  05F9  128C               	bcf	12,5	;volatile
  4106  05FA                     i1l148:
  4107  05FA  0872               	movf	??_ISR+2,w
  4108  05FB  008A               	movwf	10
  4109  05FC  0E71               	swapf	??_ISR+1,w
  4110  05FD  0083               	movwf	3
  4111  05FE  0EFE               	swapf	btemp,f
  4112  05FF  0E7E               	swapf	btemp,w
  4113  0600  0009               	retfie
  4114  0601                     __end_of_ISR:
  4115                           
  4116                           	psect	intentry
  4117  0004                     __pintentry:	
  4118                           ;incstack = 0
  4119                           ; Regs used in _ISR: [wreg+pclath+cstack]
  4120                           
  4121  0004                     interrupt_function:
  4122  007E                     saved_w	set	btemp
  4123  0004  00FE               	movwf	btemp
  4124  0005  0E03               	swapf	3,w
  4125  0006  00F1               	movwf	??_ISR+1
  4126  0007  080A               	movf	10,w
  4127  0008  00F2               	movwf	??_ISR+2
  4128  0009  120A  118A  2DE9   	ljmp	_ISR
  4129                           
  4130                           	psect	text27
  4131  062D                     __ptext27:	
  4132 ;; *************** function _leer_char *****************
  4133 ;; Defined at:
  4134 ;;		line 364 in file "LCD.c"
  4135 ;; Parameters:    Size  Location     Type
  4136 ;;		None
  4137 ;; Auto vars:     Size  Location     Type
  4138 ;;		None
  4139 ;; Return value:  Size  Location     Type
  4140 ;;                  1    wreg      unsigned char 
  4141 ;; Registers used:
  4142 ;;		wreg
  4143 ;; Tracked objects:
  4144 ;;		On entry : 0/0
  4145 ;;		On exit  : 0/0
  4146 ;;		Unchanged: 0/0
  4147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4148 ;;      Params:         0       0       0       0       0
  4149 ;;      Locals:         0       0       0       0       0
  4150 ;;      Temps:          0       0       0       0       0
  4151 ;;      Totals:         0       0       0       0       0
  4152 ;;Total ram usage:        0 bytes
  4153 ;; Hardware stack levels used:    1
  4154 ;; This function calls:
  4155 ;;		Nothing
  4156 ;; This function is called by:
  4157 ;;		_ISR
  4158 ;; This function uses a non-reentrant model
  4159 ;;
  4160                           
  4161                           
  4162                           ;psect for function _leer_char
  4163  062D                     _leer_char:
  4164  062D                     i1l1585:	
  4165                           ;incstack = 0
  4166                           ; Regs used in _leer_char: [wreg]
  4167                           
  4168  062D  1283               	bcf	3,5	;RP0=0, select bank0
  4169  062E  1303               	bcf	3,6	;RP1=0, select bank0
  4170  062F  1898               	btfsc	24,1	;volatile
  4171  0630  2E32               	goto	u65_21
  4172  0631  2E33               	goto	u65_20
  4173  0632                     u65_21:
  4174  0632  2E38               	goto	i1l1589
  4175  0633                     u65_20:
  4176  0633                     i1l1587:
  4177  0633  1218               	bcf	24,4	;volatile
  4178  0634  0000               	nop
  4179  0635  1283               	bcf	3,5	;RP0=0, select bank0
  4180  0636  1303               	bcf	3,6	;RP1=0, select bank0
  4181  0637  1618               	bsf	24,4	;volatile
  4182  0638                     i1l1589:
  4183  0638  081A               	movf	26,w	;volatile
  4184  0639                     i1l221:
  4185  0639  0008               	return
  4186  063A                     __end_of_leer_char:
  4187  007E                     btemp	set	126	;btemp
  4188  007E                     wtemp0	set	126
  4189                           
  4190                           	psect	config
  4191                           
  4192                           ;Config register CONFIG1 @ 0x2007
  4193                           ;	Oscillator Selection bits
  4194                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4195                           ;	Watchdog Timer Enable bit
  4196                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4197                           ;	Power-up Timer Enable bit
  4198                           ;	PWRTE = OFF, PWRT disabled
  4199                           ;	RE3/MCLR pin function select bit
  4200                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4201                           ;	Code Protection bit
  4202                           ;	CP = OFF, Program memory code protection is disabled
  4203                           ;	Data Code Protection bit
  4204                           ;	CPD = OFF, Data memory code protection is disabled
  4205                           ;	Brown Out Reset Selection bits
  4206                           ;	BOREN = OFF, BOR disabled
  4207                           ;	Internal External Switchover bit
  4208                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4209                           ;	Fail-Safe Clock Monitor Enabled bit
  4210                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4211                           ;	Low Voltage Programming Enable bit
  4212                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4213                           ;	In-Circuit Debugger Mode bit
  4214                           ;	DEBUG = 0x1, unprogrammed default
  4215  2007                     	org	8199
  4216  2007  20D4               	dw	8404
  4217                           
  4218                           ;Config register CONFIG2 @ 0x2008
  4219                           ;	Brown-out Reset Selection bit
  4220                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4221                           ;	Flash Program Memory Self Write Enable bits
  4222                           ;	WRT = OFF, Write protection off
  4223  2008                     	org	8200
  4224  2008  3FFF               	dw	16383

Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         23
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     11      31
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _lcd->_Lcd_Set_Cursor
    _lcd->___awdiv
    _lcd->___awmod
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Conversion2->___awdiv
    _Conversion2->___awmod
    _virtual_display3->_escribir_char
    _virtual_display2->_escribir_char
    _Conversion1->___awdiv
    _Conversion1->___awmod
    _virtual_display1->_escribir_char
    _Lcd_Write_Char->_Lcd_Port
    _adc_config->_initADC
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_lcd
    _lcd->_Conversion1
    _lcd->_Conversion2
    _Conversion2->___awdiv
    _Conversion1->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    8500
                                             10 BANK0      1     1      0
                           _Lcd_Init
                       _USART_config
                         _adc_config
                    _adc_conversion1
                    _adc_conversion2
                            _initADC
                    _interrup_config
                                _lcd
                         _osc_config
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _osc_config                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd                                                  3     3      0    8363
                                              7 BANK0      3     3      0
                        _Conversion1
                        _Conversion2
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                            ___awdiv
                            ___awmod
                       _contador_lcd
 ---------------------------------------------------------------------------------
 (2) _contador_lcd                                         1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     3     3      0     228
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       4     3      1     704
                                              7 COMMON     1     0      1
                                              0 BANK0      3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Conversion2                                          3     3      0    2499
                                              4 BANK0      3     3      0
                     _Lcd_Write_Char
                            ___awdiv
                            ___awmod
                   _virtual_display2
                   _virtual_display3
 ---------------------------------------------------------------------------------
 (3) _virtual_display3                                     0     0      0      22
                      _escribir_char
 ---------------------------------------------------------------------------------
 (3) _virtual_display2                                     0     0      0      22
                      _escribir_char
 ---------------------------------------------------------------------------------
 (2) _Conversion1                                          3     3      0    2477
                                              4 BANK0      3     3      0
                     _Lcd_Write_Char
                            ___awdiv
                            ___awmod
                   _virtual_display1
 ---------------------------------------------------------------------------------
 (3) _virtual_display1                                     0     0      0      22
                      _escribir_char
 ---------------------------------------------------------------------------------
 (4) _escribir_char                                        1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1333
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1060
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      62
                                              4 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _interrup_config                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_conversion2                                      2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _adc_conversion1                                      2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _adc_config                                           0     0      0      22
                            _initADC
 ---------------------------------------------------------------------------------
 (1) _initADC                                              3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _USART_config                                         0     0      0       0
                   _USART_lib_config
 ---------------------------------------------------------------------------------
 (2) _USART_lib_config                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      93
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      62
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
                          _leer_char
 ---------------------------------------------------------------------------------
 (6) _leer_char                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _USART_config
     _USART_lib_config
   _adc_config
     _initADC
   _adc_conversion1
   _adc_conversion2
   _initADC
   _interrup_config
   _lcd
     _Conversion1
       _Lcd_Write_Char
         _Lcd_Port
       ___awdiv
       ___awmod
       _virtual_display1
         _escribir_char
     _Conversion2
       _Lcd_Write_Char
         _Lcd_Port
       ___awdiv
       ___awmod
       _virtual_display2
         _escribir_char
       _virtual_display3
         _escribir_char
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_Char
       _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     ___awdiv
     ___awmod
     _contador_lcd
   _osc_config
   _setup

 _ISR (ROOT)
   _leer_char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      B      1F       5       38.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2A      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Mar 03 22:45:04 2021

                        _a 0023                          _i 0033                          pc 0002  
             ___awdiv@sign 0035                         _w1 0025                         _w2 0024  
                       _x1 0030                         _x2 002E                         _y1 002F  
                       _y2 002D     __size_of_escribir_char 000A                         fsr 0004  
                      l211 059F                        l205 03FD                        l230 00BE  
                      l214 0655                        l231 0028                        l240 0067  
                      l232 002F                        l241 006E                        l233 0036  
                      l217 0659                        l153 04BC                        l242 0075  
                      l234 003D                        l162 0645                        l171 066E  
                      l243 007C                        l235 0044                        l244 0083  
                      l236 004B                        l245 00C7                        l237 0052  
                      l229 0021                        l165 064F                        l262 034B  
                      l238 0059                        l239 0060                        l175 05E8  
                      l191 01F6                        l271 0565                        l159 0516  
                      l256 0674                        l168 0668                        l185 0162  
                      l259 05B8                        l179 05D0                        l195 049D  
                      l188 0285                        l277 053F                        l286 062C  
                      l551 03A6                        l199 044E                        l538 02EE  
                      l299 0583    __end_of_interrup_config 0646                        u400 03B5  
                      u401 03B4                        u410 028D                        u411 028C  
                      u500 02E5                        u420 0298                        u501 02E4  
                      u421 0297                        u430 02A9                        u431 02A8  
                      u360 0659                        u361 0658                        u450 02BB  
                      u370 0457                        u451 02BA                        u371 0456  
                      u380 0406                        _ISR 05E9                        u445 02AD  
                      u381 0405                        u470 02CC                        u710 0353  
                      u390 03AF                        u630 058C                        u471 02CB  
                      u711 0352                        u391 03AE                        u631 058B  
                      u720 035E                        u800 0548                        u640 0599  
                      u465 02BC                        u721 035D                        u801 0547  
                      u641 0598                        u490 02E0                        u730 0369  
                      u810 055A                        u491 02DF                        u475 02C8  
                      u731 0368                        u811 0559                        u820 053F  
                      u485 02D4                        u821 053E                        u750 037B  
                      u830 00FE                        u751 037A                        u831 00FD  
                      u680 05E3                        u760 0385                        u840 0118  
                      u681 05E2                        u761 0384                        u745 036D  
                      u841 0117                        u690 05CB                        u907 0325  
                      u691 05CA                        u780 0398                        u917 05B1  
                      u781 0397                        u765 0381                        u790 039D  
                      u791 039C                        u775 038C                        u857 0627  
                      u867 05C0                        u877 05D8                        u887 02FB  
                      u897 0310           _USART_lib_config 0566                        _x1z 002A  
                      _x2z 0028                        _y1z 0029                        _y2z 0027  
                      _lcd 00C8              ??_Conversion1 0038              ??_Conversion2 0038  
                      fsr0 0004                        indf 0000               ___awmod@sign 0035  
                     ?_ISR 0070                       l1401 02D2                       l1411 02EA  
                     l1403 02D3                       l1323 0651                       l1501 0580  
                     l1405 02DA                       l1341 049A                       l1407 02E0  
                     l1343 03FE                       l1351 03AF                       l1409 02E5  
                     l1337 044F                       l1345 0406                       l1353 03B5  
                     l1601 04F6                       l1371 0286                       l1339 0457  
                     l1347 044B                       l1355 03D4                       l1611 0505  
                     l1603 04F9              ?_contador_lcd 0070                       l1453 0020  
                     l1381 0298                       l1373 0289                       l1357 03D8  
                     l1349 03A7                       l1621 0510                       l1613 0506  
                     l1605 04FC                       l1471 056D                       l1463 0566  
                     l1391 02AC                       l1383 029D                       l1375 028D  
                     l1623 0513                       l1615 0507                       l1607 04FF  
                     l1481 0572                       l1473 056E                       l1465 056A  
                     l1457 008A                       l1393 02B3                       l1385 02A1  
                     l1377 0292                       l1801 0385                       l1625 0646  
                     l1617 050A                       l1609 0502                       l1491 0579  
                     l1483 0575                       l1475 056F                       l1467 056B  
                     l1627 063A                       l1395 02B7                       l1387 02A3  
                     l1379 0294                       l1811 03A2                       l1803 038B  
                     l1619 050D                       l1901 031F                       l1493 057A  
                     l1485 0576                       l1477 0570                       l1469 056C  
                     l1653 0662                       l1629 0642                       l1397 02BB  
                     l1389 02A9                       l1805 0392                       l1821 0554  
                     l1581 0599                       l1573 0584                       l1903 032F  
                     l1495 057B                       l1487 0577                       l1479 0571  
                     l1655 0669                       l1399 02CC                       l1807 0398  
                     l1823 055A                       l1815 0543                       l1831 052A  
                     l1575 058C                       l1911 00D6                       l1905 0332  
                     l1497 057C                       l1489 0578                       l1681 05D4  
                     l1761 0622                       l1809 039D                       l1841 022B  
                     l1825 055F                       l1817 0548                       l1833 0532  
                     l1577 0591                       l1921 00F8                       l1913 00DD  
                     l1593 04EC                       ?_lcd 0070                       l1755 0670  
                     l1771 05AA                       l1499 057D                       l1683 05DD  
                     l1691 05BC                       l1763 0625                       l1851 0268  
                     l1843 0241                       l1835 01F7                       l1819 054D  
                     l1827 051A                       l1579 0593                       l1923 00FE  
                     l1915 00E2                       l1907 00C8                       l1595 04F0  
                     l1931 04A3                       l1773 05AD                       l1685 05E3  
                     l1693 05C5                       l1765 0629                       l1757 0619  
                     l1781 0353                       l1853 0271                       l1845 0257  
                     l1837 01FF                       l1861 016B                       l1829 051D  
                     l1925 0112                       l1917 00EE                       l1909 00D0  
                     l1597 04F4                       l1941 04C8                       l1933 04A8  
                     l1775 05B5                       l1767 05A1                       l1687 05E4  
                     l1679 05D1                       l1695 05CB                       l1759 061C  
                     l1791 0369                       l1783 0358                       l1855 027A  
                     l1847 025B                       l1839 0215                       l1871 01C7  
                     l1863 0181                       l1927 0118                       l1919 00F3  
                     l1599 04F5                       l1951 04E3                       l1943 04CD  
                     l1935 04B2                       l1769 05A4                       l1697 05CC  
                     l1689 05B9                       l1793 036C                       l1785 035A  
                     l1777 034C                       l1857 0280                       l1849 0262  
                     l1881 01EC                       l1873 01CE                       l1865 0197  
                     l1945 04D2                       l1937 04B7                       l1929 049E  
                     l1891 0306                       l1795 0373                       l1787 035E  
                     l1779 034F                       l1883 01F1                       l1875 01D4  
                     l1867 01AD                       l1859 0163                       l1947 04D8  
                     l1939 04C1                       l1893 0309                       l1885 02EF  
                     l1797 0377                       l1789 0363                       l1877 01DD  
                     l1869 01C3                       l1949 04DD                       l1895 0315  
                     l1887 02F5                       l1799 037B                       l1879 01E6  
                     l1897 031B                       l1889 0300                       l1899 031E  
                     l1979 0092                       STR_1 0607                       _CREN 00C4  
                     _IOCB 0096          ?_Lcd_Write_String 0070                       _main 049E  
                     _leer 0026                       btemp 007E                       start 000C  
       ??_Lcd_Write_String 0076            __end_of_Lcd_Cmd 05B9                      ??_ISR 0070  
                    ??_lcd 003B                      ?_main 0070            __end_of___awdiv 02EF  
          __end_of___awmod 03A7            ___awdiv@divisor 0073                      i1l221 0639  
                    i1l148 05FA            ___awdiv@counter 0034                      _RCREG 001A  
                    _SPBRG 0099                      _PORTA 0005                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008                      _PORTE 0009  
                    u70_20 05EF                      u70_21 05EE                      u65_20 0633  
                    u65_21 0632    __size_of_Lcd_Set_Cursor 0026                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    _TRISE 0089                      _TXREG 0019            __end_of_initADC 00C8  
           ??_contador_lcd 0073                      _setup 04EC        __end_of_Conversion1 0286  
      __end_of_Conversion2 01F7              _escribir_char 0650                      pclath 000A  
                    status 0003                      wtemp0 007E           __end_of_Lcd_Init 034C  
         __end_of_Lcd_Port 0675            __initialization 000F               __end_of_main 04EC  
                   ??_main 003E           ?_interrup_config 0070   __end_of_virtual_display1 049E  
 __end_of_virtual_display2 044F   __end_of_virtual_display3 03FE                     _ADRESH 001E  
         ___awdiv@dividend 0075             ?_escribir_char 0070                     ?_setup 0070  
                   _ANSELH 0189                     i1l1701 05EF                     i1l1703 05F9  
                   i1l1585 062D                     i1l1587 0633                     i1l1589 0638  
                   i1l1699 05E9                  ??_Lcd_Cmd 0074    __size_of_Lcd_Write_Char 0015  
                ??___awdiv 0077                  ??___awmod 0077           ___awdiv@quotient 0036  
          ___awmod@divisor 0073            ___awmod@counter 0034                     _unidad 0079  
                ??_initADC 0073                _Conversion1 01F7                _Conversion2 0163  
                   saved_w 007E            Lcd_Set_Cursor@a 0035            Lcd_Set_Cursor@b 0077  
  __end_of__initialization 001B   __end_of_USART_lib_config 0584             __pcstackCOMMON 0070  
               _adc_config 0662       __end_of_contador_lcd 05A0                 _adc_value1 0032  
               _adc_value2 0031              __end_of_setup 0517             _Lcd_Set_Cursor 0540  
          ??_escribir_char 0073                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
                  ??_setup 0073                 __pbssBANK0 0020         __size_of_leer_char 000D  
               __pmaintext 049E                 __pintentry 0004  __size_of_Lcd_Write_String 0029  
   __end_of_Lcd_Set_Cursor 0566   __size_of_adc_conversion1 0018   __size_of_adc_conversion2 0018  
               ??_Lcd_Init 0034                 ??_Lcd_Port 0073                 __stringtab 0601  
           _Lcd_Write_Char 0618                    _Lcd_Cmd 05A0                ?_adc_config 0070  
                  ___awdiv 0286                    ___awmod 034C          __end_of_leer_char 063A  
                _ANSELbits 0188            ?_Lcd_Set_Cursor 0077                    __ptext1 04EC  
                  __ptext2 0646                    __ptext3 00C8                    __ptext4 0584  
                  __ptext5 0517                    __ptext6 0540                    __ptext7 0163  
                  __ptext8 03A7                    __ptext9 03FE                    _initADC 001F  
             __size_of_ISR 0018               __size_of_lcd 009B           ___awmod@dividend 0075  
        ?_virtual_display1 0070          ?_virtual_display2 0070          ?_virtual_display3 0070  
                  _unidadz 002B         ??_virtual_display1 0074         ??_virtual_display2 0074  
       ??_virtual_display3 0074                    clrloop0 065B                    _voltaje 007A  
   __end_of_Lcd_Write_Char 062D       end_of_initialization 001B                 _osc_config 0646  
    __size_of_contador_lcd 001C                  _RCSTAbits 0018                  Lcd_Port@a 0073  
               _velocidad1 0022                 _velocidad2 0021                 _velocidad3 0020  
                _PORTCbits 0007               ?_Conversion1 0070               ?_Conversion2 0070  
                _TRISAbits 0085                  _TRISCbits 0087          ??_adc_conversion1 0073  
        ??_adc_conversion2 0073            ?_Lcd_Write_Char 0070        __size_of_adc_config 0007  
 __size_of_interrup_config 000C               _contador_lcd 0584          Lcd_Write_String@a 0034  
        Lcd_Write_String@i 0035                  _TXSTAbits 0098          ?_USART_lib_config 0070  
            ?_USART_config 0070         ??_USART_lib_config 0073                 initADC@CHS 0075  
         _Lcd_Write_String 0517        start_initialization 000F                __end_of_ISR 0601  
              __end_of_lcd 0163          __size_of_Lcd_Init 005D          __size_of_Lcd_Port 0006  
              ?_osc_config 0070             ??_USART_config 0073            Lcd_Write_Char@a 0075  
              __pbssCOMMON 0078                  ___latbits 0002              __pcstackBANK0 0034  
    __end_of_escribir_char 065A                   ?_Lcd_Cmd 0070          ??_interrup_config 0073  
         ??_Lcd_Set_Cursor 0034               ??_adc_config 0076                   ?___awdiv 0073  
                 ?___awmod 0073                  __pstrings 0601                   ?_initADC 0070  
      __size_of_osc_config 000A                  _leer_char 062D       __size_of_Conversion1 008F  
     __size_of_Conversion2 0094             __size_of_setup 002B         __end_of_adc_config 0669  
        interrupt_function 0004                  clear_ram0 065A                   _PIE1bits 008C  
__size_of_virtual_display1 004F  __size_of_virtual_display2 0051  __size_of_virtual_display3 0057  
                 Lcd_Cmd@a 0076                   _PIR1bits 000C            _adc_conversion1 05D1  
          _adc_conversion2 05B9                 _ADCON0bits 001F                __stringbase 0606  
               _ADCON1bits 009F                 ?_leer_char 0070           ??_Lcd_Write_Char 0074  
     __end_of_USART_config 066F                   _Lcd_Init 02EF                   _Lcd_Port 066F  
 __end_of_Lcd_Write_String 0540           __size_of_Lcd_Cmd 0019           __size_of___awdiv 0069  
         __size_of___awmod 005B         __end_of__stringtab 0607  __size_of_USART_lib_config 001E  
         __size_of_initADC 00A9                   __ptext10 01F7                   __ptext11 044F  
                 __ptext20 001F                   __ptext12 0650                   __ptext21 0669  
                 __ptext13 034C                   __ptext22 0566                   __ptext14 0286  
                 __ptext23 02EF                   __ptext15 0618                   __ptext24 05A0  
                 __ptext16 063A                   __ptext25 066F                   __ptext17 05B9  
                 __ptext26 05E9                   __ptext18 05D1                   __ptext27 062D  
                 __ptext19 0662         escribir_char@valor 0073                   _contador 0078  
             ??_osc_config 0073              __size_of_main 004E    __end_of_adc_conversion1 05E9  
  __end_of_adc_conversion2 05D1                   _voltajez 002C                ??_leer_char 0070  
               _INTCONbits 000B         __end_of_osc_config 0650            _interrup_config 063A  
                 intlevel1 0000           _virtual_display1 044F           _virtual_display2 03FE  
         _virtual_display3 03A7                  stringcode 0601                 _OSCCONbits 008F  
       Lcd_Set_Cursor@temp 0036      __size_of_USART_config 0006                   stringdir 0601  
                 stringtab 0601               _USART_config 0669           ?_adc_conversion1 0070  
         ?_adc_conversion2 0070  
