

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Feb 10 21:20:07 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 2.20
    39                           ; Generated 12/02/2020 GMT
    40                           ; 
    41                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F887 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  001D                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  0087                     	;# 
   111  0088                     	;# 
   112  0089                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  008F                     	;# 
   117  0090                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0095                     	;# 
   125  0096                     	;# 
   126  0097                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009A                     	;# 
   130  009B                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009E                     	;# 
   134  009F                     	;# 
   135  0105                     	;# 
   136  0107                     	;# 
   137  0108                     	;# 
   138  0109                     	;# 
   139  010C                     	;# 
   140  010C                     	;# 
   141  010D                     	;# 
   142  010E                     	;# 
   143  010F                     	;# 
   144  0185                     	;# 
   145  0187                     	;# 
   146  0188                     	;# 
   147  0189                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  0000                     	;# 
   151  0001                     	;# 
   152  0002                     	;# 
   153  0003                     	;# 
   154  0004                     	;# 
   155  0005                     	;# 
   156  0006                     	;# 
   157  0007                     	;# 
   158  0008                     	;# 
   159  0009                     	;# 
   160  000A                     	;# 
   161  000B                     	;# 
   162  000C                     	;# 
   163  000D                     	;# 
   164  000E                     	;# 
   165  000E                     	;# 
   166  000F                     	;# 
   167  0010                     	;# 
   168  0011                     	;# 
   169  0012                     	;# 
   170  0013                     	;# 
   171  0014                     	;# 
   172  0015                     	;# 
   173  0015                     	;# 
   174  0016                     	;# 
   175  0017                     	;# 
   176  0018                     	;# 
   177  0019                     	;# 
   178  001A                     	;# 
   179  001B                     	;# 
   180  001B                     	;# 
   181  001C                     	;# 
   182  001D                     	;# 
   183  001E                     	;# 
   184  001F                     	;# 
   185  0081                     	;# 
   186  0085                     	;# 
   187  0086                     	;# 
   188  0087                     	;# 
   189  0088                     	;# 
   190  0089                     	;# 
   191  008C                     	;# 
   192  008D                     	;# 
   193  008E                     	;# 
   194  008F                     	;# 
   195  0090                     	;# 
   196  0091                     	;# 
   197  0092                     	;# 
   198  0093                     	;# 
   199  0093                     	;# 
   200  0093                     	;# 
   201  0094                     	;# 
   202  0095                     	;# 
   203  0096                     	;# 
   204  0097                     	;# 
   205  0098                     	;# 
   206  0099                     	;# 
   207  009A                     	;# 
   208  009B                     	;# 
   209  009C                     	;# 
   210  009D                     	;# 
   211  009E                     	;# 
   212  009F                     	;# 
   213  0105                     	;# 
   214  0107                     	;# 
   215  0108                     	;# 
   216  0109                     	;# 
   217  010C                     	;# 
   218  010C                     	;# 
   219  010D                     	;# 
   220  010E                     	;# 
   221  010F                     	;# 
   222  0185                     	;# 
   223  0187                     	;# 
   224  0188                     	;# 
   225  0189                     	;# 
   226  018C                     	;# 
   227  018D                     	;# 
   228  0000                     	;# 
   229  0001                     	;# 
   230  0002                     	;# 
   231  0003                     	;# 
   232  0004                     	;# 
   233  0005                     	;# 
   234  0006                     	;# 
   235  0007                     	;# 
   236  0008                     	;# 
   237  0009                     	;# 
   238  000A                     	;# 
   239  000B                     	;# 
   240  000C                     	;# 
   241  000D                     	;# 
   242  000E                     	;# 
   243  000E                     	;# 
   244  000F                     	;# 
   245  0010                     	;# 
   246  0011                     	;# 
   247  0012                     	;# 
   248  0013                     	;# 
   249  0014                     	;# 
   250  0015                     	;# 
   251  0015                     	;# 
   252  0016                     	;# 
   253  0017                     	;# 
   254  0018                     	;# 
   255  0019                     	;# 
   256  001A                     	;# 
   257  001B                     	;# 
   258  001B                     	;# 
   259  001C                     	;# 
   260  001D                     	;# 
   261  001E                     	;# 
   262  001F                     	;# 
   263  0081                     	;# 
   264  0085                     	;# 
   265  0086                     	;# 
   266  0087                     	;# 
   267  0088                     	;# 
   268  0089                     	;# 
   269  008C                     	;# 
   270  008D                     	;# 
   271  008E                     	;# 
   272  008F                     	;# 
   273  0090                     	;# 
   274  0091                     	;# 
   275  0092                     	;# 
   276  0093                     	;# 
   277  0093                     	;# 
   278  0093                     	;# 
   279  0094                     	;# 
   280  0095                     	;# 
   281  0096                     	;# 
   282  0097                     	;# 
   283  0098                     	;# 
   284  0099                     	;# 
   285  009A                     	;# 
   286  009B                     	;# 
   287  009C                     	;# 
   288  009D                     	;# 
   289  009E                     	;# 
   290  009F                     	;# 
   291  0105                     	;# 
   292  0107                     	;# 
   293  0108                     	;# 
   294  0109                     	;# 
   295  010C                     	;# 
   296  010C                     	;# 
   297  010D                     	;# 
   298  010E                     	;# 
   299  010F                     	;# 
   300  0185                     	;# 
   301  0187                     	;# 
   302  0188                     	;# 
   303  0189                     	;# 
   304  018C                     	;# 
   305  018D                     	;# 
   306  0000                     	;# 
   307  0001                     	;# 
   308  0002                     	;# 
   309  0003                     	;# 
   310  0004                     	;# 
   311  0005                     	;# 
   312  0006                     	;# 
   313  0007                     	;# 
   314  0008                     	;# 
   315  0009                     	;# 
   316  000A                     	;# 
   317  000B                     	;# 
   318  000C                     	;# 
   319  000D                     	;# 
   320  000E                     	;# 
   321  000E                     	;# 
   322  000F                     	;# 
   323  0010                     	;# 
   324  0011                     	;# 
   325  0012                     	;# 
   326  0013                     	;# 
   327  0014                     	;# 
   328  0015                     	;# 
   329  0015                     	;# 
   330  0016                     	;# 
   331  0017                     	;# 
   332  0018                     	;# 
   333  0019                     	;# 
   334  001A                     	;# 
   335  001B                     	;# 
   336  001B                     	;# 
   337  001C                     	;# 
   338  001D                     	;# 
   339  001E                     	;# 
   340  001F                     	;# 
   341  0081                     	;# 
   342  0085                     	;# 
   343  0086                     	;# 
   344  0087                     	;# 
   345  0088                     	;# 
   346  0089                     	;# 
   347  008C                     	;# 
   348  008D                     	;# 
   349  008E                     	;# 
   350  008F                     	;# 
   351  0090                     	;# 
   352  0091                     	;# 
   353  0092                     	;# 
   354  0093                     	;# 
   355  0093                     	;# 
   356  0093                     	;# 
   357  0094                     	;# 
   358  0095                     	;# 
   359  0096                     	;# 
   360  0097                     	;# 
   361  0098                     	;# 
   362  0099                     	;# 
   363  009A                     	;# 
   364  009B                     	;# 
   365  009C                     	;# 
   366  009D                     	;# 
   367  009E                     	;# 
   368  009F                     	;# 
   369  0105                     	;# 
   370  0107                     	;# 
   371  0108                     	;# 
   372  0109                     	;# 
   373  010C                     	;# 
   374  010C                     	;# 
   375  010D                     	;# 
   376  010E                     	;# 
   377  010F                     	;# 
   378  0185                     	;# 
   379  0187                     	;# 
   380  0188                     	;# 
   381  0189                     	;# 
   382  018C                     	;# 
   383  018D                     	;# 
   384  0000                     	;# 
   385  0001                     	;# 
   386  0002                     	;# 
   387  0003                     	;# 
   388  0004                     	;# 
   389  0005                     	;# 
   390  0006                     	;# 
   391  0007                     	;# 
   392  0008                     	;# 
   393  0009                     	;# 
   394  000A                     	;# 
   395  000B                     	;# 
   396  000C                     	;# 
   397  000D                     	;# 
   398  000E                     	;# 
   399  000E                     	;# 
   400  000F                     	;# 
   401  0010                     	;# 
   402  0011                     	;# 
   403  0012                     	;# 
   404  0013                     	;# 
   405  0014                     	;# 
   406  0015                     	;# 
   407  0015                     	;# 
   408  0016                     	;# 
   409  0017                     	;# 
   410  0018                     	;# 
   411  0019                     	;# 
   412  001A                     	;# 
   413  001B                     	;# 
   414  001B                     	;# 
   415  001C                     	;# 
   416  001D                     	;# 
   417  001E                     	;# 
   418  001F                     	;# 
   419  0081                     	;# 
   420  0085                     	;# 
   421  0086                     	;# 
   422  0087                     	;# 
   423  0088                     	;# 
   424  0089                     	;# 
   425  008C                     	;# 
   426  008D                     	;# 
   427  008E                     	;# 
   428  008F                     	;# 
   429  0090                     	;# 
   430  0091                     	;# 
   431  0092                     	;# 
   432  0093                     	;# 
   433  0093                     	;# 
   434  0093                     	;# 
   435  0094                     	;# 
   436  0095                     	;# 
   437  0096                     	;# 
   438  0097                     	;# 
   439  0098                     	;# 
   440  0099                     	;# 
   441  009A                     	;# 
   442  009B                     	;# 
   443  009C                     	;# 
   444  009D                     	;# 
   445  009E                     	;# 
   446  009F                     	;# 
   447  0105                     	;# 
   448  0107                     	;# 
   449  0108                     	;# 
   450  0109                     	;# 
   451  010C                     	;# 
   452  010C                     	;# 
   453  010D                     	;# 
   454  010E                     	;# 
   455  010F                     	;# 
   456  0185                     	;# 
   457  0187                     	;# 
   458  0188                     	;# 
   459  0189                     	;# 
   460  018C                     	;# 
   461  018D                     	;# 
   462  0007                     _PORTCbits	set	7
   463  001A                     _RCREG	set	26
   464  0018                     _RCSTAbits	set	24
   465  0019                     _TXREG	set	25
   466  0001                     _TMR0	set	1
   467  000B                     _INTCONbits	set	11
   468  0009                     _PORTE	set	9
   469  0008                     _PORTD	set	8
   470  0007                     _PORTC	set	7
   471  0006                     _PORTB	set	6
   472  0005                     _PORTA	set	5
   473  001E                     _ADRESH	set	30
   474  001F                     _ADCON0bits	set	31
   475  000C                     _PIR1bits	set	12
   476  00C4                     _CREN	set	196
   477  008C                     _PIE1bits	set	140
   478  0098                     _TXSTAbits	set	152
   479  0099                     _SPBRG	set	153
   480  009F                     _ADCON1bits	set	159
   481  0081                     _OPTION_REGbits	set	129
   482  008F                     _OSCCONbits	set	143
   483  0096                     _IOCB	set	150
   484  0089                     _TRISE	set	137
   485  0088                     _TRISD	set	136
   486  0087                     _TRISCbits	set	135
   487  0087                     _TRISC	set	135
   488  0086                     _TRISB	set	134
   489  0085                     _TRISA	set	133
   490  0189                     _ANSELH	set	393
   491  0188                     _ANSEL	set	392
   492                           
   493                           	psect	strings
   494  0425                     __pstrings:
   495  0425                     stringtab:
   496  0425                     __stringtab:
   497  0425                     stringcode:	
   498                           ;	String table - string pointers are 1 byte each
   499                           
   500  0425                     stringdir:
   501  0425  3004               	movlw	high stringdir
   502  0426  008A               	movwf	10
   503  0427  0804               	movf	4,w
   504  0428  0A84               	incf	4,f
   505  0429  0782               	addwf	2,f
   506  042A                     __stringbase:
   507  042A  3400               	retlw	0
   508  042B                     __end_of__stringtab:
   509  042B                     STR_1:
   510  042B  3453               	retlw	83	;'S'
   511  042C  3431               	retlw	49	;'1'
   512  042D  343A               	retlw	58	;':'
   513  042E  3420               	retlw	32	;' '
   514  042F  3420               	retlw	32	;' '
   515  0430  3420               	retlw	32	;' '
   516  0431  3453               	retlw	83	;'S'
   517  0432  3432               	retlw	50	;'2'
   518  0433  343A               	retlw	58	;':'
   519  0434  3420               	retlw	32	;' '
   520  0435  3420               	retlw	32	;' '
   521  0436  3420               	retlw	32	;' '
   522  0437  3453               	retlw	83	;'S'
   523  0438  3433               	retlw	51	;'3'
   524  0439  343A               	retlw	58	;':'
   525  043A  3420               	retlw	32	;' '
   526  043B  3400               	retlw	0
   527                           
   528                           	psect	cinit
   529  000F                     start_initialization:	
   530                           ; #config settings
   531                           
   532  000F                     __initialization:
   533                           
   534                           ; Clear objects allocated to COMMON
   535  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   536  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   537  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   538                           
   539                           ; Clear objects allocated to BANK0
   540  0012  1283               	bcf	3,5	;RP0=0, select bank0
   541  0013  1303               	bcf	3,6	;RP1=0, select bank0
   542  0014  01AA               	clrf	__pbssBANK0& (0+127)
   543  0015  01AB               	clrf	(__pbssBANK0+1)& (0+127)
   544  0016  01AC               	clrf	(__pbssBANK0+2)& (0+127)
   545  0017  01AD               	clrf	(__pbssBANK0+3)& (0+127)
   546  0018  01AE               	clrf	(__pbssBANK0+4)& (0+127)
   547  0019  01AF               	clrf	(__pbssBANK0+5)& (0+127)
   548  001A  01B0               	clrf	(__pbssBANK0+6)& (0+127)
   549  001B  01B1               	clrf	(__pbssBANK0+7)& (0+127)
   550  001C                     end_of_initialization:	
   551                           ;End of C runtime variable initialization code
   552                           
   553  001C                     __end_of__initialization:
   554  001C  0183               	clrf	3
   555  001D  120A  118A  2A74   	ljmp	_main	;jump to C main() function
   556                           
   557                           	psect	bssCOMMON
   558  0078                     __pbssCOMMON:
   559  0078                     _contador:
   560  0078                     	ds	1
   561  0079                     _unidad:
   562  0079                     	ds	1
   563  007A                     _voltaje:
   564  007A                     	ds	1
   565                           
   566                           	psect	bssBANK0
   567  002A                     __pbssBANK0:
   568  002A                     _i:
   569  002A                     	ds	2
   570  002C                     _leer:
   571  002C                     	ds	1
   572  002D                     _y2:
   573  002D                     	ds	1
   574  002E                     _x2:
   575  002E                     	ds	1
   576  002F                     _y1:
   577  002F                     	ds	1
   578  0030                     _x1:
   579  0030                     	ds	1
   580  0031                     _adc_value:
   581  0031                     	ds	1
   582                           
   583                           	psect	cstackCOMMON
   584  0070                     __pcstackCOMMON:
   585  0070                     ?_leer_char:
   586  0070                     ??_leer_char:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0070                     ?_setup:	
   590                           ; 1 bytes @ 0x0
   591                           
   592  0070                     ?_osc_config:	
   593                           ; 1 bytes @ 0x0
   594                           
   595  0070                     ?_interrup_config:	
   596                           ; 1 bytes @ 0x0
   597                           
   598  0070                     ?_Lcd_Init:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0070                     ?_tmr0_config:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0070                     ?_adc_config:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0070                     ?_USART_config:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0070                     ?_virtual:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0070                     ?_lcd:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0070                     ?_contador_lcd:	
   617                           ; 1 bytes @ 0x0
   618                           
   619  0070                     ?_initADC:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0070                     ?_USART_lib_config:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0070                     ?_Lcd_Write_String:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0070                     ?_Conversion:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0070                     ?_Lcd_Write_Char:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ?_escribir_char:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0070                     ?_ISR:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0070                     ??_ISR:	
   641                           ; 1 bytes @ 0x0
   642                           
   643  0070                     ?_main:	
   644                           ; 1 bytes @ 0x0
   645                           
   646  0070                     ?_Lcd_Port:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0070                     ?_Lcd_Cmd:	
   650                           ; 1 bytes @ 0x0
   651                           
   652                           
   653                           ; 1 bytes @ 0x0
   654  0070                     	ds	3
   655  0073                     ??_setup:
   656  0073                     ??_osc_config:	
   657                           ; 1 bytes @ 0x3
   658                           
   659  0073                     ??_interrup_config:	
   660                           ; 1 bytes @ 0x3
   661                           
   662  0073                     ??_tmr0_config:	
   663                           ; 1 bytes @ 0x3
   664                           
   665  0073                     ??_USART_config:	
   666                           ; 1 bytes @ 0x3
   667                           
   668  0073                     ??_initADC:	
   669                           ; 1 bytes @ 0x3
   670                           
   671  0073                     ??_USART_lib_config:	
   672                           ; 1 bytes @ 0x3
   673                           
   674  0073                     ??_escribir_char:	
   675                           ; 1 bytes @ 0x3
   676                           
   677  0073                     ??_Lcd_Port:	
   678                           ; 1 bytes @ 0x3
   679                           
   680  0073                     ?___awdiv:	
   681                           ; 1 bytes @ 0x3
   682                           
   683  0073                     ?___awmod:	
   684                           ; 2 bytes @ 0x3
   685                           
   686  0073                     escribir_char@valor:	
   687                           ; 2 bytes @ 0x3
   688                           
   689  0073                     Lcd_Port@a:	
   690                           ; 1 bytes @ 0x3
   691                           
   692  0073                     ___awdiv@divisor:	
   693                           ; 1 bytes @ 0x3
   694                           
   695  0073                     ___awmod@divisor:	
   696                           ; 2 bytes @ 0x3
   697                           
   698                           
   699                           ; 2 bytes @ 0x3
   700  0073                     	ds	1
   701  0074                     ??_virtual:
   702  0074                     ??_Lcd_Write_Char:	
   703                           ; 1 bytes @ 0x4
   704                           
   705  0074                     ??_Lcd_Cmd:	
   706                           ; 1 bytes @ 0x4
   707                           
   708                           
   709                           ; 1 bytes @ 0x4
   710  0074                     	ds	1
   711  0075                     initADC@CHS:
   712  0075                     Lcd_Write_Char@a:	
   713                           ; 1 bytes @ 0x5
   714                           
   715  0075                     ___awdiv@dividend:	
   716                           ; 1 bytes @ 0x5
   717                           
   718  0075                     ___awmod@dividend:	
   719                           ; 2 bytes @ 0x5
   720                           
   721                           
   722                           ; 2 bytes @ 0x5
   723  0075                     	ds	1
   724  0076                     ??_adc_config:
   725  0076                     ??_contador_lcd:	
   726                           ; 1 bytes @ 0x6
   727                           
   728  0076                     ??_Lcd_Write_String:	
   729                           ; 1 bytes @ 0x6
   730                           
   731  0076                     Lcd_Cmd@a:	
   732                           ; 1 bytes @ 0x6
   733                           
   734                           
   735                           ; 1 bytes @ 0x6
   736  0076                     	ds	1
   737  0077                     ?_Lcd_Set_Cursor:
   738  0077                     ??___awdiv:	
   739                           ; 1 bytes @ 0x7
   740                           
   741  0077                     ??___awmod:	
   742                           ; 1 bytes @ 0x7
   743                           
   744  0077                     Lcd_Set_Cursor@b:	
   745                           ; 1 bytes @ 0x7
   746                           
   747                           
   748                           ; 1 bytes @ 0x7
   749  0077                     	ds	1
   750                           
   751                           	psect	cstackBANK0
   752  0020                     __pcstackBANK0:
   753  0020                     ??_Lcd_Init:
   754  0020                     ??_Lcd_Set_Cursor:	
   755                           ; 1 bytes @ 0x0
   756                           
   757  0020                     Lcd_Write_String@a:	
   758                           ; 1 bytes @ 0x0
   759                           
   760  0020                     ___awdiv@counter:	
   761                           ; 1 bytes @ 0x0
   762                           
   763  0020                     ___awmod@counter:	
   764                           ; 1 bytes @ 0x0
   765                           
   766                           
   767                           ; 1 bytes @ 0x0
   768  0020                     	ds	1
   769  0021                     Lcd_Set_Cursor@a:
   770  0021                     ___awdiv@sign:	
   771                           ; 1 bytes @ 0x1
   772                           
   773  0021                     ___awmod@sign:	
   774                           ; 1 bytes @ 0x1
   775                           
   776  0021                     Lcd_Write_String@i:	
   777                           ; 1 bytes @ 0x1
   778                           
   779                           
   780                           ; 2 bytes @ 0x1
   781  0021                     	ds	1
   782  0022                     Lcd_Set_Cursor@temp:
   783  0022                     ___awdiv@quotient:	
   784                           ; 1 bytes @ 0x2
   785                           
   786                           
   787                           ; 2 bytes @ 0x2
   788  0022                     	ds	2
   789  0024                     ??_Conversion:
   790                           
   791                           ; 1 bytes @ 0x4
   792  0024                     	ds	3
   793  0027                     ??_lcd:
   794                           
   795                           ; 1 bytes @ 0x7
   796  0027                     	ds	1
   797  0028                     ??_main:
   798                           
   799                           ; 1 bytes @ 0x8
   800  0028                     	ds	2
   801                           
   802                           	psect	maintext
   803  0274                     __pmaintext:	
   804 ;;
   805 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   806 ;;
   807 ;; *************** function _main *****************
   808 ;; Defined at:
   809 ;;		line 110 in file "LCD.c"
   810 ;; Parameters:    Size  Location     Type
   811 ;;		None
   812 ;; Auto vars:     Size  Location     Type
   813 ;;		None
   814 ;; Return value:  Size  Location     Type
   815 ;;                  1    wreg      void 
   816 ;; Registers used:
   817 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   818 ;; Tracked objects:
   819 ;;		On entry : B00/0
   820 ;;		On exit  : 0/0
   821 ;;		Unchanged: 0/0
   822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   823 ;;      Params:         0       0       0       0       0
   824 ;;      Locals:         0       0       0       0       0
   825 ;;      Temps:          0       2       0       0       0
   826 ;;      Totals:         0       2       0       0       0
   827 ;;Total ram usage:        2 bytes
   828 ;; Hardware stack levels required when called:    6
   829 ;; This function calls:
   830 ;;		_Lcd_Init
   831 ;;		_USART_config
   832 ;;		_adc_config
   833 ;;		_contador_lcd
   834 ;;		_interrup_config
   835 ;;		_lcd
   836 ;;		_osc_config
   837 ;;		_setup
   838 ;;		_tmr0_config
   839 ;;		_virtual
   840 ;; This function is called by:
   841 ;;		Startup code after reset
   842 ;; This function uses a non-reentrant model
   843 ;;
   844                           
   845                           
   846                           ;psect for function _main
   847  0274                     _main:
   848  0274                     l1705:	
   849                           ;incstack = 0
   850                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   851                           
   852                           
   853                           ;LCD.c: 112:     setup();
   854  0274  120A  118A  235E  120A  118A  	fcall	_setup
   855  0279                     l1707:
   856                           
   857                           ;LCD.c: 113:     osc_config();
   858  0279  120A  118A  2481  120A  118A  	fcall	_osc_config
   859  027E                     l1709:
   860                           
   861                           ;LCD.c: 114:     interrup_config();
   862  027E  120A  118A  246B  120A  118A  	fcall	_interrup_config
   863                           
   864                           ;LCD.c: 115:     Lcd_Init();
   865  0283  120A  118A  21BC  120A  118A  	fcall	_Lcd_Init
   866                           
   867                           ;LCD.c: 116:     tmr0_config();
   868  0288  120A  118A  2451  120A  118A  	fcall	_tmr0_config
   869  028D                     l1711:
   870                           
   871                           ;LCD.c: 117:     adc_config ();
   872  028D  120A  118A  248B  120A  118A  	fcall	_adc_config
   873  0292                     l1713:
   874                           
   875                           ;LCD.c: 118:     USART_config();
   876  0292  120A  118A  2492  120A  118A  	fcall	_USART_config
   877  0297                     l1715:
   878                           
   879                           ;LCD.c: 119:     virtual ();
   880  0297  120A  118A  232F  120A  118A  	fcall	_virtual
   881  029C                     l1717:
   882                           
   883                           ;LCD.c: 121:     {;LCD.c: 122:         lcd ();
   884  029C  120A  118A  22C2  120A  118A  	fcall	_lcd
   885                           
   886                           ;LCD.c: 123:         contador_lcd();
   887  02A1  120A  118A  22FF  120A  118A  	fcall	_contador_lcd
   888  02A6                     l1719:
   889                           
   890                           ;LCD.c: 124:         ADCON0bits.GO_DONE = 1;
   891  02A6  1283               	bcf	3,5	;RP0=0, select bank0
   892  02A7  1303               	bcf	3,6	;RP1=0, select bank0
   893  02A8  149F               	bsf	31,1	;volatile
   894  02A9                     l1721:
   895                           
   896                           ;LCD.c: 125:         _delay((unsigned long)((10)*(4000000/4000.0)));
   897  02A9  300D               	movlw	13
   898  02AA  1283               	bcf	3,5	;RP0=0, select bank0
   899  02AB  1303               	bcf	3,6	;RP1=0, select bank0
   900  02AC  00A9               	movwf	??_main+1
   901  02AD  30FB               	movlw	251
   902  02AE  00A8               	movwf	??_main
   903  02AF                     u727:
   904  02AF  0BA8               	decfsz	??_main,f
   905  02B0  2AAF               	goto	u727
   906  02B1  0BA9               	decfsz	??_main+1,f
   907  02B2  2AAF               	goto	u727
   908  02B3                     l1723:
   909                           
   910                           ;LCD.c: 126:         if (ADCON0bits.GO_DONE == 0)
   911  02B3  1283               	bcf	3,5	;RP0=0, select bank0
   912  02B4  1303               	bcf	3,6	;RP1=0, select bank0
   913  02B5  189F               	btfsc	31,1	;volatile
   914  02B6  2AB8               	goto	u711
   915  02B7  2AB9               	goto	u710
   916  02B8                     u711:
   917  02B8  2A9C               	goto	l1717
   918  02B9                     u710:
   919  02B9                     l1725:
   920                           
   921                           ;LCD.c: 127:         {;LCD.c: 128:             ADCON0bits.GO_DONE = 1;
   922  02B9  149F               	bsf	31,1	;volatile
   923  02BA                     l1727:
   924                           
   925                           ;LCD.c: 129:             adc_value = ADRESH;
   926  02BA  081E               	movf	30,w	;volatile
   927  02BB  00A8               	movwf	??_main
   928  02BC  0828               	movf	??_main,w
   929  02BD  00B1               	movwf	_adc_value
   930  02BE  2A9C               	goto	l1717
   931  02BF  120A  118A  280C   	ljmp	start
   932  02C2                     __end_of_main:
   933                           
   934                           	psect	text1
   935  032F                     __ptext1:	
   936 ;; *************** function _virtual *****************
   937 ;; Defined at:
   938 ;;		line 243 in file "LCD.c"
   939 ;; Parameters:    Size  Location     Type
   940 ;;		None
   941 ;; Auto vars:     Size  Location     Type
   942 ;;		None
   943 ;; Return value:  Size  Location     Type
   944 ;;                  1    wreg      void 
   945 ;; Registers used:
   946 ;;		wreg, status,2, status,0, pclath, cstack
   947 ;; Tracked objects:
   948 ;;		On entry : 0/0
   949 ;;		On exit  : 0/0
   950 ;;		Unchanged: 0/0
   951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   952 ;;      Params:         0       0       0       0       0
   953 ;;      Locals:         0       0       0       0       0
   954 ;;      Temps:          0       0       0       0       0
   955 ;;      Totals:         0       0       0       0       0
   956 ;;Total ram usage:        0 bytes
   957 ;; Hardware stack levels used:    1
   958 ;; Hardware stack levels required when called:    3
   959 ;; This function calls:
   960 ;;		_escribir_char
   961 ;; This function is called by:
   962 ;;		_main
   963 ;; This function uses a non-reentrant model
   964 ;;
   965                           
   966                           
   967                           ;psect for function _virtual
   968  032F                     _virtual:
   969  032F                     l1477:	
   970                           ;incstack = 0
   971                           ; Regs used in _virtual: [wreg+status,2+status,0+pclath+cstack]
   972                           
   973                           
   974                           ;LCD.c: 245:     escribir_char (unidad);
   975  032F  0879               	movf	_unidad,w
   976  0330  120A  118A  2477  120A  118A  	fcall	_escribir_char
   977                           
   978                           ;LCD.c: 246:     escribir_char (46);
   979  0335  302E               	movlw	46
   980  0336  120A  118A  2477  120A  118A  	fcall	_escribir_char
   981                           
   982                           ;LCD.c: 247:     escribir_char (x2);
   983  033B  1283               	bcf	3,5	;RP0=0, select bank0
   984  033C  1303               	bcf	3,6	;RP1=0, select bank0
   985  033D  082E               	movf	_x2,w
   986  033E  120A  118A  2477  120A  118A  	fcall	_escribir_char
   987                           
   988                           ;LCD.c: 248:     escribir_char (y2);
   989  0343  1283               	bcf	3,5	;RP0=0, select bank0
   990  0344  1303               	bcf	3,6	;RP1=0, select bank0
   991  0345  082D               	movf	_y2,w
   992  0346  120A  118A  2477  120A  118A  	fcall	_escribir_char
   993                           
   994                           ;LCD.c: 249:     escribir_char (86);
   995  034B  3056               	movlw	86
   996  034C  120A  118A  2477  120A  118A  	fcall	_escribir_char
   997                           
   998                           ;LCD.c: 250:     escribir_char ('0');
   999  0351  3030               	movlw	48
  1000  0352  120A  118A  2477  120A  118A  	fcall	_escribir_char
  1001                           
  1002                           ;LCD.c: 251:     escribir_char ('H');
  1003  0357  3048               	movlw	72
  1004  0358  120A  118A  2477  120A  118A  	fcall	_escribir_char
  1005  035D                     l152:
  1006  035D  0008               	return
  1007  035E                     __end_of_virtual:
  1008                           
  1009                           	psect	text2
  1010  0477                     __ptext2:	
  1011 ;; *************** function _escribir_char *****************
  1012 ;; Defined at:
  1013 ;;		line 254 in file "LCD.c"
  1014 ;; Parameters:    Size  Location     Type
  1015 ;;  valor           1    wreg     unsigned char 
  1016 ;; Auto vars:     Size  Location     Type
  1017 ;;  valor           1    3[COMMON] unsigned char 
  1018 ;; Return value:  Size  Location     Type
  1019 ;;                  1    wreg      void 
  1020 ;; Registers used:
  1021 ;;		wreg
  1022 ;; Tracked objects:
  1023 ;;		On entry : 0/0
  1024 ;;		On exit  : 0/0
  1025 ;;		Unchanged: 0/0
  1026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1027 ;;      Params:         0       0       0       0       0
  1028 ;;      Locals:         1       0       0       0       0
  1029 ;;      Temps:          0       0       0       0       0
  1030 ;;      Totals:         1       0       0       0       0
  1031 ;;Total ram usage:        1 bytes
  1032 ;; Hardware stack levels used:    1
  1033 ;; Hardware stack levels required when called:    2
  1034 ;; This function calls:
  1035 ;;		Nothing
  1036 ;; This function is called by:
  1037 ;;		_virtual
  1038 ;; This function uses a non-reentrant model
  1039 ;;
  1040                           
  1041                           
  1042                           ;psect for function _escribir_char
  1043  0477                     _escribir_char:
  1044                           
  1045                           ;incstack = 0
  1046                           ; Regs used in _escribir_char: [wreg]
  1047                           ;escribir_char@valor stored from wreg
  1048  0477  00F3               	movwf	escribir_char@valor
  1049  0478                     l1405:
  1050                           
  1051                           ;LCD.c: 254: void escribir_char (uint8_t valor);LCD.c: 255: {;LCD.c: 256:     TXREG = va
      +                          lor;
  1052  0478  0873               	movf	escribir_char@valor,w
  1053  0479  1283               	bcf	3,5	;RP0=0, select bank0
  1054  047A  1303               	bcf	3,6	;RP1=0, select bank0
  1055  047B  0099               	movwf	25	;volatile
  1056  047C                     l155:	
  1057                           ;LCD.c: 257:     while (PIR1bits.TXIF == 0);
  1058                           
  1059  047C  1E0C               	btfss	12,4	;volatile
  1060  047D  2C7F               	goto	u531
  1061  047E  2C80               	goto	u530
  1062  047F                     u531:
  1063  047F  2C7C               	goto	l155
  1064  0480                     u530:
  1065  0480                     l158:
  1066  0480  0008               	return
  1067  0481                     __end_of_escribir_char:
  1068                           
  1069                           	psect	text3
  1070  0451                     __ptext3:	
  1071 ;; *************** function _tmr0_config *****************
  1072 ;; Defined at:
  1073 ;;		line 180 in file "LCD.c"
  1074 ;; Parameters:    Size  Location     Type
  1075 ;;		None
  1076 ;; Auto vars:     Size  Location     Type
  1077 ;;		None
  1078 ;; Return value:  Size  Location     Type
  1079 ;;                  1    wreg      void 
  1080 ;; Registers used:
  1081 ;;		wreg
  1082 ;; Tracked objects:
  1083 ;;		On entry : 0/0
  1084 ;;		On exit  : 0/0
  1085 ;;		Unchanged: 0/0
  1086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1087 ;;      Params:         0       0       0       0       0
  1088 ;;      Locals:         0       0       0       0       0
  1089 ;;      Temps:          0       0       0       0       0
  1090 ;;      Totals:         0       0       0       0       0
  1091 ;;Total ram usage:        0 bytes
  1092 ;; Hardware stack levels used:    1
  1093 ;; Hardware stack levels required when called:    2
  1094 ;; This function calls:
  1095 ;;		Nothing
  1096 ;; This function is called by:
  1097 ;;		_main
  1098 ;; This function uses a non-reentrant model
  1099 ;;
  1100                           
  1101                           
  1102                           ;psect for function _tmr0_config
  1103  0451                     _tmr0_config:
  1104  0451                     l1469:	
  1105                           ;incstack = 0
  1106                           ; Regs used in _tmr0_config: [wreg]
  1107                           
  1108                           
  1109                           ;LCD.c: 182:     OPTION_REGbits.nRBPU = 1;
  1110  0451  1683               	bsf	3,5	;RP0=1, select bank1
  1111  0452  1303               	bcf	3,6	;RP1=0, select bank1
  1112  0453  1781               	bsf	1,7	;volatile
  1113                           
  1114                           ;LCD.c: 183:     OPTION_REGbits.T0CS = 0;
  1115  0454  1281               	bcf	1,5	;volatile
  1116                           
  1117                           ;LCD.c: 184:     OPTION_REGbits.PSA = 0;
  1118  0455  1181               	bcf	1,3	;volatile
  1119                           
  1120                           ;LCD.c: 185:     OPTION_REGbits.PS2 = 0;
  1121  0456  1101               	bcf	1,2	;volatile
  1122                           
  1123                           ;LCD.c: 186:     OPTION_REGbits.PS1 = 1;
  1124  0457  1481               	bsf	1,1	;volatile
  1125                           
  1126                           ;LCD.c: 187:     OPTION_REGbits.PS0 = 0;
  1127  0458  1001               	bcf	1,0	;volatile
  1128  0459                     l1471:
  1129                           
  1130                           ;LCD.c: 188:     TMR0 = 231;
  1131  0459  30E7               	movlw	231
  1132  045A  1283               	bcf	3,5	;RP0=0, select bank0
  1133  045B  1303               	bcf	3,6	;RP1=0, select bank0
  1134  045C  0081               	movwf	1	;volatile
  1135  045D                     l137:
  1136  045D  0008               	return
  1137  045E                     __end_of_tmr0_config:
  1138                           
  1139                           	psect	text4
  1140  035E                     __ptext4:	
  1141 ;; *************** function _setup *****************
  1142 ;; Defined at:
  1143 ;;		line 138 in file "LCD.c"
  1144 ;; Parameters:    Size  Location     Type
  1145 ;;		None
  1146 ;; Auto vars:     Size  Location     Type
  1147 ;;		None
  1148 ;; Return value:  Size  Location     Type
  1149 ;;                  1    wreg      void 
  1150 ;; Registers used:
  1151 ;;		wreg, status,2
  1152 ;; Tracked objects:
  1153 ;;		On entry : 0/0
  1154 ;;		On exit  : 0/0
  1155 ;;		Unchanged: 0/0
  1156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1157 ;;      Params:         0       0       0       0       0
  1158 ;;      Locals:         0       0       0       0       0
  1159 ;;      Temps:          0       0       0       0       0
  1160 ;;      Totals:         0       0       0       0       0
  1161 ;;Total ram usage:        0 bytes
  1162 ;; Hardware stack levels used:    1
  1163 ;; Hardware stack levels required when called:    2
  1164 ;; This function calls:
  1165 ;;		Nothing
  1166 ;; This function is called by:
  1167 ;;		_main
  1168 ;; This function uses a non-reentrant model
  1169 ;;
  1170                           
  1171                           
  1172                           ;psect for function _setup
  1173  035E                     _setup:
  1174  035E                     l1415:	
  1175                           ;incstack = 0
  1176                           ; Regs used in _setup: [wreg+status,2]
  1177                           
  1178                           
  1179                           ;LCD.c: 140:     ANSEL = 1;
  1180  035E  3001               	movlw	1
  1181  035F  1683               	bsf	3,5	;RP0=1, select bank3
  1182  0360  1703               	bsf	3,6	;RP1=1, select bank3
  1183  0361  0088               	movwf	8	;volatile
  1184                           
  1185                           ;LCD.c: 141:     TRISA = 1;
  1186  0362  3001               	movlw	1
  1187  0363  1683               	bsf	3,5	;RP0=1, select bank1
  1188  0364  1303               	bcf	3,6	;RP1=0, select bank1
  1189  0365  0085               	movwf	5	;volatile
  1190  0366                     l1417:
  1191                           
  1192                           ;LCD.c: 142:     PORTA = 0;
  1193  0366  1283               	bcf	3,5	;RP0=0, select bank0
  1194  0367  1303               	bcf	3,6	;RP1=0, select bank0
  1195  0368  0185               	clrf	5	;volatile
  1196  0369                     l1419:
  1197                           
  1198                           ;LCD.c: 143:     ANSELH = 0;
  1199  0369  1683               	bsf	3,5	;RP0=1, select bank3
  1200  036A  1703               	bsf	3,6	;RP1=1, select bank3
  1201  036B  0189               	clrf	9	;volatile
  1202  036C                     l1421:
  1203                           
  1204                           ;LCD.c: 144:     TRISB = 0;
  1205  036C  1683               	bsf	3,5	;RP0=1, select bank1
  1206  036D  1303               	bcf	3,6	;RP1=0, select bank1
  1207  036E  0186               	clrf	6	;volatile
  1208  036F                     l1423:
  1209                           
  1210                           ;LCD.c: 145:     PORTB = 0;
  1211  036F  1283               	bcf	3,5	;RP0=0, select bank0
  1212  0370  1303               	bcf	3,6	;RP1=0, select bank0
  1213  0371  0186               	clrf	6	;volatile
  1214  0372                     l1425:
  1215                           
  1216                           ;LCD.c: 146:     TRISC = 0;
  1217  0372  1683               	bsf	3,5	;RP0=1, select bank1
  1218  0373  1303               	bcf	3,6	;RP1=0, select bank1
  1219  0374  0187               	clrf	7	;volatile
  1220  0375                     l1427:
  1221                           
  1222                           ;LCD.c: 147:     TRISCbits.TRISC6 = 0;
  1223  0375  1307               	bcf	7,6	;volatile
  1224  0376                     l1429:
  1225                           
  1226                           ;LCD.c: 148:     TRISCbits.TRISC7 = 1;
  1227  0376  1787               	bsf	7,7	;volatile
  1228  0377                     l1431:
  1229                           
  1230                           ;LCD.c: 149:     PORTC = 0;
  1231  0377  1283               	bcf	3,5	;RP0=0, select bank0
  1232  0378  1303               	bcf	3,6	;RP1=0, select bank0
  1233  0379  0187               	clrf	7	;volatile
  1234  037A                     l1433:
  1235                           
  1236                           ;LCD.c: 150:     TRISD = 0;
  1237  037A  1683               	bsf	3,5	;RP0=1, select bank1
  1238  037B  1303               	bcf	3,6	;RP1=0, select bank1
  1239  037C  0188               	clrf	8	;volatile
  1240  037D                     l1435:
  1241                           
  1242                           ;LCD.c: 151:     PORTD = 0;
  1243  037D  1283               	bcf	3,5	;RP0=0, select bank0
  1244  037E  1303               	bcf	3,6	;RP1=0, select bank0
  1245  037F  0188               	clrf	8	;volatile
  1246  0380                     l1437:
  1247                           
  1248                           ;LCD.c: 152:     TRISE = 0;
  1249  0380  1683               	bsf	3,5	;RP0=1, select bank1
  1250  0381  1303               	bcf	3,6	;RP1=0, select bank1
  1251  0382  0189               	clrf	9	;volatile
  1252  0383                     l1439:
  1253                           
  1254                           ;LCD.c: 153:     PORTE = 0;
  1255  0383  1283               	bcf	3,5	;RP0=0, select bank0
  1256  0384  1303               	bcf	3,6	;RP1=0, select bank0
  1257  0385  0189               	clrf	9	;volatile
  1258  0386                     l128:
  1259  0386  0008               	return
  1260  0387                     __end_of_setup:
  1261                           
  1262                           	psect	text5
  1263  0481                     __ptext5:	
  1264 ;; *************** function _osc_config *****************
  1265 ;; Defined at:
  1266 ;;		line 169 in file "LCD.c"
  1267 ;; Parameters:    Size  Location     Type
  1268 ;;		None
  1269 ;; Auto vars:     Size  Location     Type
  1270 ;;		None
  1271 ;; Return value:  Size  Location     Type
  1272 ;;                  1    wreg      void 
  1273 ;; Registers used:
  1274 ;;		None
  1275 ;; Tracked objects:
  1276 ;;		On entry : 0/0
  1277 ;;		On exit  : 0/0
  1278 ;;		Unchanged: 0/0
  1279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1280 ;;      Params:         0       0       0       0       0
  1281 ;;      Locals:         0       0       0       0       0
  1282 ;;      Temps:          0       0       0       0       0
  1283 ;;      Totals:         0       0       0       0       0
  1284 ;;Total ram usage:        0 bytes
  1285 ;; Hardware stack levels used:    1
  1286 ;; Hardware stack levels required when called:    2
  1287 ;; This function calls:
  1288 ;;		Nothing
  1289 ;; This function is called by:
  1290 ;;		_main
  1291 ;; This function uses a non-reentrant model
  1292 ;;
  1293                           
  1294                           
  1295                           ;psect for function _osc_config
  1296  0481                     _osc_config:
  1297  0481                     l1441:	
  1298                           ;incstack = 0
  1299                           ; Regs used in _osc_config: []
  1300                           
  1301                           
  1302                           ;LCD.c: 171:     OSCCONbits.IRCF2 = 1;
  1303  0481  1683               	bsf	3,5	;RP0=1, select bank1
  1304  0482  1303               	bcf	3,6	;RP1=0, select bank1
  1305  0483  170F               	bsf	15,6	;volatile
  1306                           
  1307                           ;LCD.c: 172:     OSCCONbits.IRCF1 = 1;
  1308  0484  168F               	bsf	15,5	;volatile
  1309                           
  1310                           ;LCD.c: 173:     OSCCONbits.IRCF0 = 0;
  1311  0485  120F               	bcf	15,4	;volatile
  1312                           
  1313                           ;LCD.c: 174:     OSCCONbits.OSTS = 0;
  1314  0486  118F               	bcf	15,3	;volatile
  1315                           
  1316                           ;LCD.c: 175:     OSCCONbits.HTS = 0;
  1317  0487  110F               	bcf	15,2	;volatile
  1318                           
  1319                           ;LCD.c: 176:     OSCCONbits.LTS = 1;
  1320  0488  148F               	bsf	15,1	;volatile
  1321                           
  1322                           ;LCD.c: 177:     OSCCONbits.SCS = 0;
  1323  0489  100F               	bcf	15,0	;volatile
  1324  048A                     l134:
  1325  048A  0008               	return
  1326  048B                     __end_of_osc_config:
  1327                           
  1328                           	psect	text6
  1329  02C2                     __ptext6:	
  1330 ;; *************** function _lcd *****************
  1331 ;; Defined at:
  1332 ;;		line 209 in file "LCD.c"
  1333 ;; Parameters:    Size  Location     Type
  1334 ;;		None
  1335 ;; Auto vars:     Size  Location     Type
  1336 ;;  a               2    0        unsigned int 
  1337 ;; Return value:  Size  Location     Type
  1338 ;;                  1    wreg      void 
  1339 ;; Registers used:
  1340 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1341 ;; Tracked objects:
  1342 ;;		On entry : 0/0
  1343 ;;		On exit  : 0/0
  1344 ;;		Unchanged: 0/0
  1345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1346 ;;      Params:         0       0       0       0       0
  1347 ;;      Locals:         0       0       0       0       0
  1348 ;;      Temps:          0       1       0       0       0
  1349 ;;      Totals:         0       1       0       0       0
  1350 ;;Total ram usage:        1 bytes
  1351 ;; Hardware stack levels used:    1
  1352 ;; Hardware stack levels required when called:    5
  1353 ;; This function calls:
  1354 ;;		_Conversion
  1355 ;;		_Lcd_Set_Cursor
  1356 ;;		_Lcd_Write_String
  1357 ;;		_contador_lcd
  1358 ;; This function is called by:
  1359 ;;		_main
  1360 ;; This function uses a non-reentrant model
  1361 ;;
  1362                           
  1363                           
  1364                           ;psect for function _lcd
  1365  02C2                     _lcd:
  1366  02C2                     l1689:	
  1367                           ;incstack = 0
  1368                           ; Regs used in _lcd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1369                           
  1370                           
  1371                           ;LCD.c: 211:     unsigned int a;;LCD.c: 212:     Lcd_Set_Cursor(1,1);
  1372  02C2  01F7               	clrf	Lcd_Set_Cursor@b
  1373  02C3  0AF7               	incf	Lcd_Set_Cursor@b,f
  1374  02C4  3001               	movlw	1
  1375  02C5  120A  118A  23B0  120A  118A  	fcall	_Lcd_Set_Cursor
  1376  02CA                     l1691:
  1377                           
  1378                           ;LCD.c: 213:     Lcd_Write_String("S1:   S2:   S3: ");
  1379  02CA  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1380  02CB  120A  118A  2387  120A  118A  	fcall	_Lcd_Write_String
  1381  02D0                     l1693:
  1382                           
  1383                           ;LCD.c: 214:     Lcd_Set_Cursor(2,0);
  1384  02D0  01F7               	clrf	Lcd_Set_Cursor@b
  1385  02D1  3002               	movlw	2
  1386  02D2  120A  118A  23B0  120A  118A  	fcall	_Lcd_Set_Cursor
  1387  02D7                     l1695:
  1388                           
  1389                           ;LCD.c: 215:     Conversion ();
  1390  02D7  120A  118A  20C9  120A  118A  	fcall	_Conversion
  1391  02DC                     l1697:
  1392                           
  1393                           ;LCD.c: 216:     Lcd_Set_Cursor(2,6);
  1394  02DC  3006               	movlw	6
  1395  02DD  1283               	bcf	3,5	;RP0=0, select bank0
  1396  02DE  1303               	bcf	3,6	;RP1=0, select bank0
  1397  02DF  00A7               	movwf	??_lcd
  1398  02E0  0827               	movf	??_lcd,w
  1399  02E1  00F7               	movwf	Lcd_Set_Cursor@b
  1400  02E2  3002               	movlw	2
  1401  02E3  120A  118A  23B0  120A  118A  	fcall	_Lcd_Set_Cursor
  1402  02E8                     l1699:
  1403                           
  1404                           ;LCD.c: 217:     Conversion ();
  1405  02E8  120A  118A  20C9  120A  118A  	fcall	_Conversion
  1406  02ED                     l1701:
  1407                           
  1408                           ;LCD.c: 218:     Lcd_Set_Cursor(2,13);
  1409  02ED  300D               	movlw	13
  1410  02EE  1283               	bcf	3,5	;RP0=0, select bank0
  1411  02EF  1303               	bcf	3,6	;RP1=0, select bank0
  1412  02F0  00A7               	movwf	??_lcd
  1413  02F1  0827               	movf	??_lcd,w
  1414  02F2  00F7               	movwf	Lcd_Set_Cursor@b
  1415  02F3  3002               	movlw	2
  1416  02F4  120A  118A  23B0  120A  118A  	fcall	_Lcd_Set_Cursor
  1417  02F9                     l1703:
  1418                           
  1419                           ;LCD.c: 219:     contador_lcd();
  1420  02F9  120A  118A  22FF  120A  118A  	fcall	_contador_lcd
  1421  02FE                     l146:
  1422  02FE  0008               	return
  1423  02FF                     __end_of_lcd:
  1424                           
  1425                           	psect	text7
  1426  02FF                     __ptext7:	
  1427 ;; *************** function _contador_lcd *****************
  1428 ;; Defined at:
  1429 ;;		line 271 in file "LCD.c"
  1430 ;; Parameters:    Size  Location     Type
  1431 ;;		None
  1432 ;; Auto vars:     Size  Location     Type
  1433 ;;		None
  1434 ;; Return value:  Size  Location     Type
  1435 ;;                  1    wreg      void 
  1436 ;; Registers used:
  1437 ;;		wreg, status,2, status,0, pclath, cstack
  1438 ;; Tracked objects:
  1439 ;;		On entry : 0/0
  1440 ;;		On exit  : 0/0
  1441 ;;		Unchanged: 0/0
  1442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1443 ;;      Params:         0       0       0       0       0
  1444 ;;      Locals:         0       0       0       0       0
  1445 ;;      Temps:          1       0       0       0       0
  1446 ;;      Totals:         1       0       0       0       0
  1447 ;;Total ram usage:        1 bytes
  1448 ;; Hardware stack levels used:    1
  1449 ;; Hardware stack levels required when called:    4
  1450 ;; This function calls:
  1451 ;;		_Lcd_Write_Char
  1452 ;; This function is called by:
  1453 ;;		_main
  1454 ;;		_lcd
  1455 ;; This function uses a non-reentrant model
  1456 ;;
  1457                           
  1458                           
  1459                           ;psect for function _contador_lcd
  1460  02FF                     _contador_lcd:
  1461  02FF                     l1611:	
  1462                           ;incstack = 0
  1463                           ; Regs used in _contador_lcd: [wreg+status,2+status,0+pclath+cstack]
  1464                           
  1465                           
  1466                           ;LCD.c: 273:     if (leer == '+')
  1467  02FF  302B               	movlw	43
  1468  0300  1283               	bcf	3,5	;RP0=0, select bank0
  1469  0301  1303               	bcf	3,6	;RP1=0, select bank0
  1470  0302  062C               	xorwf	_leer,w
  1471  0303  1D03               	btfss	3,2
  1472  0304  2B06               	goto	u661
  1473  0305  2B07               	goto	u660
  1474  0306                     u661:
  1475  0306  2B14               	goto	l1617
  1476  0307                     u660:
  1477  0307                     l1613:
  1478                           
  1479                           ;LCD.c: 274:     {;LCD.c: 275:         contador = contador + 1;
  1480  0307  0878               	movf	_contador,w
  1481  0308  3E01               	addlw	1
  1482  0309  00F6               	movwf	??_contador_lcd
  1483  030A  0876               	movf	??_contador_lcd,w
  1484  030B  00F8               	movwf	_contador
  1485  030C                     l1615:
  1486                           
  1487                           ;LCD.c: 276:         Lcd_Write_Char(contador+48);
  1488  030C  0878               	movf	_contador,w
  1489  030D  3E30               	addlw	48
  1490  030E  120A  118A  243C  120A  118A  	fcall	_Lcd_Write_Char
  1491                           
  1492                           ;LCD.c: 277:     }
  1493  0313  2B2E               	goto	l169
  1494  0314                     l1617:
  1495  0314  302D               	movlw	45
  1496  0315  062C               	xorwf	_leer,w
  1497  0316  1D03               	btfss	3,2
  1498  0317  2B19               	goto	u671
  1499  0318  2B1A               	goto	u670
  1500  0319                     u671:
  1501  0319  2B27               	goto	l1623
  1502  031A                     u670:
  1503  031A                     l1619:
  1504                           
  1505                           ;LCD.c: 279:     {;LCD.c: 280:         contador = contador - 1;
  1506  031A  0878               	movf	_contador,w
  1507  031B  3EFF               	addlw	255
  1508  031C  00F6               	movwf	??_contador_lcd
  1509  031D  0876               	movf	??_contador_lcd,w
  1510  031E  00F8               	movwf	_contador
  1511  031F                     l1621:
  1512                           
  1513                           ;LCD.c: 281:         Lcd_Write_Char(contador+48);
  1514  031F  0878               	movf	_contador,w
  1515  0320  3E30               	addlw	48
  1516  0321  120A  118A  243C  120A  118A  	fcall	_Lcd_Write_Char
  1517                           
  1518                           ;LCD.c: 282:     }
  1519  0326  2B2E               	goto	l169
  1520  0327                     l1623:
  1521                           
  1522                           ;LCD.c: 284:     {;LCD.c: 285:         Lcd_Write_Char(contador+48);
  1523  0327  0878               	movf	_contador,w
  1524  0328  3E30               	addlw	48
  1525  0329  120A  118A  243C  120A  118A  	fcall	_Lcd_Write_Char
  1526  032E                     l169:
  1527  032E  0008               	return
  1528  032F                     __end_of_contador_lcd:
  1529                           
  1530                           	psect	text8
  1531  0387                     __ptext8:	
  1532 ;; *************** function _Lcd_Write_String *****************
  1533 ;; Defined at:
  1534 ;;		line 69 in file "LCD_8bits.c"
  1535 ;; Parameters:    Size  Location     Type
  1536 ;;  a               1    wreg     PTR unsigned char 
  1537 ;;		 -> STR_1(17), 
  1538 ;; Auto vars:     Size  Location     Type
  1539 ;;  a               1    0[BANK0 ] PTR unsigned char 
  1540 ;;		 -> STR_1(17), 
  1541 ;;  i               2    1[BANK0 ] int 
  1542 ;; Return value:  Size  Location     Type
  1543 ;;                  1    wreg      void 
  1544 ;; Registers used:
  1545 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1546 ;; Tracked objects:
  1547 ;;		On entry : 0/0
  1548 ;;		On exit  : 0/0
  1549 ;;		Unchanged: 0/0
  1550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1551 ;;      Params:         0       0       0       0       0
  1552 ;;      Locals:         0       3       0       0       0
  1553 ;;      Temps:          0       0       0       0       0
  1554 ;;      Totals:         0       3       0       0       0
  1555 ;;Total ram usage:        3 bytes
  1556 ;; Hardware stack levels used:    1
  1557 ;; Hardware stack levels required when called:    4
  1558 ;; This function calls:
  1559 ;;		_Lcd_Write_Char
  1560 ;; This function is called by:
  1561 ;;		_lcd
  1562 ;; This function uses a non-reentrant model
  1563 ;;
  1564                           
  1565                           
  1566                           ;psect for function _Lcd_Write_String
  1567  0387                     _Lcd_Write_String:
  1568                           
  1569                           ;incstack = 0
  1570                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1571                           ;Lcd_Write_String@a stored from wreg
  1572  0387  1283               	bcf	3,5	;RP0=0, select bank0
  1573  0388  1303               	bcf	3,6	;RP1=0, select bank0
  1574  0389  00A0               	movwf	Lcd_Write_String@a
  1575  038A                     l1637:
  1576                           
  1577                           ;LCD_8bits.c: 69: void Lcd_Write_String(char *a);LCD_8bits.c: 70: {;LCD_8bits.c: 71:    
      +                           int i;;LCD_8bits.c: 72:     for (i = 0; a[i] != '\0'; i++)
  1578  038A  01A1               	clrf	Lcd_Write_String@i
  1579  038B  01A2               	clrf	Lcd_Write_String@i+1
  1580  038C  2BA2               	goto	l1643
  1581  038D                     l1639:
  1582                           
  1583                           ;LCD_8bits.c: 73:         Lcd_Write_Char(a[i]);
  1584  038D  0821               	movf	Lcd_Write_String@i,w
  1585  038E  0720               	addwf	Lcd_Write_String@a,w
  1586  038F  0084               	movwf	4
  1587  0390  120A  118A  2425  120A  118A  	fcall	stringdir
  1588  0395  120A  118A  243C  120A  118A  	fcall	_Lcd_Write_Char
  1589  039A                     l1641:
  1590  039A  3001               	movlw	1
  1591  039B  1283               	bcf	3,5	;RP0=0, select bank0
  1592  039C  1303               	bcf	3,6	;RP1=0, select bank0
  1593  039D  07A1               	addwf	Lcd_Write_String@i,f
  1594  039E  1803               	skipnc
  1595  039F  0AA2               	incf	Lcd_Write_String@i+1,f
  1596  03A0  3000               	movlw	0
  1597  03A1  07A2               	addwf	Lcd_Write_String@i+1,f
  1598  03A2                     l1643:
  1599  03A2  0821               	movf	Lcd_Write_String@i,w
  1600  03A3  0720               	addwf	Lcd_Write_String@a,w
  1601  03A4  0084               	movwf	4
  1602  03A5  120A  118A  2425  120A  118A  	fcall	stringdir
  1603  03AA  3A00               	xorlw	0
  1604  03AB  1D03               	skipz
  1605  03AC  2BAE               	goto	u701
  1606  03AD  2BAF               	goto	u700
  1607  03AE                     u701:
  1608  03AE  2B8D               	goto	l1639
  1609  03AF                     u700:
  1610  03AF                     l225:
  1611  03AF  0008               	return
  1612  03B0                     __end_of_Lcd_Write_String:
  1613                           
  1614                           	psect	text9
  1615  03B0                     __ptext9:	
  1616 ;; *************** function _Lcd_Set_Cursor *****************
  1617 ;; Defined at:
  1618 ;;		line 54 in file "LCD_8bits.c"
  1619 ;; Parameters:    Size  Location     Type
  1620 ;;  a               1    wreg     unsigned char 
  1621 ;;  b               1    7[COMMON] unsigned char 
  1622 ;; Auto vars:     Size  Location     Type
  1623 ;;  a               1    1[BANK0 ] unsigned char 
  1624 ;;  temp            1    2[BANK0 ] unsigned char 
  1625 ;; Return value:  Size  Location     Type
  1626 ;;                  1    wreg      void 
  1627 ;; Registers used:
  1628 ;;		wreg, status,2, status,0, pclath, cstack
  1629 ;; Tracked objects:
  1630 ;;		On entry : 0/0
  1631 ;;		On exit  : 0/0
  1632 ;;		Unchanged: 0/0
  1633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1634 ;;      Params:         1       0       0       0       0
  1635 ;;      Locals:         0       2       0       0       0
  1636 ;;      Temps:          0       1       0       0       0
  1637 ;;      Totals:         1       3       0       0       0
  1638 ;;Total ram usage:        4 bytes
  1639 ;; Hardware stack levels used:    1
  1640 ;; Hardware stack levels required when called:    4
  1641 ;; This function calls:
  1642 ;;		_Lcd_Cmd
  1643 ;; This function is called by:
  1644 ;;		_lcd
  1645 ;; This function uses a non-reentrant model
  1646 ;;
  1647                           
  1648                           
  1649                           ;psect for function _Lcd_Set_Cursor
  1650  03B0                     _Lcd_Set_Cursor:
  1651                           
  1652                           ;incstack = 0
  1653                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1654                           ;Lcd_Set_Cursor@a stored from wreg
  1655  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  1656  03B1  1303               	bcf	3,6	;RP1=0, select bank0
  1657  03B2  00A1               	movwf	Lcd_Set_Cursor@a
  1658  03B3                     l1625:
  1659                           
  1660                           ;LCD_8bits.c: 54: void Lcd_Set_Cursor(char a, char b);LCD_8bits.c: 55: {;LCD_8bits.c: 56
      +                          :     char temp;;LCD_8bits.c: 57:     if (a == 1)
  1661  03B3  0321               	decf	Lcd_Set_Cursor@a,w
  1662  03B4  1D03               	btfss	3,2
  1663  03B5  2BB7               	goto	u681
  1664  03B6  2BB8               	goto	u680
  1665  03B7                     u681:
  1666  03B7  2BC4               	goto	l1631
  1667  03B8                     u680:
  1668  03B8                     l1627:
  1669                           
  1670                           ;LCD_8bits.c: 58:     {;LCD_8bits.c: 59:         temp = 0x80 + b;
  1671  03B8  0877               	movf	Lcd_Set_Cursor@b,w
  1672  03B9  3E80               	addlw	128
  1673  03BA  00A0               	movwf	??_Lcd_Set_Cursor
  1674  03BB  0820               	movf	??_Lcd_Set_Cursor,w
  1675  03BC  00A2               	movwf	Lcd_Set_Cursor@temp
  1676  03BD                     l1629:
  1677                           
  1678                           ;LCD_8bits.c: 60:         Lcd_Cmd(temp);
  1679  03BD  0822               	movf	Lcd_Set_Cursor@temp,w
  1680  03BE  120A  118A  23F4  120A  118A  	fcall	_Lcd_Cmd
  1681                           
  1682                           ;LCD_8bits.c: 61:     }
  1683  03C3  2BD5               	goto	l219
  1684  03C4                     l1631:
  1685  03C4  3002               	movlw	2
  1686  03C5  0621               	xorwf	Lcd_Set_Cursor@a,w
  1687  03C6  1D03               	btfss	3,2
  1688  03C7  2BC9               	goto	u691
  1689  03C8  2BCA               	goto	u690
  1690  03C9                     u691:
  1691  03C9  2BD5               	goto	l219
  1692  03CA                     u690:
  1693  03CA                     l1633:
  1694                           
  1695                           ;LCD_8bits.c: 63:     {;LCD_8bits.c: 64:         temp = 0xC0 + b;
  1696  03CA  0877               	movf	Lcd_Set_Cursor@b,w
  1697  03CB  3EC0               	addlw	192
  1698  03CC  00A0               	movwf	??_Lcd_Set_Cursor
  1699  03CD  0820               	movf	??_Lcd_Set_Cursor,w
  1700  03CE  00A2               	movwf	Lcd_Set_Cursor@temp
  1701  03CF                     l1635:
  1702                           
  1703                           ;LCD_8bits.c: 65:         Lcd_Cmd(temp);
  1704  03CF  0822               	movf	Lcd_Set_Cursor@temp,w
  1705  03D0  120A  118A  23F4  120A  118A  	fcall	_Lcd_Cmd
  1706  03D5                     l219:
  1707  03D5  0008               	return
  1708  03D6                     __end_of_Lcd_Set_Cursor:
  1709                           
  1710                           	psect	text10
  1711  00C9                     __ptext10:	
  1712 ;; *************** function _Conversion *****************
  1713 ;; Defined at:
  1714 ;;		line 223 in file "LCD.c"
  1715 ;; Parameters:    Size  Location     Type
  1716 ;;		None
  1717 ;; Auto vars:     Size  Location     Type
  1718 ;;		None
  1719 ;; Return value:  Size  Location     Type
  1720 ;;                  1    wreg      void 
  1721 ;; Registers used:
  1722 ;;		wreg, status,2, status,0, pclath, cstack
  1723 ;; Tracked objects:
  1724 ;;		On entry : 0/0
  1725 ;;		On exit  : 0/0
  1726 ;;		Unchanged: 0/0
  1727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1728 ;;      Params:         0       0       0       0       0
  1729 ;;      Locals:         0       0       0       0       0
  1730 ;;      Temps:          0       3       0       0       0
  1731 ;;      Totals:         0       3       0       0       0
  1732 ;;Total ram usage:        3 bytes
  1733 ;; Hardware stack levels used:    1
  1734 ;; Hardware stack levels required when called:    4
  1735 ;; This function calls:
  1736 ;;		_Lcd_Write_Char
  1737 ;;		___awdiv
  1738 ;;		___awmod
  1739 ;; This function is called by:
  1740 ;;		_lcd
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           
  1744                           
  1745                           ;psect for function _Conversion
  1746  00C9                     _Conversion:
  1747  00C9                     l1645:	
  1748                           ;incstack = 0
  1749                           ; Regs used in _Conversion: [wreg+status,2+status,0+pclath+cstack]
  1750                           
  1751                           
  1752                           ;LCD.c: 225:     voltaje = ADRESH * 2;
  1753  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  1754  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  1755  00CB  081E               	movf	30,w	;volatile
  1756  00CC  00A4               	movwf	??_Conversion
  1757  00CD  0724               	addwf	??_Conversion,w
  1758  00CE  00A5               	movwf	??_Conversion+1
  1759  00CF  0825               	movf	??_Conversion+1,w
  1760  00D0  00FA               	movwf	_voltaje
  1761  00D1                     l1647:
  1762                           
  1763                           ;LCD.c: 226:     unidad = voltaje / 100;
  1764  00D1  3064               	movlw	100
  1765  00D2  00F3               	movwf	___awdiv@divisor
  1766  00D3  3000               	movlw	0
  1767  00D4  00F4               	movwf	___awdiv@divisor+1
  1768  00D5  087A               	movf	_voltaje,w
  1769  00D6  00A4               	movwf	??_Conversion
  1770  00D7  01A5               	clrf	??_Conversion+1
  1771  00D8  0824               	movf	??_Conversion,w
  1772  00D9  00F5               	movwf	___awdiv@dividend
  1773  00DA  0825               	movf	??_Conversion+1,w
  1774  00DB  00F6               	movwf	___awdiv@dividend+1
  1775  00DC  120A  118A  2153  120A  118A  	fcall	___awdiv
  1776  00E1  0873               	movf	?___awdiv,w
  1777  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  1778  00E3  1303               	bcf	3,6	;RP1=0, select bank0
  1779  00E4  00A6               	movwf	??_Conversion+2
  1780  00E5  0826               	movf	??_Conversion+2,w
  1781  00E6  00F9               	movwf	_unidad
  1782  00E7                     l1649:
  1783                           
  1784                           ;LCD.c: 228:     x1 = voltaje % 100;
  1785  00E7  3064               	movlw	100
  1786  00E8  00F3               	movwf	___awmod@divisor
  1787  00E9  3000               	movlw	0
  1788  00EA  00F4               	movwf	___awmod@divisor+1
  1789  00EB  087A               	movf	_voltaje,w
  1790  00EC  00A4               	movwf	??_Conversion
  1791  00ED  01A5               	clrf	??_Conversion+1
  1792  00EE  0824               	movf	??_Conversion,w
  1793  00EF  00F5               	movwf	___awmod@dividend
  1794  00F0  0825               	movf	??_Conversion+1,w
  1795  00F1  00F6               	movwf	___awmod@dividend+1
  1796  00F2  120A  118A  2219  120A  118A  	fcall	___awmod
  1797  00F7  0873               	movf	?___awmod,w
  1798  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  1799  00F9  1303               	bcf	3,6	;RP1=0, select bank0
  1800  00FA  00A6               	movwf	??_Conversion+2
  1801  00FB  0826               	movf	??_Conversion+2,w
  1802  00FC  00B0               	movwf	_x1
  1803  00FD                     l1651:
  1804                           
  1805                           ;LCD.c: 229:     x2 = x1 / 10;
  1806  00FD  300A               	movlw	10
  1807  00FE  00F3               	movwf	___awdiv@divisor
  1808  00FF  3000               	movlw	0
  1809  0100  00F4               	movwf	___awdiv@divisor+1
  1810  0101  0830               	movf	_x1,w
  1811  0102  00A4               	movwf	??_Conversion
  1812  0103  01A5               	clrf	??_Conversion+1
  1813  0104  0824               	movf	??_Conversion,w
  1814  0105  00F5               	movwf	___awdiv@dividend
  1815  0106  0825               	movf	??_Conversion+1,w
  1816  0107  00F6               	movwf	___awdiv@dividend+1
  1817  0108  120A  118A  2153  120A  118A  	fcall	___awdiv
  1818  010D  0873               	movf	?___awdiv,w
  1819  010E  1283               	bcf	3,5	;RP0=0, select bank0
  1820  010F  1303               	bcf	3,6	;RP1=0, select bank0
  1821  0110  00A6               	movwf	??_Conversion+2
  1822  0111  0826               	movf	??_Conversion+2,w
  1823  0112  00AE               	movwf	_x2
  1824  0113                     l1653:
  1825                           
  1826                           ;LCD.c: 231:     y1 = x1 % 10;
  1827  0113  300A               	movlw	10
  1828  0114  00F3               	movwf	___awmod@divisor
  1829  0115  3000               	movlw	0
  1830  0116  00F4               	movwf	___awmod@divisor+1
  1831  0117  0830               	movf	_x1,w
  1832  0118  00A4               	movwf	??_Conversion
  1833  0119  01A5               	clrf	??_Conversion+1
  1834  011A  0824               	movf	??_Conversion,w
  1835  011B  00F5               	movwf	___awmod@dividend
  1836  011C  0825               	movf	??_Conversion+1,w
  1837  011D  00F6               	movwf	___awmod@dividend+1
  1838  011E  120A  118A  2219  120A  118A  	fcall	___awmod
  1839  0123  0873               	movf	?___awmod,w
  1840  0124  1283               	bcf	3,5	;RP0=0, select bank0
  1841  0125  1303               	bcf	3,6	;RP1=0, select bank0
  1842  0126  00A6               	movwf	??_Conversion+2
  1843  0127  0826               	movf	??_Conversion+2,w
  1844  0128  00AF               	movwf	_y1
  1845  0129                     l1655:
  1846                           
  1847                           ;LCD.c: 232:     y2 = y1 / 1;
  1848  0129  082F               	movf	_y1,w
  1849  012A  00A4               	movwf	??_Conversion
  1850  012B  0824               	movf	??_Conversion,w
  1851  012C  00AD               	movwf	_y2
  1852  012D                     l1657:
  1853                           
  1854                           ;LCD.c: 234:     Lcd_Write_Char(unidad+48);
  1855  012D  0879               	movf	_unidad,w
  1856  012E  3E30               	addlw	48
  1857  012F  120A  118A  243C  120A  118A  	fcall	_Lcd_Write_Char
  1858  0134                     l1659:
  1859                           
  1860                           ;LCD.c: 235:     Lcd_Write_Char(46);
  1861  0134  302E               	movlw	46
  1862  0135  120A  118A  243C  120A  118A  	fcall	_Lcd_Write_Char
  1863  013A                     l1661:
  1864                           
  1865                           ;LCD.c: 236:     Lcd_Write_Char(x2+48);
  1866  013A  1283               	bcf	3,5	;RP0=0, select bank0
  1867  013B  1303               	bcf	3,6	;RP1=0, select bank0
  1868  013C  082E               	movf	_x2,w
  1869  013D  3E30               	addlw	48
  1870  013E  120A  118A  243C  120A  118A  	fcall	_Lcd_Write_Char
  1871  0143                     l1663:
  1872                           
  1873                           ;LCD.c: 237:     Lcd_Write_Char(y2+48);
  1874  0143  1283               	bcf	3,5	;RP0=0, select bank0
  1875  0144  1303               	bcf	3,6	;RP1=0, select bank0
  1876  0145  082D               	movf	_y2,w
  1877  0146  3E30               	addlw	48
  1878  0147  120A  118A  243C  120A  118A  	fcall	_Lcd_Write_Char
  1879  014C                     l1665:
  1880                           
  1881                           ;LCD.c: 238:     Lcd_Write_Char(86);
  1882  014C  3056               	movlw	86
  1883  014D  120A  118A  243C  120A  118A  	fcall	_Lcd_Write_Char
  1884  0152                     l149:
  1885  0152  0008               	return
  1886  0153                     __end_of_Conversion:
  1887                           
  1888                           	psect	text11
  1889  0219                     __ptext11:	
  1890 ;; *************** function ___awmod *****************
  1891 ;; Defined at:
  1892 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  1893 ;; Parameters:    Size  Location     Type
  1894 ;;  divisor         2    3[COMMON] int 
  1895 ;;  dividend        2    5[COMMON] int 
  1896 ;; Auto vars:     Size  Location     Type
  1897 ;;  sign            1    1[BANK0 ] unsigned char 
  1898 ;;  counter         1    0[BANK0 ] unsigned char 
  1899 ;; Return value:  Size  Location     Type
  1900 ;;                  2    3[COMMON] int 
  1901 ;; Registers used:
  1902 ;;		wreg, status,2, status,0
  1903 ;; Tracked objects:
  1904 ;;		On entry : 0/0
  1905 ;;		On exit  : 0/0
  1906 ;;		Unchanged: 0/0
  1907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1908 ;;      Params:         4       0       0       0       0
  1909 ;;      Locals:         0       2       0       0       0
  1910 ;;      Temps:          1       0       0       0       0
  1911 ;;      Totals:         5       2       0       0       0
  1912 ;;Total ram usage:        7 bytes
  1913 ;; Hardware stack levels used:    1
  1914 ;; Hardware stack levels required when called:    2
  1915 ;; This function calls:
  1916 ;;		Nothing
  1917 ;; This function is called by:
  1918 ;;		_Conversion
  1919 ;; This function uses a non-reentrant model
  1920 ;;
  1921                           
  1922                           
  1923                           ;psect for function ___awmod
  1924  0219                     ___awmod:
  1925  0219                     l1573:	
  1926                           ;incstack = 0
  1927                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1928                           
  1929  0219  1283               	bcf	3,5	;RP0=0, select bank0
  1930  021A  1303               	bcf	3,6	;RP1=0, select bank0
  1931  021B  01A1               	clrf	___awmod@sign
  1932  021C                     l1575:
  1933  021C  1FF6               	btfss	___awmod@dividend+1,7
  1934  021D  2A1F               	goto	u571
  1935  021E  2A20               	goto	u570
  1936  021F                     u571:
  1937  021F  2A27               	goto	l1581
  1938  0220                     u570:
  1939  0220                     l1577:
  1940  0220  09F5               	comf	___awmod@dividend,f
  1941  0221  09F6               	comf	___awmod@dividend+1,f
  1942  0222  0AF5               	incf	___awmod@dividend,f
  1943  0223  1903               	skipnz
  1944  0224  0AF6               	incf	___awmod@dividend+1,f
  1945  0225                     l1579:
  1946  0225  01A1               	clrf	___awmod@sign
  1947  0226  0AA1               	incf	___awmod@sign,f
  1948  0227                     l1581:
  1949  0227  1FF4               	btfss	___awmod@divisor+1,7
  1950  0228  2A2A               	goto	u581
  1951  0229  2A2B               	goto	u580
  1952  022A                     u581:
  1953  022A  2A30               	goto	l1585
  1954  022B                     u580:
  1955  022B                     l1583:
  1956  022B  09F3               	comf	___awmod@divisor,f
  1957  022C  09F4               	comf	___awmod@divisor+1,f
  1958  022D  0AF3               	incf	___awmod@divisor,f
  1959  022E  1903               	skipnz
  1960  022F  0AF4               	incf	___awmod@divisor+1,f
  1961  0230                     l1585:
  1962  0230  0873               	movf	___awmod@divisor,w
  1963  0231  0474               	iorwf	___awmod@divisor+1,w
  1964  0232  1903               	btfsc	3,2
  1965  0233  2A35               	goto	u591
  1966  0234  2A36               	goto	u590
  1967  0235                     u591:
  1968  0235  2A65               	goto	l1603
  1969  0236                     u590:
  1970  0236                     l1587:
  1971  0236  01A0               	clrf	___awmod@counter
  1972  0237  0AA0               	incf	___awmod@counter,f
  1973  0238  2A44               	goto	l1593
  1974  0239                     l1589:
  1975  0239  3001               	movlw	1
  1976  023A                     u605:
  1977  023A  1003               	clrc
  1978  023B  0DF3               	rlf	___awmod@divisor,f
  1979  023C  0DF4               	rlf	___awmod@divisor+1,f
  1980  023D  3EFF               	addlw	-1
  1981  023E  1D03               	skipz
  1982  023F  2A3A               	goto	u605
  1983  0240                     l1591:
  1984  0240  3001               	movlw	1
  1985  0241  00F7               	movwf	??___awmod
  1986  0242  0877               	movf	??___awmod,w
  1987  0243  07A0               	addwf	___awmod@counter,f
  1988  0244                     l1593:
  1989  0244  1FF4               	btfss	___awmod@divisor+1,7
  1990  0245  2A47               	goto	u611
  1991  0246  2A48               	goto	u610
  1992  0247                     u611:
  1993  0247  2A39               	goto	l1589
  1994  0248                     u610:
  1995  0248                     l1595:
  1996  0248  0874               	movf	___awmod@divisor+1,w
  1997  0249  0276               	subwf	___awmod@dividend+1,w
  1998  024A  1D03               	skipz
  1999  024B  2A4E               	goto	u625
  2000  024C  0873               	movf	___awmod@divisor,w
  2001  024D  0275               	subwf	___awmod@dividend,w
  2002  024E                     u625:
  2003  024E  1C03               	skipc
  2004  024F  2A51               	goto	u621
  2005  0250  2A52               	goto	u620
  2006  0251                     u621:
  2007  0251  2A58               	goto	l1599
  2008  0252                     u620:
  2009  0252                     l1597:
  2010  0252  0873               	movf	___awmod@divisor,w
  2011  0253  02F5               	subwf	___awmod@dividend,f
  2012  0254  0874               	movf	___awmod@divisor+1,w
  2013  0255  1C03               	skipc
  2014  0256  03F6               	decf	___awmod@dividend+1,f
  2015  0257  02F6               	subwf	___awmod@dividend+1,f
  2016  0258                     l1599:
  2017  0258  3001               	movlw	1
  2018  0259                     u635:
  2019  0259  1003               	clrc
  2020  025A  0CF4               	rrf	___awmod@divisor+1,f
  2021  025B  0CF3               	rrf	___awmod@divisor,f
  2022  025C  3EFF               	addlw	-1
  2023  025D  1D03               	skipz
  2024  025E  2A59               	goto	u635
  2025  025F                     l1601:
  2026  025F  3001               	movlw	1
  2027  0260  02A0               	subwf	___awmod@counter,f
  2028  0261  1D03               	btfss	3,2
  2029  0262  2A64               	goto	u641
  2030  0263  2A65               	goto	u640
  2031  0264                     u641:
  2032  0264  2A48               	goto	l1595
  2033  0265                     u640:
  2034  0265                     l1603:
  2035  0265  0821               	movf	___awmod@sign,w
  2036  0266  1903               	btfsc	3,2
  2037  0267  2A69               	goto	u651
  2038  0268  2A6A               	goto	u650
  2039  0269                     u651:
  2040  0269  2A6F               	goto	l1607
  2041  026A                     u650:
  2042  026A                     l1605:
  2043  026A  09F5               	comf	___awmod@dividend,f
  2044  026B  09F6               	comf	___awmod@dividend+1,f
  2045  026C  0AF5               	incf	___awmod@dividend,f
  2046  026D  1903               	skipnz
  2047  026E  0AF6               	incf	___awmod@dividend+1,f
  2048  026F                     l1607:
  2049  026F  0876               	movf	___awmod@dividend+1,w
  2050  0270  00F4               	movwf	?___awmod+1
  2051  0271  0875               	movf	___awmod@dividend,w
  2052  0272  00F3               	movwf	?___awmod
  2053  0273                     l499:
  2054  0273  0008               	return
  2055  0274                     __end_of___awmod:
  2056                           
  2057                           	psect	text12
  2058  0153                     __ptext12:	
  2059 ;; *************** function ___awdiv *****************
  2060 ;; Defined at:
  2061 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2062 ;; Parameters:    Size  Location     Type
  2063 ;;  divisor         2    3[COMMON] int 
  2064 ;;  dividend        2    5[COMMON] int 
  2065 ;; Auto vars:     Size  Location     Type
  2066 ;;  quotient        2    2[BANK0 ] int 
  2067 ;;  sign            1    1[BANK0 ] unsigned char 
  2068 ;;  counter         1    0[BANK0 ] unsigned char 
  2069 ;; Return value:  Size  Location     Type
  2070 ;;                  2    3[COMMON] int 
  2071 ;; Registers used:
  2072 ;;		wreg, status,2, status,0
  2073 ;; Tracked objects:
  2074 ;;		On entry : 0/0
  2075 ;;		On exit  : 0/0
  2076 ;;		Unchanged: 0/0
  2077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2078 ;;      Params:         4       0       0       0       0
  2079 ;;      Locals:         0       4       0       0       0
  2080 ;;      Temps:          1       0       0       0       0
  2081 ;;      Totals:         5       4       0       0       0
  2082 ;;Total ram usage:        9 bytes
  2083 ;; Hardware stack levels used:    1
  2084 ;; Hardware stack levels required when called:    2
  2085 ;; This function calls:
  2086 ;;		Nothing
  2087 ;; This function is called by:
  2088 ;;		_Conversion
  2089 ;; This function uses a non-reentrant model
  2090 ;;
  2091                           
  2092                           
  2093                           ;psect for function ___awdiv
  2094  0153                     ___awdiv:
  2095  0153                     l1217:	
  2096                           ;incstack = 0
  2097                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2098                           
  2099  0153  1283               	bcf	3,5	;RP0=0, select bank0
  2100  0154  1303               	bcf	3,6	;RP1=0, select bank0
  2101  0155  01A1               	clrf	___awdiv@sign
  2102  0156                     l1219:
  2103  0156  1FF4               	btfss	___awdiv@divisor+1,7
  2104  0157  2959               	goto	u291
  2105  0158  295A               	goto	u290
  2106  0159                     u291:
  2107  0159  2961               	goto	l1225
  2108  015A                     u290:
  2109  015A                     l1221:
  2110  015A  09F3               	comf	___awdiv@divisor,f
  2111  015B  09F4               	comf	___awdiv@divisor+1,f
  2112  015C  0AF3               	incf	___awdiv@divisor,f
  2113  015D  1903               	skipnz
  2114  015E  0AF4               	incf	___awdiv@divisor+1,f
  2115  015F                     l1223:
  2116  015F  01A1               	clrf	___awdiv@sign
  2117  0160  0AA1               	incf	___awdiv@sign,f
  2118  0161                     l1225:
  2119  0161  1FF6               	btfss	___awdiv@dividend+1,7
  2120  0162  2964               	goto	u301
  2121  0163  2965               	goto	u300
  2122  0164                     u301:
  2123  0164  296E               	goto	l1231
  2124  0165                     u300:
  2125  0165                     l1227:
  2126  0165  09F5               	comf	___awdiv@dividend,f
  2127  0166  09F6               	comf	___awdiv@dividend+1,f
  2128  0167  0AF5               	incf	___awdiv@dividend,f
  2129  0168  1903               	skipnz
  2130  0169  0AF6               	incf	___awdiv@dividend+1,f
  2131  016A                     l1229:
  2132  016A  3001               	movlw	1
  2133  016B  00F7               	movwf	??___awdiv
  2134  016C  0877               	movf	??___awdiv,w
  2135  016D  06A1               	xorwf	___awdiv@sign,f
  2136  016E                     l1231:
  2137  016E  01A2               	clrf	___awdiv@quotient
  2138  016F  01A3               	clrf	___awdiv@quotient+1
  2139  0170                     l1233:
  2140  0170  0873               	movf	___awdiv@divisor,w
  2141  0171  0474               	iorwf	___awdiv@divisor+1,w
  2142  0172  1903               	btfsc	3,2
  2143  0173  2975               	goto	u311
  2144  0174  2976               	goto	u310
  2145  0175                     u311:
  2146  0175  29AD               	goto	l1253
  2147  0176                     u310:
  2148  0176                     l1235:
  2149  0176  01A0               	clrf	___awdiv@counter
  2150  0177  0AA0               	incf	___awdiv@counter,f
  2151  0178  2984               	goto	l1241
  2152  0179                     l1237:
  2153  0179  3001               	movlw	1
  2154  017A                     u325:
  2155  017A  1003               	clrc
  2156  017B  0DF3               	rlf	___awdiv@divisor,f
  2157  017C  0DF4               	rlf	___awdiv@divisor+1,f
  2158  017D  3EFF               	addlw	-1
  2159  017E  1D03               	skipz
  2160  017F  297A               	goto	u325
  2161  0180                     l1239:
  2162  0180  3001               	movlw	1
  2163  0181  00F7               	movwf	??___awdiv
  2164  0182  0877               	movf	??___awdiv,w
  2165  0183  07A0               	addwf	___awdiv@counter,f
  2166  0184                     l1241:
  2167  0184  1FF4               	btfss	___awdiv@divisor+1,7
  2168  0185  2987               	goto	u331
  2169  0186  2988               	goto	u330
  2170  0187                     u331:
  2171  0187  2979               	goto	l1237
  2172  0188                     u330:
  2173  0188                     l1243:
  2174  0188  3001               	movlw	1
  2175  0189                     u345:
  2176  0189  1003               	clrc
  2177  018A  0DA2               	rlf	___awdiv@quotient,f
  2178  018B  0DA3               	rlf	___awdiv@quotient+1,f
  2179  018C  3EFF               	addlw	-1
  2180  018D  1D03               	skipz
  2181  018E  2989               	goto	u345
  2182  018F  0874               	movf	___awdiv@divisor+1,w
  2183  0190  0276               	subwf	___awdiv@dividend+1,w
  2184  0191  1D03               	skipz
  2185  0192  2995               	goto	u355
  2186  0193  0873               	movf	___awdiv@divisor,w
  2187  0194  0275               	subwf	___awdiv@dividend,w
  2188  0195                     u355:
  2189  0195  1C03               	skipc
  2190  0196  2998               	goto	u351
  2191  0197  2999               	goto	u350
  2192  0198                     u351:
  2193  0198  29A0               	goto	l1249
  2194  0199                     u350:
  2195  0199                     l1245:
  2196  0199  0873               	movf	___awdiv@divisor,w
  2197  019A  02F5               	subwf	___awdiv@dividend,f
  2198  019B  0874               	movf	___awdiv@divisor+1,w
  2199  019C  1C03               	skipc
  2200  019D  03F6               	decf	___awdiv@dividend+1,f
  2201  019E  02F6               	subwf	___awdiv@dividend+1,f
  2202  019F                     l1247:
  2203  019F  1422               	bsf	___awdiv@quotient,0
  2204  01A0                     l1249:
  2205  01A0  3001               	movlw	1
  2206  01A1                     u365:
  2207  01A1  1003               	clrc
  2208  01A2  0CF4               	rrf	___awdiv@divisor+1,f
  2209  01A3  0CF3               	rrf	___awdiv@divisor,f
  2210  01A4  3EFF               	addlw	-1
  2211  01A5  1D03               	skipz
  2212  01A6  29A1               	goto	u365
  2213  01A7                     l1251:
  2214  01A7  3001               	movlw	1
  2215  01A8  02A0               	subwf	___awdiv@counter,f
  2216  01A9  1D03               	btfss	3,2
  2217  01AA  29AC               	goto	u371
  2218  01AB  29AD               	goto	u370
  2219  01AC                     u371:
  2220  01AC  2988               	goto	l1243
  2221  01AD                     u370:
  2222  01AD                     l1253:
  2223  01AD  0821               	movf	___awdiv@sign,w
  2224  01AE  1903               	btfsc	3,2
  2225  01AF  29B1               	goto	u381
  2226  01B0  29B2               	goto	u380
  2227  01B1                     u381:
  2228  01B1  29B7               	goto	l1257
  2229  01B2                     u380:
  2230  01B2                     l1255:
  2231  01B2  09A2               	comf	___awdiv@quotient,f
  2232  01B3  09A3               	comf	___awdiv@quotient+1,f
  2233  01B4  0AA2               	incf	___awdiv@quotient,f
  2234  01B5  1903               	skipnz
  2235  01B6  0AA3               	incf	___awdiv@quotient+1,f
  2236  01B7                     l1257:
  2237  01B7  0823               	movf	___awdiv@quotient+1,w
  2238  01B8  00F4               	movwf	?___awdiv+1
  2239  01B9  0822               	movf	___awdiv@quotient,w
  2240  01BA  00F3               	movwf	?___awdiv
  2241  01BB                     l486:
  2242  01BB  0008               	return
  2243  01BC                     __end_of___awdiv:
  2244                           
  2245                           	psect	text13
  2246  043C                     __ptext13:	
  2247 ;; *************** function _Lcd_Write_Char *****************
  2248 ;; Defined at:
  2249 ;;		line 86 in file "LCD_8bits.c"
  2250 ;; Parameters:    Size  Location     Type
  2251 ;;  a               1    wreg     unsigned char 
  2252 ;; Auto vars:     Size  Location     Type
  2253 ;;  a               1    5[COMMON] unsigned char 
  2254 ;; Return value:  Size  Location     Type
  2255 ;;                  1    wreg      void 
  2256 ;; Registers used:
  2257 ;;		wreg, status,2, status,0, pclath, cstack
  2258 ;; Tracked objects:
  2259 ;;		On entry : 0/0
  2260 ;;		On exit  : 0/0
  2261 ;;		Unchanged: 0/0
  2262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2263 ;;      Params:         0       0       0       0       0
  2264 ;;      Locals:         1       0       0       0       0
  2265 ;;      Temps:          1       0       0       0       0
  2266 ;;      Totals:         2       0       0       0       0
  2267 ;;Total ram usage:        2 bytes
  2268 ;; Hardware stack levels used:    1
  2269 ;; Hardware stack levels required when called:    3
  2270 ;; This function calls:
  2271 ;;		_Lcd_Port
  2272 ;; This function is called by:
  2273 ;;		_Conversion
  2274 ;;		_contador_lcd
  2275 ;;		_Lcd_Write_String
  2276 ;; This function uses a non-reentrant model
  2277 ;;
  2278                           
  2279                           
  2280                           ;psect for function _Lcd_Write_Char
  2281  043C                     _Lcd_Write_Char:
  2282                           
  2283                           ;incstack = 0
  2284                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2285                           ;Lcd_Write_Char@a stored from wreg
  2286  043C  00F5               	movwf	Lcd_Write_Char@a
  2287  043D                     l1553:
  2288                           
  2289                           ;LCD_8bits.c: 86: void Lcd_Write_Char(char a);LCD_8bits.c: 87: {;LCD_8bits.c: 88:     PO
      +                          RTCbits.RC0 = 1;
  2290  043D  1283               	bcf	3,5	;RP0=0, select bank0
  2291  043E  1303               	bcf	3,6	;RP1=0, select bank0
  2292  043F  1407               	bsf	7,0	;volatile
  2293  0440                     l1555:
  2294                           
  2295                           ;LCD_8bits.c: 89:     Lcd_Port(a);
  2296  0440  0875               	movf	Lcd_Write_Char@a,w
  2297  0441  120A  118A  2498  120A  118A  	fcall	_Lcd_Port
  2298  0446                     l1557:
  2299                           
  2300                           ;LCD_8bits.c: 90:     PORTCbits.RC2 = 1;
  2301  0446  1283               	bcf	3,5	;RP0=0, select bank0
  2302  0447  1303               	bcf	3,6	;RP1=0, select bank0
  2303  0448  1507               	bsf	7,2	;volatile
  2304  0449                     l1559:
  2305                           
  2306                           ;LCD_8bits.c: 91:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2307  0449  300D               	movlw	13
  2308  044A  00F4               	movwf	??_Lcd_Write_Char
  2309  044B                     u737:
  2310  044B  0BF4               	decfsz	??_Lcd_Write_Char,f
  2311  044C  2C4B               	goto	u737
  2312  044D                     l1561:
  2313                           
  2314                           ;LCD_8bits.c: 92:     PORTCbits.RC2 = 0;
  2315  044D  1283               	bcf	3,5	;RP0=0, select bank0
  2316  044E  1303               	bcf	3,6	;RP1=0, select bank0
  2317  044F  1107               	bcf	7,2	;volatile
  2318  0450                     l234:
  2319  0450  0008               	return
  2320  0451                     __end_of_Lcd_Write_Char:
  2321                           
  2322                           	psect	text14
  2323  046B                     __ptext14:	
  2324 ;; *************** function _interrup_config *****************
  2325 ;; Defined at:
  2326 ;;		line 156 in file "LCD.c"
  2327 ;; Parameters:    Size  Location     Type
  2328 ;;		None
  2329 ;; Auto vars:     Size  Location     Type
  2330 ;;		None
  2331 ;; Return value:  Size  Location     Type
  2332 ;;                  1    wreg      void 
  2333 ;; Registers used:
  2334 ;;		status,2
  2335 ;; Tracked objects:
  2336 ;;		On entry : 0/0
  2337 ;;		On exit  : 0/0
  2338 ;;		Unchanged: 0/0
  2339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2340 ;;      Params:         0       0       0       0       0
  2341 ;;      Locals:         0       0       0       0       0
  2342 ;;      Temps:          0       0       0       0       0
  2343 ;;      Totals:         0       0       0       0       0
  2344 ;;Total ram usage:        0 bytes
  2345 ;; Hardware stack levels used:    1
  2346 ;; Hardware stack levels required when called:    2
  2347 ;; This function calls:
  2348 ;;		Nothing
  2349 ;; This function is called by:
  2350 ;;		_main
  2351 ;; This function uses a non-reentrant model
  2352 ;;
  2353                           
  2354                           
  2355                           ;psect for function _interrup_config
  2356  046B                     _interrup_config:
  2357  046B                     l1443:	
  2358                           ;incstack = 0
  2359                           ; Regs used in _interrup_config: [status,2]
  2360                           
  2361                           
  2362                           ;LCD.c: 158:     INTCONbits.GIE = 1;
  2363  046B  178B               	bsf	11,7	;volatile
  2364                           
  2365                           ;LCD.c: 159:     INTCONbits.PEIE = 1;
  2366  046C  170B               	bsf	11,6	;volatile
  2367                           
  2368                           ;LCD.c: 160:     INTCONbits.T0IE = 0;
  2369  046D  128B               	bcf	11,5	;volatile
  2370                           
  2371                           ;LCD.c: 161:     INTCONbits.INTE = 0;
  2372  046E  120B               	bcf	11,4	;volatile
  2373                           
  2374                           ;LCD.c: 162:     INTCONbits.RBIE = 0;
  2375  046F  118B               	bcf	11,3	;volatile
  2376                           
  2377                           ;LCD.c: 163:     INTCONbits.T0IF = 0;
  2378  0470  110B               	bcf	11,2	;volatile
  2379                           
  2380                           ;LCD.c: 164:     INTCONbits.INTF = 0;
  2381  0471  108B               	bcf	11,1	;volatile
  2382                           
  2383                           ;LCD.c: 165:     INTCONbits.RBIF = 0;
  2384  0472  100B               	bcf	11,0	;volatile
  2385  0473                     l1445:
  2386                           
  2387                           ;LCD.c: 166:     IOCB = 0b00000000;
  2388  0473  1683               	bsf	3,5	;RP0=1, select bank1
  2389  0474  1303               	bcf	3,6	;RP1=0, select bank1
  2390  0475  0196               	clrf	22	;volatile
  2391  0476                     l131:
  2392  0476  0008               	return
  2393  0477                     __end_of_interrup_config:
  2394                           
  2395                           	psect	text15
  2396  048B                     __ptext15:	
  2397 ;; *************** function _adc_config *****************
  2398 ;; Defined at:
  2399 ;;		line 195 in file "LCD.c"
  2400 ;; Parameters:    Size  Location     Type
  2401 ;;		None
  2402 ;; Auto vars:     Size  Location     Type
  2403 ;;		None
  2404 ;; Return value:  Size  Location     Type
  2405 ;;                  1    wreg      void 
  2406 ;; Registers used:
  2407 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2408 ;; Tracked objects:
  2409 ;;		On entry : 0/0
  2410 ;;		On exit  : 0/0
  2411 ;;		Unchanged: 0/0
  2412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2413 ;;      Params:         0       0       0       0       0
  2414 ;;      Locals:         0       0       0       0       0
  2415 ;;      Temps:          0       0       0       0       0
  2416 ;;      Totals:         0       0       0       0       0
  2417 ;;Total ram usage:        0 bytes
  2418 ;; Hardware stack levels used:    1
  2419 ;; Hardware stack levels required when called:    3
  2420 ;; This function calls:
  2421 ;;		_initADC
  2422 ;; This function is called by:
  2423 ;;		_main
  2424 ;; This function uses a non-reentrant model
  2425 ;;
  2426                           
  2427                           
  2428                           ;psect for function _adc_config
  2429  048B                     _adc_config:
  2430  048B                     l1473:	
  2431                           ;incstack = 0
  2432                           ; Regs used in _adc_config: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2433                           
  2434                           
  2435                           ;LCD.c: 197:     initADC (0);
  2436  048B  3000               	movlw	0
  2437  048C  120A  118A  2020  120A  118A  	fcall	_initADC
  2438  0491                     l140:
  2439  0491  0008               	return
  2440  0492                     __end_of_adc_config:
  2441                           
  2442                           	psect	text16
  2443  0020                     __ptext16:	
  2444 ;; *************** function _initADC *****************
  2445 ;; Defined at:
  2446 ;;		line 11 in file "ADC_lib.c"
  2447 ;; Parameters:    Size  Location     Type
  2448 ;;  CHS             1    wreg     unsigned char 
  2449 ;; Auto vars:     Size  Location     Type
  2450 ;;  CHS             1    5[COMMON] unsigned char 
  2451 ;; Return value:  Size  Location     Type
  2452 ;;                  1    wreg      void 
  2453 ;; Registers used:
  2454 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2455 ;; Tracked objects:
  2456 ;;		On entry : 0/0
  2457 ;;		On exit  : 0/0
  2458 ;;		Unchanged: 0/0
  2459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2460 ;;      Params:         0       0       0       0       0
  2461 ;;      Locals:         1       0       0       0       0
  2462 ;;      Temps:          2       0       0       0       0
  2463 ;;      Totals:         3       0       0       0       0
  2464 ;;Total ram usage:        3 bytes
  2465 ;; Hardware stack levels used:    1
  2466 ;; Hardware stack levels required when called:    2
  2467 ;; This function calls:
  2468 ;;		Nothing
  2469 ;; This function is called by:
  2470 ;;		_adc_config
  2471 ;; This function uses a non-reentrant model
  2472 ;;
  2473                           
  2474                           
  2475                           ;psect for function _initADC
  2476  0020                     _initADC:
  2477                           
  2478                           ;incstack = 0
  2479                           ; Regs used in _initADC: [wreg-fsr0h+status,2+status,0]
  2480                           ;initADC@CHS stored from wreg
  2481  0020  00F5               	movwf	initADC@CHS
  2482  0021                     l1313:
  2483                           
  2484                           ;ADC_lib.c: 11: void initADC (uint8_t CHS);ADC_lib.c: 12: {;ADC_lib.c: 13:     switch (C
      +                          HS)
  2485  0021  288B               	goto	l1317
  2486  0022                     l177:	
  2487                           ;ADC_lib.c: 14:     {;ADC_lib.c: 15:         case 0:
  2488                           
  2489                           
  2490                           ;ADC_lib.c: 16:             ADCON0bits.CHS3 = 0;
  2491  0022  1283               	bcf	3,5	;RP0=0, select bank0
  2492  0023  1303               	bcf	3,6	;RP1=0, select bank0
  2493  0024  129F               	bcf	31,5	;volatile
  2494                           
  2495                           ;ADC_lib.c: 17:             ADCON0bits.CHS2 = 0;
  2496  0025  121F               	bcf	31,4	;volatile
  2497                           
  2498                           ;ADC_lib.c: 18:             ADCON0bits.CHS1 = 0;
  2499  0026  119F               	bcf	31,3	;volatile
  2500                           
  2501                           ;ADC_lib.c: 19:             ADCON0bits.CHS0 = 0;
  2502  0027  111F               	bcf	31,2	;volatile
  2503                           
  2504                           ;ADC_lib.c: 20:             break;
  2505  0028  28BF               	goto	l178
  2506  0029                     l179:	
  2507                           ;ADC_lib.c: 21:         case 1:
  2508                           
  2509                           
  2510                           ;ADC_lib.c: 22:             ADCON0bits.CHS3 = 0;
  2511  0029  1283               	bcf	3,5	;RP0=0, select bank0
  2512  002A  1303               	bcf	3,6	;RP1=0, select bank0
  2513  002B  129F               	bcf	31,5	;volatile
  2514                           
  2515                           ;ADC_lib.c: 23:             ADCON0bits.CHS2 = 0;
  2516  002C  121F               	bcf	31,4	;volatile
  2517                           
  2518                           ;ADC_lib.c: 24:             ADCON0bits.CHS1 = 0;
  2519  002D  119F               	bcf	31,3	;volatile
  2520                           
  2521                           ;ADC_lib.c: 25:             ADCON0bits.CHS0 = 1;
  2522  002E  151F               	bsf	31,2	;volatile
  2523                           
  2524                           ;ADC_lib.c: 26:             break;
  2525  002F  28BF               	goto	l178
  2526  0030                     l180:	
  2527                           ;ADC_lib.c: 28:         case 2:
  2528                           
  2529                           
  2530                           ;ADC_lib.c: 29:             ADCON0bits.CHS3 = 0;
  2531  0030  1283               	bcf	3,5	;RP0=0, select bank0
  2532  0031  1303               	bcf	3,6	;RP1=0, select bank0
  2533  0032  129F               	bcf	31,5	;volatile
  2534                           
  2535                           ;ADC_lib.c: 30:             ADCON0bits.CHS2 = 0;
  2536  0033  121F               	bcf	31,4	;volatile
  2537                           
  2538                           ;ADC_lib.c: 31:             ADCON0bits.CHS1 = 1;
  2539  0034  159F               	bsf	31,3	;volatile
  2540                           
  2541                           ;ADC_lib.c: 32:             ADCON0bits.CHS0 = 0;
  2542  0035  111F               	bcf	31,2	;volatile
  2543                           
  2544                           ;ADC_lib.c: 33:             break;
  2545  0036  28BF               	goto	l178
  2546  0037                     l181:	
  2547                           ;ADC_lib.c: 35:         case 3:
  2548                           
  2549                           
  2550                           ;ADC_lib.c: 36:             ADCON0bits.CHS3 = 0;
  2551  0037  1283               	bcf	3,5	;RP0=0, select bank0
  2552  0038  1303               	bcf	3,6	;RP1=0, select bank0
  2553  0039  129F               	bcf	31,5	;volatile
  2554                           
  2555                           ;ADC_lib.c: 37:             ADCON0bits.CHS2 = 0;
  2556  003A  121F               	bcf	31,4	;volatile
  2557                           
  2558                           ;ADC_lib.c: 38:             ADCON0bits.CHS1 = 1;
  2559  003B  159F               	bsf	31,3	;volatile
  2560                           
  2561                           ;ADC_lib.c: 39:             ADCON0bits.CHS0 = 1;
  2562  003C  151F               	bsf	31,2	;volatile
  2563                           
  2564                           ;ADC_lib.c: 40:             break;
  2565  003D  28BF               	goto	l178
  2566  003E                     l182:	
  2567                           ;ADC_lib.c: 42:         case 4:
  2568                           
  2569                           
  2570                           ;ADC_lib.c: 43:             ADCON0bits.CHS3 = 0;
  2571  003E  1283               	bcf	3,5	;RP0=0, select bank0
  2572  003F  1303               	bcf	3,6	;RP1=0, select bank0
  2573  0040  129F               	bcf	31,5	;volatile
  2574                           
  2575                           ;ADC_lib.c: 44:             ADCON0bits.CHS2 = 1;
  2576  0041  161F               	bsf	31,4	;volatile
  2577                           
  2578                           ;ADC_lib.c: 45:             ADCON0bits.CHS1 = 0;
  2579  0042  119F               	bcf	31,3	;volatile
  2580                           
  2581                           ;ADC_lib.c: 46:             ADCON0bits.CHS0 = 0;
  2582  0043  111F               	bcf	31,2	;volatile
  2583                           
  2584                           ;ADC_lib.c: 47:             break;
  2585  0044  28BF               	goto	l178
  2586  0045                     l183:	
  2587                           ;ADC_lib.c: 49:         case 5:
  2588                           
  2589                           
  2590                           ;ADC_lib.c: 50:             ADCON0bits.CHS3 = 0;
  2591  0045  1283               	bcf	3,5	;RP0=0, select bank0
  2592  0046  1303               	bcf	3,6	;RP1=0, select bank0
  2593  0047  129F               	bcf	31,5	;volatile
  2594                           
  2595                           ;ADC_lib.c: 51:             ADCON0bits.CHS2 = 1;
  2596  0048  161F               	bsf	31,4	;volatile
  2597                           
  2598                           ;ADC_lib.c: 52:             ADCON0bits.CHS1 = 0;
  2599  0049  119F               	bcf	31,3	;volatile
  2600                           
  2601                           ;ADC_lib.c: 53:             ADCON0bits.CHS0 = 1;
  2602  004A  151F               	bsf	31,2	;volatile
  2603                           
  2604                           ;ADC_lib.c: 54:             break;
  2605  004B  28BF               	goto	l178
  2606  004C                     l184:	
  2607                           ;ADC_lib.c: 56:         case 6:
  2608                           
  2609                           
  2610                           ;ADC_lib.c: 57:             ADCON0bits.CHS3 = 0;
  2611  004C  1283               	bcf	3,5	;RP0=0, select bank0
  2612  004D  1303               	bcf	3,6	;RP1=0, select bank0
  2613  004E  129F               	bcf	31,5	;volatile
  2614                           
  2615                           ;ADC_lib.c: 58:             ADCON0bits.CHS2 = 1;
  2616  004F  161F               	bsf	31,4	;volatile
  2617                           
  2618                           ;ADC_lib.c: 59:             ADCON0bits.CHS1 = 1;
  2619  0050  159F               	bsf	31,3	;volatile
  2620                           
  2621                           ;ADC_lib.c: 60:             ADCON0bits.CHS0 = 0;
  2622  0051  111F               	bcf	31,2	;volatile
  2623                           
  2624                           ;ADC_lib.c: 61:             break;
  2625  0052  28BF               	goto	l178
  2626  0053                     l185:	
  2627                           ;ADC_lib.c: 63:         case 7:
  2628                           
  2629                           
  2630                           ;ADC_lib.c: 64:             ADCON0bits.CHS3 = 0;
  2631  0053  1283               	bcf	3,5	;RP0=0, select bank0
  2632  0054  1303               	bcf	3,6	;RP1=0, select bank0
  2633  0055  129F               	bcf	31,5	;volatile
  2634                           
  2635                           ;ADC_lib.c: 65:             ADCON0bits.CHS2 = 1;
  2636  0056  161F               	bsf	31,4	;volatile
  2637                           
  2638                           ;ADC_lib.c: 66:             ADCON0bits.CHS1 = 1;
  2639  0057  159F               	bsf	31,3	;volatile
  2640                           
  2641                           ;ADC_lib.c: 67:             ADCON0bits.CHS0 = 1;
  2642  0058  151F               	bsf	31,2	;volatile
  2643                           
  2644                           ;ADC_lib.c: 68:             break;
  2645  0059  28BF               	goto	l178
  2646  005A                     l186:	
  2647                           ;ADC_lib.c: 70:         case 8:
  2648                           
  2649                           
  2650                           ;ADC_lib.c: 71:             ADCON0bits.CHS3 = 1;
  2651  005A  1283               	bcf	3,5	;RP0=0, select bank0
  2652  005B  1303               	bcf	3,6	;RP1=0, select bank0
  2653  005C  169F               	bsf	31,5	;volatile
  2654                           
  2655                           ;ADC_lib.c: 72:             ADCON0bits.CHS2 = 0;
  2656  005D  121F               	bcf	31,4	;volatile
  2657                           
  2658                           ;ADC_lib.c: 73:             ADCON0bits.CHS1 = 0;
  2659  005E  119F               	bcf	31,3	;volatile
  2660                           
  2661                           ;ADC_lib.c: 74:             ADCON0bits.CHS0 = 0;
  2662  005F  111F               	bcf	31,2	;volatile
  2663                           
  2664                           ;ADC_lib.c: 75:             break;
  2665  0060  28BF               	goto	l178
  2666  0061                     l187:	
  2667                           ;ADC_lib.c: 77:         case 9:
  2668                           
  2669                           
  2670                           ;ADC_lib.c: 78:             ADCON0bits.CHS3 = 1;
  2671  0061  1283               	bcf	3,5	;RP0=0, select bank0
  2672  0062  1303               	bcf	3,6	;RP1=0, select bank0
  2673  0063  169F               	bsf	31,5	;volatile
  2674                           
  2675                           ;ADC_lib.c: 79:             ADCON0bits.CHS2 = 0;
  2676  0064  121F               	bcf	31,4	;volatile
  2677                           
  2678                           ;ADC_lib.c: 80:             ADCON0bits.CHS1 = 0;
  2679  0065  119F               	bcf	31,3	;volatile
  2680                           
  2681                           ;ADC_lib.c: 81:             ADCON0bits.CHS0 = 1;
  2682  0066  151F               	bsf	31,2	;volatile
  2683                           
  2684                           ;ADC_lib.c: 82:             break;
  2685  0067  28BF               	goto	l178
  2686  0068                     l188:	
  2687                           ;ADC_lib.c: 84:         case 10:
  2688                           
  2689                           
  2690                           ;ADC_lib.c: 85:             ADCON0bits.CHS3 = 1;
  2691  0068  1283               	bcf	3,5	;RP0=0, select bank0
  2692  0069  1303               	bcf	3,6	;RP1=0, select bank0
  2693  006A  169F               	bsf	31,5	;volatile
  2694                           
  2695                           ;ADC_lib.c: 86:             ADCON0bits.CHS2 = 0;
  2696  006B  121F               	bcf	31,4	;volatile
  2697                           
  2698                           ;ADC_lib.c: 87:             ADCON0bits.CHS1 = 1;
  2699  006C  159F               	bsf	31,3	;volatile
  2700                           
  2701                           ;ADC_lib.c: 88:             ADCON0bits.CHS0 = 0;
  2702  006D  111F               	bcf	31,2	;volatile
  2703                           
  2704                           ;ADC_lib.c: 89:             break;
  2705  006E  28BF               	goto	l178
  2706  006F                     l189:	
  2707                           ;ADC_lib.c: 91:         case 11:
  2708                           
  2709                           
  2710                           ;ADC_lib.c: 92:             ADCON0bits.CHS3 = 1;
  2711  006F  1283               	bcf	3,5	;RP0=0, select bank0
  2712  0070  1303               	bcf	3,6	;RP1=0, select bank0
  2713  0071  169F               	bsf	31,5	;volatile
  2714                           
  2715                           ;ADC_lib.c: 93:             ADCON0bits.CHS2 = 0;
  2716  0072  121F               	bcf	31,4	;volatile
  2717                           
  2718                           ;ADC_lib.c: 94:             ADCON0bits.CHS1 = 1;
  2719  0073  159F               	bsf	31,3	;volatile
  2720                           
  2721                           ;ADC_lib.c: 95:             ADCON0bits.CHS0 = 1;
  2722  0074  151F               	bsf	31,2	;volatile
  2723                           
  2724                           ;ADC_lib.c: 96:             break;
  2725  0075  28BF               	goto	l178
  2726  0076                     l190:	
  2727                           ;ADC_lib.c: 98:         case 12:
  2728                           
  2729                           
  2730                           ;ADC_lib.c: 99:             ADCON0bits.CHS3 = 1;
  2731  0076  1283               	bcf	3,5	;RP0=0, select bank0
  2732  0077  1303               	bcf	3,6	;RP1=0, select bank0
  2733  0078  169F               	bsf	31,5	;volatile
  2734                           
  2735                           ;ADC_lib.c: 100:             ADCON0bits.CHS2 = 1;
  2736  0079  161F               	bsf	31,4	;volatile
  2737                           
  2738                           ;ADC_lib.c: 101:             ADCON0bits.CHS1 = 0;
  2739  007A  119F               	bcf	31,3	;volatile
  2740                           
  2741                           ;ADC_lib.c: 102:             ADCON0bits.CHS0 = 0;
  2742  007B  111F               	bcf	31,2	;volatile
  2743                           
  2744                           ;ADC_lib.c: 103:             break;
  2745  007C  28BF               	goto	l178
  2746  007D                     l191:	
  2747                           ;ADC_lib.c: 105:         case 13:
  2748                           
  2749                           
  2750                           ;ADC_lib.c: 106:             ADCON0bits.CHS3 = 1;
  2751  007D  1283               	bcf	3,5	;RP0=0, select bank0
  2752  007E  1303               	bcf	3,6	;RP1=0, select bank0
  2753  007F  169F               	bsf	31,5	;volatile
  2754                           
  2755                           ;ADC_lib.c: 107:             ADCON0bits.CHS2 = 1;
  2756  0080  161F               	bsf	31,4	;volatile
  2757                           
  2758                           ;ADC_lib.c: 108:             ADCON0bits.CHS1 = 0;
  2759  0081  119F               	bcf	31,3	;volatile
  2760                           
  2761                           ;ADC_lib.c: 109:             ADCON0bits.CHS0 = 1;
  2762  0082  151F               	bsf	31,2	;volatile
  2763                           
  2764                           ;ADC_lib.c: 110:             break;
  2765  0083  28BF               	goto	l178
  2766  0084                     l192:	
  2767                           ;ADC_lib.c: 112:         default:
  2768                           
  2769                           
  2770                           ;ADC_lib.c: 113:             ADCON0bits.CHS3 = 1;
  2771  0084  1283               	bcf	3,5	;RP0=0, select bank0
  2772  0085  1303               	bcf	3,6	;RP1=0, select bank0
  2773  0086  169F               	bsf	31,5	;volatile
  2774                           
  2775                           ;ADC_lib.c: 114:             ADCON0bits.CHS2 = 1;
  2776  0087  161F               	bsf	31,4	;volatile
  2777                           
  2778                           ;ADC_lib.c: 115:             ADCON0bits.CHS1 = 1;
  2779  0088  159F               	bsf	31,3	;volatile
  2780                           
  2781                           ;ADC_lib.c: 116:             ADCON0bits.CHS0 = 0;
  2782  0089  111F               	bcf	31,2	;volatile
  2783                           
  2784                           ;ADC_lib.c: 117:             break;
  2785  008A  28BF               	goto	l178
  2786  008B                     l1317:
  2787  008B  0875               	movf	initADC@CHS,w
  2788  008C  00F3               	movwf	??_initADC
  2789  008D  01F4               	clrf	??_initADC+1
  2790                           
  2791                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2792                           ; Switch size 1, requested type "simple"
  2793                           ; Number of cases is 1, Range of values is 0 to 0
  2794                           ; switch strategies available:
  2795                           ; Name         Instructions Cycles
  2796                           ; simple_byte            4     3 (average)
  2797                           ; direct_byte           11     8 (fixed)
  2798                           ; jumptable            260     6 (fixed)
  2799                           ;	Chosen strategy is simple_byte
  2800  008E  0874               	movf	??_initADC+1,w
  2801  008F  3A00               	xorlw	0	; case 0
  2802  0090  1903               	skipnz
  2803  0091  2893               	goto	l1755
  2804  0092  2884               	goto	l192
  2805  0093                     l1755:
  2806                           
  2807                           ; Switch size 1, requested type "simple"
  2808                           ; Number of cases is 14, Range of values is 0 to 13
  2809                           ; switch strategies available:
  2810                           ; Name         Instructions Cycles
  2811                           ; simple_byte           43    22 (average)
  2812                           ; direct_byte           50     8 (fixed)
  2813                           ; jumptable            260     6 (fixed)
  2814                           ;	Chosen strategy is simple_byte
  2815  0093  0873               	movf	??_initADC,w
  2816  0094  3A00               	xorlw	0	; case 0
  2817  0095  1903               	skipnz
  2818  0096  2822               	goto	l177
  2819  0097  3A01               	xorlw	1	; case 1
  2820  0098  1903               	skipnz
  2821  0099  2829               	goto	l179
  2822  009A  3A03               	xorlw	3	; case 2
  2823  009B  1903               	skipnz
  2824  009C  2830               	goto	l180
  2825  009D  3A01               	xorlw	1	; case 3
  2826  009E  1903               	skipnz
  2827  009F  2837               	goto	l181
  2828  00A0  3A07               	xorlw	7	; case 4
  2829  00A1  1903               	skipnz
  2830  00A2  283E               	goto	l182
  2831  00A3  3A01               	xorlw	1	; case 5
  2832  00A4  1903               	skipnz
  2833  00A5  2845               	goto	l183
  2834  00A6  3A03               	xorlw	3	; case 6
  2835  00A7  1903               	skipnz
  2836  00A8  284C               	goto	l184
  2837  00A9  3A01               	xorlw	1	; case 7
  2838  00AA  1903               	skipnz
  2839  00AB  2853               	goto	l185
  2840  00AC  3A0F               	xorlw	15	; case 8
  2841  00AD  1903               	skipnz
  2842  00AE  285A               	goto	l186
  2843  00AF  3A01               	xorlw	1	; case 9
  2844  00B0  1903               	skipnz
  2845  00B1  2861               	goto	l187
  2846  00B2  3A03               	xorlw	3	; case 10
  2847  00B3  1903               	skipnz
  2848  00B4  2868               	goto	l188
  2849  00B5  3A01               	xorlw	1	; case 11
  2850  00B6  1903               	skipnz
  2851  00B7  286F               	goto	l189
  2852  00B8  3A07               	xorlw	7	; case 12
  2853  00B9  1903               	skipnz
  2854  00BA  2876               	goto	l190
  2855  00BB  3A01               	xorlw	1	; case 13
  2856  00BC  1903               	skipnz
  2857  00BD  287D               	goto	l191
  2858  00BE  2884               	goto	l192
  2859  00BF                     l178:
  2860                           
  2861                           ;ADC_lib.c: 119:     ADCON0bits.ADCS1 = 1;
  2862  00BF  179F               	bsf	31,7	;volatile
  2863                           
  2864                           ;ADC_lib.c: 120:     ADCON0bits.ADCS0 = 0;
  2865  00C0  131F               	bcf	31,6	;volatile
  2866                           
  2867                           ;ADC_lib.c: 121:     ADCON0bits.GO_DONE= 0;
  2868  00C1  109F               	bcf	31,1	;volatile
  2869                           
  2870                           ;ADC_lib.c: 122:     ADCON0bits.ADON = 1;
  2871  00C2  141F               	bsf	31,0	;volatile
  2872                           
  2873                           ;ADC_lib.c: 124:     ADCON1bits.ADFM = 0;
  2874  00C3  1683               	bsf	3,5	;RP0=1, select bank1
  2875  00C4  1303               	bcf	3,6	;RP1=0, select bank1
  2876  00C5  139F               	bcf	31,7	;volatile
  2877                           
  2878                           ;ADC_lib.c: 125:     ADCON1bits.VCFG1 = 0;
  2879  00C6  129F               	bcf	31,5	;volatile
  2880                           
  2881                           ;ADC_lib.c: 126:     ADCON1bits.VCFG0 = 0;
  2882  00C7  121F               	bcf	31,4	;volatile
  2883  00C8                     l193:
  2884  00C8  0008               	return
  2885  00C9                     __end_of_initADC:
  2886                           
  2887                           	psect	text17
  2888  0492                     __ptext17:	
  2889 ;; *************** function _USART_config *****************
  2890 ;; Defined at:
  2891 ;;		line 200 in file "LCD.c"
  2892 ;; Parameters:    Size  Location     Type
  2893 ;;		None
  2894 ;; Auto vars:     Size  Location     Type
  2895 ;;		None
  2896 ;; Return value:  Size  Location     Type
  2897 ;;                  1    wreg      void 
  2898 ;; Registers used:
  2899 ;;		wreg, status,2, status,0, pclath, cstack
  2900 ;; Tracked objects:
  2901 ;;		On entry : 0/0
  2902 ;;		On exit  : 0/0
  2903 ;;		Unchanged: 0/0
  2904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2905 ;;      Params:         0       0       0       0       0
  2906 ;;      Locals:         0       0       0       0       0
  2907 ;;      Temps:          0       0       0       0       0
  2908 ;;      Totals:         0       0       0       0       0
  2909 ;;Total ram usage:        0 bytes
  2910 ;; Hardware stack levels used:    1
  2911 ;; Hardware stack levels required when called:    3
  2912 ;; This function calls:
  2913 ;;		_USART_lib_config
  2914 ;; This function is called by:
  2915 ;;		_main
  2916 ;; This function uses a non-reentrant model
  2917 ;;
  2918                           
  2919                           
  2920                           ;psect for function _USART_config
  2921  0492                     _USART_config:
  2922  0492                     l1475:	
  2923                           ;incstack = 0
  2924                           ; Regs used in _USART_config: [wreg+status,2+status,0+pclath+cstack]
  2925                           
  2926                           
  2927                           ;LCD.c: 202:     USART_lib_config();
  2928  0492  120A  118A  23D6  120A  118A  	fcall	_USART_lib_config
  2929  0497                     l143:
  2930  0497  0008               	return
  2931  0498                     __end_of_USART_config:
  2932                           
  2933                           	psect	text18
  2934  03D6                     __ptext18:	
  2935 ;; *************** function _USART_lib_config *****************
  2936 ;; Defined at:
  2937 ;;		line 14 in file "USART.c"
  2938 ;; Parameters:    Size  Location     Type
  2939 ;;		None
  2940 ;; Auto vars:     Size  Location     Type
  2941 ;;		None
  2942 ;; Return value:  Size  Location     Type
  2943 ;;                  1    wreg      void 
  2944 ;; Registers used:
  2945 ;;		wreg
  2946 ;; Tracked objects:
  2947 ;;		On entry : 0/0
  2948 ;;		On exit  : 0/0
  2949 ;;		Unchanged: 0/0
  2950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2951 ;;      Params:         0       0       0       0       0
  2952 ;;      Locals:         0       0       0       0       0
  2953 ;;      Temps:          0       0       0       0       0
  2954 ;;      Totals:         0       0       0       0       0
  2955 ;;Total ram usage:        0 bytes
  2956 ;; Hardware stack levels used:    1
  2957 ;; Hardware stack levels required when called:    2
  2958 ;; This function calls:
  2959 ;;		Nothing
  2960 ;; This function is called by:
  2961 ;;		_USART_config
  2962 ;; This function uses a non-reentrant model
  2963 ;;
  2964                           
  2965                           
  2966                           ;psect for function _USART_lib_config
  2967  03D6                     _USART_lib_config:
  2968  03D6                     l1323:	
  2969                           ;incstack = 0
  2970                           ; Regs used in _USART_lib_config: [wreg]
  2971                           
  2972                           
  2973                           ;USART.c: 16:     SPBRG = 25;
  2974  03D6  3019               	movlw	25
  2975  03D7  1683               	bsf	3,5	;RP0=1, select bank1
  2976  03D8  1303               	bcf	3,6	;RP1=0, select bank1
  2977  03D9  0099               	movwf	25	;volatile
  2978  03DA                     l1325:
  2979                           
  2980                           ;USART.c: 18:     TXSTAbits.CSRC = 0;
  2981  03DA  1398               	bcf	24,7	;volatile
  2982  03DB                     l1327:
  2983                           
  2984                           ;USART.c: 19:     TXSTAbits.TX9 = 0;
  2985  03DB  1318               	bcf	24,6	;volatile
  2986  03DC                     l1329:
  2987                           
  2988                           ;USART.c: 20:     TXSTAbits.TXEN = 1;
  2989  03DC  1698               	bsf	24,5	;volatile
  2990  03DD                     l1331:
  2991                           
  2992                           ;USART.c: 21:     TXSTAbits.SYNC = 0;
  2993  03DD  1218               	bcf	24,4	;volatile
  2994  03DE                     l1333:
  2995                           
  2996                           ;USART.c: 22:     TXSTAbits.SENDB= 0;
  2997  03DE  1198               	bcf	24,3	;volatile
  2998  03DF                     l1335:
  2999                           
  3000                           ;USART.c: 23:     TXSTAbits.BRGH = 1;
  3001  03DF  1518               	bsf	24,2	;volatile
  3002  03E0                     l1337:
  3003                           
  3004                           ;USART.c: 24:     TXSTAbits.TRMT = 0;
  3005  03E0  1098               	bcf	24,1	;volatile
  3006  03E1                     l1339:
  3007                           
  3008                           ;USART.c: 25:     TXSTAbits.TX9D = 0;
  3009  03E1  1018               	bcf	24,0	;volatile
  3010  03E2                     l1341:
  3011                           
  3012                           ;USART.c: 27:     RCSTAbits.SPEN = 1;
  3013  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  3014  03E3  1303               	bcf	3,6	;RP1=0, select bank0
  3015  03E4  1798               	bsf	24,7	;volatile
  3016  03E5                     l1343:
  3017                           
  3018                           ;USART.c: 28:     RCSTAbits.RX9 = 0;
  3019  03E5  1318               	bcf	24,6	;volatile
  3020  03E6                     l1345:
  3021                           
  3022                           ;USART.c: 29:     RCSTAbits.SREN = 0;
  3023  03E6  1298               	bcf	24,5	;volatile
  3024  03E7                     l1347:
  3025                           
  3026                           ;USART.c: 30:     RCSTAbits.CREN = 1;
  3027  03E7  1618               	bsf	24,4	;volatile
  3028  03E8                     l1349:
  3029                           
  3030                           ;USART.c: 31:     RCSTAbits.ADDEN= 0;
  3031  03E8  1198               	bcf	24,3	;volatile
  3032  03E9                     l1351:
  3033                           
  3034                           ;USART.c: 32:     RCSTAbits.FERR = 0;
  3035  03E9  1118               	bcf	24,2	;volatile
  3036  03EA                     l1353:
  3037                           
  3038                           ;USART.c: 33:     RCSTAbits.OERR = 0;
  3039  03EA  1098               	bcf	24,1	;volatile
  3040  03EB                     l1355:
  3041                           
  3042                           ;USART.c: 34:     RCSTAbits.RX9D = 0;
  3043  03EB  1018               	bcf	24,0	;volatile
  3044  03EC                     l1357:
  3045                           
  3046                           ;USART.c: 36:     PIR1bits.RCIF = 0;
  3047  03EC  128C               	bcf	12,5	;volatile
  3048  03ED                     l1359:
  3049                           
  3050                           ;USART.c: 37:     PIE1bits.RCIE = 1;
  3051  03ED  1683               	bsf	3,5	;RP0=1, select bank1
  3052  03EE  1303               	bcf	3,6	;RP1=0, select bank1
  3053  03EF  168C               	bsf	12,5	;volatile
  3054  03F0                     l1361:
  3055                           
  3056                           ;USART.c: 38:     PIR1bits.TXIF = 0;
  3057  03F0  1283               	bcf	3,5	;RP0=0, select bank0
  3058  03F1  1303               	bcf	3,6	;RP1=0, select bank0
  3059  03F2  120C               	bcf	12,4	;volatile
  3060  03F3                     l247:
  3061  03F3  0008               	return
  3062  03F4                     __end_of_USART_lib_config:
  3063                           
  3064                           	psect	text19
  3065  01BC                     __ptext19:	
  3066 ;; *************** function _Lcd_Init *****************
  3067 ;; Defined at:
  3068 ;;		line 28 in file "LCD_8bits.c"
  3069 ;; Parameters:    Size  Location     Type
  3070 ;;		None
  3071 ;; Auto vars:     Size  Location     Type
  3072 ;;		None
  3073 ;; Return value:  Size  Location     Type
  3074 ;;                  1    wreg      void 
  3075 ;; Registers used:
  3076 ;;		wreg, status,2, status,0, pclath, cstack
  3077 ;; Tracked objects:
  3078 ;;		On entry : 0/0
  3079 ;;		On exit  : 0/0
  3080 ;;		Unchanged: 0/0
  3081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3082 ;;      Params:         0       0       0       0       0
  3083 ;;      Locals:         0       0       0       0       0
  3084 ;;      Temps:          0       2       0       0       0
  3085 ;;      Totals:         0       2       0       0       0
  3086 ;;Total ram usage:        2 bytes
  3087 ;; Hardware stack levels used:    1
  3088 ;; Hardware stack levels required when called:    4
  3089 ;; This function calls:
  3090 ;;		_Lcd_Cmd
  3091 ;;		_Lcd_Port
  3092 ;; This function is called by:
  3093 ;;		_main
  3094 ;; This function uses a non-reentrant model
  3095 ;;
  3096                           
  3097                           
  3098                           ;psect for function _Lcd_Init
  3099  01BC                     _Lcd_Init:
  3100  01BC                     l1667:	
  3101                           ;incstack = 0
  3102                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3103                           
  3104                           
  3105                           ;LCD_8bits.c: 30:     Lcd_Port(0b0000000);
  3106  01BC  3000               	movlw	0
  3107  01BD  120A  118A  2498  120A  118A  	fcall	_Lcd_Port
  3108  01C2                     l1669:
  3109                           
  3110                           ;LCD_8bits.c: 31:     _delay((unsigned long)((20)*(4000000/4000.0)));
  3111  01C2  301A               	movlw	26
  3112  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  3113  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  3114  01C5  00A1               	movwf	??_Lcd_Init+1
  3115  01C6  30F7               	movlw	247
  3116  01C7  00A0               	movwf	??_Lcd_Init
  3117  01C8                     u747:
  3118  01C8  0BA0               	decfsz	??_Lcd_Init,f
  3119  01C9  29C8               	goto	u747
  3120  01CA  0BA1               	decfsz	??_Lcd_Init+1,f
  3121  01CB  29C8               	goto	u747
  3122  01CC  29CD               	nop2
  3123  01CD                     l1671:
  3124                           
  3125                           ;LCD_8bits.c: 32:     Lcd_Cmd(0b00110000);
  3126  01CD  3030               	movlw	48
  3127  01CE  120A  118A  23F4  120A  118A  	fcall	_Lcd_Cmd
  3128  01D3                     l1673:
  3129                           
  3130                           ;LCD_8bits.c: 33:     PORTCbits.RC0 = 0;
  3131  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  3132  01D4  1303               	bcf	3,6	;RP1=0, select bank0
  3133  01D5  1007               	bcf	7,0	;volatile
  3134  01D6                     l1675:
  3135                           
  3136                           ;LCD_8bits.c: 34:     PORTCbits.RC1 = 0;
  3137  01D6  1087               	bcf	7,1	;volatile
  3138                           
  3139                           ;LCD_8bits.c: 35:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3140  01D7  3007               	movlw	7
  3141  01D8  1283               	bcf	3,5	;RP0=0, select bank0
  3142  01D9  1303               	bcf	3,6	;RP1=0, select bank0
  3143  01DA  00A1               	movwf	??_Lcd_Init+1
  3144  01DB  307C               	movlw	124
  3145  01DC  00A0               	movwf	??_Lcd_Init
  3146  01DD                     u757:
  3147  01DD  0BA0               	decfsz	??_Lcd_Init,f
  3148  01DE  29DD               	goto	u757
  3149  01DF  0BA1               	decfsz	??_Lcd_Init+1,f
  3150  01E0  29DD               	goto	u757
  3151  01E1  0000               	nop
  3152  01E2                     l1677:
  3153                           
  3154                           ;LCD_8bits.c: 36:     Lcd_Cmd(0b00110000);
  3155  01E2  3030               	movlw	48
  3156  01E3  120A  118A  23F4  120A  118A  	fcall	_Lcd_Cmd
  3157  01E8                     l1679:
  3158                           
  3159                           ;LCD_8bits.c: 37:      PORTCbits.RC0 = 0;
  3160  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  3161  01E9  1303               	bcf	3,6	;RP1=0, select bank0
  3162  01EA  1007               	bcf	7,0	;volatile
  3163  01EB                     l1681:
  3164                           
  3165                           ;LCD_8bits.c: 38:     PORTCbits.RC1 = 0;
  3166  01EB  1087               	bcf	7,1	;volatile
  3167  01EC                     l1683:
  3168                           
  3169                           ;LCD_8bits.c: 39:     _delay((unsigned long)((11)*(4000000/4000.0)));
  3170  01EC  300F               	movlw	15
  3171  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  3172  01EE  1303               	bcf	3,6	;RP1=0, select bank0
  3173  01EF  00A1               	movwf	??_Lcd_Init+1
  3174  01F0  3047               	movlw	71
  3175  01F1  00A0               	movwf	??_Lcd_Init
  3176  01F2                     u767:
  3177  01F2  0BA0               	decfsz	??_Lcd_Init,f
  3178  01F3  29F2               	goto	u767
  3179  01F4  0BA1               	decfsz	??_Lcd_Init+1,f
  3180  01F5  29F2               	goto	u767
  3181                           
  3182                           ;LCD_8bits.c: 40:     Lcd_Cmd(0b00110000);
  3183  01F6  3030               	movlw	48
  3184  01F7  120A  118A  23F4  120A  118A  	fcall	_Lcd_Cmd
  3185  01FC                     l1685:
  3186                           
  3187                           ;LCD_8bits.c: 41:     PORTCbits.RC0 = 0;
  3188  01FC  1283               	bcf	3,5	;RP0=0, select bank0
  3189  01FD  1303               	bcf	3,6	;RP1=0, select bank0
  3190  01FE  1007               	bcf	7,0	;volatile
  3191  01FF                     l1687:
  3192                           
  3193                           ;LCD_8bits.c: 42:     PORTCbits.RC1 = 0;
  3194  01FF  1087               	bcf	7,1	;volatile
  3195                           
  3196                           ;LCD_8bits.c: 43:     Lcd_Cmd(0b00111000);
  3197  0200  3038               	movlw	56
  3198  0201  120A  118A  23F4  120A  118A  	fcall	_Lcd_Cmd
  3199                           
  3200                           ;LCD_8bits.c: 44:     Lcd_Cmd(0b00001100);
  3201  0206  300C               	movlw	12
  3202  0207  120A  118A  23F4  120A  118A  	fcall	_Lcd_Cmd
  3203                           
  3204                           ;LCD_8bits.c: 45:     Lcd_Cmd(0b00000001);
  3205  020C  3001               	movlw	1
  3206  020D  120A  118A  23F4  120A  118A  	fcall	_Lcd_Cmd
  3207                           
  3208                           ;LCD_8bits.c: 46:     Lcd_Cmd(0b00000110);
  3209  0212  3006               	movlw	6
  3210  0213  120A  118A  23F4  120A  118A  	fcall	_Lcd_Cmd
  3211  0218                     l210:
  3212  0218  0008               	return
  3213  0219                     __end_of_Lcd_Init:
  3214                           
  3215                           	psect	text20
  3216  03F4                     __ptext20:	
  3217 ;; *************** function _Lcd_Cmd *****************
  3218 ;; Defined at:
  3219 ;;		line 19 in file "LCD_8bits.c"
  3220 ;; Parameters:    Size  Location     Type
  3221 ;;  a               1    wreg     unsigned char 
  3222 ;; Auto vars:     Size  Location     Type
  3223 ;;  a               1    6[COMMON] unsigned char 
  3224 ;; Return value:  Size  Location     Type
  3225 ;;                  1    wreg      void 
  3226 ;; Registers used:
  3227 ;;		wreg, status,2, status,0, pclath, cstack
  3228 ;; Tracked objects:
  3229 ;;		On entry : 0/0
  3230 ;;		On exit  : 0/0
  3231 ;;		Unchanged: 0/0
  3232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3233 ;;      Params:         0       0       0       0       0
  3234 ;;      Locals:         1       0       0       0       0
  3235 ;;      Temps:          2       0       0       0       0
  3236 ;;      Totals:         3       0       0       0       0
  3237 ;;Total ram usage:        3 bytes
  3238 ;; Hardware stack levels used:    1
  3239 ;; Hardware stack levels required when called:    3
  3240 ;; This function calls:
  3241 ;;		_Lcd_Port
  3242 ;; This function is called by:
  3243 ;;		_Lcd_Init
  3244 ;;		_Lcd_Set_Cursor
  3245 ;;		_Lcd_Clear
  3246 ;;		_Lcd_Shift_Left
  3247 ;;		_Lcd_Shift_Right
  3248 ;; This function uses a non-reentrant model
  3249 ;;
  3250                           
  3251                           
  3252                           ;psect for function _Lcd_Cmd
  3253  03F4                     _Lcd_Cmd:
  3254                           
  3255                           ;incstack = 0
  3256                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3257                           ;Lcd_Cmd@a stored from wreg
  3258  03F4  00F6               	movwf	Lcd_Cmd@a
  3259  03F5                     l1563:
  3260                           
  3261                           ;LCD_8bits.c: 19: void Lcd_Cmd (char a);LCD_8bits.c: 20: {;LCD_8bits.c: 21:     PORTCbit
      +                          s.RC0 = 0;
  3262  03F5  1283               	bcf	3,5	;RP0=0, select bank0
  3263  03F6  1303               	bcf	3,6	;RP1=0, select bank0
  3264  03F7  1007               	bcf	7,0	;volatile
  3265  03F8                     l1565:
  3266                           
  3267                           ;LCD_8bits.c: 22:     Lcd_Port(a);
  3268  03F8  0876               	movf	Lcd_Cmd@a,w
  3269  03F9  120A  118A  2498  120A  118A  	fcall	_Lcd_Port
  3270  03FE                     l1567:
  3271                           
  3272                           ;LCD_8bits.c: 23:     PORTCbits.RC2 = 1;
  3273  03FE  1283               	bcf	3,5	;RP0=0, select bank0
  3274  03FF  1303               	bcf	3,6	;RP1=0, select bank0
  3275  0400  1507               	bsf	7,2	;volatile
  3276  0401                     l1569:
  3277                           
  3278                           ;LCD_8bits.c: 24:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3279  0401  3007               	movlw	7
  3280  0402  00F5               	movwf	??_Lcd_Cmd+1
  3281  0403  307D               	movlw	125
  3282  0404  00F4               	movwf	??_Lcd_Cmd
  3283  0405                     u777:
  3284  0405  0BF4               	decfsz	??_Lcd_Cmd,f
  3285  0406  2C05               	goto	u777
  3286  0407  0BF5               	decfsz	??_Lcd_Cmd+1,f
  3287  0408  2C05               	goto	u777
  3288  0409                     l1571:
  3289                           
  3290                           ;LCD_8bits.c: 25:     PORTCbits.RC2 = 0;
  3291  0409  1283               	bcf	3,5	;RP0=0, select bank0
  3292  040A  1303               	bcf	3,6	;RP1=0, select bank0
  3293  040B  1107               	bcf	7,2	;volatile
  3294  040C                     l207:
  3295  040C  0008               	return
  3296  040D                     __end_of_Lcd_Cmd:
  3297                           
  3298                           	psect	text21
  3299  0498                     __ptext21:	
  3300 ;; *************** function _Lcd_Port *****************
  3301 ;; Defined at:
  3302 ;;		line 14 in file "LCD_8bits.c"
  3303 ;; Parameters:    Size  Location     Type
  3304 ;;  a               1    wreg     unsigned char 
  3305 ;; Auto vars:     Size  Location     Type
  3306 ;;  a               1    3[COMMON] unsigned char 
  3307 ;; Return value:  Size  Location     Type
  3308 ;;                  1    wreg      void 
  3309 ;; Registers used:
  3310 ;;		wreg
  3311 ;; Tracked objects:
  3312 ;;		On entry : 0/0
  3313 ;;		On exit  : 0/0
  3314 ;;		Unchanged: 0/0
  3315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3316 ;;      Params:         0       0       0       0       0
  3317 ;;      Locals:         1       0       0       0       0
  3318 ;;      Temps:          0       0       0       0       0
  3319 ;;      Totals:         1       0       0       0       0
  3320 ;;Total ram usage:        1 bytes
  3321 ;; Hardware stack levels used:    1
  3322 ;; Hardware stack levels required when called:    2
  3323 ;; This function calls:
  3324 ;;		Nothing
  3325 ;; This function is called by:
  3326 ;;		_Lcd_Cmd
  3327 ;;		_Lcd_Init
  3328 ;;		_Lcd_Write_Char
  3329 ;; This function uses a non-reentrant model
  3330 ;;
  3331                           
  3332                           
  3333                           ;psect for function _Lcd_Port
  3334  0498                     _Lcd_Port:
  3335                           
  3336                           ;incstack = 0
  3337                           ; Regs used in _Lcd_Port: [wreg]
  3338                           ;Lcd_Port@a stored from wreg
  3339  0498  00F3               	movwf	Lcd_Port@a
  3340  0499                     l1551:
  3341                           
  3342                           ;LCD_8bits.c: 14: void Lcd_Port (char a);LCD_8bits.c: 15: {;LCD_8bits.c: 16:     PORTD =
      +                           a;
  3343  0499  0873               	movf	Lcd_Port@a,w
  3344  049A  1283               	bcf	3,5	;RP0=0, select bank0
  3345  049B  1303               	bcf	3,6	;RP1=0, select bank0
  3346  049C  0088               	movwf	8	;volatile
  3347  049D                     l204:
  3348  049D  0008               	return
  3349  049E                     __end_of_Lcd_Port:
  3350                           
  3351                           	psect	text22
  3352  040D                     __ptext22:	
  3353 ;; *************** function _ISR *****************
  3354 ;; Defined at:
  3355 ;;		line 96 in file "LCD.c"
  3356 ;; Parameters:    Size  Location     Type
  3357 ;;		None
  3358 ;; Auto vars:     Size  Location     Type
  3359 ;;		None
  3360 ;; Return value:  Size  Location     Type
  3361 ;;                  1    wreg      void 
  3362 ;; Registers used:
  3363 ;;		wreg, pclath, cstack
  3364 ;; Tracked objects:
  3365 ;;		On entry : 0/0
  3366 ;;		On exit  : 0/0
  3367 ;;		Unchanged: 0/0
  3368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3369 ;;      Params:         0       0       0       0       0
  3370 ;;      Locals:         0       0       0       0       0
  3371 ;;      Temps:          3       0       0       0       0
  3372 ;;      Totals:         3       0       0       0       0
  3373 ;;Total ram usage:        3 bytes
  3374 ;; Hardware stack levels used:    1
  3375 ;; Hardware stack levels required when called:    1
  3376 ;; This function calls:
  3377 ;;		_leer_char
  3378 ;; This function is called by:
  3379 ;;		Interrupt level 1
  3380 ;; This function uses a non-reentrant model
  3381 ;;
  3382                           
  3383                           
  3384                           ;psect for function _ISR
  3385  040D                     _ISR:
  3386  040D                     i1l1495:
  3387                           
  3388                           ;LCD.c: 99:     if (PIR1bits.RCIF == 1)
  3389  040D  1283               	bcf	3,5	;RP0=0, select bank0
  3390  040E  1303               	bcf	3,6	;RP1=0, select bank0
  3391  040F  1E8C               	btfss	12,5	;volatile
  3392  0410  2C12               	goto	u55_21
  3393  0411  2C13               	goto	u55_20
  3394  0412                     u55_21:
  3395  0412  2C1E               	goto	i1l116
  3396  0413                     u55_20:
  3397  0413                     i1l1497:
  3398                           
  3399                           ;LCD.c: 100:     {;LCD.c: 101:         leer = leer_char();
  3400  0413  120A  118A  245E  120A  118A  	fcall	_leer_char
  3401  0418  00F0               	movwf	??_ISR
  3402  0419  0870               	movf	??_ISR,w
  3403  041A  1283               	bcf	3,5	;RP0=0, select bank0
  3404  041B  1303               	bcf	3,6	;RP1=0, select bank0
  3405  041C  00AC               	movwf	_leer
  3406  041D                     i1l1499:
  3407                           
  3408                           ;LCD.c: 102:         PIR1bits.RCIF = 0;
  3409  041D  128C               	bcf	12,5	;volatile
  3410  041E                     i1l116:
  3411  041E  0872               	movf	??_ISR+2,w
  3412  041F  008A               	movwf	10
  3413  0420  0E71               	swapf	??_ISR+1,w
  3414  0421  0083               	movwf	3
  3415  0422  0EFE               	swapf	btemp,f
  3416  0423  0E7E               	swapf	btemp,w
  3417  0424  0009               	retfie
  3418  0425                     __end_of_ISR:
  3419                           
  3420                           	psect	intentry
  3421  0004                     __pintentry:	
  3422                           ;incstack = 0
  3423                           ; Regs used in _ISR: [wreg+pclath+cstack]
  3424                           
  3425  0004                     interrupt_function:
  3426  007E                     saved_w	set	btemp
  3427  0004  00FE               	movwf	btemp
  3428  0005  0E03               	swapf	3,w
  3429  0006  00F1               	movwf	??_ISR+1
  3430  0007  080A               	movf	10,w
  3431  0008  00F2               	movwf	??_ISR+2
  3432  0009  120A  118A  2C0D   	ljmp	_ISR
  3433                           
  3434                           	psect	text23
  3435  045E                     __ptext23:	
  3436 ;; *************** function _leer_char *****************
  3437 ;; Defined at:
  3438 ;;		line 260 in file "LCD.c"
  3439 ;; Parameters:    Size  Location     Type
  3440 ;;		None
  3441 ;; Auto vars:     Size  Location     Type
  3442 ;;		None
  3443 ;; Return value:  Size  Location     Type
  3444 ;;                  1    wreg      unsigned char 
  3445 ;; Registers used:
  3446 ;;		wreg
  3447 ;; Tracked objects:
  3448 ;;		On entry : 0/0
  3449 ;;		On exit  : 0/0
  3450 ;;		Unchanged: 0/0
  3451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3452 ;;      Params:         0       0       0       0       0
  3453 ;;      Locals:         0       0       0       0       0
  3454 ;;      Temps:          0       0       0       0       0
  3455 ;;      Totals:         0       0       0       0       0
  3456 ;;Total ram usage:        0 bytes
  3457 ;; Hardware stack levels used:    1
  3458 ;; This function calls:
  3459 ;;		Nothing
  3460 ;; This function is called by:
  3461 ;;		_ISR
  3462 ;; This function uses a non-reentrant model
  3463 ;;
  3464                           
  3465                           
  3466                           ;psect for function _leer_char
  3467  045E                     _leer_char:
  3468  045E                     i1l1407:	
  3469                           ;incstack = 0
  3470                           ; Regs used in _leer_char: [wreg]
  3471                           
  3472                           
  3473                           ;LCD.c: 262:     if (RCSTAbits.OERR ==0)
  3474  045E  1283               	bcf	3,5	;RP0=0, select bank0
  3475  045F  1303               	bcf	3,6	;RP1=0, select bank0
  3476  0460  1898               	btfsc	24,1	;volatile
  3477  0461  2C63               	goto	u54_21
  3478  0462  2C64               	goto	u54_20
  3479  0463                     u54_21:
  3480  0463  2C69               	goto	i1l1411
  3481  0464                     u54_20:
  3482  0464                     i1l1409:
  3483                           
  3484                           ;LCD.c: 263:     {;LCD.c: 264:         CREN = 0;
  3485  0464  1218               	bcf	24,4	;volatile
  3486                           
  3487                           ;LCD.c: 265:         __nop();
  3488  0465  0000               	nop
  3489                           
  3490                           ;LCD.c: 266:         CREN = 1;
  3491  0466  1283               	bcf	3,5	;RP0=0, select bank0
  3492  0467  1303               	bcf	3,6	;RP1=0, select bank0
  3493  0468  1618               	bsf	24,4	;volatile
  3494  0469                     i1l1411:
  3495                           
  3496                           ;LCD.c: 268:     return (RCREG);
  3497  0469  081A               	movf	26,w	;volatile
  3498  046A                     i1l162:
  3499  046A  0008               	return
  3500  046B                     __end_of_leer_char:
  3501  007E                     btemp	set	126	;btemp
  3502  007E                     wtemp0	set	126
  3503                           
  3504                           	psect	config
  3505                           
  3506                           ;Config register CONFIG1 @ 0x2007
  3507                           ;	Oscillator Selection bits
  3508                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3509                           ;	Watchdog Timer Enable bit
  3510                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3511                           ;	Power-up Timer Enable bit
  3512                           ;	PWRTE = OFF, PWRT disabled
  3513                           ;	RE3/MCLR pin function select bit
  3514                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3515                           ;	Code Protection bit
  3516                           ;	CP = OFF, Program memory code protection is disabled
  3517                           ;	Data Code Protection bit
  3518                           ;	CPD = OFF, Data memory code protection is disabled
  3519                           ;	Brown Out Reset Selection bits
  3520                           ;	BOREN = OFF, BOR disabled
  3521                           ;	Internal External Switchover bit
  3522                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3523                           ;	Fail-Safe Clock Monitor Enabled bit
  3524                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3525                           ;	Low Voltage Programming Enable bit
  3526                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3527                           ;	In-Circuit Debugger Mode bit
  3528                           ;	DEBUG = 0x1, unprogrammed default
  3529  2007                     	org	8199
  3530  2007  20D4               	dw	8404
  3531                           
  3532                           ;Config register CONFIG2 @ 0x2008
  3533                           ;	Brown-out Reset Selection bit
  3534                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3535                           ;	Flash Program Memory Self Write Enable bits
  3536                           ;	WRT = OFF, Write protection off
  3537  2008                     	org	8200
  3538  2008  3FFF               	dw	16383

Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     10      18
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _virtual->_escribir_char
    _lcd->_Lcd_Set_Cursor
    _contador_lcd->_Lcd_Write_Char
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Conversion->___awdiv
    _Conversion->___awmod
    _Lcd_Write_Char->_Lcd_Port
    _adc_config->_initADC
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_lcd
    _lcd->_Conversion
    _Conversion->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2562
                                              8 BANK0      2     2      0
                           _Lcd_Init
                       _USART_config
                         _adc_config
                       _contador_lcd
                    _interrup_config
                                _lcd
                         _osc_config
                              _setup
                        _tmr0_config
                            _virtual
 ---------------------------------------------------------------------------------
 (1) _virtual                                              0     0      0      22
                      _escribir_char
 ---------------------------------------------------------------------------------
 (2) _escribir_char                                        1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _tmr0_config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _osc_config                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd                                                  3     3      0    2363
                                              7 BANK0      1     1      0
                         _Conversion
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                       _contador_lcd
 ---------------------------------------------------------------------------------
 (2) _contador_lcd                                         1     1      0      62
                                              6 COMMON     1     1      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     3     3      0     228
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       4     3      1     614
                                              7 COMMON     1     0      1
                                              0 BANK0      3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Conversion                                           3     3      0    1459
                                              4 BANK0      3     3      0
                     _Lcd_Write_Char
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     793
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     604
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      62
                                              4 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _interrup_config                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_config                                           0     0      0      22
                            _initADC
 ---------------------------------------------------------------------------------
 (2) _initADC                                              3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _USART_config                                         0     0      0       0
                   _USART_lib_config
 ---------------------------------------------------------------------------------
 (2) _USART_lib_config                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      93
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      62
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
                          _leer_char
 ---------------------------------------------------------------------------------
 (6) _leer_char                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _USART_config
     _USART_lib_config
   _adc_config
     _initADC
   _contador_lcd
     _Lcd_Write_Char
       _Lcd_Port
   _interrup_config
   _lcd
     _Conversion
       _Lcd_Write_Char
         _Lcd_Port
       ___awdiv
       ___awmod
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     _contador_lcd
       _Lcd_Write_Char
         _Lcd_Port
   _osc_config
   _setup
   _tmr0_config
   _virtual
     _escribir_char

 _ISR (ROOT)
   _leer_char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      A      12       5       22.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1D      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Feb 10 21:20:07 2021

                        _i 002A                          pc 0002               ___awdiv@sign 0021  
                       _x1 0030                         _x2 002E                         _y1 002F  
                       _y2 002D     __size_of_escribir_char 000A                         fsr 0004  
                      l210 0218                        l131 0476                        l204 049D  
                      l140 0491                        l134 048A                        l207 040C  
                      l143 0497                        l128 0386                        l152 035D  
                      l225 03AF                        l137 045D                        l234 0450  
                      l146 02FE                        l219 03D5                        l155 047C  
                      l180 0030                        l181 0037                        l149 0152  
                      l190 0076                        l182 003E                        l158 0480  
                      l247 03F3                        l191 007D                        l183 0045  
                      l192 0084                        l184 004C                        l193 00C8  
                      l185 0053                        l177 0022                        l169 032E  
                      l186 005A                        l178 00BF                        l187 0061  
                      l179 0029                        l188 0068                        l189 006F  
                      l486 01BB                        l499 0273    __end_of_interrup_config 0477  
                      u300 0165                        u301 0164                        u310 0176  
                      u311 0175                        u330 0188                        u331 0187  
                      u325 017A                        u350 0199                        u351 0198  
                      u345 0189                        u370 01AD                        u290 015A  
                      u610 0248                        u530 0480                        u371 01AC  
                      u355 0195                        u291 0159                        u611 0247  
                      u531 047F                        u380 01B2                        u620 0252  
                      u700 03AF                        _ISR 040D                        u381 01B1  
                      u365 01A1                        u621 0251                        u605 023A  
                      u701 03AE                        u710 02B9                        u711 02B8  
                      u640 0265                        u641 0264                        u625 024E  
                      u650 026A                        u570 0220                        u651 0269  
                      u635 0259                        u571 021F                        u580 022B  
                      u660 0307                        u581 022A                        u661 0306  
                      u590 0236                        u670 031A                        u591 0235  
                      u671 0319                        u727 02AF                        u680 03B8  
                      u737 044B                        u681 03B7                        u690 03CA  
                      u747 01C8                        u691 03C9                        u757 01DD  
                      u767 01F2                        u777 0405           _USART_lib_config 03D6  
                      _lcd 02C2                        fsr0 0004               ___awmod@sign 0021  
                     ?_ISR 0070                       l1221 015A                       l1231 016E  
                     l1223 015F                       l1313 0021                       l1241 0184  
                     l1233 0170                       l1225 0161                       l1217 0153  
                     l1331 03DD                       l1323 03D6                       l1251 01A7  
                     l1243 0188                       l1235 0176                       l1227 0165  
                     l1219 0156                       l1341 03E2                       l1333 03DE  
                     l1325 03DA                       l1317 008B                       l1245 0199  
                     l1237 0179                       l1253 01AD                       l1229 016A  
                     l1421 036C                       l1405 0478                       l1351 03E9  
                     l1343 03E5                       l1335 03DF                       l1327 03DB  
                     l1255 01B2                       l1247 019F                       l1239 0180  
                     l1431 0377                       l1423 036F                       l1415 035E  
                     l1361 03F0                       l1353 03EA                       l1345 03E6  
                     l1337 03E0                       l1329 03DC                       l1257 01B7  
                     l1249 01A0                       l1601 025F                       l1441 0481  
                     l1433 037A                       l1425 0372                       l1417 0366  
                     l1355 03EB                       l1347 03E7                       l1339 03E1  
                     l1443 046B                       l1603 0265                       l1611 02FF  
                     l1435 037D                       l1427 0375                       l1419 0369  
            ?_contador_lcd 0070                       l1357 03EC                       l1349 03E8  
                     l1445 0473                       l1605 026A                       l1621 031F  
                     l1613 0307                       l1701 02ED                       l1437 0380  
                     l1429 0376                       l1551 0499                       l1359 03ED  
                     l1607 026F                       l1631 03C4                       l1623 0327  
                     l1615 030C                       l1703 02F9                       l1439 0383  
                     l1471 0459                       l1711 028D                       l1473 048B  
                     l1561 044D                       l1553 043D                       l1633 03CA  
                     l1625 03B3                       l1641 039A                       l1617 0314  
                     l1721 02A9                       l1713 0292                       l1705 0274  
                     l1571 0409                       l1563 03F5                       l1475 0492  
                     l1555 0440                       l1651 00FD                       l1635 03CF  
                     l1627 03B8                       l1643 03A2                       l1619 031A  
                     l1723 02B3                       l1715 0297                       l1707 0279  
                     l1565 03F8                       l1557 0446                       l1581 0227  
                     l1573 0219                       l1661 013A                       l1653 0113  
                     l1645 00C9                       l1629 03BD                       l1637 038A  
                     l1469 0451                       l1477 032F                       l1725 02B9  
                     l1717 029C                       l1709 027E                       l1567 03FE  
                     l1671 01CD                       l1559 0449                       l1591 0240  
                     l1583 022B                       l1575 021C                       l1663 0143  
                     l1655 0129                       l1647 00D1                       l1639 038D  
                     l1727 02BA                       l1719 02A6                       l1569 0401  
                     l1681 01EB                       l1673 01D3                       l1593 0244  
                     l1585 0230                       l1577 0220                       l1665 014C  
                     l1657 012D                       l1649 00E7                       ?_lcd 0070  
                     l1683 01EC                       l1675 01D6                       l1667 01BC  
                     l1755 0093                       l1595 0248                       l1587 0236  
                     l1579 0225                       l1659 0134                       l1691 02CA  
                     l1685 01FC                       l1677 01E2                       l1669 01C2  
                     l1597 0252                       l1589 0239                       l1693 02D0  
                     l1687 01FF                       l1679 01E8                       l1599 0258  
                     l1695 02D7                       l1697 02DC                       l1689 02C2  
                     l1699 02E8                       STR_1 042B                       _CREN 00C4  
                     _IOCB 0096                       _TMR0 0001          ?_Lcd_Write_String 0070  
                     _main 0274                       _leer 002C                       btemp 007E  
                     start 000C         ??_Lcd_Write_String 0076            __end_of_Lcd_Cmd 040D  
                    ??_ISR 0070                      ??_lcd 0027                      ?_main 0070  
          __end_of___awdiv 01BC            __end_of___awmod 0274                      _ANSEL 0188  
          ___awdiv@divisor 0073                      i1l116 041E                      i1l162 046A  
          ___awdiv@counter 0020                      _RCREG 001A                      _SPBRG 0099  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009                      u54_20 0464  
                    u54_21 0463                      u55_20 0413                      u55_21 0412  
  __size_of_Lcd_Set_Cursor 0026                      _TRISA 0085                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088                      _TRISE 0089  
                    _TXREG 0019            __end_of_initADC 00C9             ??_contador_lcd 0076  
                    _setup 035E              _escribir_char 0477                      pclath 000A  
               _Conversion 00C9                      status 0003                      wtemp0 007E  
          __end_of_virtual 035E           __end_of_Lcd_Init 0219           __end_of_Lcd_Port 049E  
          __initialization 000F               __end_of_main 02C2                     ??_main 0028  
         ?_interrup_config 0070               ?_tmr0_config 0070                     _ADRESH 001E  
         ___awdiv@dividend 0075             ?_escribir_char 0070                     ?_setup 0070  
                   _ANSELH 0189                     i1l1411 0469                     i1l1407 045E  
                   i1l1409 0464                     i1l1495 040D                     i1l1497 0413  
                   i1l1499 041D                  ??_Lcd_Cmd 0074    __size_of_Lcd_Write_Char 0015  
                ??___awdiv 0077                  ??___awmod 0077           ___awdiv@quotient 0022  
          ___awmod@divisor 0073            ___awmod@counter 0020                     _unidad 0079  
                ??_initADC 0073                     saved_w 007E                  ??_virtual 0074  
          Lcd_Set_Cursor@a 0021            Lcd_Set_Cursor@b 0077                ?_Conversion 0070  
  __end_of__initialization 001C   __end_of_USART_lib_config 03F4             __pcstackCOMMON 0070  
               _adc_config 048B       __end_of_contador_lcd 032F              __end_of_setup 0387  
           _Lcd_Set_Cursor 03B0             _OPTION_REGbits 0081            ??_escribir_char 0073  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070                    ??_setup 0073  
               __pbssBANK0 002A         __size_of_leer_char 000D                 __pmaintext 0274  
               __pintentry 0004  __size_of_Lcd_Write_String 0029     __end_of_Lcd_Set_Cursor 03D6  
      __size_of_Conversion 008A                 ??_Lcd_Init 0020                 ??_Lcd_Port 0073  
     __size_of_tmr0_config 000D                 __stringtab 0425             _Lcd_Write_Char 043C  
                  _Lcd_Cmd 03F4                ?_adc_config 0070                    ___awdiv 0153  
                  ___awmod 0219          __end_of_leer_char 046B            ?_Lcd_Set_Cursor 0077  
                  __ptext1 032F                    __ptext2 0477                    __ptext3 0451  
                  __ptext4 035E                    __ptext5 0481                    __ptext6 02C2  
                  __ptext7 02FF                    __ptext8 0387                    __ptext9 03B0  
                  _initADC 0020               __size_of_ISR 0018               __size_of_lcd 003D  
         ___awmod@dividend 0075                    _virtual 032F                    _voltaje 007A  
   __end_of_Lcd_Write_Char 0451       end_of_initialization 001C                 _osc_config 0481  
    __size_of_contador_lcd 0030                  _RCSTAbits 0018                  Lcd_Port@a 0073  
                _PORTCbits 0007                  _TRISCbits 0087            ?_Lcd_Write_Char 0070  
      __size_of_adc_config 0007   __size_of_interrup_config 000C               _contador_lcd 02FF  
        Lcd_Write_String@a 0020          Lcd_Write_String@i 0021               ??_Conversion 0024  
                _TXSTAbits 0098          ?_USART_lib_config 0070              ?_USART_config 0070  
       ??_USART_lib_config 0073                 initADC@CHS 0075           _Lcd_Write_String 0387  
       __end_of_Conversion 0153        start_initialization 000F                __end_of_ISR 0425  
              __end_of_lcd 02FF          __size_of_Lcd_Init 005D          __size_of_Lcd_Port 0006  
              ?_osc_config 0070             ??_USART_config 0073            Lcd_Write_Char@a 0075  
              __pbssCOMMON 0078                  ___latbits 0002              __pcstackBANK0 0020  
                _adc_value 0031      __end_of_escribir_char 0481                   ?_Lcd_Cmd 0070  
        ??_interrup_config 0073           ??_Lcd_Set_Cursor 0020               ??_adc_config 0076  
                 ?___awdiv 0073                   ?___awmod 0073                  __pstrings 0425  
                 ?_initADC 0070        __size_of_osc_config 000A                  _leer_char 045E  
            ??_tmr0_config 0073                   ?_virtual 0070             __size_of_setup 0029  
       __end_of_adc_config 0492          interrupt_function 0004                   _PIE1bits 008C  
                 Lcd_Cmd@a 0076                   _PIR1bits 000C                 _ADCON0bits 001F  
              __stringbase 042A                 _ADCON1bits 009F                 ?_leer_char 0070  
         ??_Lcd_Write_Char 0074       __end_of_USART_config 0498                   _Lcd_Init 01BC  
                 _Lcd_Port 0498        __end_of_tmr0_config 045E   __end_of_Lcd_Write_String 03B0  
         __size_of_Lcd_Cmd 0019           __size_of___awdiv 0069           __size_of___awmod 005B  
       __end_of__stringtab 042B  __size_of_USART_lib_config 001E           __size_of_initADC 00A9  
                 __ptext10 00C9                   __ptext11 0219                   __ptext20 03F4  
                 __ptext12 0153                   __ptext21 0498                   __ptext13 043C  
                 __ptext22 040D                   __ptext14 046B                   __ptext23 045E  
                 __ptext15 048B                   __ptext16 0020                   __ptext17 0492  
                 __ptext18 03D6                   __ptext19 01BC         escribir_char@valor 0073  
                 _contador 0078           __size_of_virtual 002F               ??_osc_config 0073  
            __size_of_main 004E                ??_leer_char 0070                 _INTCONbits 000B  
       __end_of_osc_config 048B                _tmr0_config 0451            _interrup_config 046B  
                 intlevel1 0000                  stringcode 0425                 _OSCCONbits 008F  
       Lcd_Set_Cursor@temp 0022      __size_of_USART_config 0006                   stringdir 0425  
                 stringtab 0425               _USART_config 0492  
