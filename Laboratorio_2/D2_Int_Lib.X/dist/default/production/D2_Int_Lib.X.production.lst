

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 05 00:54:40 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 2.20
    30                           ; Generated 12/02/2020 GMT
    31                           ; 
    32                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F887 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  000E                     	;# 
    79  000F                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  0081                     	;# 
    99  0085                     	;# 
   100  0086                     	;# 
   101  0087                     	;# 
   102  0088                     	;# 
   103  0089                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  008F                     	;# 
   108  0090                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0097                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  0105                     	;# 
   127  0107                     	;# 
   128  0108                     	;# 
   129  0109                     	;# 
   130  010C                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010F                     	;# 
   135  0185                     	;# 
   136  0187                     	;# 
   137  0188                     	;# 
   138  0189                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0000                     	;# 
   142  0001                     	;# 
   143  0002                     	;# 
   144  0003                     	;# 
   145  0004                     	;# 
   146  0005                     	;# 
   147  0006                     	;# 
   148  0007                     	;# 
   149  0008                     	;# 
   150  0009                     	;# 
   151  000A                     	;# 
   152  000B                     	;# 
   153  000C                     	;# 
   154  000D                     	;# 
   155  000E                     	;# 
   156  000E                     	;# 
   157  000F                     	;# 
   158  0010                     	;# 
   159  0011                     	;# 
   160  0012                     	;# 
   161  0013                     	;# 
   162  0014                     	;# 
   163  0015                     	;# 
   164  0015                     	;# 
   165  0016                     	;# 
   166  0017                     	;# 
   167  0018                     	;# 
   168  0019                     	;# 
   169  001A                     	;# 
   170  001B                     	;# 
   171  001B                     	;# 
   172  001C                     	;# 
   173  001D                     	;# 
   174  001E                     	;# 
   175  001F                     	;# 
   176  0081                     	;# 
   177  0085                     	;# 
   178  0086                     	;# 
   179  0087                     	;# 
   180  0088                     	;# 
   181  0089                     	;# 
   182  008C                     	;# 
   183  008D                     	;# 
   184  008E                     	;# 
   185  008F                     	;# 
   186  0090                     	;# 
   187  0091                     	;# 
   188  0092                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0094                     	;# 
   193  0095                     	;# 
   194  0096                     	;# 
   195  0097                     	;# 
   196  0098                     	;# 
   197  0099                     	;# 
   198  009A                     	;# 
   199  009B                     	;# 
   200  009C                     	;# 
   201  009D                     	;# 
   202  009E                     	;# 
   203  009F                     	;# 
   204  0105                     	;# 
   205  0107                     	;# 
   206  0108                     	;# 
   207  0109                     	;# 
   208  010C                     	;# 
   209  010C                     	;# 
   210  010D                     	;# 
   211  010E                     	;# 
   212  010F                     	;# 
   213  0185                     	;# 
   214  0187                     	;# 
   215  0188                     	;# 
   216  0189                     	;# 
   217  018C                     	;# 
   218  018D                     	;# 
   219  0000                     	;# 
   220  0001                     	;# 
   221  0002                     	;# 
   222  0003                     	;# 
   223  0004                     	;# 
   224  0005                     	;# 
   225  0006                     	;# 
   226  0007                     	;# 
   227  0008                     	;# 
   228  0009                     	;# 
   229  000A                     	;# 
   230  000B                     	;# 
   231  000C                     	;# 
   232  000D                     	;# 
   233  000E                     	;# 
   234  000E                     	;# 
   235  000F                     	;# 
   236  0010                     	;# 
   237  0011                     	;# 
   238  0012                     	;# 
   239  0013                     	;# 
   240  0014                     	;# 
   241  0015                     	;# 
   242  0015                     	;# 
   243  0016                     	;# 
   244  0017                     	;# 
   245  0018                     	;# 
   246  0019                     	;# 
   247  001A                     	;# 
   248  001B                     	;# 
   249  001B                     	;# 
   250  001C                     	;# 
   251  001D                     	;# 
   252  001E                     	;# 
   253  001F                     	;# 
   254  0081                     	;# 
   255  0085                     	;# 
   256  0086                     	;# 
   257  0087                     	;# 
   258  0088                     	;# 
   259  0089                     	;# 
   260  008C                     	;# 
   261  008D                     	;# 
   262  008E                     	;# 
   263  008F                     	;# 
   264  0090                     	;# 
   265  0091                     	;# 
   266  0092                     	;# 
   267  0093                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0094                     	;# 
   271  0095                     	;# 
   272  0096                     	;# 
   273  0097                     	;# 
   274  0098                     	;# 
   275  0099                     	;# 
   276  009A                     	;# 
   277  009B                     	;# 
   278  009C                     	;# 
   279  009D                     	;# 
   280  009E                     	;# 
   281  009F                     	;# 
   282  0105                     	;# 
   283  0107                     	;# 
   284  0108                     	;# 
   285  0109                     	;# 
   286  010C                     	;# 
   287  010C                     	;# 
   288  010D                     	;# 
   289  010E                     	;# 
   290  010F                     	;# 
   291  0185                     	;# 
   292  0187                     	;# 
   293  0188                     	;# 
   294  0189                     	;# 
   295  018C                     	;# 
   296  018D                     	;# 
   297  0006                     _PORTBbits	set	6
   298  0009                     _PORTEbits	set	9
   299  0009                     _PORTE	set	9
   300  0008                     _PORTD	set	8
   301  0007                     _PORTC	set	7
   302  0005                     _PORTA	set	5
   303  001F                     _ADCON0bits	set	31
   304  0006                     _PORTB	set	6
   305  0001                     _TMR0	set	1
   306  000B                     _INTCONbits	set	11
   307  009F                     _ADCON1bits	set	159
   308  0081                     _OPTION_REGbits	set	129
   309  008F                     _OSCCONbits	set	143
   310  0096                     _IOCB	set	150
   311  0089                     _TRISE	set	137
   312  0088                     _TRISD	set	136
   313  0087                     _TRISC	set	135
   314  0086                     _TRISB	set	134
   315  0085                     _TRISA	set	133
   316  009E                     _ADRESL	set	158
   317  0189                     _ANSELH	set	393
   318  0188                     _ANSEL	set	392
   319                           
   320                           	psect	cinit
   321  0015                     start_initialization:	
   322                           ; #config settings
   323                           
   324  0015                     __initialization:
   325                           
   326                           ; Clear objects allocated to COMMON
   327  0015  01FC               	clrf	__pbssCOMMON& (0+127)
   328                           
   329                           ; Clear objects allocated to BANK0
   330  0016  1383               	bcf	3,7	;select IRP bank0
   331  0017  3020               	movlw	low __pbssBANK0
   332  0018  0084               	movwf	4
   333  0019  3037               	movlw	low (__pbssBANK0+23)
   334  001A  120A  118A  23A9  120A  118A  	fcall	clear_ram0
   335  001F                     end_of_initialization:	
   336                           ;End of C runtime variable initialization code
   337                           
   338  001F                     __end_of__initialization:
   339  001F  0183               	clrf	3
   340  0020  120A  118A  2ADB   	ljmp	_main	;jump to C main() function
   341                           
   342                           	psect	bssCOMMON
   343  007C                     __pbssCOMMON:
   344  007C                     _adc_value:
   345  007C                     	ds	1
   346                           
   347                           	psect	bssBANK0
   348  0020                     __pbssBANK0:
   349  0020                     _i:
   350  0020                     	ds	2
   351  0022                     _presionado2:
   352  0022                     	ds	2
   353  0024                     _released_ok2:
   354  0024                     	ds	2
   355  0026                     _pressed_ok2:
   356  0026                     	ds	2
   357  0028                     _contador2:
   358  0028                     	ds	2
   359  002A                     _presionado:
   360  002A                     	ds	2
   361  002C                     _released_ok:
   362  002C                     	ds	2
   363  002E                     _pressed_ok:
   364  002E                     	ds	2
   365  0030                     _contador:
   366  0030                     	ds	2
   367  0032                     _toogle:
   368  0032                     	ds	1
   369  0033                     _decena:
   370  0033                     	ds	1
   371  0034                     _unidad:
   372  0034                     	ds	1
   373  0035                     _show:
   374  0035                     	ds	1
   375  0036                     _timer_contador:
   376  0036                     	ds	1
   377                           
   378                           	psect	clrtext
   379  03A9                     clear_ram0:	
   380                           ;	Called with FSR containing the base address, and
   381                           ;	W with the last address+1
   382                           
   383  03A9  0064               	clrwdt	;clear the watchdog before getting into this loop
   384  03AA                     clrloop0:
   385  03AA  0180               	clrf	0	;clear RAM location pointed to by FSR
   386  03AB  0A84               	incf	4,f	;increment pointer
   387  03AC  0604               	xorwf	4,w	;XOR with final address
   388  03AD  1903               	btfsc	3,2	;have we reached the end yet?
   389  03AE  3400               	retlw	0	;all done for this memory range, return
   390  03AF  0604               	xorwf	4,w	;XOR again to restore value
   391  03B0  2BAA               	goto	clrloop0	;do the next byte
   392                           
   393                           	psect	cstackCOMMON
   394  0070                     __pcstackCOMMON:
   395  0070                     ?_division:
   396  0070                     ?_incrementar:	
   397                           ; 1 bytes @ 0x0
   398                           
   399  0070                     ??_incrementar:	
   400                           ; 1 bytes @ 0x0
   401                           
   402  0070                     ?_decrementar:	
   403                           ; 1 bytes @ 0x0
   404                           
   405  0070                     ??_decrementar:	
   406                           ; 1 bytes @ 0x0
   407                           
   408  0070                     ?_setup:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  0070                     ?_osc_config:	
   412                           ; 1 bytes @ 0x0
   413                           
   414  0070                     ?_interrup_config:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0070                     ?_tmr0_config:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0070                     ?_adc_config:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0070                     ?_big:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ?_initADC:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     ?_hexadecimal:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     ?_multiplexar:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0070                     ??_multiplexar:	
   436                           ; 1 bytes @ 0x0
   437                           
   438  0070                     ?_ISR:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  0070                     ?_main:	
   442                           ; 1 bytes @ 0x0
   443                           
   444  0070                     ?___awdiv:	
   445                           ; 1 bytes @ 0x0
   446                           
   447  0070                     hexadecimal@show:	
   448                           ; 2 bytes @ 0x0
   449                           
   450  0070                     incrementar@e:	
   451                           ; 2 bytes @ 0x0
   452                           
   453  0070                     decrementar@e:	
   454                           ; 2 bytes @ 0x0
   455                           
   456  0070                     ___awdiv@divisor:	
   457                           ; 2 bytes @ 0x0
   458                           
   459                           
   460                           ; 2 bytes @ 0x0
   461  0070                     	ds	2
   462  0072                     ??_hexadecimal:
   463  0072                     incrementar@e_338:	
   464                           ; 1 bytes @ 0x2
   465                           
   466  0072                     decrementar@e_341:	
   467                           ; 2 bytes @ 0x2
   468                           
   469  0072                     ___awdiv@dividend:	
   470                           ; 2 bytes @ 0x2
   471                           
   472                           
   473                           ; 2 bytes @ 0x2
   474  0072                     	ds	2
   475  0074                     ??___awdiv:
   476                           
   477                           ; 1 bytes @ 0x4
   478  0074                     	ds	1
   479  0075                     ___awdiv@counter:
   480                           
   481                           ; 1 bytes @ 0x5
   482  0075                     	ds	1
   483  0076                     ___awdiv@sign:
   484                           
   485                           ; 1 bytes @ 0x6
   486  0076                     	ds	1
   487  0077                     ___awdiv@quotient:
   488                           
   489                           ; 2 bytes @ 0x7
   490  0077                     	ds	2
   491  0079                     ??_division:
   492                           
   493                           ; 1 bytes @ 0x9
   494  0079                     	ds	3
   495                           
   496                           	psect	cstackBANK0
   497  0037                     __pcstackBANK0:
   498  0037                     ??_ISR:
   499                           
   500                           ; 1 bytes @ 0x0
   501  0037                     	ds	4
   502  003B                     ??_setup:
   503  003B                     ??_osc_config:	
   504                           ; 1 bytes @ 0x4
   505                           
   506  003B                     ??_interrup_config:	
   507                           ; 1 bytes @ 0x4
   508                           
   509  003B                     ??_tmr0_config:	
   510                           ; 1 bytes @ 0x4
   511                           
   512  003B                     ??_big:	
   513                           ; 1 bytes @ 0x4
   514                           
   515  003B                     ??_initADC:	
   516                           ; 1 bytes @ 0x4
   517                           
   518                           
   519                           ; 1 bytes @ 0x4
   520  003B                     	ds	2
   521  003D                     initADC@CHS:
   522                           
   523                           ; 1 bytes @ 0x6
   524  003D                     	ds	1
   525  003E                     ??_adc_config:
   526  003E                     ??_main:	
   527                           ; 1 bytes @ 0x7
   528                           
   529                           
   530                           ; 1 bytes @ 0x7
   531  003E                     	ds	2
   532                           
   533                           	psect	maintext
   534  02DB                     __pmaintext:	
   535 ;;
   536 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   537 ;;
   538 ;; *************** function _main *****************
   539 ;; Defined at:
   540 ;;		line 107 in file "Interrup_Libreria.c"
   541 ;; Parameters:    Size  Location     Type
   542 ;;		None
   543 ;; Auto vars:     Size  Location     Type
   544 ;;		None
   545 ;; Return value:  Size  Location     Type
   546 ;;                  1    wreg      void 
   547 ;; Registers used:
   548 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   549 ;; Tracked objects:
   550 ;;		On entry : B00/0
   551 ;;		On exit  : 0/0
   552 ;;		Unchanged: 0/0
   553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   554 ;;      Params:         0       0       0       0       0
   555 ;;      Locals:         0       0       0       0       0
   556 ;;      Temps:          0       2       0       0       0
   557 ;;      Totals:         0       2       0       0       0
   558 ;;Total ram usage:        2 bytes
   559 ;; Hardware stack levels required when called:    5
   560 ;; This function calls:
   561 ;;		_adc_config
   562 ;;		_big
   563 ;;		_interrup_config
   564 ;;		_osc_config
   565 ;;		_setup
   566 ;;		_tmr0_config
   567 ;; This function is called by:
   568 ;;		Startup code after reset
   569 ;; This function uses a non-reentrant model
   570 ;;
   571                           
   572                           
   573                           ;psect for function _main
   574  02DB                     _main:
   575  02DB                     l1426:	
   576                           ;incstack = 0
   577                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   578                           
   579                           
   580                           ;Interrup_Libreria.c: 109:     ANSELH = 0;
   581  02DB  120A  118A  2345  120A  118A  	fcall	_setup
   582  02E0                     l1428:
   583                           
   584                           ;Interrup_Libreria.c: 110:     TRISB = 0b00000011;
   585  02E0  120A  118A  239F  120A  118A  	fcall	_osc_config
   586  02E5                     l1430:
   587                           
   588                           ;Interrup_Libreria.c: 111:     PORTB = 0;
   589  02E5  120A  118A  237A  120A  118A  	fcall	_interrup_config
   590  02EA                     l1432:
   591                           
   592                           ;Interrup_Libreria.c: 112:     TRISC = 0;
   593  02EA  120A  118A  236D  120A  118A  	fcall	_tmr0_config
   594  02EF                     l1434:
   595                           
   596                           ;Interrup_Libreria.c: 113:     PORTC = 0;
   597  02EF  120A  118A  23B1  120A  118A  	fcall	_adc_config
   598  02F4                     l1436:
   599                           
   600                           ;Interrup_Libreria.c: 121: {;Interrup_Libreria.c: 122:     INTCONbits.GIE = 1;
   601  02F4  1283               	bcf	3,5	;RP0=0, select bank0
   602  02F5  1303               	bcf	3,6	;RP1=0, select bank0
   603  02F6  149F               	bsf	31,1	;volatile
   604  02F7                     l1438:
   605                           
   606                           ;Interrup_Libreria.c: 123:     INTCONbits.PEIE = 0;
   607  02F7  301A               	movlw	26
   608  02F8  1283               	bcf	3,5	;RP0=0, select bank0
   609  02F9  1303               	bcf	3,6	;RP1=0, select bank0
   610  02FA  00BF               	movwf	??_main+1
   611  02FB  30F7               	movlw	247
   612  02FC  00BE               	movwf	??_main
   613  02FD                     u577:
   614  02FD  0BBE               	decfsz	??_main,f
   615  02FE  2AFD               	goto	u577
   616  02FF  0BBF               	decfsz	??_main+1,f
   617  0300  2AFD               	goto	u577
   618  0301  2B02               	nop2
   619  0302                     l1440:
   620                           
   621                           ;Interrup_Libreria.c: 124:     INTCONbits.T0IE = 1;
   622  0302  1283               	bcf	3,5	;RP0=0, select bank0
   623  0303  1303               	bcf	3,6	;RP1=0, select bank0
   624  0304  189F               	btfsc	31,1	;volatile
   625  0305  2B07               	goto	u561
   626  0306  2B08               	goto	u560
   627  0307                     u561:
   628  0307  2B11               	goto	l1446
   629  0308                     u560:
   630  0308                     l1442:
   631                           
   632                           ;Interrup_Libreria.c: 125:     INTCONbits.INTE = 0;;Interrup_Libreria.c: 126:     INTCON
      +                          bits.RBIE = 1;
   633  0308  149F               	bsf	31,1	;volatile
   634  0309                     l1444:
   635                           
   636                           ;Interrup_Libreria.c: 127:     INTCONbits.T0IF = 0;
   637  0309  1683               	bsf	3,5	;RP0=1, select bank1
   638  030A  1303               	bcf	3,6	;RP1=0, select bank1
   639  030B  081E               	movf	30,w	;volatile
   640  030C  1283               	bcf	3,5	;RP0=0, select bank0
   641  030D  1303               	bcf	3,6	;RP1=0, select bank0
   642  030E  00BE               	movwf	??_main
   643  030F  083E               	movf	??_main,w
   644  0310  00FC               	movwf	_adc_value
   645  0311                     l1446:
   646                           
   647                           ;Interrup_Libreria.c: 129:     INTCONbits.RBIF = 0;
   648  0311  120A  118A  2387  120A  118A  	fcall	_big
   649  0316  2AF4               	goto	l1436
   650  0317  120A  118A  2812   	ljmp	start
   651  031A                     __end_of_main:
   652                           
   653                           	psect	text1
   654  036D                     __ptext1:	
   655 ;; *************** function _tmr0_config *****************
   656 ;; Defined at:
   657 ;;		line 180 in file "Interrup_Libreria.c"
   658 ;; Parameters:    Size  Location     Type
   659 ;;		None
   660 ;; Auto vars:     Size  Location     Type
   661 ;;		None
   662 ;; Return value:  Size  Location     Type
   663 ;;                  1    wreg      void 
   664 ;; Registers used:
   665 ;;		wreg
   666 ;; Tracked objects:
   667 ;;		On entry : 0/0
   668 ;;		On exit  : 0/0
   669 ;;		Unchanged: 0/0
   670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   671 ;;      Params:         0       0       0       0       0
   672 ;;      Locals:         0       0       0       0       0
   673 ;;      Temps:          0       0       0       0       0
   674 ;;      Totals:         0       0       0       0       0
   675 ;;Total ram usage:        0 bytes
   676 ;; Hardware stack levels used:    1
   677 ;; Hardware stack levels required when called:    3
   678 ;; This function calls:
   679 ;;		Nothing
   680 ;; This function is called by:
   681 ;;		_main
   682 ;; This function uses a non-reentrant model
   683 ;;
   684                           
   685                           
   686                           ;psect for function _tmr0_config
   687  036D                     _tmr0_config:
   688  036D                     l1398:	
   689                           ;incstack = 0
   690                           ; Regs used in _tmr0_config: [wreg]
   691                           
   692                           
   693                           ;Interrup_Libreria.c: 182:         PORTEbits.RE1 = 1;
   694  036D  1683               	bsf	3,5	;RP0=1, select bank1
   695  036E  1303               	bcf	3,6	;RP1=0, select bank1
   696  036F  1781               	bsf	1,7	;volatile
   697                           
   698                           ;Interrup_Libreria.c: 183:     }
   699  0370  1281               	bcf	1,5	;volatile
   700                           
   701                           ;Interrup_Libreria.c: 184:     multiplexar();
   702  0371  1181               	bcf	1,3	;volatile
   703                           
   704                           ;Interrup_Libreria.c: 185: }
   705  0372  1101               	bcf	1,2	;volatile
   706                           
   707                           ;Interrup_Libreria.c: 186: 
   708  0373  1481               	bsf	1,1	;volatile
   709                           
   710                           ;Interrup_Libreria.c: 187: void multiplexar (void)
   711  0374  1001               	bcf	1,0	;volatile
   712  0375                     l1400:
   713                           
   714                           ;Interrup_Libreria.c: 188: {
   715  0375  300A               	movlw	10
   716  0376  1283               	bcf	3,5	;RP0=0, select bank0
   717  0377  1303               	bcf	3,6	;RP1=0, select bank0
   718  0378  0081               	movwf	1	;volatile
   719  0379                     l126:
   720  0379  0008               	return
   721  037A                     __end_of_tmr0_config:
   722                           
   723                           	psect	text2
   724  0345                     __ptext2:	
   725 ;; *************** function _setup *****************
   726 ;; Defined at:
   727 ;;		line 139 in file "Interrup_Libreria.c"
   728 ;; Parameters:    Size  Location     Type
   729 ;;		None
   730 ;; Auto vars:     Size  Location     Type
   731 ;;		None
   732 ;; Return value:  Size  Location     Type
   733 ;;                  1    wreg      void 
   734 ;; Registers used:
   735 ;;		wreg, status,2
   736 ;; Tracked objects:
   737 ;;		On entry : 0/0
   738 ;;		On exit  : 0/0
   739 ;;		Unchanged: 0/0
   740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   741 ;;      Params:         0       0       0       0       0
   742 ;;      Locals:         0       0       0       0       0
   743 ;;      Temps:          0       0       0       0       0
   744 ;;      Totals:         0       0       0       0       0
   745 ;;Total ram usage:        0 bytes
   746 ;; Hardware stack levels used:    1
   747 ;; Hardware stack levels required when called:    3
   748 ;; This function calls:
   749 ;;		Nothing
   750 ;; This function is called by:
   751 ;;		_main
   752 ;; This function uses a non-reentrant model
   753 ;;
   754                           
   755                           
   756                           ;psect for function _setup
   757  0345                     _setup:
   758  0345                     l1372:	
   759                           ;incstack = 0
   760                           ; Regs used in _setup: [wreg+status,2]
   761                           
   762                           
   763                           ;Interrup_Libreria.c: 142: }
   764  0345  3001               	movlw	1
   765  0346  1683               	bsf	3,5	;RP0=1, select bank3
   766  0347  1703               	bsf	3,6	;RP1=1, select bank3
   767  0348  0088               	movwf	8	;volatile
   768                           
   769                           ;Interrup_Libreria.c: 143: 
   770  0349  3001               	movlw	1
   771  034A  1683               	bsf	3,5	;RP0=1, select bank1
   772  034B  1303               	bcf	3,6	;RP1=0, select bank1
   773  034C  0085               	movwf	5	;volatile
   774  034D                     l1374:
   775                           
   776                           ;Interrup_Libreria.c: 144: void tmr0_config (void)
   777  034D  1283               	bcf	3,5	;RP0=0, select bank0
   778  034E  1303               	bcf	3,6	;RP1=0, select bank0
   779  034F  0185               	clrf	5	;volatile
   780  0350                     l1376:
   781                           
   782                           ;Interrup_Libreria.c: 145: {
   783  0350  1683               	bsf	3,5	;RP0=1, select bank3
   784  0351  1703               	bsf	3,6	;RP1=1, select bank3
   785  0352  0189               	clrf	9	;volatile
   786                           
   787                           ;Interrup_Libreria.c: 146:     OPTION_REGbits.nRBPU = 1;
   788  0353  3003               	movlw	3
   789  0354  1683               	bsf	3,5	;RP0=1, select bank1
   790  0355  1303               	bcf	3,6	;RP1=0, select bank1
   791  0356  0086               	movwf	6	;volatile
   792  0357                     l1378:
   793                           
   794                           ;Interrup_Libreria.c: 147:     OPTION_REGbits.T0CS = 0;
   795  0357  1283               	bcf	3,5	;RP0=0, select bank0
   796  0358  1303               	bcf	3,6	;RP1=0, select bank0
   797  0359  0186               	clrf	6	;volatile
   798  035A                     l1380:
   799                           
   800                           ;Interrup_Libreria.c: 148:     OPTION_REGbits.PSA = 0;
   801  035A  1683               	bsf	3,5	;RP0=1, select bank1
   802  035B  1303               	bcf	3,6	;RP1=0, select bank1
   803  035C  0187               	clrf	7	;volatile
   804  035D                     l1382:
   805                           
   806                           ;Interrup_Libreria.c: 149:     OPTION_REGbits.PS2 = 0;
   807  035D  1283               	bcf	3,5	;RP0=0, select bank0
   808  035E  1303               	bcf	3,6	;RP1=0, select bank0
   809  035F  0187               	clrf	7	;volatile
   810  0360                     l1384:
   811                           
   812                           ;Interrup_Libreria.c: 150:     OPTION_REGbits.PS1 = 1;
   813  0360  1683               	bsf	3,5	;RP0=1, select bank1
   814  0361  1303               	bcf	3,6	;RP1=0, select bank1
   815  0362  0188               	clrf	8	;volatile
   816  0363                     l1386:
   817                           
   818                           ;Interrup_Libreria.c: 151:     OPTION_REGbits.PS0 = 0;
   819  0363  1283               	bcf	3,5	;RP0=0, select bank0
   820  0364  1303               	bcf	3,6	;RP1=0, select bank0
   821  0365  0188               	clrf	8	;volatile
   822  0366                     l1388:
   823                           
   824                           ;Interrup_Libreria.c: 152:     TMR0 = 10;
   825  0366  1683               	bsf	3,5	;RP0=1, select bank1
   826  0367  1303               	bcf	3,6	;RP1=0, select bank1
   827  0368  0189               	clrf	9	;volatile
   828  0369                     l1390:
   829                           
   830                           ;Interrup_Libreria.c: 153: }
   831  0369  1283               	bcf	3,5	;RP0=0, select bank0
   832  036A  1303               	bcf	3,6	;RP1=0, select bank0
   833  036B  0189               	clrf	9	;volatile
   834  036C                     l117:
   835  036C  0008               	return
   836  036D                     __end_of_setup:
   837                           
   838                           	psect	text3
   839  039F                     __ptext3:	
   840 ;; *************** function _osc_config *****************
   841 ;; Defined at:
   842 ;;		line 169 in file "Interrup_Libreria.c"
   843 ;; Parameters:    Size  Location     Type
   844 ;;		None
   845 ;; Auto vars:     Size  Location     Type
   846 ;;		None
   847 ;; Return value:  Size  Location     Type
   848 ;;                  1    wreg      void 
   849 ;; Registers used:
   850 ;;		None
   851 ;; Tracked objects:
   852 ;;		On entry : 0/0
   853 ;;		On exit  : 0/0
   854 ;;		Unchanged: 0/0
   855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   856 ;;      Params:         0       0       0       0       0
   857 ;;      Locals:         0       0       0       0       0
   858 ;;      Temps:          0       0       0       0       0
   859 ;;      Totals:         0       0       0       0       0
   860 ;;Total ram usage:        0 bytes
   861 ;; Hardware stack levels used:    1
   862 ;; Hardware stack levels required when called:    3
   863 ;; This function calls:
   864 ;;		Nothing
   865 ;; This function is called by:
   866 ;;		_main
   867 ;; This function uses a non-reentrant model
   868 ;;
   869                           
   870                           
   871                           ;psect for function _osc_config
   872  039F                     _osc_config:
   873  039F                     l1392:	
   874                           ;incstack = 0
   875                           ; Regs used in _osc_config: []
   876                           
   877                           
   878                           ;Interrup_Libreria.c: 171: 
   879  039F  1683               	bsf	3,5	;RP0=1, select bank1
   880  03A0  1303               	bcf	3,6	;RP1=0, select bank1
   881  03A1  170F               	bsf	15,6	;volatile
   882                           
   883                           ;Interrup_Libreria.c: 172:     if (toogle == 0)
   884  03A2  168F               	bsf	15,5	;volatile
   885                           
   886                           ;Interrup_Libreria.c: 173:     {
   887  03A3  130F               	bcf	15,6	;volatile
   888                           
   889                           ;Interrup_Libreria.c: 174:         show = decena;
   890  03A4  118F               	bcf	15,3	;volatile
   891                           
   892                           ;Interrup_Libreria.c: 175:         hexadecimal (show);
   893  03A5  110F               	bcf	15,2	;volatile
   894                           
   895                           ;Interrup_Libreria.c: 176:         PORTEbits.RE0 = 1;
   896  03A6  148F               	bsf	15,1	;volatile
   897                           
   898                           ;Interrup_Libreria.c: 177:     }
   899  03A7  100F               	bcf	15,0	;volatile
   900  03A8                     l123:
   901  03A8  0008               	return
   902  03A9                     __end_of_osc_config:
   903                           
   904                           	psect	text4
   905  037A                     __ptext4:	
   906 ;; *************** function _interrup_config *****************
   907 ;; Defined at:
   908 ;;		line 156 in file "Interrup_Libreria.c"
   909 ;; Parameters:    Size  Location     Type
   910 ;;		None
   911 ;; Auto vars:     Size  Location     Type
   912 ;;		None
   913 ;; Return value:  Size  Location     Type
   914 ;;                  1    wreg      void 
   915 ;; Registers used:
   916 ;;		wreg
   917 ;; Tracked objects:
   918 ;;		On entry : 0/0
   919 ;;		On exit  : 0/0
   920 ;;		Unchanged: 0/0
   921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   922 ;;      Params:         0       0       0       0       0
   923 ;;      Locals:         0       0       0       0       0
   924 ;;      Temps:          0       0       0       0       0
   925 ;;      Totals:         0       0       0       0       0
   926 ;;Total ram usage:        0 bytes
   927 ;; Hardware stack levels used:    1
   928 ;; Hardware stack levels required when called:    3
   929 ;; This function calls:
   930 ;;		Nothing
   931 ;; This function is called by:
   932 ;;		_main
   933 ;; This function uses a non-reentrant model
   934 ;;
   935                           
   936                           
   937                           ;psect for function _interrup_config
   938  037A                     _interrup_config:
   939  037A                     l1394:	
   940                           ;incstack = 0
   941                           ; Regs used in _interrup_config: [wreg]
   942                           
   943                           
   944                           ;Interrup_Libreria.c: 158: }
   945  037A  178B               	bsf	11,7	;volatile
   946                           
   947                           ;Interrup_Libreria.c: 159: 
   948  037B  130B               	bcf	11,6	;volatile
   949                           
   950                           ;Interrup_Libreria.c: 160: 
   951  037C  168B               	bsf	11,5	;volatile
   952                           
   953                           ;Interrup_Libreria.c: 161: 
   954  037D  120B               	bcf	11,4	;volatile
   955                           
   956                           ;Interrup_Libreria.c: 162: 
   957  037E  158B               	bsf	11,3	;volatile
   958                           
   959                           ;Interrup_Libreria.c: 163: 
   960  037F  110B               	bcf	11,2	;volatile
   961                           
   962                           ;Interrup_Libreria.c: 164: void division (void)
   963  0380  108B               	bcf	11,1	;volatile
   964                           
   965                           ;Interrup_Libreria.c: 165: {
   966  0381  100B               	bcf	11,0	;volatile
   967  0382                     l1396:
   968                           
   969                           ;Interrup_Libreria.c: 166:     PORTEbits.RE0 = 0;
   970  0382  3003               	movlw	3
   971  0383  1683               	bsf	3,5	;RP0=1, select bank1
   972  0384  1303               	bcf	3,6	;RP1=0, select bank1
   973  0385  0096               	movwf	22	;volatile
   974  0386                     l120:
   975  0386  0008               	return
   976  0387                     __end_of_interrup_config:
   977                           
   978                           	psect	text5
   979  0387                     __ptext5:	
   980 ;; *************** function _big *****************
   981 ;; Defined at:
   982 ;;		line 293 in file "Interrup_Libreria.c"
   983 ;; Parameters:    Size  Location     Type
   984 ;;		None
   985 ;; Auto vars:     Size  Location     Type
   986 ;;		None
   987 ;; Return value:  Size  Location     Type
   988 ;;                  1    wreg      void 
   989 ;; Registers used:
   990 ;;		wreg
   991 ;; Tracked objects:
   992 ;;		On entry : 0/0
   993 ;;		On exit  : 0/0
   994 ;;		Unchanged: 0/0
   995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   996 ;;      Params:         0       0       0       0       0
   997 ;;      Locals:         0       0       0       0       0
   998 ;;      Temps:          0       0       0       0       0
   999 ;;      Totals:         0       0       0       0       0
  1000 ;;Total ram usage:        0 bytes
  1001 ;; Hardware stack levels used:    1
  1002 ;; Hardware stack levels required when called:    3
  1003 ;; This function calls:
  1004 ;;		Nothing
  1005 ;; This function is called by:
  1006 ;;		_main
  1007 ;; This function uses a non-reentrant model
  1008 ;;
  1009                           
  1010                           
  1011                           ;psect for function _big
  1012  0387                     _big:
  1013  0387                     l1404:	
  1014                           ;incstack = 0
  1015                           ; Regs used in _big: [wreg]
  1016                           
  1017                           
  1018                           ;Interrup_Libreria.c: 295: 
  1019  0387  087C               	movf	_adc_value,w
  1020  0388  1283               	bcf	3,5	;RP0=0, select bank0
  1021  0389  1303               	bcf	3,6	;RP1=0, select bank0
  1022  038A  0208               	subwf	8,w	;volatile
  1023  038B  1803               	skipnc
  1024  038C  2B8E               	goto	u531
  1025  038D  2B8F               	goto	u530
  1026  038E                     u531:
  1027  038E  2B91               	goto	l164
  1028  038F                     u530:
  1029  038F                     l1406:
  1030                           
  1031                           ;Interrup_Libreria.c: 296:         pressed_ok = 0;;Interrup_Libreria.c: 297:         if 
      +                          (released_ok > 10)
  1032  038F  1509               	bsf	9,2	;volatile
  1033                           
  1034                           ;Interrup_Libreria.c: 298:         {
  1035  0390  2B92               	goto	l166
  1036  0391                     l164:	
  1037                           ;Interrup_Libreria.c: 299:             presionado = 0;
  1038                           
  1039                           
  1040                           ;Interrup_Libreria.c: 300:             released_ok = 0;;Interrup_Libreria.c: 301:       
      +                            }
  1041  0391  1109               	bcf	9,2	;volatile
  1042  0392                     l166:
  1043  0392  0008               	return
  1044  0393                     __end_of_big:
  1045                           
  1046                           	psect	text6
  1047  03B1                     __ptext6:	
  1048 ;; *************** function _adc_config *****************
  1049 ;; Defined at:
  1050 ;;		line 191 in file "Interrup_Libreria.c"
  1051 ;; Parameters:    Size  Location     Type
  1052 ;;		None
  1053 ;; Auto vars:     Size  Location     Type
  1054 ;;		None
  1055 ;; Return value:  Size  Location     Type
  1056 ;;                  1    wreg      void 
  1057 ;; Registers used:
  1058 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1059 ;; Tracked objects:
  1060 ;;		On entry : 0/0
  1061 ;;		On exit  : 0/0
  1062 ;;		Unchanged: 0/0
  1063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1064 ;;      Params:         0       0       0       0       0
  1065 ;;      Locals:         0       0       0       0       0
  1066 ;;      Temps:          0       0       0       0       0
  1067 ;;      Totals:         0       0       0       0       0
  1068 ;;Total ram usage:        0 bytes
  1069 ;; Hardware stack levels used:    1
  1070 ;; Hardware stack levels required when called:    4
  1071 ;; This function calls:
  1072 ;;		_initADC
  1073 ;; This function is called by:
  1074 ;;		_main
  1075 ;; This function uses a non-reentrant model
  1076 ;;
  1077                           
  1078                           
  1079                           ;psect for function _adc_config
  1080  03B1                     _adc_config:
  1081  03B1                     l1402:	
  1082                           ;incstack = 0
  1083                           ; Regs used in _adc_config: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1084                           
  1085                           
  1086                           ;Interrup_Libreria.c: 193:     else
  1087  03B1  3000               	movlw	0
  1088  03B2  120A  118A  2023  120A  118A  	fcall	_initADC
  1089  03B7                     l129:
  1090  03B7  0008               	return
  1091  03B8                     __end_of_adc_config:
  1092                           
  1093                           	psect	text7
  1094  0023                     __ptext7:	
  1095 ;; *************** function _initADC *****************
  1096 ;; Defined at:
  1097 ;;		line 3 in file "ADC_lib.c"
  1098 ;; Parameters:    Size  Location     Type
  1099 ;;  CHS             1    wreg     unsigned char 
  1100 ;; Auto vars:     Size  Location     Type
  1101 ;;  CHS             1    6[BANK0 ] unsigned char 
  1102 ;; Return value:  Size  Location     Type
  1103 ;;                  1    wreg      void 
  1104 ;; Registers used:
  1105 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1106 ;; Tracked objects:
  1107 ;;		On entry : 0/0
  1108 ;;		On exit  : 0/0
  1109 ;;		Unchanged: 0/0
  1110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1111 ;;      Params:         0       0       0       0       0
  1112 ;;      Locals:         0       1       0       0       0
  1113 ;;      Temps:          0       2       0       0       0
  1114 ;;      Totals:         0       3       0       0       0
  1115 ;;Total ram usage:        3 bytes
  1116 ;; Hardware stack levels used:    1
  1117 ;; Hardware stack levels required when called:    3
  1118 ;; This function calls:
  1119 ;;		Nothing
  1120 ;; This function is called by:
  1121 ;;		_adc_config
  1122 ;; This function uses a non-reentrant model
  1123 ;;
  1124                           
  1125                           
  1126                           ;psect for function _initADC
  1127  0023                     _initADC:
  1128                           
  1129                           ;incstack = 0
  1130                           ; Regs used in _initADC: [wreg-fsr0h+status,2+status,0]
  1131                           ;initADC@CHS stored from wreg
  1132  0023  1283               	bcf	3,5	;RP0=0, select bank0
  1133  0024  1303               	bcf	3,6	;RP1=0, select bank0
  1134  0025  00BD               	movwf	initADC@CHS
  1135  0026                     l1152:
  1136                           
  1137                           ;ADC_lib.c: 3: void initADC (uint8_t CHS);ADC_lib.c: 4: {;ADC_lib.c: 5:     switch (CHS)
  1138  0026  2872               	goto	l1156
  1139  0027                     l198:	
  1140                           ;ADC_lib.c: 6:     {;ADC_lib.c: 7:         case 0:
  1141                           
  1142                           
  1143                           ;ADC_lib.c: 8:             ADCON0bits.CHS3 = 0;
  1144  0027  129F               	bcf	31,5	;volatile
  1145                           
  1146                           ;ADC_lib.c: 9:             ADCON0bits.CHS2 = 0;
  1147  0028  121F               	bcf	31,4	;volatile
  1148                           
  1149                           ;ADC_lib.c: 10:             ADCON0bits.CHS1 = 0;
  1150  0029  119F               	bcf	31,3	;volatile
  1151                           
  1152                           ;ADC_lib.c: 11:             ADCON0bits.CHS0 = 0;
  1153  002A  111F               	bcf	31,2	;volatile
  1154                           
  1155                           ;ADC_lib.c: 12:             break;
  1156  002B  28A6               	goto	l199
  1157  002C                     l200:	
  1158                           ;ADC_lib.c: 13:         case 1:
  1159                           
  1160                           
  1161                           ;ADC_lib.c: 14:             ADCON0bits.CHS3 = 0;
  1162  002C  129F               	bcf	31,5	;volatile
  1163                           
  1164                           ;ADC_lib.c: 15:             ADCON0bits.CHS2 = 0;
  1165  002D  121F               	bcf	31,4	;volatile
  1166                           
  1167                           ;ADC_lib.c: 16:             ADCON0bits.CHS1 = 0;
  1168  002E  119F               	bcf	31,3	;volatile
  1169                           
  1170                           ;ADC_lib.c: 17:             ADCON0bits.CHS0 = 1;
  1171  002F  151F               	bsf	31,2	;volatile
  1172                           
  1173                           ;ADC_lib.c: 18:             break;
  1174  0030  28A6               	goto	l199
  1175  0031                     l201:	
  1176                           ;ADC_lib.c: 20:         case 2:
  1177                           
  1178                           
  1179                           ;ADC_lib.c: 21:             ADCON0bits.CHS3 = 0;
  1180  0031  129F               	bcf	31,5	;volatile
  1181                           
  1182                           ;ADC_lib.c: 22:             ADCON0bits.CHS2 = 0;
  1183  0032  121F               	bcf	31,4	;volatile
  1184                           
  1185                           ;ADC_lib.c: 23:             ADCON0bits.CHS1 = 1;
  1186  0033  159F               	bsf	31,3	;volatile
  1187                           
  1188                           ;ADC_lib.c: 24:             ADCON0bits.CHS0 = 0;
  1189  0034  111F               	bcf	31,2	;volatile
  1190                           
  1191                           ;ADC_lib.c: 25:             break;
  1192  0035  28A6               	goto	l199
  1193  0036                     l202:	
  1194                           ;ADC_lib.c: 27:         case 3:
  1195                           
  1196                           
  1197                           ;ADC_lib.c: 28:             ADCON0bits.CHS3 = 0;
  1198  0036  129F               	bcf	31,5	;volatile
  1199                           
  1200                           ;ADC_lib.c: 29:             ADCON0bits.CHS2 = 0;
  1201  0037  121F               	bcf	31,4	;volatile
  1202                           
  1203                           ;ADC_lib.c: 30:             ADCON0bits.CHS1 = 1;
  1204  0038  159F               	bsf	31,3	;volatile
  1205                           
  1206                           ;ADC_lib.c: 31:             ADCON0bits.CHS0 = 1;
  1207  0039  151F               	bsf	31,2	;volatile
  1208                           
  1209                           ;ADC_lib.c: 32:             break;
  1210  003A  28A6               	goto	l199
  1211  003B                     l203:	
  1212                           ;ADC_lib.c: 34:         case 4:
  1213                           
  1214                           
  1215                           ;ADC_lib.c: 35:             ADCON0bits.CHS3 = 0;
  1216  003B  129F               	bcf	31,5	;volatile
  1217                           
  1218                           ;ADC_lib.c: 36:             ADCON0bits.CHS2 = 1;
  1219  003C  161F               	bsf	31,4	;volatile
  1220                           
  1221                           ;ADC_lib.c: 37:             ADCON0bits.CHS1 = 0;
  1222  003D  119F               	bcf	31,3	;volatile
  1223                           
  1224                           ;ADC_lib.c: 38:             ADCON0bits.CHS0 = 0;
  1225  003E  111F               	bcf	31,2	;volatile
  1226                           
  1227                           ;ADC_lib.c: 39:             break;
  1228  003F  28A6               	goto	l199
  1229  0040                     l204:	
  1230                           ;ADC_lib.c: 41:         case 5:
  1231                           
  1232                           
  1233                           ;ADC_lib.c: 42:             ADCON0bits.CHS3 = 0;
  1234  0040  129F               	bcf	31,5	;volatile
  1235                           
  1236                           ;ADC_lib.c: 43:             ADCON0bits.CHS2 = 1;
  1237  0041  161F               	bsf	31,4	;volatile
  1238                           
  1239                           ;ADC_lib.c: 44:             ADCON0bits.CHS1 = 0;
  1240  0042  119F               	bcf	31,3	;volatile
  1241                           
  1242                           ;ADC_lib.c: 45:             ADCON0bits.CHS0 = 1;
  1243  0043  151F               	bsf	31,2	;volatile
  1244                           
  1245                           ;ADC_lib.c: 46:             break;
  1246  0044  28A6               	goto	l199
  1247  0045                     l205:	
  1248                           ;ADC_lib.c: 48:         case 6:
  1249                           
  1250                           
  1251                           ;ADC_lib.c: 49:             ADCON0bits.CHS3 = 0;
  1252  0045  129F               	bcf	31,5	;volatile
  1253                           
  1254                           ;ADC_lib.c: 50:             ADCON0bits.CHS2 = 1;
  1255  0046  161F               	bsf	31,4	;volatile
  1256                           
  1257                           ;ADC_lib.c: 51:             ADCON0bits.CHS1 = 1;
  1258  0047  159F               	bsf	31,3	;volatile
  1259                           
  1260                           ;ADC_lib.c: 52:             ADCON0bits.CHS0 = 0;
  1261  0048  111F               	bcf	31,2	;volatile
  1262                           
  1263                           ;ADC_lib.c: 53:             break;
  1264  0049  28A6               	goto	l199
  1265  004A                     l206:	
  1266                           ;ADC_lib.c: 55:         case 7:
  1267                           
  1268                           
  1269                           ;ADC_lib.c: 56:             ADCON0bits.CHS3 = 0;
  1270  004A  129F               	bcf	31,5	;volatile
  1271                           
  1272                           ;ADC_lib.c: 57:             ADCON0bits.CHS2 = 1;
  1273  004B  161F               	bsf	31,4	;volatile
  1274                           
  1275                           ;ADC_lib.c: 58:             ADCON0bits.CHS1 = 1;
  1276  004C  159F               	bsf	31,3	;volatile
  1277                           
  1278                           ;ADC_lib.c: 59:             ADCON0bits.CHS0 = 1;
  1279  004D  151F               	bsf	31,2	;volatile
  1280                           
  1281                           ;ADC_lib.c: 60:             break;
  1282  004E  28A6               	goto	l199
  1283  004F                     l207:	
  1284                           ;ADC_lib.c: 62:         case 8:
  1285                           
  1286                           
  1287                           ;ADC_lib.c: 63:             ADCON0bits.CHS3 = 1;
  1288  004F  169F               	bsf	31,5	;volatile
  1289                           
  1290                           ;ADC_lib.c: 64:             ADCON0bits.CHS2 = 0;
  1291  0050  121F               	bcf	31,4	;volatile
  1292                           
  1293                           ;ADC_lib.c: 65:             ADCON0bits.CHS1 = 0;
  1294  0051  119F               	bcf	31,3	;volatile
  1295                           
  1296                           ;ADC_lib.c: 66:             ADCON0bits.CHS0 = 0;
  1297  0052  111F               	bcf	31,2	;volatile
  1298                           
  1299                           ;ADC_lib.c: 67:             break;
  1300  0053  28A6               	goto	l199
  1301  0054                     l208:	
  1302                           ;ADC_lib.c: 69:         case 9:
  1303                           
  1304                           
  1305                           ;ADC_lib.c: 70:             ADCON0bits.CHS3 = 1;
  1306  0054  169F               	bsf	31,5	;volatile
  1307                           
  1308                           ;ADC_lib.c: 71:             ADCON0bits.CHS2 = 0;
  1309  0055  121F               	bcf	31,4	;volatile
  1310                           
  1311                           ;ADC_lib.c: 72:             ADCON0bits.CHS1 = 0;
  1312  0056  119F               	bcf	31,3	;volatile
  1313                           
  1314                           ;ADC_lib.c: 73:             ADCON0bits.CHS0 = 1;
  1315  0057  151F               	bsf	31,2	;volatile
  1316                           
  1317                           ;ADC_lib.c: 74:             break;
  1318  0058  28A6               	goto	l199
  1319  0059                     l209:	
  1320                           ;ADC_lib.c: 76:         case 10:
  1321                           
  1322                           
  1323                           ;ADC_lib.c: 77:             ADCON0bits.CHS3 = 1;
  1324  0059  169F               	bsf	31,5	;volatile
  1325                           
  1326                           ;ADC_lib.c: 78:             ADCON0bits.CHS2 = 0;
  1327  005A  121F               	bcf	31,4	;volatile
  1328                           
  1329                           ;ADC_lib.c: 79:             ADCON0bits.CHS1 = 1;
  1330  005B  159F               	bsf	31,3	;volatile
  1331                           
  1332                           ;ADC_lib.c: 80:             ADCON0bits.CHS0 = 0;
  1333  005C  111F               	bcf	31,2	;volatile
  1334                           
  1335                           ;ADC_lib.c: 81:             break;
  1336  005D  28A6               	goto	l199
  1337  005E                     l210:	
  1338                           ;ADC_lib.c: 83:         case 11:
  1339                           
  1340                           
  1341                           ;ADC_lib.c: 84:             ADCON0bits.CHS3 = 1;
  1342  005E  169F               	bsf	31,5	;volatile
  1343                           
  1344                           ;ADC_lib.c: 85:             ADCON0bits.CHS2 = 0;
  1345  005F  121F               	bcf	31,4	;volatile
  1346                           
  1347                           ;ADC_lib.c: 86:             ADCON0bits.CHS1 = 1;
  1348  0060  159F               	bsf	31,3	;volatile
  1349                           
  1350                           ;ADC_lib.c: 87:             ADCON0bits.CHS0 = 1;
  1351  0061  151F               	bsf	31,2	;volatile
  1352                           
  1353                           ;ADC_lib.c: 88:             break;
  1354  0062  28A6               	goto	l199
  1355  0063                     l211:	
  1356                           ;ADC_lib.c: 90:         case 12:
  1357                           
  1358                           
  1359                           ;ADC_lib.c: 91:             ADCON0bits.CHS3 = 1;
  1360  0063  169F               	bsf	31,5	;volatile
  1361                           
  1362                           ;ADC_lib.c: 92:             ADCON0bits.CHS2 = 1;
  1363  0064  161F               	bsf	31,4	;volatile
  1364                           
  1365                           ;ADC_lib.c: 93:             ADCON0bits.CHS1 = 0;
  1366  0065  119F               	bcf	31,3	;volatile
  1367                           
  1368                           ;ADC_lib.c: 94:             ADCON0bits.CHS0 = 0;
  1369  0066  111F               	bcf	31,2	;volatile
  1370                           
  1371                           ;ADC_lib.c: 95:             break;
  1372  0067  28A6               	goto	l199
  1373  0068                     l212:	
  1374                           ;ADC_lib.c: 97:         case 13:
  1375                           
  1376                           
  1377                           ;ADC_lib.c: 98:             ADCON0bits.CHS3 = 1;
  1378  0068  169F               	bsf	31,5	;volatile
  1379                           
  1380                           ;ADC_lib.c: 99:             ADCON0bits.CHS2 = 1;
  1381  0069  161F               	bsf	31,4	;volatile
  1382                           
  1383                           ;ADC_lib.c: 100:             ADCON0bits.CHS1 = 0;
  1384  006A  119F               	bcf	31,3	;volatile
  1385                           
  1386                           ;ADC_lib.c: 101:             ADCON0bits.CHS0 = 1;
  1387  006B  151F               	bsf	31,2	;volatile
  1388                           
  1389                           ;ADC_lib.c: 102:             break;
  1390  006C  28A6               	goto	l199
  1391  006D                     l213:	
  1392                           ;ADC_lib.c: 104:         default:
  1393                           
  1394                           
  1395                           ;ADC_lib.c: 105:             ADCON0bits.CHS3 = 1;
  1396  006D  169F               	bsf	31,5	;volatile
  1397                           
  1398                           ;ADC_lib.c: 106:             ADCON0bits.CHS2 = 1;
  1399  006E  161F               	bsf	31,4	;volatile
  1400                           
  1401                           ;ADC_lib.c: 107:             ADCON0bits.CHS1 = 1;
  1402  006F  159F               	bsf	31,3	;volatile
  1403                           
  1404                           ;ADC_lib.c: 108:             ADCON0bits.CHS0 = 0;
  1405  0070  111F               	bcf	31,2	;volatile
  1406                           
  1407                           ;ADC_lib.c: 109:             break;
  1408  0071  28A6               	goto	l199
  1409  0072                     l1156:
  1410  0072  083D               	movf	initADC@CHS,w
  1411  0073  00BB               	movwf	??_initADC
  1412  0074  01BC               	clrf	??_initADC+1
  1413                           
  1414                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1415                           ; Switch size 1, requested type "simple"
  1416                           ; Number of cases is 1, Range of values is 0 to 0
  1417                           ; switch strategies available:
  1418                           ; Name         Instructions Cycles
  1419                           ; simple_byte            4     3 (average)
  1420                           ; direct_byte           11     8 (fixed)
  1421                           ; jumptable            260     6 (fixed)
  1422                           ;	Chosen strategy is simple_byte
  1423  0075  083C               	movf	??_initADC+1,w
  1424  0076  3A00               	xorlw	0	; case 0
  1425  0077  1903               	skipnz
  1426  0078  287A               	goto	l1498
  1427  0079  286D               	goto	l213
  1428  007A                     l1498:
  1429                           
  1430                           ; Switch size 1, requested type "simple"
  1431                           ; Number of cases is 14, Range of values is 0 to 13
  1432                           ; switch strategies available:
  1433                           ; Name         Instructions Cycles
  1434                           ; simple_byte           43    22 (average)
  1435                           ; direct_byte           50     8 (fixed)
  1436                           ; jumptable            260     6 (fixed)
  1437                           ;	Chosen strategy is simple_byte
  1438  007A  083B               	movf	??_initADC,w
  1439  007B  3A00               	xorlw	0	; case 0
  1440  007C  1903               	skipnz
  1441  007D  2827               	goto	l198
  1442  007E  3A01               	xorlw	1	; case 1
  1443  007F  1903               	skipnz
  1444  0080  282C               	goto	l200
  1445  0081  3A03               	xorlw	3	; case 2
  1446  0082  1903               	skipnz
  1447  0083  2831               	goto	l201
  1448  0084  3A01               	xorlw	1	; case 3
  1449  0085  1903               	skipnz
  1450  0086  2836               	goto	l202
  1451  0087  3A07               	xorlw	7	; case 4
  1452  0088  1903               	skipnz
  1453  0089  283B               	goto	l203
  1454  008A  3A01               	xorlw	1	; case 5
  1455  008B  1903               	skipnz
  1456  008C  2840               	goto	l204
  1457  008D  3A03               	xorlw	3	; case 6
  1458  008E  1903               	skipnz
  1459  008F  2845               	goto	l205
  1460  0090  3A01               	xorlw	1	; case 7
  1461  0091  1903               	skipnz
  1462  0092  284A               	goto	l206
  1463  0093  3A0F               	xorlw	15	; case 8
  1464  0094  1903               	skipnz
  1465  0095  284F               	goto	l207
  1466  0096  3A01               	xorlw	1	; case 9
  1467  0097  1903               	skipnz
  1468  0098  2854               	goto	l208
  1469  0099  3A03               	xorlw	3	; case 10
  1470  009A  1903               	skipnz
  1471  009B  2859               	goto	l209
  1472  009C  3A01               	xorlw	1	; case 11
  1473  009D  1903               	skipnz
  1474  009E  285E               	goto	l210
  1475  009F  3A07               	xorlw	7	; case 12
  1476  00A0  1903               	skipnz
  1477  00A1  2863               	goto	l211
  1478  00A2  3A01               	xorlw	1	; case 13
  1479  00A3  1903               	skipnz
  1480  00A4  2868               	goto	l212
  1481  00A5  286D               	goto	l213
  1482  00A6                     l199:
  1483                           
  1484                           ;ADC_lib.c: 111:     ADCON0bits.ADCS1 = 1;
  1485  00A6  179F               	bsf	31,7	;volatile
  1486                           
  1487                           ;ADC_lib.c: 112:     ADCON0bits.ADCS0 = 0;
  1488  00A7  131F               	bcf	31,6	;volatile
  1489                           
  1490                           ;ADC_lib.c: 113:     ADCON0bits.GO_DONE= 0;
  1491  00A8  109F               	bcf	31,1	;volatile
  1492                           
  1493                           ;ADC_lib.c: 114:     ADCON0bits.ADON = 1;
  1494  00A9  141F               	bsf	31,0	;volatile
  1495                           
  1496                           ;ADC_lib.c: 116:     ADCON1bits.ADFM = 1;
  1497  00AA  1683               	bsf	3,5	;RP0=1, select bank1
  1498  00AB  1303               	bcf	3,6	;RP1=0, select bank1
  1499  00AC  179F               	bsf	31,7	;volatile
  1500                           
  1501                           ;ADC_lib.c: 117:     ADCON1bits.VCFG1 = 0;
  1502  00AD  129F               	bcf	31,5	;volatile
  1503                           
  1504                           ;ADC_lib.c: 118:     ADCON1bits.VCFG0 = 0;
  1505  00AE  121F               	bcf	31,4	;volatile
  1506  00AF                     l214:
  1507  00AF  0008               	return
  1508  00B0                     __end_of_initADC:
  1509                           
  1510                           	psect	text8
  1511  031A                     __ptext8:	
  1512 ;; *************** function _ISR *****************
  1513 ;; Defined at:
  1514 ;;		line 81 in file "Interrup_Libreria.c"
  1515 ;; Parameters:    Size  Location     Type
  1516 ;;		None
  1517 ;; Auto vars:     Size  Location     Type
  1518 ;;  a               1    0        unsigned char 
  1519 ;; Return value:  Size  Location     Type
  1520 ;;                  1    wreg      void 
  1521 ;; Registers used:
  1522 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1523 ;; Tracked objects:
  1524 ;;		On entry : 0/0
  1525 ;;		On exit  : 0/0
  1526 ;;		Unchanged: 0/0
  1527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1528 ;;      Params:         0       0       0       0       0
  1529 ;;      Locals:         1       0       0       0       0
  1530 ;;      Temps:          0       4       0       0       0
  1531 ;;      Totals:         1       4       0       0       0
  1532 ;;Total ram usage:        5 bytes
  1533 ;; Hardware stack levels used:    1
  1534 ;; Hardware stack levels required when called:    2
  1535 ;; This function calls:
  1536 ;;		_decrementar
  1537 ;;		_division
  1538 ;;		_incrementar
  1539 ;; This function is called by:
  1540 ;;		Interrupt level 1
  1541 ;; This function uses a non-reentrant model
  1542 ;;
  1543                           
  1544                           
  1545                           ;psect for function _ISR
  1546  031A                     _ISR:
  1547  031A                     i1l1408:
  1548                           
  1549                           ;Interrup_Libreria.c: 84:      while (1)
  1550  031A  1D0B               	btfss	11,2	;volatile
  1551  031B  2B1D               	goto	u54_21
  1552  031C  2B1E               	goto	u54_20
  1553  031D                     u54_21:
  1554  031D  2B26               	goto	i1l1416
  1555  031E                     u54_20:
  1556  031E                     i1l1410:
  1557                           
  1558                           ;Interrup_Libreria.c: 85:     {;Interrup_Libreria.c: 86:         ADCON0bits.GO_DONE = 1;
  1559  031E  110B               	bcf	11,2	;volatile
  1560  031F                     i1l1412:
  1561                           
  1562                           ;Interrup_Libreria.c: 87:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1563  031F  300A               	movlw	10
  1564  0320  0081               	movwf	1	;volatile
  1565  0321                     i1l1414:
  1566                           
  1567                           ;Interrup_Libreria.c: 88:         if (ADCON0bits.GO_DONE == 0)
  1568  0321  120A  118A  228A  120A  118A  	fcall	_division
  1569  0326                     i1l1416:
  1570                           
  1571                           ;Interrup_Libreria.c: 92:         }
  1572  0326  1C0B               	btfss	11,0	;volatile
  1573  0327  2B29               	goto	u55_21
  1574  0328  2B2A               	goto	u55_20
  1575  0329                     u55_21:
  1576  0329  2B38               	goto	i1l105
  1577  032A                     u55_20:
  1578  032A                     i1l1418:
  1579  032A  1283               	bcf	3,5	;RP0=0, select bank0
  1580  032B  1303               	bcf	3,6	;RP1=0, select bank0
  1581  032C  0806               	movf	6,w	;volatile
  1582  032D                     i1l1420:
  1583                           
  1584                           ;Interrup_Libreria.c: 96: 
  1585  032D  120A  118A  213D  120A  118A  	fcall	_incrementar
  1586  0332                     i1l1422:
  1587                           
  1588                           ;Interrup_Libreria.c: 97: 
  1589  0332  120A  118A  21B0  120A  118A  	fcall	_decrementar
  1590  0337                     i1l1424:
  1591                           
  1592                           ;Interrup_Libreria.c: 98: 
  1593  0337  100B               	bcf	11,0	;volatile
  1594  0338                     i1l105:
  1595  0338  1283               	bcf	3,5	;RP0=0, select bank0
  1596  0339  1303               	bcf	3,6	;RP1=0, select bank0
  1597  033A  083A               	movf	??_ISR+3,w
  1598  033B  00FF               	movwf	btemp+1
  1599  033C  0839               	movf	??_ISR+2,w
  1600  033D  008A               	movwf	10
  1601  033E  0838               	movf	??_ISR+1,w
  1602  033F  0084               	movwf	4
  1603  0340  0E37               	swapf	??_ISR,w
  1604  0341  0083               	movwf	3
  1605  0342  0EFE               	swapf	btemp,f
  1606  0343  0E7E               	swapf	btemp,w
  1607  0344  0009               	retfie
  1608  0345                     __end_of_ISR:
  1609                           
  1610                           	psect	intentry
  1611  0004                     __pintentry:	
  1612                           ;incstack = 0
  1613                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1614                           
  1615  0004                     interrupt_function:
  1616  007E                     saved_w	set	btemp
  1617  0004  00FE               	movwf	btemp
  1618  0005  0E03               	swapf	3,w
  1619  0006  1283               	bcf	3,5	;RP0=0, select bank0
  1620  0007  1303               	bcf	3,6	;RP1=0, select bank0
  1621  0008  00B7               	movwf	??_ISR
  1622  0009  0804               	movf	4,w
  1623  000A  00B8               	movwf	??_ISR+1
  1624  000B  080A               	movf	10,w
  1625  000C  00B9               	movwf	??_ISR+2
  1626  000D  087F               	movf	btemp+1,w
  1627  000E  00BA               	movwf	??_ISR+3
  1628  000F  120A  118A  2B1A   	ljmp	_ISR
  1629                           
  1630                           	psect	text9
  1631  013D                     __ptext9:	
  1632 ;; *************** function _incrementar *****************
  1633 ;; Defined at:
  1634 ;;		line 305 in file "Interrup_Libreria.c"
  1635 ;; Parameters:    Size  Location     Type
  1636 ;;		None
  1637 ;; Auto vars:     Size  Location     Type
  1638 ;;  e               2    2[COMMON] int 
  1639 ;;  e               2    0[COMMON] int 
  1640 ;; Return value:  Size  Location     Type
  1641 ;;                  1    wreg      void 
  1642 ;; Registers used:
  1643 ;;		wreg, status,2, status,0, btemp+1
  1644 ;; Tracked objects:
  1645 ;;		On entry : 0/0
  1646 ;;		On exit  : 0/0
  1647 ;;		Unchanged: 0/0
  1648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1649 ;;      Params:         0       0       0       0       0
  1650 ;;      Locals:         4       0       0       0       0
  1651 ;;      Temps:          0       0       0       0       0
  1652 ;;      Totals:         4       0       0       0       0
  1653 ;;Total ram usage:        4 bytes
  1654 ;; Hardware stack levels used:    1
  1655 ;; This function calls:
  1656 ;;		Nothing
  1657 ;; This function is called by:
  1658 ;;		_ISR
  1659 ;; This function uses a non-reentrant model
  1660 ;;
  1661                           
  1662                           
  1663                           ;psect for function _incrementar
  1664  013D                     _incrementar:
  1665  013D                     i1l1280:	
  1666                           ;incstack = 0
  1667                           ; Regs used in _incrementar: [wreg+status,2+status,0+btemp+1]
  1668                           
  1669                           
  1670                           ;Interrup_Libreria.c: 312: 
  1671  013D  1283               	bcf	3,5	;RP0=0, select bank0
  1672  013E  1303               	bcf	3,6	;RP1=0, select bank0
  1673  013F  1C06               	btfss	6,0	;volatile
  1674  0140  2942               	goto	u41_21
  1675  0141  2943               	goto	u41_20
  1676  0142                     u41_21:
  1677  0142  297F               	goto	i1l1306
  1678  0143                     u41_20:
  1679  0143                     i1l1282:
  1680                           
  1681                           ;Interrup_Libreria.c: 313:     if (PORTBbits.RB1 == 1);Interrup_Libreria.c: 314:     {
  1682  0143  01F0               	clrf	incrementar@e
  1683  0144  01F1               	clrf	incrementar@e+1
  1684  0145                     i1l1288:
  1685                           
  1686                           ;Interrup_Libreria.c: 315:         for (int e = 0; e < 11; e++){
  1687  0145  1283               	bcf	3,5	;RP0=0, select bank0
  1688  0146  1303               	bcf	3,6	;RP1=0, select bank0
  1689  0147  082E               	movf	_pressed_ok,w
  1690  0148  3E01               	addlw	1
  1691  0149  00AE               	movwf	_pressed_ok
  1692  014A  082F               	movf	_pressed_ok+1,w
  1693  014B  1803               	skipnc
  1694  014C  3E01               	addlw	1
  1695  014D  3E00               	addlw	0
  1696  014E  00AF               	movwf	_pressed_ok+1
  1697  014F                     i1l1290:
  1698  014F  3001               	movlw	1
  1699  0150  07F0               	addwf	incrementar@e,f
  1700  0151  1803               	skipnc
  1701  0152  0AF1               	incf	incrementar@e+1,f
  1702  0153  3000               	movlw	0
  1703  0154  07F1               	addwf	incrementar@e+1,f
  1704  0155                     i1l1292:
  1705  0155  0871               	movf	incrementar@e+1,w
  1706  0156  3A80               	xorlw	128
  1707  0157  00FF               	movwf	btemp+1
  1708  0158  3080               	movlw	128
  1709  0159  027F               	subwf	btemp+1,w
  1710  015A  1D03               	skipz
  1711  015B  295E               	goto	u42_25
  1712  015C  300B               	movlw	11
  1713  015D  0270               	subwf	incrementar@e,w
  1714  015E                     u42_25:
  1715  015E  1C03               	skipc
  1716  015F  2961               	goto	u42_21
  1717  0160  2962               	goto	u42_20
  1718  0161                     u42_21:
  1719  0161  2945               	goto	i1l1288
  1720  0162                     u42_20:
  1721  0162                     i1l1294:
  1722                           
  1723                           ;Interrup_Libreria.c: 316:         pressed_ok2 = pressed_ok2 + 1; }
  1724  0162  1283               	bcf	3,5	;RP0=0, select bank0
  1725  0163  1303               	bcf	3,6	;RP1=0, select bank0
  1726  0164  01AC               	clrf	_released_ok
  1727  0165  01AD               	clrf	_released_ok+1
  1728  0166                     i1l1296:
  1729                           
  1730                           ;Interrup_Libreria.c: 317:         released_ok2 = 0;
  1731  0166  3000               	movlw	0
  1732  0167  022F               	subwf	_pressed_ok+1,w
  1733  0168  300B               	movlw	11
  1734  0169  1903               	skipnz
  1735  016A  022E               	subwf	_pressed_ok,w
  1736  016B  1C03               	skipc
  1737  016C  296E               	goto	u43_21
  1738  016D  296F               	goto	u43_20
  1739  016E                     u43_21:
  1740  016E  297C               	goto	i1l1304
  1741  016F                     u43_20:
  1742  016F                     i1l1298:
  1743                           
  1744                           ;Interrup_Libreria.c: 318:         if (pressed_ok2 > 10);Interrup_Libreria.c: 319:      
      +                             {
  1745  016F  082A               	movf	_presionado,w
  1746  0170  042B               	iorwf	_presionado+1,w
  1747  0171  1D03               	btfss	3,2
  1748  0172  2974               	goto	u44_21
  1749  0173  2975               	goto	u44_20
  1750  0174                     u44_21:
  1751  0174  297C               	goto	i1l1304
  1752  0175                     u44_20:
  1753  0175                     i1l1300:
  1754                           
  1755                           ;Interrup_Libreria.c: 320:             if (presionado2 == 0);Interrup_Libreria.c: 321:  
      +                                     {
  1756  0175  0808               	movf	8,w	;volatile
  1757  0176  3E01               	addlw	1
  1758  0177  0088               	movwf	8	;volatile
  1759  0178                     i1l1302:
  1760                           
  1761                           ;Interrup_Libreria.c: 322:                 PORTD = PORTD - 1;
  1762  0178  3001               	movlw	1
  1763  0179  00AA               	movwf	_presionado
  1764  017A  3000               	movlw	0
  1765  017B  00AB               	movwf	_presionado+1
  1766  017C                     i1l1304:
  1767                           
  1768                           ;Interrup_Libreria.c: 325:         }
  1769  017C  01AE               	clrf	_pressed_ok
  1770  017D  01AF               	clrf	_pressed_ok+1
  1771                           
  1772                           ;Interrup_Libreria.c: 326:         pressed_ok2 = 0;
  1773  017E  29AF               	goto	i1l178
  1774  017F                     i1l1306:
  1775                           
  1776                           ;Interrup_Libreria.c: 328:     else;Interrup_Libreria.c: 329:     {
  1777  017F  01F2               	clrf	incrementar@e_338
  1778  0180  01F3               	clrf	incrementar@e_338+1
  1779  0181                     i1l1312:
  1780                           
  1781                           ;Interrup_Libreria.c: 330:         for (int e = 0; e < 11; e++){
  1782  0181  1283               	bcf	3,5	;RP0=0, select bank0
  1783  0182  1303               	bcf	3,6	;RP1=0, select bank0
  1784  0183  082C               	movf	_released_ok,w
  1785  0184  3E01               	addlw	1
  1786  0185  00AC               	movwf	_released_ok
  1787  0186  082D               	movf	_released_ok+1,w
  1788  0187  1803               	skipnc
  1789  0188  3E01               	addlw	1
  1790  0189  3E00               	addlw	0
  1791  018A  00AD               	movwf	_released_ok+1
  1792  018B                     i1l1314:
  1793  018B  3001               	movlw	1
  1794  018C  07F2               	addwf	incrementar@e_338,f
  1795  018D  1803               	skipnc
  1796  018E  0AF3               	incf	incrementar@e_338+1,f
  1797  018F  3000               	movlw	0
  1798  0190  07F3               	addwf	incrementar@e_338+1,f
  1799  0191                     i1l1316:
  1800  0191  0873               	movf	incrementar@e_338+1,w
  1801  0192  3A80               	xorlw	128
  1802  0193  00FF               	movwf	btemp+1
  1803  0194  3080               	movlw	128
  1804  0195  027F               	subwf	btemp+1,w
  1805  0196  1D03               	skipz
  1806  0197  299A               	goto	u45_25
  1807  0198  300B               	movlw	11
  1808  0199  0272               	subwf	incrementar@e_338,w
  1809  019A                     u45_25:
  1810  019A  1C03               	skipc
  1811  019B  299D               	goto	u45_21
  1812  019C  299E               	goto	u45_20
  1813  019D                     u45_21:
  1814  019D  2981               	goto	i1l1312
  1815  019E                     u45_20:
  1816  019E                     i1l1318:
  1817                           
  1818                           ;Interrup_Libreria.c: 332: 
  1819  019E  1283               	bcf	3,5	;RP0=0, select bank0
  1820  019F  1303               	bcf	3,6	;RP1=0, select bank0
  1821  01A0  01AE               	clrf	_pressed_ok
  1822  01A1  01AF               	clrf	_pressed_ok+1
  1823  01A2                     i1l1320:
  1824                           
  1825                           ;Interrup_Libreria.c: 333:         pressed_ok2 = 0;
  1826  01A2  3000               	movlw	0
  1827  01A3  022D               	subwf	_released_ok+1,w
  1828  01A4  300B               	movlw	11
  1829  01A5  1903               	skipnz
  1830  01A6  022C               	subwf	_released_ok,w
  1831  01A7  1C03               	skipc
  1832  01A8  29AA               	goto	u46_21
  1833  01A9  29AB               	goto	u46_20
  1834  01AA                     u46_21:
  1835  01AA  29AF               	goto	i1l178
  1836  01AB                     u46_20:
  1837  01AB                     i1l1322:
  1838                           
  1839                           ;Interrup_Libreria.c: 334:         if (released_ok2 > 10);Interrup_Libreria.c: 335:     
      +                              {
  1840  01AB  01AA               	clrf	_presionado
  1841  01AC  01AB               	clrf	_presionado+1
  1842                           
  1843                           ;Interrup_Libreria.c: 336:             presionado2 = 0;
  1844  01AD  01AC               	clrf	_released_ok
  1845  01AE  01AD               	clrf	_released_ok+1
  1846  01AF                     i1l178:
  1847  01AF  0008               	return
  1848  01B0                     __end_of_incrementar:
  1849                           
  1850                           	psect	text10
  1851  028A                     __ptext10:	
  1852 ;; *************** function _division *****************
  1853 ;; Defined at:
  1854 ;;		line 200 in file "Interrup_Libreria.c"
  1855 ;; Parameters:    Size  Location     Type
  1856 ;;		None
  1857 ;; Auto vars:     Size  Location     Type
  1858 ;;		None
  1859 ;; Return value:  Size  Location     Type
  1860 ;;                  1    wreg      void 
  1861 ;; Registers used:
  1862 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1863 ;; Tracked objects:
  1864 ;;		On entry : 0/0
  1865 ;;		On exit  : 0/0
  1866 ;;		Unchanged: 0/0
  1867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1868 ;;      Params:         0       0       0       0       0
  1869 ;;      Locals:         0       0       0       0       0
  1870 ;;      Temps:          3       0       0       0       0
  1871 ;;      Totals:         3       0       0       0       0
  1872 ;;Total ram usage:        3 bytes
  1873 ;; Hardware stack levels used:    1
  1874 ;; Hardware stack levels required when called:    1
  1875 ;; This function calls:
  1876 ;;		___awdiv
  1877 ;;		_hexadecimal
  1878 ;;		_multiplexar
  1879 ;; This function is called by:
  1880 ;;		_ISR
  1881 ;; This function uses a non-reentrant model
  1882 ;;
  1883                           
  1884                           
  1885                           ;psect for function _division
  1886  028A                     _division:
  1887  028A                     i1l1258:	
  1888                           ;incstack = 0
  1889                           ; Regs used in _division: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1890                           
  1891                           
  1892                           ;Interrup_Libreria.c: 202:     {
  1893  028A  1283               	bcf	3,5	;RP0=0, select bank0
  1894  028B  1303               	bcf	3,6	;RP1=0, select bank0
  1895  028C  1009               	bcf	9,0	;volatile
  1896                           
  1897                           ;Interrup_Libreria.c: 203:         case 0:
  1898  028D  1089               	bcf	9,1	;volatile
  1899  028E                     i1l1260:
  1900                           
  1901                           ;Interrup_Libreria.c: 205:             break;
  1902  028E  3010               	movlw	16
  1903  028F  00F0               	movwf	___awdiv@divisor
  1904  0290  3000               	movlw	0
  1905  0291  00F1               	movwf	___awdiv@divisor+1
  1906  0292  087C               	movf	_adc_value,w
  1907  0293  00F9               	movwf	??_division
  1908  0294  01FA               	clrf	??_division+1
  1909  0295  0879               	movf	??_division,w
  1910  0296  00F2               	movwf	___awdiv@dividend
  1911  0297  087A               	movf	??_division+1,w
  1912  0298  00F3               	movwf	___awdiv@dividend+1
  1913  0299  120A  118A  2223  120A  118A  	fcall	___awdiv
  1914  029E  0870               	movf	?___awdiv,w
  1915  029F  00FB               	movwf	??_division+2
  1916  02A0  087B               	movf	??_division+2,w
  1917  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  1918  02A2  1303               	bcf	3,6	;RP1=0, select bank0
  1919  02A3  00B3               	movwf	_decena
  1920  02A4                     i1l1262:
  1921                           
  1922                           ;Interrup_Libreria.c: 206:         case 1:
  1923  02A4  087C               	movf	_adc_value,w
  1924  02A5  390F               	andlw	15
  1925  02A6  00F9               	movwf	??_division
  1926  02A7  0879               	movf	??_division,w
  1927  02A8  00B4               	movwf	_unidad
  1928  02A9                     i1l1264:
  1929                           
  1930                           ;Interrup_Libreria.c: 208:             break;
  1931  02A9  0832               	movf	_toogle,w
  1932  02AA  1D03               	btfss	3,2
  1933  02AB  2AAD               	goto	u40_21
  1934  02AC  2AAE               	goto	u40_20
  1935  02AD                     u40_21:
  1936  02AD  2AC2               	goto	i1l1272
  1937  02AE                     u40_20:
  1938  02AE                     i1l1266:
  1939                           
  1940                           ;Interrup_Libreria.c: 209:         case 2:;Interrup_Libreria.c: 210:             PORTC =
      +                           0b01011011;
  1941  02AE  0833               	movf	_decena,w
  1942  02AF  00F9               	movwf	??_division
  1943  02B0  0879               	movf	??_division,w
  1944  02B1  00B5               	movwf	_show
  1945  02B2                     i1l1268:
  1946                           
  1947                           ;Interrup_Libreria.c: 211:             break;
  1948  02B2  0835               	movf	_show,w
  1949  02B3  00F9               	movwf	??_division
  1950  02B4  01FA               	clrf	??_division+1
  1951  02B5  0879               	movf	??_division,w
  1952  02B6  00F0               	movwf	hexadecimal@show
  1953  02B7  087A               	movf	??_division+1,w
  1954  02B8  00F1               	movwf	hexadecimal@show+1
  1955  02B9  120A  118A  20B0  120A  118A  	fcall	_hexadecimal
  1956  02BE                     i1l1270:
  1957                           
  1958                           ;Interrup_Libreria.c: 212:         case 3:
  1959  02BE  1283               	bcf	3,5	;RP0=0, select bank0
  1960  02BF  1303               	bcf	3,6	;RP1=0, select bank0
  1961  02C0  1409               	bsf	9,0	;volatile
  1962                           
  1963                           ;Interrup_Libreria.c: 213:             PORTC = 0b01001111;
  1964  02C1  2AD5               	goto	i1l1278
  1965  02C2                     i1l1272:
  1966                           
  1967                           ;Interrup_Libreria.c: 215:         case 4:;Interrup_Libreria.c: 216:             PORTC =
      +                           0b01100110;
  1968  02C2  0834               	movf	_unidad,w
  1969  02C3  00F9               	movwf	??_division
  1970  02C4  0879               	movf	??_division,w
  1971  02C5  00B5               	movwf	_show
  1972  02C6                     i1l1274:
  1973                           
  1974                           ;Interrup_Libreria.c: 217:             break;
  1975  02C6  0835               	movf	_show,w
  1976  02C7  00F9               	movwf	??_division
  1977  02C8  01FA               	clrf	??_division+1
  1978  02C9  0879               	movf	??_division,w
  1979  02CA  00F0               	movwf	hexadecimal@show
  1980  02CB  087A               	movf	??_division+1,w
  1981  02CC  00F1               	movwf	hexadecimal@show+1
  1982  02CD  120A  118A  20B0  120A  118A  	fcall	_hexadecimal
  1983  02D2                     i1l1276:
  1984                           
  1985                           ;Interrup_Libreria.c: 218:         case 5:
  1986  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  1987  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  1988  02D4  1489               	bsf	9,1	;volatile
  1989  02D5                     i1l1278:
  1990                           
  1991                           ;Interrup_Libreria.c: 220:             break;
  1992  02D5  120A  118A  2393  120A  118A  	fcall	_multiplexar
  1993  02DA                     i1l134:
  1994  02DA  0008               	return
  1995  02DB                     __end_of_division:
  1996                           
  1997                           	psect	text11
  1998  0393                     __ptext11:	
  1999 ;; *************** function _multiplexar *****************
  2000 ;; Defined at:
  2001 ;;		line 223 in file "Interrup_Libreria.c"
  2002 ;; Parameters:    Size  Location     Type
  2003 ;;		None
  2004 ;; Auto vars:     Size  Location     Type
  2005 ;;		None
  2006 ;; Return value:  Size  Location     Type
  2007 ;;                  1    wreg      void 
  2008 ;; Registers used:
  2009 ;;		wreg, status,2, status,0
  2010 ;; Tracked objects:
  2011 ;;		On entry : 0/0
  2012 ;;		On exit  : 0/0
  2013 ;;		Unchanged: 0/0
  2014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2015 ;;      Params:         0       0       0       0       0
  2016 ;;      Locals:         0       0       0       0       0
  2017 ;;      Temps:          0       0       0       0       0
  2018 ;;      Totals:         0       0       0       0       0
  2019 ;;Total ram usage:        0 bytes
  2020 ;; Hardware stack levels used:    1
  2021 ;; This function calls:
  2022 ;;		Nothing
  2023 ;; This function is called by:
  2024 ;;		_division
  2025 ;; This function uses a non-reentrant model
  2026 ;;
  2027                           
  2028                           
  2029                           ;psect for function _multiplexar
  2030  0393                     _multiplexar:
  2031  0393                     i1l1208:	
  2032                           ;incstack = 0
  2033                           ; Regs used in _multiplexar: [wreg+status,2+status,0]
  2034                           
  2035                           
  2036                           ;Interrup_Libreria.c: 225:             PORTC = 0b00000111;
  2037  0393  1283               	bcf	3,5	;RP0=0, select bank0
  2038  0394  1303               	bcf	3,6	;RP1=0, select bank0
  2039  0395  0832               	movf	_toogle,w
  2040  0396  1D03               	btfss	3,2
  2041  0397  2B99               	goto	u29_21
  2042  0398  2B9A               	goto	u29_20
  2043  0399                     u29_21:
  2044  0399  2B9D               	goto	i1l1212
  2045  039A                     u29_20:
  2046  039A                     i1l1210:
  2047                           
  2048                           ;Interrup_Libreria.c: 226:             break;;Interrup_Libreria.c: 227:         case 8:
  2049  039A  01B2               	clrf	_toogle
  2050  039B  0AB2               	incf	_toogle,f
  2051                           
  2052                           ;Interrup_Libreria.c: 228:             PORTC = 0b01111111;
  2053  039C  2B9E               	goto	i1l139
  2054  039D                     i1l1212:
  2055                           
  2056                           ;Interrup_Libreria.c: 230:         case 9:;Interrup_Libreria.c: 231:             PORTC =
      +                           0b01101111;
  2057  039D  01B2               	clrf	_toogle
  2058  039E                     i1l139:
  2059  039E  0008               	return
  2060  039F                     __end_of_multiplexar:
  2061                           
  2062                           	psect	text12
  2063  00B0                     __ptext12:	
  2064 ;; *************** function _hexadecimal *****************
  2065 ;; Defined at:
  2066 ;;		line 235 in file "Interrup_Libreria.c"
  2067 ;; Parameters:    Size  Location     Type
  2068 ;;  show            2    0[COMMON] int 
  2069 ;; Auto vars:     Size  Location     Type
  2070 ;;		None
  2071 ;; Return value:  Size  Location     Type
  2072 ;;                  1    wreg      void 
  2073 ;; Registers used:
  2074 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2075 ;; Tracked objects:
  2076 ;;		On entry : 0/0
  2077 ;;		On exit  : 0/0
  2078 ;;		Unchanged: 0/0
  2079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2080 ;;      Params:         2       0       0       0       0
  2081 ;;      Locals:         0       0       0       0       0
  2082 ;;      Temps:          0       0       0       0       0
  2083 ;;      Totals:         2       0       0       0       0
  2084 ;;Total ram usage:        2 bytes
  2085 ;; Hardware stack levels used:    1
  2086 ;; This function calls:
  2087 ;;		Nothing
  2088 ;; This function is called by:
  2089 ;;		_division
  2090 ;; This function uses a non-reentrant model
  2091 ;;
  2092                           
  2093                           
  2094                           ;psect for function _hexadecimal
  2095  00B0                     _hexadecimal:
  2096  00B0                     i1l1164:	
  2097                           ;incstack = 0
  2098                           ; Regs used in _hexadecimal: [wreg-fsr0h+status,2+status,0]
  2099                           
  2100                           
  2101                           ;Interrup_Libreria.c: 235:             break;;Interrup_Libreria.c: 236:         case 11:
      +                          ;Interrup_Libreria.c: 237:             PORTC = 0b01111100;
  2102  00B0  2905               	goto	i1l1202
  2103  00B1                     i1l1166:
  2104                           
  2105                           ;Interrup_Libreria.c: 240:             PORTC = 0b00111001;
  2106  00B1  303F               	movlw	63
  2107  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  2108  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  2109  00B4  0087               	movwf	7	;volatile
  2110                           
  2111                           ;Interrup_Libreria.c: 241:             break;
  2112  00B5  293C               	goto	i1l161
  2113  00B6                     i1l1168:
  2114                           
  2115                           ;Interrup_Libreria.c: 243:             PORTC = 0b01011110;
  2116  00B6  3006               	movlw	6
  2117  00B7  1283               	bcf	3,5	;RP0=0, select bank0
  2118  00B8  1303               	bcf	3,6	;RP1=0, select bank0
  2119  00B9  0087               	movwf	7	;volatile
  2120                           
  2121                           ;Interrup_Libreria.c: 244:             break;
  2122  00BA  293C               	goto	i1l161
  2123  00BB                     i1l1170:
  2124                           
  2125                           ;Interrup_Libreria.c: 246:             PORTC = 0b01111001;
  2126  00BB  305B               	movlw	91
  2127  00BC  1283               	bcf	3,5	;RP0=0, select bank0
  2128  00BD  1303               	bcf	3,6	;RP1=0, select bank0
  2129  00BE  0087               	movwf	7	;volatile
  2130                           
  2131                           ;Interrup_Libreria.c: 247:             break;
  2132  00BF  293C               	goto	i1l161
  2133  00C0                     i1l1172:
  2134                           
  2135                           ;Interrup_Libreria.c: 249:             PORTC = 0b01110001;
  2136  00C0  304F               	movlw	79
  2137  00C1  1283               	bcf	3,5	;RP0=0, select bank0
  2138  00C2  1303               	bcf	3,6	;RP1=0, select bank0
  2139  00C3  0087               	movwf	7	;volatile
  2140                           
  2141                           ;Interrup_Libreria.c: 250:             break;
  2142  00C4  293C               	goto	i1l161
  2143  00C5                     i1l1174:
  2144                           
  2145                           ;Interrup_Libreria.c: 252:             PORTC = 0b00000000;
  2146  00C5  3066               	movlw	102
  2147  00C6  1283               	bcf	3,5	;RP0=0, select bank0
  2148  00C7  1303               	bcf	3,6	;RP1=0, select bank0
  2149  00C8  0087               	movwf	7	;volatile
  2150                           
  2151                           ;Interrup_Libreria.c: 253:             break;
  2152  00C9  293C               	goto	i1l161
  2153  00CA                     i1l1176:
  2154                           
  2155                           ;Interrup_Libreria.c: 255: }
  2156  00CA  306D               	movlw	109
  2157  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  2158  00CC  1303               	bcf	3,6	;RP1=0, select bank0
  2159  00CD  0087               	movwf	7	;volatile
  2160                           
  2161                           ;Interrup_Libreria.c: 256: 
  2162  00CE  293C               	goto	i1l161
  2163  00CF                     i1l1178:
  2164                           
  2165                           ;Interrup_Libreria.c: 258: {
  2166  00CF  307D               	movlw	125
  2167  00D0  1283               	bcf	3,5	;RP0=0, select bank0
  2168  00D1  1303               	bcf	3,6	;RP1=0, select bank0
  2169  00D2  0087               	movwf	7	;volatile
  2170                           
  2171                           ;Interrup_Libreria.c: 259:     if (adc_value > PORTD)
  2172  00D3  293C               	goto	i1l161
  2173  00D4                     i1l1180:
  2174                           
  2175                           ;Interrup_Libreria.c: 261:         PORTEbits.RE2 = 1;
  2176  00D4  3007               	movlw	7
  2177  00D5  1283               	bcf	3,5	;RP0=0, select bank0
  2178  00D6  1303               	bcf	3,6	;RP1=0, select bank0
  2179  00D7  0087               	movwf	7	;volatile
  2180                           
  2181                           ;Interrup_Libreria.c: 262:     }
  2182  00D8  293C               	goto	i1l161
  2183  00D9                     i1l1182:
  2184                           
  2185                           ;Interrup_Libreria.c: 264:     {
  2186  00D9  307F               	movlw	127
  2187  00DA  1283               	bcf	3,5	;RP0=0, select bank0
  2188  00DB  1303               	bcf	3,6	;RP1=0, select bank0
  2189  00DC  0087               	movwf	7	;volatile
  2190                           
  2191                           ;Interrup_Libreria.c: 265:         PORTEbits.RE2 = 0;
  2192  00DD  293C               	goto	i1l161
  2193  00DE                     i1l1184:
  2194                           
  2195                           ;Interrup_Libreria.c: 267: }
  2196  00DE  306F               	movlw	111
  2197  00DF  1283               	bcf	3,5	;RP0=0, select bank0
  2198  00E0  1303               	bcf	3,6	;RP1=0, select bank0
  2199  00E1  0087               	movwf	7	;volatile
  2200                           
  2201                           ;Interrup_Libreria.c: 268: 
  2202  00E2  293C               	goto	i1l161
  2203  00E3                     i1l1186:
  2204                           
  2205                           ;Interrup_Libreria.c: 270: {
  2206  00E3  3077               	movlw	119
  2207  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  2208  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  2209  00E6  0087               	movwf	7	;volatile
  2210                           
  2211                           ;Interrup_Libreria.c: 271: 
  2212  00E7  293C               	goto	i1l161
  2213  00E8                     i1l1188:
  2214                           
  2215                           ;Interrup_Libreria.c: 273: 
  2216  00E8  307C               	movlw	124
  2217  00E9  1283               	bcf	3,5	;RP0=0, select bank0
  2218  00EA  1303               	bcf	3,6	;RP1=0, select bank0
  2219  00EB  0087               	movwf	7	;volatile
  2220                           
  2221                           ;Interrup_Libreria.c: 274: 
  2222  00EC  293C               	goto	i1l161
  2223  00ED                     i1l1190:
  2224                           
  2225                           ;Interrup_Libreria.c: 276:     if (PORTBbits.RB0 == 1)
  2226  00ED  3039               	movlw	57
  2227  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  2228  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  2229  00F0  0087               	movwf	7	;volatile
  2230                           
  2231                           ;Interrup_Libreria.c: 277:     {
  2232  00F1  293C               	goto	i1l161
  2233  00F2                     i1l1192:
  2234                           
  2235                           ;Interrup_Libreria.c: 279:         pressed_ok = pressed_ok + 1; }
  2236  00F2  305E               	movlw	94
  2237  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  2238  00F4  1303               	bcf	3,6	;RP1=0, select bank0
  2239  00F5  0087               	movwf	7	;volatile
  2240                           
  2241                           ;Interrup_Libreria.c: 280:         released_ok = 0;
  2242  00F6  293C               	goto	i1l161
  2243  00F7                     i1l1194:
  2244                           
  2245                           ;Interrup_Libreria.c: 282:         {
  2246  00F7  3079               	movlw	121
  2247  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  2248  00F9  1303               	bcf	3,6	;RP1=0, select bank0
  2249  00FA  0087               	movwf	7	;volatile
  2250                           
  2251                           ;Interrup_Libreria.c: 283:             if (presionado == 0)
  2252  00FB  293C               	goto	i1l161
  2253  00FC                     i1l1196:
  2254                           
  2255                           ;Interrup_Libreria.c: 285:                 PORTD = PORTD + 1;
  2256  00FC  3071               	movlw	113
  2257  00FD  1283               	bcf	3,5	;RP0=0, select bank0
  2258  00FE  1303               	bcf	3,6	;RP1=0, select bank0
  2259  00FF  0087               	movwf	7	;volatile
  2260                           
  2261                           ;Interrup_Libreria.c: 286:                 presionado = 1;
  2262  0100  293C               	goto	i1l161
  2263  0101                     i1l1198:
  2264                           
  2265                           ;Interrup_Libreria.c: 288:         }
  2266  0101  1283               	bcf	3,5	;RP0=0, select bank0
  2267  0102  1303               	bcf	3,6	;RP1=0, select bank0
  2268  0103  0187               	clrf	7	;volatile
  2269                           
  2270                           ;Interrup_Libreria.c: 289:         pressed_ok = 0;
  2271  0104  293C               	goto	i1l161
  2272  0105                     i1l1202:
  2273                           
  2274                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2275                           ; Switch size 1, requested type "simple"
  2276                           ; Number of cases is 1, Range of values is 0 to 0
  2277                           ; switch strategies available:
  2278                           ; Name         Instructions Cycles
  2279                           ; simple_byte            4     3 (average)
  2280                           ; direct_byte           11     8 (fixed)
  2281                           ; jumptable            260     6 (fixed)
  2282                           ;	Chosen strategy is simple_byte
  2283  0105  0871               	movf	hexadecimal@show+1,w
  2284  0106  3A00               	xorlw	0	; case 0
  2285  0107  1903               	skipnz
  2286  0108  290A               	goto	i1l1500
  2287  0109  2901               	goto	i1l1198
  2288  010A                     i1l1500:
  2289                           
  2290                           ; Switch size 1, requested type "simple"
  2291                           ; Number of cases is 16, Range of values is 0 to 15
  2292                           ; switch strategies available:
  2293                           ; Name         Instructions Cycles
  2294                           ; simple_byte           49    25 (average)
  2295                           ; direct_byte           56     8 (fixed)
  2296                           ; jumptable            260     6 (fixed)
  2297                           ;	Chosen strategy is simple_byte
  2298  010A  0870               	movf	hexadecimal@show,w
  2299  010B  3A00               	xorlw	0	; case 0
  2300  010C  1903               	skipnz
  2301  010D  28B1               	goto	i1l1166
  2302  010E  3A01               	xorlw	1	; case 1
  2303  010F  1903               	skipnz
  2304  0110  28B6               	goto	i1l1168
  2305  0111  3A03               	xorlw	3	; case 2
  2306  0112  1903               	skipnz
  2307  0113  28BB               	goto	i1l1170
  2308  0114  3A01               	xorlw	1	; case 3
  2309  0115  1903               	skipnz
  2310  0116  28C0               	goto	i1l1172
  2311  0117  3A07               	xorlw	7	; case 4
  2312  0118  1903               	skipnz
  2313  0119  28C5               	goto	i1l1174
  2314  011A  3A01               	xorlw	1	; case 5
  2315  011B  1903               	skipnz
  2316  011C  28CA               	goto	i1l1176
  2317  011D  3A03               	xorlw	3	; case 6
  2318  011E  1903               	skipnz
  2319  011F  28CF               	goto	i1l1178
  2320  0120  3A01               	xorlw	1	; case 7
  2321  0121  1903               	skipnz
  2322  0122  28D4               	goto	i1l1180
  2323  0123  3A0F               	xorlw	15	; case 8
  2324  0124  1903               	skipnz
  2325  0125  28D9               	goto	i1l1182
  2326  0126  3A01               	xorlw	1	; case 9
  2327  0127  1903               	skipnz
  2328  0128  28DE               	goto	i1l1184
  2329  0129  3A03               	xorlw	3	; case 10
  2330  012A  1903               	skipnz
  2331  012B  28E3               	goto	i1l1186
  2332  012C  3A01               	xorlw	1	; case 11
  2333  012D  1903               	skipnz
  2334  012E  28E8               	goto	i1l1188
  2335  012F  3A07               	xorlw	7	; case 12
  2336  0130  1903               	skipnz
  2337  0131  28ED               	goto	i1l1190
  2338  0132  3A01               	xorlw	1	; case 13
  2339  0133  1903               	skipnz
  2340  0134  28F2               	goto	i1l1192
  2341  0135  3A03               	xorlw	3	; case 14
  2342  0136  1903               	skipnz
  2343  0137  28F7               	goto	i1l1194
  2344  0138  3A01               	xorlw	1	; case 15
  2345  0139  1903               	skipnz
  2346  013A  28FC               	goto	i1l1196
  2347  013B  2901               	goto	i1l1198
  2348  013C                     i1l161:
  2349  013C  0008               	return
  2350  013D                     __end_of_hexadecimal:
  2351                           
  2352                           	psect	text13
  2353  0223                     __ptext13:	
  2354 ;; *************** function ___awdiv *****************
  2355 ;; Defined at:
  2356 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2357 ;; Parameters:    Size  Location     Type
  2358 ;;  divisor         2    0[COMMON] int 
  2359 ;;  dividend        2    2[COMMON] int 
  2360 ;; Auto vars:     Size  Location     Type
  2361 ;;  quotient        2    7[COMMON] int 
  2362 ;;  sign            1    6[COMMON] unsigned char 
  2363 ;;  counter         1    5[COMMON] unsigned char 
  2364 ;; Return value:  Size  Location     Type
  2365 ;;                  2    0[COMMON] int 
  2366 ;; Registers used:
  2367 ;;		wreg, status,2, status,0
  2368 ;; Tracked objects:
  2369 ;;		On entry : 0/0
  2370 ;;		On exit  : 0/0
  2371 ;;		Unchanged: 0/0
  2372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2373 ;;      Params:         4       0       0       0       0
  2374 ;;      Locals:         4       0       0       0       0
  2375 ;;      Temps:          1       0       0       0       0
  2376 ;;      Totals:         9       0       0       0       0
  2377 ;;Total ram usage:        9 bytes
  2378 ;; Hardware stack levels used:    1
  2379 ;; This function calls:
  2380 ;;		Nothing
  2381 ;; This function is called by:
  2382 ;;		_division
  2383 ;; This function uses a non-reentrant model
  2384 ;;
  2385                           
  2386                           
  2387                           ;psect for function ___awdiv
  2388  0223                     ___awdiv:
  2389  0223                     i1l1214:	
  2390                           ;incstack = 0
  2391                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2392                           
  2393  0223  01F6               	clrf	___awdiv@sign
  2394  0224                     i1l1216:
  2395  0224  1FF1               	btfss	___awdiv@divisor+1,7
  2396  0225  2A27               	goto	u30_21
  2397  0226  2A28               	goto	u30_20
  2398  0227                     u30_21:
  2399  0227  2A2F               	goto	i1l1222
  2400  0228                     u30_20:
  2401  0228                     i1l1218:
  2402  0228  09F0               	comf	___awdiv@divisor,f
  2403  0229  09F1               	comf	___awdiv@divisor+1,f
  2404  022A  0AF0               	incf	___awdiv@divisor,f
  2405  022B  1903               	skipnz
  2406  022C  0AF1               	incf	___awdiv@divisor+1,f
  2407  022D                     i1l1220:
  2408  022D  01F6               	clrf	___awdiv@sign
  2409  022E  0AF6               	incf	___awdiv@sign,f
  2410  022F                     i1l1222:
  2411  022F  1FF3               	btfss	___awdiv@dividend+1,7
  2412  0230  2A32               	goto	u31_21
  2413  0231  2A33               	goto	u31_20
  2414  0232                     u31_21:
  2415  0232  2A3C               	goto	i1l1228
  2416  0233                     u31_20:
  2417  0233                     i1l1224:
  2418  0233  09F2               	comf	___awdiv@dividend,f
  2419  0234  09F3               	comf	___awdiv@dividend+1,f
  2420  0235  0AF2               	incf	___awdiv@dividend,f
  2421  0236  1903               	skipnz
  2422  0237  0AF3               	incf	___awdiv@dividend+1,f
  2423  0238                     i1l1226:
  2424  0238  3001               	movlw	1
  2425  0239  00F4               	movwf	??___awdiv
  2426  023A  0874               	movf	??___awdiv,w
  2427  023B  06F6               	xorwf	___awdiv@sign,f
  2428  023C                     i1l1228:
  2429  023C  01F7               	clrf	___awdiv@quotient
  2430  023D  01F8               	clrf	___awdiv@quotient+1
  2431  023E                     i1l1230:
  2432  023E  0870               	movf	___awdiv@divisor,w
  2433  023F  0471               	iorwf	___awdiv@divisor+1,w
  2434  0240  1903               	btfsc	3,2
  2435  0241  2A43               	goto	u32_21
  2436  0242  2A44               	goto	u32_20
  2437  0243                     u32_21:
  2438  0243  2A7B               	goto	i1l1250
  2439  0244                     u32_20:
  2440  0244                     i1l1232:
  2441  0244  01F5               	clrf	___awdiv@counter
  2442  0245  0AF5               	incf	___awdiv@counter,f
  2443  0246  2A52               	goto	i1l1238
  2444  0247                     i1l1234:
  2445  0247  3001               	movlw	1
  2446  0248                     u33_25:
  2447  0248  1003               	clrc
  2448  0249  0DF0               	rlf	___awdiv@divisor,f
  2449  024A  0DF1               	rlf	___awdiv@divisor+1,f
  2450  024B  3EFF               	addlw	-1
  2451  024C  1D03               	skipz
  2452  024D  2A48               	goto	u33_25
  2453  024E                     i1l1236:
  2454  024E  3001               	movlw	1
  2455  024F  00F4               	movwf	??___awdiv
  2456  0250  0874               	movf	??___awdiv,w
  2457  0251  07F5               	addwf	___awdiv@counter,f
  2458  0252                     i1l1238:
  2459  0252  1FF1               	btfss	___awdiv@divisor+1,7
  2460  0253  2A55               	goto	u34_21
  2461  0254  2A56               	goto	u34_20
  2462  0255                     u34_21:
  2463  0255  2A47               	goto	i1l1234
  2464  0256                     u34_20:
  2465  0256                     i1l1240:
  2466  0256  3001               	movlw	1
  2467  0257                     u35_25:
  2468  0257  1003               	clrc
  2469  0258  0DF7               	rlf	___awdiv@quotient,f
  2470  0259  0DF8               	rlf	___awdiv@quotient+1,f
  2471  025A  3EFF               	addlw	-1
  2472  025B  1D03               	skipz
  2473  025C  2A57               	goto	u35_25
  2474  025D  0871               	movf	___awdiv@divisor+1,w
  2475  025E  0273               	subwf	___awdiv@dividend+1,w
  2476  025F  1D03               	skipz
  2477  0260  2A63               	goto	u36_25
  2478  0261  0870               	movf	___awdiv@divisor,w
  2479  0262  0272               	subwf	___awdiv@dividend,w
  2480  0263                     u36_25:
  2481  0263  1C03               	skipc
  2482  0264  2A66               	goto	u36_21
  2483  0265  2A67               	goto	u36_20
  2484  0266                     u36_21:
  2485  0266  2A6E               	goto	i1l1246
  2486  0267                     u36_20:
  2487  0267                     i1l1242:
  2488  0267  0870               	movf	___awdiv@divisor,w
  2489  0268  02F2               	subwf	___awdiv@dividend,f
  2490  0269  0871               	movf	___awdiv@divisor+1,w
  2491  026A  1C03               	skipc
  2492  026B  03F3               	decf	___awdiv@dividend+1,f
  2493  026C  02F3               	subwf	___awdiv@dividend+1,f
  2494  026D                     i1l1244:
  2495  026D  1477               	bsf	___awdiv@quotient,0
  2496  026E                     i1l1246:
  2497  026E  3001               	movlw	1
  2498  026F                     u37_25:
  2499  026F  1003               	clrc
  2500  0270  0CF1               	rrf	___awdiv@divisor+1,f
  2501  0271  0CF0               	rrf	___awdiv@divisor,f
  2502  0272  3EFF               	addlw	-1
  2503  0273  1D03               	skipz
  2504  0274  2A6F               	goto	u37_25
  2505  0275                     i1l1248:
  2506  0275  3001               	movlw	1
  2507  0276  02F5               	subwf	___awdiv@counter,f
  2508  0277  1D03               	btfss	3,2
  2509  0278  2A7A               	goto	u38_21
  2510  0279  2A7B               	goto	u38_20
  2511  027A                     u38_21:
  2512  027A  2A56               	goto	i1l1240
  2513  027B                     u38_20:
  2514  027B                     i1l1250:
  2515  027B  0876               	movf	___awdiv@sign,w
  2516  027C  1903               	btfsc	3,2
  2517  027D  2A7F               	goto	u39_21
  2518  027E  2A80               	goto	u39_20
  2519  027F                     u39_21:
  2520  027F  2A85               	goto	i1l1254
  2521  0280                     u39_20:
  2522  0280                     i1l1252:
  2523  0280  09F7               	comf	___awdiv@quotient,f
  2524  0281  09F8               	comf	___awdiv@quotient+1,f
  2525  0282  0AF7               	incf	___awdiv@quotient,f
  2526  0283  1903               	skipnz
  2527  0284  0AF8               	incf	___awdiv@quotient+1,f
  2528  0285                     i1l1254:
  2529  0285  0878               	movf	___awdiv@quotient+1,w
  2530  0286  00F1               	movwf	?___awdiv+1
  2531  0287  0877               	movf	___awdiv@quotient,w
  2532  0288  00F0               	movwf	?___awdiv
  2533  0289                     i1l453:
  2534  0289  0008               	return
  2535  028A                     __end_of___awdiv:
  2536                           
  2537                           	psect	text14
  2538  01B0                     __ptext14:	
  2539 ;; *************** function _decrementar *****************
  2540 ;; Defined at:
  2541 ;;		line 342 in file "Interrup_Libreria.c"
  2542 ;; Parameters:    Size  Location     Type
  2543 ;;		None
  2544 ;; Auto vars:     Size  Location     Type
  2545 ;;  e               2    2[COMMON] int 
  2546 ;;  e               2    0[COMMON] int 
  2547 ;; Return value:  Size  Location     Type
  2548 ;;                  1    wreg      void 
  2549 ;; Registers used:
  2550 ;;		wreg, status,2, status,0, btemp+1
  2551 ;; Tracked objects:
  2552 ;;		On entry : 0/0
  2553 ;;		On exit  : 0/0
  2554 ;;		Unchanged: 0/0
  2555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2556 ;;      Params:         0       0       0       0       0
  2557 ;;      Locals:         4       0       0       0       0
  2558 ;;      Temps:          0       0       0       0       0
  2559 ;;      Totals:         4       0       0       0       0
  2560 ;;Total ram usage:        4 bytes
  2561 ;; Hardware stack levels used:    1
  2562 ;; This function calls:
  2563 ;;		Nothing
  2564 ;; This function is called by:
  2565 ;;		_ISR
  2566 ;; This function uses a non-reentrant model
  2567 ;;
  2568                           
  2569                           
  2570                           ;psect for function _decrementar
  2571  01B0                     _decrementar:
  2572  01B0                     i1l1326:	
  2573                           ;incstack = 0
  2574                           ; Regs used in _decrementar: [wreg+status,2+status,0+btemp+1]
  2575                           
  2576  01B0  1283               	bcf	3,5	;RP0=0, select bank0
  2577  01B1  1303               	bcf	3,6	;RP1=0, select bank0
  2578  01B2  1C86               	btfss	6,1	;volatile
  2579  01B3  29B5               	goto	u47_21
  2580  01B4  29B6               	goto	u47_20
  2581  01B5                     u47_21:
  2582  01B5  29F2               	goto	i1l1352
  2583  01B6                     u47_20:
  2584  01B6                     i1l1328:
  2585  01B6  01F0               	clrf	decrementar@e
  2586  01B7  01F1               	clrf	decrementar@e+1
  2587  01B8                     i1l1334:
  2588  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  2589  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  2590  01BA  0826               	movf	_pressed_ok2,w
  2591  01BB  3E01               	addlw	1
  2592  01BC  00A6               	movwf	_pressed_ok2
  2593  01BD  0827               	movf	_pressed_ok2+1,w
  2594  01BE  1803               	skipnc
  2595  01BF  3E01               	addlw	1
  2596  01C0  3E00               	addlw	0
  2597  01C1  00A7               	movwf	_pressed_ok2+1
  2598  01C2                     i1l1336:
  2599  01C2  3001               	movlw	1
  2600  01C3  07F0               	addwf	decrementar@e,f
  2601  01C4  1803               	skipnc
  2602  01C5  0AF1               	incf	decrementar@e+1,f
  2603  01C6  3000               	movlw	0
  2604  01C7  07F1               	addwf	decrementar@e+1,f
  2605  01C8                     i1l1338:
  2606  01C8  0871               	movf	decrementar@e+1,w
  2607  01C9  3A80               	xorlw	128
  2608  01CA  00FF               	movwf	btemp+1
  2609  01CB  3080               	movlw	128
  2610  01CC  027F               	subwf	btemp+1,w
  2611  01CD  1D03               	skipz
  2612  01CE  29D1               	goto	u48_25
  2613  01CF  300B               	movlw	11
  2614  01D0  0270               	subwf	decrementar@e,w
  2615  01D1                     u48_25:
  2616  01D1  1C03               	skipc
  2617  01D2  29D4               	goto	u48_21
  2618  01D3  29D5               	goto	u48_20
  2619  01D4                     u48_21:
  2620  01D4  29B8               	goto	i1l1334
  2621  01D5                     u48_20:
  2622  01D5                     i1l1340:
  2623  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  2624  01D6  1303               	bcf	3,6	;RP1=0, select bank0
  2625  01D7  01A4               	clrf	_released_ok2
  2626  01D8  01A5               	clrf	_released_ok2+1
  2627  01D9                     i1l1342:
  2628  01D9  3000               	movlw	0
  2629  01DA  0227               	subwf	_pressed_ok2+1,w
  2630  01DB  300B               	movlw	11
  2631  01DC  1903               	skipnz
  2632  01DD  0226               	subwf	_pressed_ok2,w
  2633  01DE  1C03               	skipc
  2634  01DF  29E1               	goto	u49_21
  2635  01E0  29E2               	goto	u49_20
  2636  01E1                     u49_21:
  2637  01E1  29EF               	goto	i1l1350
  2638  01E2                     u49_20:
  2639  01E2                     i1l1344:
  2640  01E2  0822               	movf	_presionado2,w
  2641  01E3  0423               	iorwf	_presionado2+1,w
  2642  01E4  1D03               	btfss	3,2
  2643  01E5  29E7               	goto	u50_21
  2644  01E6  29E8               	goto	u50_20
  2645  01E7                     u50_21:
  2646  01E7  29EF               	goto	i1l1350
  2647  01E8                     u50_20:
  2648  01E8                     i1l1346:
  2649  01E8  0808               	movf	8,w	;volatile
  2650  01E9  3EFF               	addlw	255
  2651  01EA  0088               	movwf	8	;volatile
  2652  01EB                     i1l1348:
  2653  01EB  3001               	movlw	1
  2654  01EC  00A2               	movwf	_presionado2
  2655  01ED  3000               	movlw	0
  2656  01EE  00A3               	movwf	_presionado2+1
  2657  01EF                     i1l1350:
  2658  01EF  01A6               	clrf	_pressed_ok2
  2659  01F0  01A7               	clrf	_pressed_ok2+1
  2660  01F1  2A22               	goto	i1l190
  2661  01F2                     i1l1352:
  2662  01F2  01F2               	clrf	decrementar@e_341
  2663  01F3  01F3               	clrf	decrementar@e_341+1
  2664  01F4                     i1l1358:
  2665  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  2666  01F5  1303               	bcf	3,6	;RP1=0, select bank0
  2667  01F6  0824               	movf	_released_ok2,w
  2668  01F7  3E01               	addlw	1
  2669  01F8  00A4               	movwf	_released_ok2
  2670  01F9  0825               	movf	_released_ok2+1,w
  2671  01FA  1803               	skipnc
  2672  01FB  3E01               	addlw	1
  2673  01FC  3E00               	addlw	0
  2674  01FD  00A5               	movwf	_released_ok2+1
  2675  01FE                     i1l1360:
  2676  01FE  3001               	movlw	1
  2677  01FF  07F2               	addwf	decrementar@e_341,f
  2678  0200  1803               	skipnc
  2679  0201  0AF3               	incf	decrementar@e_341+1,f
  2680  0202  3000               	movlw	0
  2681  0203  07F3               	addwf	decrementar@e_341+1,f
  2682  0204                     i1l1362:
  2683  0204  0873               	movf	decrementar@e_341+1,w
  2684  0205  3A80               	xorlw	128
  2685  0206  00FF               	movwf	btemp+1
  2686  0207  3080               	movlw	128
  2687  0208  027F               	subwf	btemp+1,w
  2688  0209  1D03               	skipz
  2689  020A  2A0D               	goto	u51_25
  2690  020B  300B               	movlw	11
  2691  020C  0272               	subwf	decrementar@e_341,w
  2692  020D                     u51_25:
  2693  020D  1C03               	skipc
  2694  020E  2A10               	goto	u51_21
  2695  020F  2A11               	goto	u51_20
  2696  0210                     u51_21:
  2697  0210  29F4               	goto	i1l1358
  2698  0211                     u51_20:
  2699  0211                     i1l1364:
  2700  0211  1283               	bcf	3,5	;RP0=0, select bank0
  2701  0212  1303               	bcf	3,6	;RP1=0, select bank0
  2702  0213  01A6               	clrf	_pressed_ok2
  2703  0214  01A7               	clrf	_pressed_ok2+1
  2704  0215                     i1l1366:
  2705  0215  3000               	movlw	0
  2706  0216  0225               	subwf	_released_ok2+1,w
  2707  0217  300B               	movlw	11
  2708  0218  1903               	skipnz
  2709  0219  0224               	subwf	_released_ok2,w
  2710  021A  1C03               	skipc
  2711  021B  2A1D               	goto	u52_21
  2712  021C  2A1E               	goto	u52_20
  2713  021D                     u52_21:
  2714  021D  2A22               	goto	i1l190
  2715  021E                     u52_20:
  2716  021E                     i1l1368:
  2717  021E  01A2               	clrf	_presionado2
  2718  021F  01A3               	clrf	_presionado2+1
  2719  0220  01AC               	clrf	_released_ok
  2720  0221  01AD               	clrf	_released_ok+1
  2721  0222                     i1l190:
  2722  0222  0008               	return
  2723  0223                     __end_of_decrementar:
  2724  007E                     btemp	set	126	;btemp
  2725  007E                     wtemp0	set	126
  2726                           
  2727                           	psect	config
  2728                           
  2729                           ;Config register CONFIG1 @ 0x2007
  2730                           ;	Oscillator Selection bits
  2731                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2732                           ;	Watchdog Timer Enable bit
  2733                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2734                           ;	Power-up Timer Enable bit
  2735                           ;	PWRTE = OFF, PWRT disabled
  2736                           ;	RE3/MCLR pin function select bit
  2737                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2738                           ;	Code Protection bit
  2739                           ;	CP = OFF, Program memory code protection is disabled
  2740                           ;	Data Code Protection bit
  2741                           ;	CPD = OFF, Data memory code protection is disabled
  2742                           ;	Brown Out Reset Selection bits
  2743                           ;	BOREN = OFF, BOR disabled
  2744                           ;	Internal External Switchover bit
  2745                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2746                           ;	Fail-Safe Clock Monitor Enabled bit
  2747                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2748                           ;	Low Voltage Programming Enable bit
  2749                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2750                           ;	In-Circuit Debugger Mode bit
  2751                           ;	DEBUG = 0x1, unprogrammed default
  2752  2007                     	org	8199
  2753  2007  20D4               	dw	8404
  2754                           
  2755                           ;Config register CONFIG2 @ 0x2008
  2756                           ;	Brown-out Reset Selection bit
  2757                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2758                           ;	Flash Program Memory Self Write Enable bits
  2759                           ;	WRT = OFF, Write protection off
  2760  2008                     	org	8200
  2761  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80      9      32
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_division
    _division->___awdiv

Critical Paths under _main in BANK0

    _adc_config->_initADC

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      22
                                              7 BANK0      2     2      0
                         _adc_config
                                _big
                    _interrup_config
                         _osc_config
                              _setup
                        _tmr0_config
 ---------------------------------------------------------------------------------
 (1) _tmr0_config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _osc_config                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _interrup_config                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _big                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_config                                           0     0      0      22
                            _initADC
 ---------------------------------------------------------------------------------
 (2) _initADC                                              3     3      0      22
                                              4 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  5     5      0     811
                                             12 COMMON     1     1      0
                                              0 BANK0      4     4      0
                        _decrementar
                           _division
                        _incrementar
 ---------------------------------------------------------------------------------
 (4) _incrementar                                          4     4      0      92
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (4) _division                                             3     3      0     626
                                              9 COMMON     3     3      0
                            ___awdiv
                        _hexadecimal
                        _multiplexar
 ---------------------------------------------------------------------------------
 (5) _multiplexar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _hexadecimal                                          2     0      2     174
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (4) _decrementar                                          4     4      0      92
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_config
     _initADC
   _big
   _interrup_config
   _osc_config
   _setup
   _tmr0_config

 _ISR (ROOT)
   _decrementar
   _division
     ___awdiv
     _hexadecimal
     _multiplexar
   _incrementar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      9      20       5       40.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2E      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 05 00:54:40 2021

                       _i 0020              ___awdiv@sign 0076                        fsr 0004  
                     l200 002C                       l120 0386                       l201 0031  
                     l210 005E                       l202 0036                       l211 0063  
                     l203 003B                       l123 03A8                       l212 0068  
                     l204 0040                       l213 006D                       l205 0045  
                     l117 036C                       l214 00AF                       l206 004A  
                     l126 0379                       l207 004F                       l208 0054  
                     l209 0059                       l129 03B7                       l164 0391  
                     l166 0392                       l198 0027                       l199 00A6  
 __end_of_interrup_config 0387                       u530 038F                       u531 038E  
                     _ISR 031A                       u560 0308                       u561 0307  
                     u577 02FD              ?_hexadecimal 0070                       _big 0387  
                     fsr0 0004                       indf 0000                      ?_ISR 0070  
                    l1152 0026                      l1400 0375                      ?_big 0070  
                    l1402 03B1                      l1156 0072                      l1404 0387  
                    l1406 038F                      l1430 02E5                      l1440 0302  
                    l1432 02EA                      l1442 0308                      l1434 02EF  
                    l1426 02DB                      l1380 035A                      l1372 0345  
                    l1444 0309                      l1436 02F4                      l1428 02E0  
                    l1390 0369                      l1382 035D                      l1374 034D  
                    l1446 0311                      l1438 02F7                      l1392 039F  
                    l1384 0360                      l1376 0350                      l1394 037A  
                    l1386 0363                      l1378 0357                      l1396 0382  
                    l1388 0366                      l1398 036D                      l1498 007A  
                    _IOCB 0096                      _TMR0 0001                      _main 02DB  
                    _show 0035                      btemp 007E                      start 0012  
            ?_incrementar 0070                     ??_ISR 0037                     ??_big 003B  
                   ?_main 0070           __end_of___awdiv 028A                     _ANSEL 0188  
         ___awdiv@divisor 0070                     i1l105 0338                     i1l134 02DA  
                   i1l161 013C                     i1l139 039E                     i1l190 0222  
                   i1l178 01AF                     i1l453 0289           ___awdiv@counter 0075  
                   u30_20 0228                     u30_21 0227                     u31_20 0233  
                   u31_21 0232                     u32_20 0244                     u40_20 02AE  
                   u32_21 0243                     u40_21 02AD                     u41_20 0143  
                   u41_21 0142                     u33_25 0248                     u50_20 01E8  
                   u34_20 0256                     u42_20 0162                     u50_21 01E7  
                   u34_21 0255                     u42_21 0161                     u42_25 015E  
                   u51_20 0211                     u43_20 016F                     u51_21 0210  
                   u43_21 016E                     _PORTA 0005                     _PORTB 0006  
                   _PORTC 0007                     _PORTD 0008                     u51_25 020D  
                   u35_25 0257                     _PORTE 0009                     u52_20 021E  
                   u36_20 0267                     u44_20 0175                     u52_21 021D  
                   u36_21 0266                     u44_21 0174                     u36_25 0263  
                   u29_20 039A                     u45_20 019E                     u29_21 0399  
                   u45_21 019D                     u37_25 026F                     u45_25 019A  
                   u38_20 027B                     u46_20 01AB                     u54_20 031E  
                   u38_21 027A                     u46_21 01AA                     u54_21 031D  
                   u47_20 01B6                     u39_20 0280                     u55_20 032A  
                   u47_21 01B5                     u39_21 027F                     u55_21 0329  
                   u48_20 01D5                     u48_21 01D4                     u48_25 01D1  
                   u49_20 01E2                     u49_21 01E1                     _TRISA 0085  
                   _TRISB 0086                     _TRISC 0087                     _TRISD 0088  
                   _TRISE 0089           __end_of_initADC 00B0                     _setup 0345  
                   pclath 000A                     status 0003      __size_of_decrementar 0073  
                   wtemp0 007E           __initialization 0015              __end_of_main 031A  
                  ??_main 003E          ?_interrup_config 0070              ?_tmr0_config 0070  
                  _ADRESL 009E          ___awdiv@dividend 0072                    ?_setup 0070  
                  _ANSELH 0189                    i1l1202 0105                    i1l1210 039A  
                  i1l1220 022D                    i1l1212 039D                    i1l1300 0175  
                  i1l1230 023E                    i1l1222 022F                    i1l1214 0223  
                  i1l1302 0178                    i1l1240 0256                    i1l1232 0244  
                  i1l1224 0233                    i1l1216 0224                    i1l1208 0393  
                  i1l1320 01A2                    i1l1312 0181                    i1l1304 017C  
                  i1l1242 0267                    i1l1234 0247                    i1l1250 027B  
                  i1l1226 0238                    i1l1218 0228                    i1l1170 00BB  
                  i1l1322 01AB                    i1l1314 018B                    i1l1306 017F  
                  i1l1410 031E                    i1l1340 01D5                    i1l1252 0280  
                  i1l1244 026D                    i1l1236 024E                    i1l1228 023C  
                  i1l1500 010A                    i1l1180 00D4                    i1l1172 00C0  
                  i1l1164 00B0                    i1l1260 028E                    i1l1316 0191  
                  i1l1420 032D                    i1l1412 031F                    i1l1350 01EF  
                  i1l1342 01D9                    i1l1334 01B8                    i1l1326 01B0  
                  i1l1254 0285                    i1l1246 026E                    i1l1238 0252  
                  i1l1190 00ED                    i1l1182 00D9                    i1l1174 00C5  
                  i1l1166 00B1                    i1l1270 02BE                    i1l1262 02A4  
                  i1l1318 019E                    i1l1422 0332                    i1l1414 0321  
                  i1l1360 01FE                    i1l1344 01E2                    i1l1336 01C2  
                  i1l1328 01B6                    i1l1352 01F2                    i1l1248 0275  
                  i1l1192 00F2                    i1l1184 00DE                    i1l1176 00CA  
                  i1l1168 00B6                    i1l1272 02C2                    i1l1264 02A9  
                  i1l1280 013D                    i1l1424 0337                    i1l1416 0326  
                  i1l1408 031A                    i1l1362 0204                    i1l1346 01E8  
                  i1l1338 01C8                    i1l1194 00F7                    i1l1186 00E3  
                  i1l1178 00CF                    i1l1274 02C6                    i1l1266 02AE  
                  i1l1258 028A                    i1l1290 014F                    i1l1282 0143  
                  i1l1418 032A                    i1l1364 0211                    i1l1348 01EB  
                  i1l1196 00FC                    i1l1188 00E8                    i1l1276 02D2  
                  i1l1268 02B2                    i1l1292 0155                    i1l1366 0215  
                  i1l1358 01F4                    i1l1198 0101                    i1l1278 02D5  
                  i1l1294 0162                    i1l1368 021E                    i1l1296 0166  
                  i1l1288 0145                    i1l1298 016F          __end_of_division 02DB  
               ??___awdiv 0074                    _decena 0033          ___awdiv@quotient 0077  
                  _unidad 0034                    _toogle 0032                 ??_initADC 003B  
                  saved_w 007E      __size_of_hexadecimal 008D              ?_multiplexar 0070  
 __end_of__initialization 001F            __pcstackCOMMON 0070                _adc_config 03B1  
           __end_of_setup 036D      __size_of_incrementar 0073            _OPTION_REGbits 0081  
                 ??_setup 003B                __pbssBANK0 0020           hexadecimal@show 0070  
              __pmaintext 02DB                __pintentry 0004              incrementar@e 0070  
        decrementar@e_341 0072      __size_of_tmr0_config 000D                 ?_division 0070  
             ?_adc_config 0070                   ___awdiv 0223                   __ptext1 036D  
                 __ptext2 0345                   __ptext3 039F                   __ptext4 037A  
                 __ptext5 0387                   __ptext6 03B1                   __ptext7 0023  
                 __ptext8 031A                   __ptext9 013D                   _initADC 0023  
            __size_of_ISR 002B              __size_of_big 000C                   clrloop0 03AA  
           ??_decrementar 0070      end_of_initialization 001F                ??_division 0079  
              _osc_config 039F      __size_of_multiplexar 000C                 _PORTBbits 0006  
               _PORTEbits 0009                _presionado 002A                _pressed_ok 002E  
     __size_of_adc_config 0007  __size_of_interrup_config 000D       __end_of_decrementar 0223  
              initADC@CHS 003D             ??_hexadecimal 0072       start_initialization 0015  
             __end_of_ISR 0345               __end_of_big 0393               ?_osc_config 0070  
           ??_incrementar 0070               __pbssCOMMON 007C                 ___latbits 0002  
           __pcstackBANK0 0037                 _adc_value 007C       __end_of_hexadecimal 013D  
             _decrementar 01B0         __size_of_division 0051          incrementar@e_338 0072  
       ??_interrup_config 003B              ??_adc_config 003E                  ?___awdiv 0070  
     __end_of_incrementar 01B0                 _contador2 0028                  ?_initADC 0070  
     __size_of_osc_config 000A             ??_tmr0_config 003B            __size_of_setup 0028  
            decrementar@e 0070        __end_of_adc_config 03B8         interrupt_function 0004  
               clear_ram0 03A9                _ADCON0bits 001F                _ADCON1bits 009F  
          _timer_contador 0036               _hexadecimal 00B0              _released_ok2 0024  
           ??_multiplexar 0070       __end_of_tmr0_config 037A               _incrementar 013D  
        __size_of___awdiv 0067          __size_of_initADC 008D                  __ptext10 028A  
                __ptext11 0393                  __ptext12 00B0                  __ptext13 0223  
                __ptext14 01B0                  _division 028A                  _contador 0030  
            ??_osc_config 003B             __size_of_main 003F       __end_of_multiplexar 039F  
             _released_ok 002C                _INTCONbits 000B        __end_of_osc_config 03A9  
             _tmr0_config 036D           _interrup_config 037A              ?_decrementar 0070  
                intlevel1 0000                _OSCCONbits 008F               _presionado2 0022  
             _pressed_ok2 0026               _multiplexar 0393  
